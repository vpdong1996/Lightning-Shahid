{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StageUtils {\r\n\r\n    static mergeNumbers(v1, v2, p) {\r\n        return v1 * p + v2 * (1 - p);\r\n    };\r\n\r\n    static rgb(r, g, b) {\r\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\r\n    };\r\n\r\n    static rgba(r, g, b, a) {\r\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\r\n    };\r\n\r\n    static getRgbString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n    };\r\n\r\n    static getRgbaString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        let a = ((color / 16777216) | 0) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaStringFromArray(color) {\r\n        let r = Math.floor(color[0] * 255);\r\n        let g = Math.floor(color[1] * 255);\r\n        let b = Math.floor(color[2] * 255);\r\n        let a = Math.floor(color[3] * 255) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r / 255, g / 255, b / 255, a / 255];\r\n    };\r\n\r\n    static getRgbComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        return [r / 255, g / 255, b / 255];\r\n    };\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static mergeMultiColors(c, p) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1 * p[i];\r\n            g += g1 * p[i];\r\n            b += b1 * p[i];\r\n            a += a1 * p[i];\r\n            t += p[i];\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeMultiColorsEqual(c) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1;\r\n            g += g1;\r\n            b += b1;\r\n            a += a1;\r\n            t += 1.0;\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeColorAlpha(c, alpha) {\r\n        let a = ((c / 16777216 | 0) * alpha) | 0;\r\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\r\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\r\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\r\n            (a << 24);\r\n    };\r\n\r\n    static rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    };\r\n\r\n    static getTimingBezier(a, b, c, d) {\r\n        let xc = 3.0 * a;\r\n        let xb = 3.0 * (c - a) - xc;\r\n        let xa = 1.0 - xc - xb;\r\n        let yc = 3.0 * b;\r\n        let yb = 3.0 * (d - b) - yc;\r\n        let ya = 1.0 - yc - yb;\r\n\r\n        return function (time) {\r\n            if (time >= 1.0) {\r\n                return 1;\r\n            }\r\n            if (time <= 0) {\r\n                return 0;\r\n            }\r\n\r\n            let t = 0.5, cbx, cbxd, dx;\r\n\r\n            for (let it = 0; it < 20; it++) {\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                // Cubic bezier derivative.\r\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                    // Problematic. Fall back to binary search method.\r\n                    break;\r\n                }\r\n\r\n                t += dx / cbxd;\r\n            }\r\n\r\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n            let minT = 0;\r\n            let maxT = 1;\r\n            for (let it = 0; it < 20; it++) {\r\n                t = 0.5 * (minT + maxT);\r\n\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    // Solution found!\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                if (dx < 0) {\r\n                    maxT = t;\r\n                } else {\r\n                    minT = t;\r\n                }\r\n            }\r\n\r\n        };\r\n    };\r\n\r\n    static getTimingFunction(str) {\r\n        switch (str) {\r\n            case \"linear\":\r\n                return function (time) {\r\n                    return time\r\n                };\r\n            case \"ease\":\r\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\r\n            case \"ease-in\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\r\n            case \"ease-out\":\r\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\r\n            case \"ease-in-out\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\r\n            case \"step-start\":\r\n                return function () {\r\n                    return 1\r\n                };\r\n            case \"step-end\":\r\n                return function (time) {\r\n                    return time === 1 ? 1 : 0;\r\n                };\r\n            default:\r\n                let s = \"cubic-bezier(\";\r\n                if (str && str.indexOf(s) === 0) {\r\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\r\n                    if (parts.length !== 4) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n                    let a = parseFloat(parts[0]);\r\n                    let b = parseFloat(parts[1]);\r\n                    let c = parseFloat(parts[2]);\r\n                    let d = parseFloat(parts[3]);\r\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n\r\n                    return StageUtils.getTimingBezier(a, b, c, d);\r\n                } else {\r\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                    // Fallback: use linear.\r\n                    return function (time) {\r\n                        return time\r\n                    };\r\n                }\r\n        }\r\n    };\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    static clone(v) {\r\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\r\n            return Utils.getDeepClone(v);\r\n        } else {\r\n            // Copy by value.\r\n            return v;\r\n        }\r\n    }\r\n\r\n    static cloneObjShallow(obj) {\r\n        let keys = Object.keys(obj);\r\n        let clone = {}\r\n        for (let i = 0; i < keys.length; i++) {\r\n            clone[keys[i]] = obj[keys[i]];\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    static merge(obj1, obj2) {\r\n        let keys = Object.keys(obj2);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            obj1[keys[i]] = obj2[keys[i]];\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object' || type === 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object;\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static getModuloIndex(index, len) {\r\n        if (len === 0) return index;\r\n        while (index < 0) {\r\n            index += Math.ceil(-index / len) * len;\r\n        }\r\n        index = index % len;\r\n        return index;\r\n    }\r\n\r\n    static getDeepClone(obj) {\r\n        let i, c;\r\n        if (Utils.isFunction(obj)) {\r\n            // Copy functions by reference.\r\n            return obj;\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            c = [];\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else if (Utils.isObject(obj)) {\r\n            c = {}\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false;\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\r\n        } else {\r\n            return v1 === v2;\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false;\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static setToArray(s) {\r\n        let result = [];\r\n        s.forEach(function (value) {\r\n            result.push(value);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static iteratorToArray(iterator) {\r\n        let result = [];\r\n        let iteratorResult = iterator.next();\r\n        while (!iteratorResult.done) {\r\n            result.push(iteratorResult.value);\r\n            iteratorResult = iterator.next();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isUcChar(charcode) {\r\n        return charcode >= 65 && charcode <= 90;\r\n    }\r\n\r\n}\r\n\r\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\r\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\r\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\r\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\r\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Base {\r\n\r\n    static defaultSetter(obj, name, value) {\r\n        obj[name] = value;\r\n    }\r\n\r\n    static patchObject(obj, settings) {\r\n        if (!Utils.isObjectLiteral(settings)) {\r\n            console.error(\"[Lightning] Settings must be object literal\");\r\n        } else {\r\n            let names = Object.keys(settings);\r\n            for (let i = 0, n = names.length; i < n; i++) {\r\n                let name = names[i];\r\n\r\n                this.patchObjectProperty(obj, name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    static patchObjectProperty(obj, name, value) {\r\n        let setter = obj.setSetting || Base.defaultSetter;\r\n\r\n        if (name.charAt(0) === \"_\") {\r\n            // Disallow patching private variables.\r\n            if (name !== \"__create\") {\r\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\r\n            }\r\n        } else if (name !== \"type\") {\r\n            // Type is a reserved keyword to specify the class type on creation.\r\n            if (Utils.isFunction(value) && value.__local) {\r\n                // Local function (Base.local(s => s.something))\r\n                value = value.__local(obj);\r\n            }\r\n\r\n            setter(obj, name, value);\r\n        }\r\n    }\r\n\r\n    static local(func) {\r\n        // This function can be used as an object setting, which is called with the target object.\r\n        func.__local = true;\r\n    }\r\n\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SpacingCalculator {\r\n\r\n    static getSpacing(mode, numberOfItems, remainingSpace) {\r\n        const itemGaps = (numberOfItems - 1);\r\n        let spacePerGap;\r\n\r\n        let spacingBefore, spacingBetween;\r\n\r\n        switch(mode) {\r\n            case \"flex-start\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"flex-end\":\r\n                spacingBefore = remainingSpace;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"center\":\r\n                spacingBefore = remainingSpace / 2;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"space-between\":\r\n                spacingBefore = 0;\r\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\r\n                break;\r\n            case \"space-around\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 1);\r\n                    spacingBefore = 0.5 * spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"space-evenly\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 2);\r\n                    spacingBefore = spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"stretch\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unknown mode: \" + mode);\r\n        }\r\n\r\n        return {spacingBefore, spacingBetween}\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\r\n\r\nexport default class ContentAligner {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._totalCrossAxisSize = 0;\r\n    }\r\n\r\n    get _lines() {\r\n        return this._layout._lines;\r\n    }\r\n\r\n    init() {\r\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\r\n    }\r\n\r\n    align() {\r\n        const crossAxisSize = this._layout.crossAxisSize;\r\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\r\n\r\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\r\n\r\n        const lines = this._lines;\r\n\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        let growSize = 0;\r\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\r\n            growSize = remainingSpace / lines.length;\r\n        }\r\n\r\n        let currentPos = spacingBefore;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const crossAxisLayoutOffset = currentPos;\r\n            const aligner = lines[i].createItemAligner();\r\n\r\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\r\n\r\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\r\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\r\n\r\n            aligner.align();\r\n\r\n            if (aligner.recursiveResizeOccured) {\r\n                lines[i].setItemPositions();\r\n            }\r\n\r\n            currentPos += finalCrossAxisLayoutSize;\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    get totalCrossAxisSize() {\r\n        return this._totalCrossAxisSize;\r\n    }\r\n\r\n    _getTotalCrossAxisSize() {\r\n        const lines = this._lines;\r\n        let total = 0;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const line = lines[i];\r\n            total += line.crossAxisLayoutSize;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    _getSpacing(remainingSpace) {\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        const numberOfItems = this._lines.length;\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class FlexUtils {\r\n\r\n    static getParentAxisSizeWithPadding(item, horizontal) {\r\n        const target = item.target;\r\n        const parent = target.getParent();\r\n        if (!parent) {\r\n            return 0;\r\n        } else {\r\n            const flexParent = item.flexParent;\r\n            if (flexParent) {\r\n                // Use pending layout size.\r\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\r\n            } else {\r\n                // Use 'absolute' size.\r\n                return horizontal ? parent.w : parent.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRelAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            if (item.funcW) {\r\n                if (this._allowRelAxisSizeFunction(item, true)) {\r\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalWidth;\r\n            }\r\n        } else {\r\n            if (item.funcH) {\r\n                if (this._allowRelAxisSizeFunction(item, false)) {\r\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    static _allowRelAxisSizeFunction(item, horizontal) {\r\n        const flexParent = item.flexParent;\r\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\r\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static isZeroAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            return !item.originalWidth && !item.funcW;\r\n        } else {\r\n            return !item.originalHeight && !item.funcH;\r\n        }\r\n    }\r\n\r\n    static getAxisLayoutPos(item, horizontal) {\r\n        return horizontal ? item.x : item.y;\r\n    }\r\n\r\n    static getAxisLayoutSize(item, horizontal) {\r\n        return horizontal ? item.w : item.h;\r\n    }\r\n\r\n    static setAxisLayoutPos(item, horizontal, pos) {\r\n        if (horizontal) {\r\n            item.x = pos;\r\n        } else {\r\n            item.y = pos;\r\n        }\r\n    }\r\n\r\n    static setAxisLayoutSize(item, horizontal, size) {\r\n        if (horizontal) {\r\n            item.w = size;\r\n        } else {\r\n            item.h = size;\r\n        }\r\n    }\r\n\r\n    static getAxisMinSize(item, horizontal) {\r\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\r\n\r\n        let flexItemMinSize = 0;\r\n        if (item.isFlexItemEnabled()) {\r\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\r\n        }\r\n\r\n        const hasLimitedMinSize = (flexItemMinSize > 0);\r\n        if (hasLimitedMinSize) {\r\n            minSize = Math.max(minSize, flexItemMinSize);\r\n        }\r\n        return minSize;\r\n    }\r\n\r\n    static getPlainAxisMinSize(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            return item._flex._layout.getAxisMinSize(horizontal);\r\n        } else {\r\n            const isShrinkable = (item.flexItem.shrink !== 0);\r\n            if (isShrinkable) {\r\n                return 0;\r\n            } else {\r\n                return this.getRelAxisSize(item, horizontal);\r\n            }\r\n        }\r\n    }\r\n\r\n    static resizeAxis(item, horizontal, size) {\r\n        if (item.isFlexEnabled()) {\r\n            const isMainAxis = (item._flex._horizontal === horizontal);\r\n            if (isMainAxis) {\r\n                item._flex._layout.resizeMainAxis(size);\r\n            } else {\r\n                item._flex._layout.resizeCrossAxis(size);\r\n            }\r\n        } else {\r\n            this.setAxisLayoutSize(item, horizontal, size);\r\n        }\r\n    }\r\n\r\n\r\n    static getPaddingOffset(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalPadding(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingRight + flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop + flex.paddingBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMarginOffset(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalMargin(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginRight + flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop + flexItem.marginBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeShrinker {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._shrunkSize = 0;\r\n    }\r\n\r\n    shrink(amount) {\r\n        this._shrunkSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalShrinkAmount = this._getTotalShrinkAmount();\r\n        if (totalShrinkAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const shrinkAmount = flexItem.shrink;\r\n                    const isShrinkableItem = (shrinkAmount > 0);\r\n                    if (isShrinkableItem) {\r\n                        let shrink = shrinkAmount * amountPerShrink;\r\n                        const minSize = flexItem._getMainAxisMinSize();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (size > minSize) {\r\n                            const maxShrink = size - minSize;\r\n                            const isFullyShrunk = (shrink >= maxShrink);\r\n                            if (isFullyShrunk) {\r\n                                shrink = maxShrink;\r\n\r\n                                // Destribute remaining amount over the other flex items.\r\n                                totalShrinkAmount -= shrinkAmount;\r\n                            }\r\n\r\n                            const finalSize = size - shrink;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._shrunkSize += shrink;\r\n                            this._amountRemaining -= shrink;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalShrinkAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.shrink) {\r\n                const minSize = flexItem._getMainAxisMinSize();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully shrunk.\r\n                if (size > minSize) {\r\n                    total += flexItem.shrink;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getShrunkSize() {\r\n        return this._shrunkSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeGrower {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._grownSize = 0;\r\n    }\r\n\r\n    grow(amount) {\r\n        this._grownSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalGrowAmount = this._getTotalGrowAmount();\r\n        if (totalGrowAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const growAmount = flexItem.grow;\r\n                    const isGrowableItem = (growAmount > 0);\r\n                    if (isGrowableItem) {\r\n                        let grow = growAmount * amountPerGrow;\r\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (maxSize > 0) {\r\n                            if (size >= maxSize) {\r\n                                // Already fully grown.\r\n                                grow = 0;\r\n                            } else {\r\n                                const maxGrow = maxSize - size;\r\n                                const isFullyGrown = (grow >= maxGrow);\r\n                                if (isFullyGrown) {\r\n                                    grow = maxGrow;\r\n\r\n                                    // Destribute remaining amount over the other flex items.\r\n                                    totalGrowAmount -= growAmount;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (grow > 0) {\r\n                            const finalSize = size + grow;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._grownSize += grow;\r\n                            this._amountRemaining -= grow;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalGrowAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.grow) {\r\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully grown.\r\n                if (maxSize === 0 || size < maxSize) {\r\n                    total += flexItem.grow;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getGrownSize() {\r\n        return this._grownSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\r\n\r\nexport default class ItemPositioner {\r\n\r\n    constructor(lineLayout) {\r\n        this._line = lineLayout;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    position() {\r\n        const {spacingBefore, spacingBetween} = this._getSpacing();\r\n\r\n        let currentPos = spacingBefore;\r\n\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n\r\n            item.flexItem._setMainAxisLayoutPos(currentPos);\r\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    _getSpacing() {\r\n        const remainingSpace = this._line._availableSpace;\r\n        let mode = this._layout._flexContainer.justifyContent;\r\n        const numberOfItems = this._line.numberOfItems;\r\n\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ItemAligner {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._crossAxisLayoutSize = 0;\r\n        this._crossAxisLayoutOffset = 0;\r\n        this._alignItemsSetting = null;\r\n        this._recursiveResizeOccured = false;\r\n        this._isCrossAxisFitToContents = false;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    setCrossAxisLayoutSize(size) {\r\n        this._crossAxisLayoutSize = size;\r\n    }\r\n\r\n    setCrossAxisLayoutOffset(offset) {\r\n        this._crossAxisLayoutOffset = offset;\r\n    }\r\n\r\n    align() {\r\n        this._alignItemsSetting = this._flexContainer.alignItems;\r\n\r\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\r\n\r\n        this._recursiveResizeOccured = false;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            this._alignItem(item);\r\n        }\r\n    }\r\n\r\n    get recursiveResizeOccured() {\r\n        return this._recursiveResizeOccured;\r\n    }\r\n\r\n    _alignItem(item) {\r\n        const flexItem = item.flexItem;\r\n        let align = flexItem.alignSelf || this._alignItemsSetting;\r\n\r\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\r\n            align = \"flex-start\";\r\n        }\r\n\r\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\r\n            if (flexItem._hasRelCrossAxisSize()) {\r\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\r\n                flexItem._resetCrossAxisLayoutSize();\r\n            }\r\n        }\r\n\r\n        switch(align) {\r\n            case \"flex-start\":\r\n                this._alignItemFlexStart(flexItem);\r\n                break;\r\n            case \"flex-end\":\r\n                this._alignItemFlexEnd(flexItem);\r\n                break;\r\n            case \"center\":\r\n                this._alignItemFlexCenter(flexItem);\r\n                break;\r\n            case \"stretch\":\r\n                this._alignItemStretch(flexItem);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _alignItemFlexStart(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n    }\r\n\r\n    _alignItemFlexEnd(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\r\n    }\r\n\r\n    _alignItemFlexCenter(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\r\n    }\r\n\r\n    _alignItemStretch(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n\r\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\r\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\r\n\r\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\r\n        if (crossAxisMinSizeSetting > 0) {\r\n            size = Math.max(size, crossAxisMinSizeSetting);\r\n        }\r\n\r\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\r\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\r\n        if (crossAxisMaxSizeSettingEnabled) {\r\n            size = Math.min(size, crossAxisMaxSizeSetting);\r\n        }\r\n\r\n        flexItem._resizeCrossAxis(size);\r\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\r\n\r\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\r\n        if (recursiveResize) {\r\n            // Recursive resize can happen when this flex item has the opposite direction than the container\r\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\r\n            // item may decrease. If it does so, we must re-justify-content the complete line.\r\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\r\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\r\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\r\n            // as slow layout or endless loops.\r\n            this._recursiveResizeOccured = true;\r\n        }\r\n    }\r\n\r\n    _preventStretch(flexItem) {\r\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\r\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\r\n        return hasFixedCrossAxisSize && !forceStretch;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SizeShrinker from \"./SizeShrinker.mjs\";\r\nimport SizeGrower from \"./SizeGrower.mjs\";\r\nimport ItemPositioner from \"./ItemPositioner.mjs\";\r\nimport ItemAligner from \"./ItemAligner.mjs\";\r\n\r\nexport default class LineLayout {\r\n\r\n    constructor(layout, startIndex, endIndex, availableSpace) {\r\n        this._layout = layout;\r\n        this.items = layout.items;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this._availableSpace = availableSpace;\r\n    }\r\n\r\n    performLayout() {\r\n        this._setItemSizes();\r\n        this.setItemPositions();\r\n        this._calcLayoutInfo();\r\n    }\r\n\r\n    _setItemSizes() {\r\n        if (this._availableSpace > 0) {\r\n            this._growItemSizes(this._availableSpace);\r\n        } else if (this._availableSpace < 0) {\r\n            this._shrinkItemSizes(-this._availableSpace);\r\n        }\r\n    }\r\n\r\n    _growItemSizes(amount) {\r\n        const grower = new SizeGrower(this);\r\n        grower.grow(amount);\r\n        this._availableSpace -= grower.getGrownSize();\r\n    }\r\n\r\n    _shrinkItemSizes(amount) {\r\n        const shrinker = new SizeShrinker(this);\r\n        shrinker.shrink(amount);\r\n        this._availableSpace += shrinker.getShrunkSize();\r\n    }\r\n\r\n    setItemPositions() {\r\n        const positioner = new ItemPositioner(this);\r\n        positioner.position();\r\n    }\r\n\r\n    createItemAligner() {\r\n        return new ItemAligner(this);\r\n    }\r\n\r\n    _calcLayoutInfo() {\r\n        this._calcCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    getMainAxisMinSize() {\r\n        let mainAxisMinSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\r\n        }\r\n        return mainAxisMinSize;\r\n    }\r\n    \r\n    get numberOfItems() {\r\n        return this.endIndex - this.startIndex + 1;\r\n    }\r\n\r\n    get crossAxisLayoutSize() {\r\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\r\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\r\n        if (shouldFitToContents) {\r\n            return this._crossAxisMaxLayoutSize;\r\n        } else {\r\n            return this._layout.crossAxisSize;\r\n        }\r\n    }\r\n\r\n    _calcCrossAxisMaxLayoutSize() {\r\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    _getCrossAxisMaxLayoutSize() {\r\n        let crossAxisMaxSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\r\n        }\r\n        return crossAxisMaxSize;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport LineLayout from \"./line/LineLayout.mjs\";\r\n\r\n/**\r\n * Distributes items over layout lines.\r\n */\r\nexport default class LineLayouter {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    get lines() {\r\n        return this._lines;\r\n    }\r\n\r\n    get mainAxisMinSize() {\r\n        if (this._mainAxisMinSize === -1) {\r\n            this._mainAxisMinSize = this._getMainAxisMinSize();\r\n        }\r\n        return this._mainAxisMinSize;\r\n    }\r\n\r\n    get crossAxisMinSize() {\r\n        if (this._crossAxisMinSize === -1) {\r\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\r\n        }\r\n        return this._crossAxisMinSize;\r\n    }\r\n\r\n    get mainAxisContentSize() {\r\n        return this._mainAxisContentSize;\r\n    }\r\n\r\n    layoutLines() {\r\n        this._setup();\r\n        const items = this._layout.items;\r\n        const wrap = this._layout.isWrapping();\r\n\r\n        let startIndex = 0;\r\n        let i;\r\n        const n = items.length;\r\n        for (i = 0; i < n; i++) {\r\n            const item = items[i];\r\n\r\n            this._layoutFlexItem(item);\r\n\r\n            // Get predicted main axis size.\r\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n\r\n            if (wrap && (i > startIndex)) {\r\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\r\n                if (isOverflowing) {\r\n                    this._layoutLine(startIndex, i - 1);\r\n                    this._curMainAxisPos = 0;\r\n                    startIndex = i;\r\n                }\r\n            }\r\n\r\n            this._addToMainAxisPos(itemMainAxisSize);\r\n        }\r\n\r\n        if (startIndex < i) {\r\n            this._layoutLine(startIndex, i - 1);\r\n        }\r\n    }\r\n\r\n    _layoutFlexItem(item) {\r\n        if (item.isFlexEnabled()) {\r\n            item.flexLayout.updateTreeLayout();\r\n        } else {\r\n            item.flexItem._resetLayoutSize();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n        this._mainAxisSize = this._layout.mainAxisSize;\r\n        this._curMainAxisPos = 0;\r\n        this._maxMainAxisPos = 0;\r\n        this._lines = [];\r\n\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    _addToMainAxisPos(itemMainAxisSize) {\r\n        this._curMainAxisPos += itemMainAxisSize;\r\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\r\n            this._maxMainAxisPos = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _layoutLine(startIndex, endIndex) {\r\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\r\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\r\n        line.performLayout();\r\n        this._lines.push(line);\r\n\r\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\r\n            this._mainAxisContentSize = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getAvailableMainAxisLayoutSpace() {\r\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\r\n            return 0;\r\n        } else {\r\n            return this._mainAxisSize - this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        let crossAxisMinSize = 0;\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\r\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\r\n        }\r\n        return crossAxisMinSize;\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        if (this._lines.length === 1) {\r\n            return this._lines[0].getMainAxisMinSize();\r\n        } else {\r\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\r\n            return this._layout.mainAxisSize;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\n\r\nexport default class ItemCoordinatesUpdater {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._isReverse = this._flexContainer._reverse;\r\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\r\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    finalize() {\r\n        const parentFlex = this._layout.getParentFlexContainer();\r\n        if (parentFlex) {\r\n            // We must update it from the parent to set padding offsets and reverse position.\r\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\r\n            updater._finalizeItemAndChildren(this._flexContainer.item);\r\n        } else {\r\n            this._finalizeRoot();\r\n            this._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _finalizeRoot() {\r\n        const item = this._flexContainer.item;\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        w += this._layout._getHorizontalPadding();\r\n        h += this._layout._getVerticalPadding();\r\n\r\n        item.clearRecalcFlag();\r\n\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItems() {\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const validCache = this._validateItemCache(item);\r\n\r\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\r\n            this._finalizeItem(item);\r\n\r\n            if (!validCache) {\r\n                this._finalizeItemChildren(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    _validateItemCache(item) {\r\n        if (item.recalc === 0) {\r\n            if (item.isFlexEnabled()) {\r\n                const layout = item._flex._layout;\r\n\r\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\r\n                if (dimensionsMatchPreviousResult) {\r\n                    // Cache is valid.\r\n                    return true;\r\n                } else {\r\n                    const crossAxisSize = layout.crossAxisSize;\r\n                    layout.performResizeMainAxis(layout.mainAxisSize);\r\n                    layout.performResizeCrossAxis(crossAxisSize);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _finalizeItemAndChildren(item) {\r\n        this._finalizeItem(item);\r\n        this._finalizeItemChildren(item);\r\n    }\r\n\r\n    _finalizeItem(item) {\r\n        if (this._isReverse) {\r\n            this._reverseMainAxisLayoutPos(item);\r\n        }\r\n\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        x += this._horizontalPaddingOffset;\r\n        y += this._verticalPaddingOffset;\r\n\r\n        const flex = item.flex;\r\n        if (flex) {\r\n            w += item._flex._layout._getHorizontalPadding();\r\n            h += item._flex._layout._getVerticalPadding();\r\n        }\r\n\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            x += flexItem._getHorizontalMarginOffset();\r\n            y += flexItem._getVerticalMarginOffset();\r\n        }\r\n\r\n        item.clearRecalcFlag();\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItemChildren(item) {\r\n        const flex = item._flex;\r\n        if (flex) {\r\n            const updater = new ItemCoordinatesUpdater(flex._layout);\r\n            updater._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _reverseMainAxisLayoutPos(item) {\r\n        if (item._reversed && item._recalc == 0) {\r\n            item._reversed = false;\r\n        }\r\n        if (!item._reversed) {\r\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\r\n            const reversedPos = this._layout.mainAxisSize - endPos;\r\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\r\n            if (item._recalc != 0) {\r\n                item._reversed = true;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport ContentAligner from \"./ContentAligner.mjs\";\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\nimport LineLayouter from \"./LineLayouter.mjs\";\r\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\r\n\r\n/**\r\n * Layouts a flex container (and descendants).\r\n */\r\nexport default class FlexLayout {\r\n\r\n    constructor(flexContainer) {\r\n        this._flexContainer = flexContainer;\r\n\r\n        this._lineLayouter = new LineLayouter(this);\r\n\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n\r\n        this._cachedMainAxisSizeAfterLayout = 0;\r\n        this._cachedCrossAxisSizeAfterLayout = 0;\r\n\r\n        this._shrunk = false;\r\n    }\r\n\r\n    get shrunk() {\r\n        return this._shrunk;\r\n    }\r\n\r\n    get recalc() {\r\n        return this.item.recalc;\r\n    }\r\n\r\n    layoutTree() {\r\n        const isSubTree = (this.item.flexParent !== null);\r\n        if (isSubTree) {\r\n            // Use the dimensions set by the parent flex tree.\r\n            this._updateSubTreeLayout();\r\n        } else {\r\n            this.updateTreeLayout();\r\n        }\r\n        this.updateItemCoords();\r\n    }\r\n\r\n    updateTreeLayout() {\r\n        if (this.recalc) {\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this._performUpdateLayoutTreeFromCache();\r\n        }\r\n    }\r\n\r\n    _performUpdateLayoutTree() {\r\n        this._setInitialAxisSizes();\r\n        this._layoutAxes();\r\n        this._refreshLayoutCache();\r\n    }\r\n\r\n    _refreshLayoutCache() {\r\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\r\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\r\n    }\r\n\r\n    _performUpdateLayoutTreeFromCache() {\r\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\r\n        if (sizeMightHaveChanged) {\r\n            // Update after all.\r\n            this.item.enableLocalRecalcFlag();\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\r\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\r\n        }\r\n    }\r\n\r\n    updateItemCoords() {\r\n        const updater = new ItemCoordinatesUpdater(this);\r\n        updater.finalize();\r\n    }\r\n\r\n    _updateSubTreeLayout() {\r\n        // The dimensions of this container are guaranteed not to have changed.\r\n        // That's why we can safely 'reuse' those and re-layout the contents.\r\n        const crossAxisSize = this.crossAxisSize;\r\n        this._layoutMainAxis();\r\n        this.performResizeCrossAxis(crossAxisSize);\r\n    }\r\n\r\n    _setInitialAxisSizes() {\r\n        if (this.item.isFlexItemEnabled()) {\r\n            this.item.flexItem._resetLayoutSize();\r\n        } else {\r\n            this.mainAxisSize = this._getMainAxisBasis();\r\n            this.crossAxisSize = this._getCrossAxisBasis();\r\n        }\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n        this._shrunk = false;\r\n    }\r\n\r\n    _layoutAxes() {\r\n        this._layoutMainAxis();\r\n        this._layoutCrossAxis();\r\n    }\r\n\r\n    /**\r\n     * @pre mainAxisSize should exclude padding.\r\n     */\r\n    _layoutMainAxis() {\r\n        this._layoutLines();\r\n        this._fitMainAxisSizeToContents();\r\n    }\r\n\r\n    _layoutLines() {\r\n        this._lineLayouter.layoutLines();\r\n    }\r\n\r\n    get _lines() {\r\n        return this._lineLayouter.lines;\r\n    }\r\n\r\n    _fitMainAxisSizeToContents() {\r\n        if (!this._resizingMainAxis) {\r\n            if (this.isMainAxisFitToContents()) {\r\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @pre crossAxisSize should exclude padding.\r\n     */\r\n    _layoutCrossAxis() {\r\n        const aligner = new ContentAligner(this);\r\n        aligner.init();\r\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\r\n        this._fitCrossAxisSizeToContents();\r\n        aligner.align();\r\n    }\r\n\r\n    _fitCrossAxisSizeToContents() {\r\n        if (!this._resizingCrossAxis) {\r\n            if (this.isCrossAxisFitToContents()) {\r\n                this.crossAxisSize = this._totalCrossAxisSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    isWrapping() {\r\n        return this._flexContainer.wrap;\r\n    }\r\n\r\n    isAxisFitToContents(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this.isMainAxisFitToContents();\r\n        } else {\r\n            return this.isCrossAxisFitToContents();\r\n        }\r\n    }\r\n\r\n    isMainAxisFitToContents() {\r\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\r\n    }\r\n\r\n    isCrossAxisFitToContents() {\r\n        return !this._hasFixedCrossAxisBasis();\r\n    }\r\n\r\n    _hasFixedMainAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _hasFixedCrossAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    getAxisMinSize(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this._getMainAxisMinSize();\r\n        } else {\r\n            return this._getCrossAxisMinSize();\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return this._lineLayouter.mainAxisMinSize;\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return this._lineLayouter.crossAxisMinSize;\r\n    }\r\n\r\n    resizeMainAxis(size) {\r\n        if (this.mainAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeMainAxis(size);\r\n            } else {\r\n                if (this._checkValidCacheMainAxisResize()) {\r\n                    this.mainAxisSize = size;\r\n                    this._fitCrossAxisSizeToContents();\r\n                } else {\r\n                    // Cache miss.\r\n                    this.item.enableLocalRecalcFlag();\r\n                    this.performResizeMainAxis(size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkValidCacheMainAxisResize(size) {\r\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\r\n        if (isFinalMainAxisSize) {\r\n            return true;\r\n        }\r\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\r\n        if (canIgnoreCacheMiss) {\r\n            // Allow other main axis resizes and check if final resize matches the target main axis size\r\n            //  (ItemCoordinatesUpdater).\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    performResizeMainAxis(size) {\r\n        const isShrinking = (size < this.mainAxisSize);\r\n        this._shrunk = isShrinking;\r\n\r\n        this.mainAxisSize = size;\r\n\r\n        this._resizingMainAxis = true;\r\n        this._layoutAxes();\r\n        this._resizingMainAxis = false;\r\n    }\r\n\r\n    resizeCrossAxis(size) {\r\n        if (this.crossAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeCrossAxis(size);\r\n            } else {\r\n                this.crossAxisSize = size;\r\n            }\r\n        }\r\n    }\r\n\r\n    performResizeCrossAxis(size) {\r\n        this.crossAxisSize = size;\r\n\r\n        this._resizingCrossAxis = true;\r\n        this._layoutCrossAxis();\r\n        this._resizingCrossAxis = false;\r\n    }\r\n\r\n    get targetMainAxisSize() {\r\n        return this._horizontal ? this.item.target.w : this.item.target.h;\r\n    }\r\n\r\n    get targetCrossAxisSize() {\r\n        return this._horizontal ? this.item.target.h : this.item.target.w;\r\n    }\r\n\r\n    getParentFlexContainer() {\r\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\r\n    }\r\n\r\n    _getHorizontalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, true);\r\n    }\r\n\r\n    _getVerticalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, false);\r\n    }\r\n\r\n    _getHorizontalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _getCrossAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    get _horizontal() {\r\n        return this._flexContainer._horizontal;\r\n    }\r\n\r\n    get _reverse() {\r\n        return this._flexContainer._reverse;\r\n    }\r\n\r\n    get item() {\r\n        return this._flexContainer.item;\r\n    }\r\n\r\n    get items() {\r\n        return this.item.items;\r\n    }\r\n\r\n    get resizingMainAxis() {\r\n        return this._resizingMainAxis;\r\n    }\r\n\r\n    get resizingCrossAxis() {\r\n        return this._resizingCrossAxis;\r\n    }\r\n\r\n    get numberOfItems() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get mainAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\r\n    }\r\n\r\n    get crossAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    set mainAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\r\n    }\r\n\r\n    set crossAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Layout from \"./layout/FlexLayout.mjs\";\r\n\r\nexport default class FlexContainer {\r\n\r\n\r\n    constructor(item) {\r\n        this._item = item;\r\n\r\n        this._layout = new Layout(this);\r\n        this._horizontal = true;\r\n        this._reverse = false;\r\n        this._wrap = false;\r\n        this._alignItems = 'stretch';\r\n        this._justifyContent = 'flex-start';\r\n        this._alignContent = 'flex-start';\r\n\r\n        this._paddingLeft = 0;\r\n        this._paddingTop = 0;\r\n        this._paddingRight = 0;\r\n        this._paddingBottom = 0;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    _changedDimensions() {\r\n        this._item.changedDimensions();\r\n    }\r\n\r\n    _changedContents() {\r\n        this._item.changedContents();\r\n    }\r\n\r\n    get direction() {\r\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\r\n    }\r\n\r\n    set direction(f) {\r\n        if (this.direction === f) return;\r\n\r\n        this._horizontal = (f === 'row' || f === 'row-reverse');\r\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set wrap(v) {\r\n        this._wrap = v;\r\n        this._changedContents();\r\n    }\r\n\r\n    get wrap() {\r\n        return this._wrap;\r\n    }\r\n\r\n    get alignItems() {\r\n        return this._alignItems;\r\n    }\r\n\r\n    set alignItems(v) {\r\n        if (this._alignItems === v) return;\r\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n        }\r\n        this._alignItems = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get alignContent() {\r\n        return this._alignContent;\r\n    }\r\n\r\n    set alignContent(v) {\r\n        if (this._alignContent === v) return;\r\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\r\n        }\r\n        this._alignContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get justifyContent() {\r\n        return this._justifyContent;\r\n    }\r\n\r\n    set justifyContent(v) {\r\n        if (this._justifyContent === v) return;\r\n\r\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\r\n        }\r\n        this._justifyContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set padding(v) {\r\n        this.paddingLeft = v;\r\n        this.paddingTop = v;\r\n        this.paddingRight = v;\r\n        this.paddingBottom = v;\r\n    }\r\n\r\n    get padding() {\r\n        return this.paddingLeft;\r\n    }\r\n    \r\n    set paddingLeft(v) {\r\n        this._paddingLeft = v;\r\n        this._changedDimensions();\r\n    }\r\n    \r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingTop(v) {\r\n        this._paddingTop = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingTop() {\r\n        return this._paddingTop;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        this._paddingRight = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingBottom(v) {\r\n        this._paddingBottom = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingBottom() {\r\n        return this._paddingBottom;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\r\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\r\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\n\r\nexport default class FlexItem {\r\n\r\n    constructor(item) {\r\n        this._ctr = null;\r\n        this._item = item;\r\n        this._grow = 0;\r\n        this._shrink = FlexItem.SHRINK_AUTO;\r\n        this._alignSelf = undefined;\r\n        this._minWidth = 0;\r\n        this._minHeight = 0;\r\n        this._maxWidth = 0;\r\n        this._maxHeight = 0;\r\n\r\n        this._marginLeft = 0;\r\n        this._marginTop = 0;\r\n        this._marginRight = 0;\r\n        this._marginBottom = 0;\r\n        this._reversed = false;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    get grow() {\r\n        return this._grow;\r\n    }\r\n\r\n    set grow(v) {\r\n        if (this._grow === v) return;\r\n\r\n        this._grow = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get shrink() {\r\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\r\n            return this._getDefaultShrink();\r\n        }\r\n        return this._shrink;\r\n    }\r\n\r\n    _getDefaultShrink() {\r\n        if (this.item.isFlexEnabled()) {\r\n            return 1;\r\n        } else {\r\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    set shrink(v) {\r\n        if (this._shrink === v) return;\r\n\r\n        this._shrink = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get alignSelf() {\r\n        return this._alignSelf;\r\n    }\r\n\r\n    set alignSelf(v) {\r\n        if (this._alignSelf === v) return;\r\n\r\n        if (v === undefined) {\r\n            this._alignSelf = undefined;\r\n        } else {\r\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n            }\r\n            this._alignSelf = v;\r\n        }\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get minWidth() {\r\n        return this._minWidth;\r\n    }\r\n\r\n    set minWidth(v) {\r\n        this._minWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get minHeight() {\r\n        return this._minHeight;\r\n    }\r\n\r\n    set minHeight(v) {\r\n        this._minHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    get maxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    set maxWidth(v) {\r\n        this._maxWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight;\r\n    }\r\n\r\n    set maxHeight(v) {\r\n        this._maxHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    /**\r\n     * @note margins behave slightly different than in HTML with regard to shrinking.\r\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\r\n     */\r\n    set margin(v) {\r\n        this.marginLeft = v;\r\n        this.marginTop = v;\r\n        this.marginRight = v;\r\n        this.marginBottom = v;\r\n    }\r\n\r\n    get margin() {\r\n        return this.marginLeft;\r\n    }\r\n\r\n    set marginLeft(v) {\r\n        this._marginLeft = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginLeft() {\r\n        return this._marginLeft;\r\n    }\r\n\r\n    set marginTop(v) {\r\n        this._marginTop = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginTop() {\r\n        return this._marginTop;\r\n    }\r\n\r\n    set marginRight(v) {\r\n        this._marginRight = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginRight() {\r\n        return this._marginRight;\r\n    }\r\n\r\n    set marginBottom(v) {\r\n        this._marginBottom = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginBottom() {\r\n        return this._marginBottom;\r\n    }\r\n    \r\n    _changed() {\r\n        if (this.ctr) this.ctr._changedContents();\r\n    }\r\n\r\n    set ctr(v) {\r\n        this._ctr = v;\r\n    }\r\n\r\n    get ctr() {\r\n        return this._ctr;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    _resetLayoutSize() {\r\n        this._resetHorizontalAxisLayoutSize();\r\n        this._resetVerticalAxisLayoutSize();\r\n    }\r\n\r\n    _resetCrossAxisLayoutSize() {\r\n        if (this.ctr._horizontal) {\r\n            this._resetVerticalAxisLayoutSize();\r\n        } else {\r\n            this._resetHorizontalAxisLayoutSize();\r\n        }\r\n    }\r\n\r\n    _resetHorizontalAxisLayoutSize() {\r\n        let w = FlexUtils.getRelAxisSize(this.item, true);\r\n        if (this._minWidth) {\r\n            w = Math.max(this._minWidth, w);\r\n        }\r\n        if (this._maxWidth) {\r\n            w = Math.min(this._maxWidth, w);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\r\n    }\r\n\r\n    _resetVerticalAxisLayoutSize() {\r\n        let h = FlexUtils.getRelAxisSize(this.item, false);\r\n        if (this._minHeight) {\r\n            h = Math.max(this._minHeight, h);\r\n        }\r\n        if (this._maxHeight) {\r\n            h = Math.min(this._maxHeight, h);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\r\n    }\r\n\r\n    _getCrossAxisMinSizeSetting() {\r\n        return this._getMinSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(this.ctr._horizontal);\r\n    }\r\n\r\n    _getMinSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._minWidth;\r\n        } else {\r\n            return this._minHeight;\r\n        }\r\n    }\r\n\r\n    _getMaxSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._maxWidth;\r\n        } else {\r\n            return this._maxHeight;\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutPos() {\r\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _setMainAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _setCrossAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _getCrossAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _resizeCrossAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\r\n    }\r\n\r\n    _resizeMainAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\r\n    }\r\n\r\n    _getMainAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getHorizontalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _hasFixedCrossAxisSize() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _hasRelCrossAxisSize() {\r\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\r\n    }\r\n\r\n}\r\n\r\n\r\nFlexItem.SHRINK_AUTO = -1;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\nimport FlexItem from \"./FlexItem.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\n\r\n/**\r\n * This is the connection between the render tree with the layout tree of this flex container/item.\r\n */\r\nexport default class FlexTarget {\r\n\r\n    constructor(target) {\r\n        this._target = target;\r\n\r\n        /**\r\n         * Possible values (only in case of container):\r\n         * bit 0: has changed or contains items with changes\r\n         * bit 1: width changed\r\n         * bit 2: height changed\r\n         */\r\n        this._recalc = 0;\r\n        \r\n        this._enabled = false;\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._originalX = 0;\r\n        this._originalY = 0;\r\n        this._originalWidth = 0;\r\n        this._originalHeight = 0;\r\n\r\n        this._flex = null;\r\n        this._flexItem = null;\r\n        this._flexItemDisabled = false;\r\n\r\n        this._items = null;\r\n    }\r\n\r\n    get flexLayout() {\r\n        return this.flex ? this.flex._layout : null;\r\n    }\r\n\r\n    layoutFlexTree() {\r\n        if (this.isFlexEnabled() && this.isChanged()) {\r\n            this.flexLayout.layoutTree();\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        return this._target;\r\n    }\r\n\r\n    get flex() {\r\n        return this._flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        if (!v) {\r\n            if (this.isFlexEnabled()) {\r\n                this._disableFlex();\r\n            }\r\n        } else {\r\n            if (!this.isFlexEnabled()) {\r\n                this._enableFlex();\r\n            }\r\n            this._flex.patch(v);\r\n        }\r\n    }\r\n\r\n    get flexItem() {\r\n        if (this._flexItemDisabled) {\r\n            return false;\r\n        }\r\n        this._ensureFlexItem();\r\n        return this._flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        if (v === false) {\r\n            if (!this._flexItemDisabled) {\r\n                const parent = this.flexParent;\r\n                this._flexItemDisabled = true;\r\n                this._checkEnabled();\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        } else {\r\n            this._ensureFlexItem();\r\n\r\n            this._flexItem.patch(v);\r\n\r\n            if (this._flexItemDisabled) {\r\n                this._flexItemDisabled = false;\r\n                this._checkEnabled();\r\n                const parent = this.flexParent;\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlex() {\r\n        this._flex = new FlexContainer(this);\r\n        this._checkEnabled();\r\n        this.changedDimensions();\r\n        this._enableChildrenAsFlexItems();\r\n    }\r\n\r\n    _disableFlex() {\r\n        this.changedDimensions();\r\n        this._flex = null;\r\n        this._checkEnabled();\r\n        this._disableChildrenAsFlexItems();\r\n    }\r\n\r\n    _enableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._enableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._disableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlexItem() {\r\n        this._ensureFlexItem();\r\n        const flexParent = this._target._parent._layout;\r\n        this._flexItem.ctr = flexParent._flex;\r\n        flexParent.changedContents();\r\n        this._checkEnabled();\r\n    }\r\n\r\n    _disableFlexItem() {\r\n        if (this._flexItem) {\r\n            this._flexItem.ctr = null;\r\n        }\r\n\r\n        // We keep the flexItem object because it may contain custom settings.\r\n        this._checkEnabled();\r\n\r\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\r\n        this._resetOffsets();\r\n    }\r\n\r\n    _resetOffsets() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n\r\n    _ensureFlexItem() {\r\n        if (!this._flexItem) {\r\n            this._flexItem = new FlexItem(this);\r\n        }\r\n    }\r\n\r\n    _checkEnabled() {\r\n        const enabled = this.isEnabled();\r\n        if (this._enabled !== enabled) {\r\n            if (enabled) {\r\n                this._enable();\r\n            } else {\r\n                this._disable();\r\n            }\r\n            this._enabled = enabled;\r\n        }\r\n    }\r\n    \r\n    _enable() {\r\n        this._setupTargetForFlex();\r\n        this._target.enableFlexLayout();\r\n    }\r\n\r\n    _disable() {\r\n        this._restoreTargetToNonFlex();\r\n        this._target.disableFlexLayout();\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexEnabled() {\r\n        return this._flex !== null;\r\n    }\r\n\r\n    isFlexItemEnabled() {\r\n        return this.flexParent !== null;\r\n    }\r\n\r\n    _restoreTargetToNonFlex() {\r\n        const target = this._target;\r\n        target.x = this._originalX;\r\n        target.y = this._originalY;\r\n        target.setDimensions(this._originalWidth, this._originalHeight);\r\n    }\r\n\r\n    _setupTargetForFlex() {\r\n        const target = this._target;\r\n        this._originalX = target._x;\r\n        this._originalY = target._y;\r\n        this._originalWidth = target._w;\r\n        this._originalHeight = target._h;\r\n    }\r\n    \r\n    setParent(from, to) {\r\n        if (from && from.isFlexContainer()) {\r\n            from._layout._changedChildren();\r\n        }\r\n\r\n        if (to && to.isFlexContainer()) {\r\n            this._enableFlexItem();\r\n            to._layout._changedChildren();\r\n        }\r\n        this._checkEnabled();\r\n    }\r\n\r\n    get flexParent() {\r\n        if (this._flexItemDisabled) {\r\n            return null;\r\n        }\r\n\r\n        const parent = this._target._parent;\r\n        if (parent && parent.isFlexContainer()) {\r\n            return parent._layout;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setVisible(v) {\r\n        const parent = this.flexParent;\r\n        if (parent) {\r\n            parent._changedChildren();\r\n        }\r\n    }\r\n\r\n    get items() {\r\n        if (!this._items) {\r\n            this._items = this._getFlexItems();\r\n        }\r\n        return this._items;\r\n    }\r\n\r\n    _getFlexItems() {\r\n        const items = [];\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const item = children[i];\r\n                if (item.visible) {\r\n                    if (item.isFlexItem()) {\r\n                        items.push(item.layout);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    _changedChildren() {\r\n        this._clearFlexItemsCache();\r\n        this.changedContents();\r\n    }\r\n\r\n    _clearFlexItemsCache() {\r\n        this._items = null;\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        let originalX = this._originalX;\r\n        let originalY = this._originalY;\r\n        if (this.funcX) {\r\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\r\n        }\r\n        if (this.funcY) {\r\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\r\n        }\r\n\r\n        if (this.isFlexItemEnabled()) {\r\n            this.target.setLayout(x + originalX, y + originalY, w, h);\r\n        } else {\r\n            // Reuse the x,y 'settings'.\r\n            this.target.setLayout(originalX, originalY, w, h);\r\n        }\r\n    }\r\n\r\n    changedDimensions(changeWidth = true, changeHeight = true) {\r\n        this._updateRecalc(changeWidth, changeHeight);\r\n    }\r\n\r\n    changedContents() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    forceLayout() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    isChanged() {\r\n        return this._recalc > 0;\r\n    }\r\n\r\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\r\n        if (this.isFlexEnabled()) {\r\n            const layout = this._flex._layout;\r\n\r\n            // When something internal changes, it can have effect on the external dimensions.\r\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\r\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\r\n        }\r\n\r\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\r\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\r\n        this._recalc |= recalc;\r\n        if (newRecalcFlags > 1) {\r\n            if (this.flexParent) {\r\n                this.flexParent._updateRecalcBottomUp(recalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    getNewRecalcFlags(flags) {\r\n        return (7 - this._recalc) & flags;\r\n    }\r\n\r\n    _updateRecalcBottomUp(childRecalc) {\r\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\r\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\r\n        this._recalc |= newRecalc;\r\n        if (newRecalcFlags > 1) {\r\n            const flexParent = this.flexParent;\r\n            if (flexParent) {\r\n                flexParent._updateRecalcBottomUp(newRecalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    _getRecalcFromChangedChildRecalc(childRecalc) {\r\n        const layout = this._flex._layout;\r\n\r\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\r\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\r\n\r\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\r\n        if (!crossAxisDimensionsChangedInChild) {\r\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\r\n            if (mainAxisDimensionsChangedInChild) {\r\n                const mainAxisIsWrapping = layout.isWrapping();\r\n                if (mainAxisIsWrapping) {\r\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\r\n                    if (crossAxisIsFitToContents) {\r\n                        // Special case: due to wrapping, the cross axis size may be changed.\r\n                        childRecalc += crossAxisRecalcFlag;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isWidthDynamic = layout.isAxisFitToContents(true);\r\n        let isHeightDynamic = layout.isAxisFitToContents(false);\r\n\r\n        if (layout.shrunk) {\r\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\r\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\r\n            if (layout._horizontal) {\r\n                isWidthDynamic = true;\r\n            } else {\r\n                isHeightDynamic = true;\r\n            }\r\n        }\r\n\r\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\r\n\r\n        const combinedRecalc = childRecalc & localRecalc;\r\n        return combinedRecalc;\r\n    }\r\n\r\n    get recalc() {\r\n        return this._recalc;\r\n    }\r\n\r\n    clearRecalcFlag() {\r\n        this._recalc = 0;\r\n    }\r\n\r\n    enableLocalRecalcFlag() {\r\n        this._recalc = 1;\r\n    }\r\n\r\n    get originalX() {\r\n        return this._originalX;\r\n    }\r\n\r\n    setOriginalXWithoutUpdatingLayout(v) {\r\n        this._originalX = v;\r\n    }\r\n\r\n    get originalY() {\r\n        return this._originalY;\r\n    }\r\n\r\n    setOriginalYWithoutUpdatingLayout(v) {\r\n        this._originalY = v;\r\n    }\r\n\r\n    get originalWidth() {\r\n        return this._originalWidth;\r\n    }\r\n\r\n    set originalWidth(v) {\r\n        if (this._originalWidth !== v) {\r\n            this._originalWidth = v;\r\n            this.changedDimensions(true, false);\r\n        }\r\n    }\r\n\r\n    get originalHeight() {\r\n        return this._originalHeight;\r\n    }\r\n\r\n    set originalHeight(v) {\r\n        if (this._originalHeight !== v) {\r\n            this._originalHeight = v;\r\n            this.changedDimensions(false, true);\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return this._target.funcX;\r\n    }\r\n\r\n    get funcY() {\r\n        return this._target.funcY;\r\n    }\r\n\r\n    get funcW() {\r\n        return this._target.funcW;\r\n    }\r\n\r\n    get funcH() {\r\n        return this._target.funcH;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TextureSource {\r\n\r\n    constructor(manager, loader = null) {\r\n        this.id = TextureSource.id++;\r\n\r\n        this.manager = manager;\r\n\r\n        this.stage = manager.stage;\r\n\r\n        /**\r\n         * All enabled textures (textures that are used by visible elements).\r\n         * @type {Set<Texture>}\r\n         */\r\n        this.textures = new Set();\r\n\r\n        /**\r\n         * The number of active textures (textures that have at least one active element).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._activeTextureCount = 0;\r\n\r\n        /**\r\n         * The factory for the source of this texture.\r\n         * @type {Function}\r\n         */\r\n        this.loader = loader;\r\n\r\n        /**\r\n         * Identifier for reuse.\r\n         * @type {String}\r\n         */\r\n        this.lookupId = null;\r\n\r\n        /**\r\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\r\n         * @type {Function}\r\n         */\r\n        this._cancelCb = null;\r\n\r\n        /**\r\n         * Loading since timestamp in millis.\r\n         * @type {number}\r\n         */\r\n        this.loadingSince = 0;\r\n\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._nativeTexture = null;\r\n\r\n        /**\r\n         * If true, then this.texture source is never freed from memory during garbage collection.\r\n         * @type {boolean}\r\n         */\r\n        this.permanent = false;\r\n\r\n        /**\r\n         * Sub-object with texture-specific rendering information.\r\n         * For images, contains the src property, for texts, contains handy rendering information.\r\n         * @type {Object}\r\n         */\r\n        this.renderInfo = null;\r\n\r\n        /**\r\n         * Generated for 'renderToTexture'.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._isResultTexture = !this.loader;\r\n\r\n        /**\r\n         * Contains the load error, if the texture source could previously not be loaded.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._loadError = null;\r\n\r\n        /**\r\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._imageRef = null;\r\n\r\n\r\n        /**\r\n         * Track whether or not there is an alpha channel in this source\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n         this._hasAlpha = false;\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    get loadError() {\r\n        return this._loadError;\r\n    }\r\n\r\n    addTexture(v) {\r\n        if (!this.textures.has(v)) {\r\n            this.textures.add(v);\r\n        }\r\n    }\r\n\r\n    removeTexture(v) {\r\n        this.textures.delete(v);\r\n    }\r\n\r\n    incActiveTextureCount() {\r\n        this._activeTextureCount++;\r\n        if (this._activeTextureCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveTextureCount() {\r\n        this._activeTextureCount--;\r\n        if (this._activeTextureCount === 0) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    get isResultTexture() {\r\n        return this._isResultTexture;\r\n    }\r\n\r\n    set isResultTexture(v) {\r\n        this._isResultTexture = v;\r\n    }\r\n\r\n    forEachEnabledElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(cb);\r\n        });\r\n    }\r\n\r\n    hasEnabledElements() {\r\n        return this.textures.size > 0;\r\n    }\r\n\r\n    forEachActiveElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(element => {\r\n                if (element.active) {\r\n                    cb(element);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getRenderWidth() {\r\n        return this.w;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        return this.h;\r\n    }\r\n\r\n    allowCleanup() {\r\n        return !this.permanent && !this.isUsed();\r\n    }\r\n\r\n    becomesUsed() {\r\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\r\n        this.load();\r\n    }\r\n\r\n    becomesUnused() {\r\n        this.cancel();\r\n    }\r\n\r\n    cancel() {\r\n        if (this.isLoading()) {\r\n            if (this._cancelCb) {\r\n                this._cancelCb(this);\r\n\r\n                // Clear callback to avoid memory leaks.\r\n                this._cancelCb = null;\r\n            }\r\n            this.loadingSince = 0;\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return !!this._nativeTexture;\r\n    }\r\n\r\n    isLoading() {\r\n        return (this.loadingSince > 0);\r\n    }\r\n\r\n    isError() {\r\n        return !!this._loadError;\r\n    }\r\n\r\n    reload() {\r\n        this.free();\r\n        if (this.isUsed()) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    load(forceSync = false) {\r\n        // From the moment of loading (when a texture source becomes used by active elements)\r\n        if (this.isResultTexture) {\r\n            // Element result texture source, for which the loading is managed by the core.\r\n            return;\r\n        }\r\n\r\n        if (!this._nativeTexture && !this.isLoading()) {\r\n            this.loadingSince = (new Date()).getTime();\r\n            this._cancelCb = this.loader((err, options) => {\r\n                // Ignore loads that come in after a cancel.\r\n                if (this.isLoading()) {\r\n                    // Clear callback to avoid memory leaks.\r\n                    this._cancelCb = null;\r\n\r\n                    if (this.manager.stage.destroyed) {\r\n                        // Ignore async load when stage is destroyed.\r\n                        return;\r\n                    }\r\n                    if (err) {\r\n                        // Emit txError.\r\n                        this.onError(err);\r\n                    } else if (options && options.source) {\r\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\r\n                            const textureThrottler = this.stage.textureThrottler;\r\n                            this._cancelCb = textureThrottler.genericCancelCb;\r\n                            textureThrottler.add(this, options);\r\n                        } else {\r\n                            this.processLoadedSource(options);\r\n                        }\r\n                    }\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    processLoadedSource(options) {\r\n        this.loadingSince = 0;\r\n        this.setSource(options);\r\n    }\r\n\r\n    setSource(options) {\r\n        const source = options.source;\r\n\r\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\r\n        this.w = source.width || (options && options.w) || 0;\r\n        this.h = source.height || (options && options.h) || 0;\r\n\r\n        if (options && options.renderInfo) {\r\n            // Assign to id in cache so that it can be reused.\r\n            this.renderInfo = options.renderInfo;\r\n        }\r\n\r\n        this.permanent = !!options.permanent;\r\n\r\n        if (options && options.imageRef)\r\n            this._imageRef = options.imageRef;\r\n        if (options && options.flipTextureY) {\r\n            this._flipTextureY = options.flipTextureY;\r\n        } else {\r\n            this._flipTextureY = false;\r\n        }\r\n\r\n        if (this._isNativeTexture(source)) {\r\n            // Texture managed by caller.\r\n            this._nativeTexture = source;\r\n\r\n            this.w = this.w || source.w;\r\n            this.h = this.h || source.h;\r\n\r\n            // WebGLTexture objects are by default;\r\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\r\n        } else {\r\n            this.manager.uploadTextureSource(this, options);\r\n        }\r\n\r\n        // Must be cleared when reload is succesful.\r\n        this._loadError = null;\r\n\r\n        this.onLoad();\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeTextureCount > 0;\r\n    }\r\n\r\n    onLoad() {\r\n        if (this.isUsed()) {\r\n            this.textures.forEach(texture => {\r\n                texture.onLoad();\r\n            });\r\n        }\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\r\n        //  (using tex[Sub]Image2d for example).\r\n\r\n        if (this._nativeTexture) {\r\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\r\n            this._nativeTexture.update = this.stage.frameCounter;\r\n        }\r\n\r\n        this.forEachActiveElement(function (element) {\r\n            element.forceRenderUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    forceUpdateRenderCoords() {\r\n        this.forEachActiveElement(function (element) {\r\n            element._updateTextureCoords();\r\n        });\r\n    }\r\n\r\n    get nativeTexture() {\r\n        return this._nativeTexture;\r\n    }\r\n\r\n    clearNativeTexture() {\r\n        this._nativeTexture = null;\r\n        //also clear the reference to the texture variable.\r\n        this._imageRef = null;\r\n    }\r\n\r\n    /**\r\n     * Used for result textures.\r\n     */\r\n    replaceNativeTexture(newNativeTexture, w, h) {\r\n        let prevNativeTexture = this._nativeTexture;\r\n        // Loaded by core.\r\n        this._nativeTexture = newNativeTexture;\r\n        this.w = w;\r\n        this.h = h;\r\n\r\n        if (!prevNativeTexture && this._nativeTexture) {\r\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\r\n        }\r\n\r\n        if (!this._nativeTexture) {\r\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\r\n        }\r\n\r\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\r\n        this.forEachEnabledElement(element => element._updateDimensions());\r\n\r\n        // Notice that the sprite map must never contain render textures.\r\n    }\r\n\r\n    onError(e) {\r\n        this._loadError = e;\r\n        this.loadingSince = 0;\r\n        console.error('[Lightning] texture load error', e, this.lookupId);\r\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\r\n    }\r\n\r\n    free() {\r\n        if (this.isLoaded()) {\r\n            this.manager.freeTextureSource(this);\r\n        }\r\n    }\r\n\r\n    _isNativeTexture(source) {\r\n        if (Utils.isNode) {\r\n            return source.constructor.name === \"WebGLTexture\";\r\n        }\r\n\r\n        if ('WebGLTexture' in window) {\r\n            return source instanceof WebGLTexture;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nTextureSource.prototype.isTextureSource = true;\r\n\r\nTextureSource.id = 1;\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from '../TextureSource.mjs';\r\n\r\nexport default class ElementTexturizer {\r\n\r\n    constructor(elementCore) {\r\n\r\n        this._element = elementCore.element;\r\n        this._core = elementCore;\r\n\r\n        this.ctx = this._core.ctx;\r\n\r\n        this._enabled = false;\r\n        this.lazy = false;\r\n        this._colorize = false;\r\n\r\n        this._renderTexture = null;\r\n\r\n        this._renderTextureReused = false;\r\n\r\n        this._resultTextureSource = null;\r\n\r\n        this._renderOffscreen = false;\r\n\r\n        this.empty = false;\r\n    }\r\n\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(v) {\r\n        this._enabled = v;\r\n        this._core.updateRenderToTextureEnabled();\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this._renderOffscreen = v;\r\n        this._core.setHasRenderUpdates(1);\r\n\r\n        // This enforces rechecking the 'within bounds'.\r\n        this._core._setRecalc(6);\r\n    }\r\n\r\n    get colorize() {\r\n        return this._colorize;\r\n    }\r\n\r\n    set colorize(v) {\r\n        if (this._colorize !== v) {\r\n            this._colorize = v;\r\n\r\n            // Only affects the finally drawn quad.\r\n            this._core.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        if (!this._resultTextureSource) {\r\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\r\n            this.updateResultTexture();\r\n        }\r\n        return this._resultTextureSource;\r\n    }\r\n\r\n    hasResultTexture() {\r\n        return !!this._resultTextureSource;\r\n    }\r\n\r\n    resultTextureInUse() {\r\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\r\n    }\r\n\r\n    updateResultTexture() {\r\n        let resultTexture = this.getResultTexture();\r\n        if (this._resultTextureSource) {\r\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\r\n                let w = resultTexture ? resultTexture.w : 0;\r\n                let h = resultTexture ? resultTexture.h : 0;\r\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\r\n            }\r\n\r\n            // Texture will be updated: all elements using the source need to be updated as well.\r\n            this._resultTextureSource.forEachEnabledElement(element => {\r\n                element._updateDimensions();\r\n                element.core.setHasRenderUpdates(3);\r\n            });\r\n        }\r\n    }\r\n\r\n    mustRenderToTexture() {\r\n        // Check if we must really render as texture.\r\n        if (this._enabled && !this.lazy) {\r\n            return true;\r\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\r\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deactivate() {\r\n        this.release();\r\n    }\r\n\r\n    get renderTextureReused() {\r\n        return this._renderTextureReused;\r\n    }\r\n\r\n    release() {\r\n        this.releaseRenderTexture();\r\n    }\r\n\r\n    releaseRenderTexture() {\r\n        if (this._renderTexture) {\r\n            if (!this._renderTextureReused) {\r\n                this.ctx.releaseRenderTexture(this._renderTexture);\r\n            }\r\n            this._renderTexture = null;\r\n            this._renderTextureReused = false;\r\n            this.updateResultTexture();\r\n        }\r\n    }\r\n\r\n    // Reuses the specified texture as the render texture (in ancestor).\r\n    reuseTextureAsRenderTexture(nativeTexture) {\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this.releaseRenderTexture();\r\n            this._renderTexture = nativeTexture;\r\n            this._renderTextureReused = true;\r\n        }\r\n    }\r\n\r\n    hasRenderTexture() {\r\n        return !!this._renderTexture;\r\n    }\r\n\r\n    getRenderTexture() {\r\n        if (!this._renderTexture) {\r\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\r\n            this._renderTextureReused = false;\r\n        }\r\n        return this._renderTexture;\r\n    }\r\n\r\n    getResultTexture() {\r\n        return this._renderTexture;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\r\n\r\nexport default class ElementCore {\r\n\r\n    constructor(element) {\r\n        this._element = element;\r\n\r\n        this.ctx = element.stage.ctx;\r\n\r\n        // The memory layout of the internal variables is affected by their position in the constructor.\r\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\r\n\r\n        this._recalc = 0;\r\n\r\n        this._parent = null;\r\n\r\n        this._onUpdate = null;\r\n\r\n        this._pRecalc = 0;\r\n\r\n        this._worldContext = new ElementCoreContext();\r\n\r\n        this._hasUpdates = false;\r\n\r\n        this._localAlpha = 1;\r\n\r\n        this._onAfterCalcs = null;\r\n\r\n        this._onAfterUpdate = null;\r\n\r\n        \r\n        this._localPx = 0;\r\n        this._localPy = 0;\r\n\r\n        this._localTa = 1;\r\n        this._localTb = 0;\r\n        this._localTc = 0;\r\n        this._localTd = 1;\r\n\r\n        this._isComplex = false;\r\n\r\n        this._dimsUnknown = false;\r\n\r\n        this._clipping = false;\r\n\r\n        // Used by both update and render.\r\n        this._zSort = false;\r\n\r\n        this._outOfBounds = 0;\r\n\r\n        /**\r\n         * The texture source to be displayed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._displayedTextureSource = null;\r\n\r\n        this._zContextUsage = 0;\r\n\r\n        this._children = null;\r\n\r\n        this._hasRenderUpdates = 0;\r\n\r\n        this._zIndexedChildren = null;\r\n\r\n        this._renderContext = this._worldContext;\r\n\r\n        this.renderState = this.ctx.renderState;\r\n\r\n        this._scissor = null;\r\n\r\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\r\n        this._shaderOwner = null;\r\n\r\n\r\n        this._updateTreeOrder = 0;\r\n\r\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\r\n\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n\r\n        this._optFlags = 0;\r\n        this._funcX = null;\r\n        this._funcY = null;\r\n        this._funcW = null;\r\n        this._funcH = null;\r\n\r\n        this._scaleX = 1;\r\n        this._scaleY = 1;\r\n        this._pivotX = 0.5;\r\n        this._pivotY = 0.5;\r\n        this._mountX = 0;\r\n        this._mountY = 0;\r\n        this._rotation = 0;\r\n\r\n        this._alpha = 1;\r\n        this._visible = true;\r\n\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n\r\n        this._zIndex = 0;\r\n        this._forceZIndexContext = false;\r\n        this._zParent = null;\r\n\r\n        this._isRoot = false;\r\n        \r\n        /**\r\n         * RTL will be ignore. LTR is applied\r\n         */\r\n        this._ignoreRTL = null;\r\n\r\n        /**\r\n         * Iff true, during zSort, this element should be 're-sorted' because either:\r\n         * - zIndex did chang\r\n         * - zParent did change\r\n         * - element was moved in the render tree\r\n         * @type {boolean}\r\n         */\r\n        this._zIndexResort = false;\r\n\r\n        this._shader = null;\r\n\r\n        // Element is rendered on another texture.\r\n        this._renderToTextureEnabled = false;\r\n\r\n        this._texturizer = null;\r\n\r\n        this._useRenderToTexture = false;\r\n\r\n        this._boundsMargin = null;\r\n\r\n        this._recBoundsMargin = null;\r\n\r\n        this._withinBoundsMargin = false;\r\n\r\n        this._viewport = null;\r\n\r\n        this._clipbox = true;\r\n\r\n        this.render = this._renderSimple;\r\n\r\n        this._layout = null;\r\n    }\r\n\r\n    get offsetX() {\r\n        if (this._funcX) {\r\n            return this._funcX;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalX;\r\n            } else {\r\n                return this._x;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetX(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcX = v;\r\n        } else {\r\n            this._disableFuncX();\r\n            if (this.hasFlexLayout()) {\r\n                this.x += (v - this._layout.originalX);\r\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.x = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        if (v !== this._x) {\r\n            this._updateLocalTranslateDelta(v - this._x, 0);\r\n            this._x = v;\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return (this._optFlags & 1 ? this._funcX : null);\r\n    }\r\n\r\n    set funcX(v) {\r\n        if (this._funcX !== v) {\r\n            this._optFlags |= 1;\r\n            this._funcX = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._x = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncX() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 1);\r\n        this._funcX = null;\r\n    }\r\n\r\n    get offsetY() {\r\n        if (this._funcY) {\r\n            return this._funcY;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalY;\r\n            } else {\r\n                return this._y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcY = v;\r\n        } else {\r\n            this._disableFuncY();\r\n            if (this.hasFlexLayout()) {\r\n                this.y += (v - this._layout.originalY);\r\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.y = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        if (v !== this._y) {\r\n            this._updateLocalTranslateDelta(0, v - this._y);\r\n            this._y = v;\r\n        }\r\n    }\r\n\r\n    get funcY() {\r\n        return (this._optFlags & 2 ? this._funcY : null);\r\n    }\r\n\r\n    set funcY(v) {\r\n        if (this._funcY !== v) {\r\n            this._optFlags |= 2;\r\n            this._funcY = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._y = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncY() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 2);\r\n        this._funcY = null;\r\n    }\r\n\r\n    get funcW() {\r\n        return (this._optFlags & 4 ? this._funcW : null);\r\n    }\r\n\r\n    set funcW(v) {\r\n        if (this._funcW !== v) {\r\n            this._optFlags |= 4;\r\n            this._funcW = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalWidth = 0;\r\n                this.layout.changedDimensions(true, false);\r\n            } else {\r\n                this._w = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncW() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 4);\r\n        this._funcW = null;\r\n    }\r\n\r\n    get funcH() {\r\n        return (this._optFlags & 8 ? this._funcH : null);\r\n    }\r\n\r\n    set funcH(v) {\r\n        if (this._funcH !== v) {\r\n            this._optFlags |= 8;\r\n            this._funcH = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalHeight = 0;\r\n                this.layout.changedDimensions(false, true);\r\n            } else {\r\n                this._h = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncH() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 8);\r\n        this._funcH = null;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalWidth;\r\n        } else {\r\n            return this._w;\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalHeight;\r\n        } else {\r\n            return this._h;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this._scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        if (this._scaleX !== v) {\r\n            this._scaleX = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scaleY() {\r\n        return this._scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        if (this._scaleY !== v) {\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scale() {\r\n        return this.scaleX;\r\n    }\r\n\r\n    set scale(v) {\r\n        if (this._scaleX !== v || this._scaleY !== v) {\r\n            this._scaleX = v;\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        if (this._pivotX !== v) {\r\n            this._pivotX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        if (this._pivotY !== v) {\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivot(v) {\r\n        if (this._pivotX !== v || this._pivotY !== v) {\r\n            this._pivotX = v;\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountX() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        if (this._mountX !== v) {\r\n            this._mountX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountY() {\r\n        return this._mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        if (this._mountY !== v) {\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mount() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mount(v) {\r\n        if (this._mountX !== v || this._mountY !== v) {\r\n            this._mountX = v;\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        if (this._rotation !== v) {\r\n            this._rotation = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        // Account for rounding errors.\r\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\r\n        if (this._alpha !== v) {\r\n            let prev = this._alpha;\r\n            this._alpha = v;\r\n            this._updateLocalAlpha();\r\n            if ((prev === 0) !== (v === 0)) {\r\n                this._element._updateEnabledFlag();\r\n            }\r\n        }\r\n    }\r\n\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        if (this._visible !== v) {\r\n            this._visible = v;\r\n            this._updateLocalAlpha();\r\n            this._element._updateEnabledFlag();\r\n\r\n            if (this.hasFlexLayout()) {\r\n                this.layout.setVisible(v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateLocalTransform() {\r\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\r\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\r\n            let _sr = Math.sin(this._rotation);\r\n            let _cr = Math.cos(this._rotation);\r\n\r\n            this._setLocalTransform(\r\n                _cr * this._scaleX,\r\n                -_sr * this._scaleY,\r\n                _sr * this._scaleX,\r\n                _cr * this._scaleY\r\n            );\r\n        } else {\r\n            this._setLocalTransform(\r\n                this._scaleX,\r\n                0,\r\n                0,\r\n                this._scaleY\r\n            );\r\n        }\r\n        this._updateLocalTranslate();\r\n    };\r\n\r\n    _updateLocalTranslate() {\r\n        this._recalcLocalTranslate();\r\n        this._triggerRecalcTranslate();\r\n    };\r\n\r\n    _recalcLocalTranslate() {\r\n        let pivotXMul = this._pivotX * this._w;\r\n        let pivotYMul = this._pivotY * this._h;\r\n        let px;\r\n        if (window.isRTL && !this._ignoreRTL) {\r\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\r\n        } else {\r\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\r\n        }\r\n\r\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\r\n        px -= this._mountX * this._w;\r\n        py -= this._mountY * this._h;\r\n        this._localPx = px;\r\n        this._localPy = py;\r\n    }\r\n\r\n    _updateLocalTranslateDelta(dx, dy) {\r\n        this._addLocalTranslate(dx, dy);\r\n    };\r\n\r\n    _updateLocalAlpha() {\r\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\r\n    };\r\n\r\n    /**\r\n     * @param {number} type\r\n     * 0: no updates\r\n     * 1: re-invoke shader\r\n     * 3: re-create render texture and re-invoke shader\r\n     */\r\n    setHasRenderUpdates(type) {\r\n        if (this._worldContext.alpha) {\r\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\r\n            let p = this;\r\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\r\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\r\n                p._hasRenderUpdates = 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Number} type\r\n     *   1: alpha\r\n     *   2: translate\r\n     *   4: transform\r\n     * 128: becomes visible\r\n     * 256: flex layout updated\r\n     */\r\n    _setRecalc(type) {\r\n        this._recalc |= type;\r\n\r\n        this._setHasUpdates();\r\n\r\n        // Any changes in descendants should trigger texture updates.\r\n        if (this._parent) {\r\n            this._parent.setHasRenderUpdates(3);\r\n        }\r\n    }\r\n\r\n    _setHasUpdates() {\r\n        let p = this;\r\n        while (p && !p._hasUpdates) {\r\n            p._hasUpdates = true;\r\n            p = p._parent;\r\n        }\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        if (parent !== this._parent) {\r\n            let prevIsZContext = this.isZContext();\r\n            let prevParent = this._parent;\r\n            this._parent = parent;\r\n\r\n            // Notify flex layout engine.\r\n            if (this._layout || (parent && parent.isFlexContainer())) {\r\n                this.layout.setParent(prevParent, parent);\r\n            }\r\n\r\n            if (prevParent) {\r\n                // When elements are deleted, the render texture must be re-rendered.\r\n                prevParent.setHasRenderUpdates(3);\r\n            }\r\n\r\n            this._setRecalc(1 + 2 + 4);\r\n\r\n            if (this._parent) {\r\n                // Force parent to propagate hasUpdates flag.\r\n                this._parent._setHasUpdates();\r\n            }\r\n\r\n            if (this._zIndex === 0) {\r\n                this.setZParent(parent);\r\n            } else {\r\n                this.setZParent(parent ? parent.findZContext() : null);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(prevParent.findZContext());\r\n                }\r\n            }\r\n\r\n            if (this._ignoreRTL != false) {\r\n                //Inherit ignoreRTL value from parent if it isn't setted\r\n                this._setIgnoreRTL(parent);\r\n            }\r\n\r\n            // Tree order did change: even if zParent stays the same, we must resort.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (!this._shader) {\r\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\r\n                if (newShaderOwner !== this._shaderOwner) {\r\n                    this.setHasRenderUpdates(1);\r\n                    this._setShaderOwnerRecursive(newShaderOwner);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setIgnoreRTL(parent) {\r\n        if (parent && parent.ignoreRTL && parent._children) {\r\n            for (let i = 0, n = parent._children.length; i < n; i++) {\r\n                let c = parent._children[i];\r\n                if (c && c.ignoreRTL != false) {\r\n                    c.ignoreRTL = parent.ignoreRTL;\r\n                    c._setIgnoreRTL(c);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    enableZSort(force = false) {\r\n        if (!this._zSort && this._zContextUsage > 0) {\r\n            this._zSort = true;\r\n            if (force) {\r\n                // ZSort must be done, even if this element is invisible.\r\n                // This is done to prevent memory leaks when removing element from inactive render branches.\r\n                this.ctx.forceZSort(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    addChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children.splice(index, 0, child);\r\n        child.setParent(this);\r\n    };\r\n\r\n    setChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children[index].setParent(null);\r\n        this._children[index] = child;\r\n        child.setParent(this);\r\n    }\r\n\r\n    removeChildAt(index) {\r\n        let child = this._children[index];\r\n        this._children.splice(index, 1);\r\n        child.setParent(null);\r\n    };\r\n\r\n    removeChildren() {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i].setParent(null);\r\n            }\r\n\r\n            this._children.splice(0);\r\n\r\n            if (this._zIndexedChildren) {\r\n                this._zIndexedChildren.splice(0);\r\n            }\r\n        }\r\n    };\r\n\r\n    syncChildren(removed, added, order) {\r\n        this._children = order;\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i].setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            added[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    moveChild(fromIndex, toIndex) {\r\n        let c = this._children[fromIndex];\r\n        this._children.splice(fromIndex, 1);\r\n        this._children.splice(toIndex, 0, c);\r\n\r\n        // Tree order changed: must resort!;\r\n        this._zIndexResort = true;\r\n        if (this._zParent) {\r\n            this._zParent.enableZSort();\r\n        }\r\n    }\r\n\r\n    _setLocalTransform(a, b, c, d) {\r\n        this._setRecalc(4);\r\n        this._localTa = a;\r\n        this._localTb = b;\r\n        this._localTc = c;\r\n        this._localTd = d;\r\n\r\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\r\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\r\n    };\r\n\r\n    _addLocalTranslate(dx, dy) {\r\n        this._localPx += dx;\r\n        this._localPy += dy;\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    _setLocalAlpha(a) {\r\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\r\n            // Element is becoming visible. We need to force update.\r\n            this._setRecalc(1 + 128);\r\n        } else {\r\n            this._setRecalc(1);\r\n        }\r\n\r\n        if (a < 1e-14) {\r\n            // Tiny rounding errors may cause failing visibility tests.\r\n            a = 0;\r\n        }\r\n\r\n        this._localAlpha = a;\r\n    };\r\n\r\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\r\n        // In case of an estimation, the update loop should perform different bound checks.\r\n        this._dimsUnknown = isEstimate;\r\n\r\n        if (this.hasFlexLayout()) {\r\n            this._layout.originalWidth = w;\r\n            this._layout.originalHeight = h;\r\n        } else {\r\n            if (this._w !== w || this._h !== h) {\r\n                this._updateDimensions(w, h);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    _updateDimensions(w, h) {\r\n        if (this._w !== w || this._h !== h) {\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._triggerRecalcTranslate();\r\n\r\n            if (this._texturizer) {\r\n                this._texturizer.releaseRenderTexture();\r\n                this._texturizer.updateResultTexture();\r\n            }\r\n            // Due to width/height change: update the translation vector.\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    setTextureCoords(ulx, uly, brx, bry) {\r\n        this.setHasRenderUpdates(3);\r\n\r\n        this._ulx = ulx;\r\n        this._uly = uly;\r\n        this._brx = brx;\r\n        this._bry = bry;\r\n    };\r\n\r\n    get displayedTextureSource() {\r\n        return this._displayedTextureSource;\r\n    }\r\n\r\n    setDisplayedTextureSource(textureSource) {\r\n        this.setHasRenderUpdates(3);\r\n        this._displayedTextureSource = textureSource;\r\n    };\r\n\r\n    get isRoot() {\r\n        return this._isRoot;\r\n    }\r\n\r\n    setAsRoot() {\r\n        // Use parent dummy.\r\n        this._parent = new ElementCore(this._element);\r\n\r\n        // After setting root, make sure it's updated.\r\n        this._parent._hasRenderUpdates = 3;\r\n        this._parent._hasUpdates = true;\r\n\r\n        // Root is, and will always be, the primary zContext.\r\n        this._isRoot = true;\r\n\r\n        this.ctx.root = this;\r\n\r\n        // Set scissor area of 'fake parent' to stage's viewport.\r\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\r\n        this._parent._scissor = this._parent._viewport;\r\n\r\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\r\n        this._parent._recBoundsMargin = null;\r\n\r\n        this._setRecalc(1 + 2 + 4);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while (p = p._parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    isZContext() {\r\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\r\n    };\r\n\r\n    findZContext() {\r\n        if (this.isZContext()) {\r\n            return this;\r\n        } else {\r\n            return this._parent.findZContext();\r\n        }\r\n    };\r\n\r\n    setZParent(newZParent) {\r\n        if (this._zParent !== newZParent) {\r\n            if (this._zParent !== null) {\r\n                if (this._zIndex !== 0) {\r\n                    this._zParent.decZContextUsage();\r\n                }\r\n\r\n                // We must filter out this item upon the next resort.\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (newZParent !== null) {\r\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\r\n\r\n                // @pre: new parent's children array has already been modified.\r\n                if (this._zIndex !== 0) {\r\n                    newZParent.incZContextUsage();\r\n                }\r\n\r\n                if (newZParent._zContextUsage > 0) {\r\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\r\n                        // This child was already in the children list.\r\n                        // Do not add double.\r\n                    } else {\r\n                        // Add new child to array.\r\n                        newZParent._zIndexedChildren.push(this);\r\n                    }\r\n\r\n                    // Order should be checked.\r\n                    newZParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            this._zParent = newZParent;\r\n\r\n            // Newly added element must be marked for resort.\r\n            this._zIndexResort = true;\r\n        }\r\n    };\r\n\r\n    incZContextUsage() {\r\n        this._zContextUsage++;\r\n        if (this._zContextUsage === 1) {\r\n            if (!this._zIndexedChildren) {\r\n                this._zIndexedChildren = [];\r\n            }\r\n            if (this._children) {\r\n                // Copy.\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._zIndexedChildren.push(this._children[i]);\r\n                }\r\n                // Initially, children are already sorted properly (tree order).\r\n                this._zSort = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    decZContextUsage() {\r\n        this._zContextUsage--;\r\n        if (this._zContextUsage === 0) {\r\n            this._zSort = false;\r\n            this._zIndexedChildren.splice(0);\r\n        }\r\n    };\r\n\r\n    get zIndex() {\r\n        return this._zIndex;\r\n    }\r\n\r\n    set zIndex(zIndex) {\r\n        if (this._zIndex !== zIndex) {\r\n            this.setHasRenderUpdates(1);\r\n\r\n            let newZParent = this._zParent;\r\n\r\n            let prevIsZContext = this.isZContext();\r\n            if (zIndex === 0 && this._zIndex !== 0) {\r\n                if (this._parent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.decZContextUsage();\r\n                    }\r\n                } else {\r\n                    newZParent = this._parent;\r\n                }\r\n            } else if (zIndex !== 0 && this._zIndex === 0) {\r\n                newZParent = this._parent ? this._parent.findZContext() : null;\r\n                if (newZParent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.incZContextUsage();\r\n                        this._zParent.enableZSort();\r\n                    }\r\n                }\r\n            } else if (zIndex !== this._zIndex) {\r\n                if (this._zParent && this._zParent._zContextUsage) {\r\n                    this._zParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(null);\r\n            }\r\n\r\n            this._zIndex = zIndex;\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(newZParent);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(this._parent.findZContext());\r\n                }\r\n            }\r\n\r\n            // Make sure that resort is done.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n        }\r\n    };\r\n\r\n    get forceZIndexContext() {\r\n        return this._forceZIndexContext;\r\n    }\r\n\r\n    set forceZIndexContext(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevIsZContext = this.isZContext();\r\n        this._forceZIndexContext = v;\r\n\r\n        if (prevIsZContext !== this.isZContext()) {\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            } else {\r\n                this.enableZContext(this._parent.findZContext());\r\n            }\r\n        }\r\n    };\r\n\r\n    enableZContext(prevZContext) {\r\n        if (prevZContext && prevZContext._zContextUsage > 0) {\r\n            // Transfer from upper z context to this z context.\r\n            const results = this._getZIndexedDescs();\r\n            results.forEach((c) => {\r\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\r\n                    c.setZParent(this);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getZIndexedDescs() {\r\n        const results = [];\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    _getZIndexedDescsRec(results) {\r\n        if (this._zIndex) {\r\n            results.push(this);\r\n        } else if (this._children && !this.isZContext()) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n    }\r\n\r\n    disableZContext() {\r\n        // Transfer from this z context to upper z context.\r\n        if (this._zContextUsage > 0) {\r\n            let newZParent = this._parent.findZContext();\r\n\r\n            // Make sure that z-indexed children are up to date (old ones removed).\r\n            if (this._zSort) {\r\n                this.sortZIndexedChildren();\r\n            }\r\n\r\n            this._zIndexedChildren.slice().forEach(function (c) {\r\n                if (c._zIndex !== 0) {\r\n                    c.setZParent(newZParent);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    get ignoreRTL() {\r\n        return this._ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this._ignoreRTL = v;\r\n    }\r\n\r\n    get colorUl() {\r\n        return this._colorUl;\r\n    }\r\n\r\n    set colorUl(color) {\r\n        if (this._colorUl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUl = color;\r\n        }\r\n    }\r\n\r\n    get colorUr() {\r\n        return this._colorUr;\r\n    }\r\n\r\n    set colorUr(color) {\r\n        if (this._colorUr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUr = color;\r\n        }\r\n    };\r\n\r\n    get colorBl() {\r\n        return this._colorBl;\r\n    }\r\n\r\n    set colorBl(color) {\r\n        if (this._colorBl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBl = color;\r\n        }\r\n    };\r\n\r\n    get colorBr() {\r\n        return this._colorBr;\r\n    }\r\n\r\n    set colorBr(color) {\r\n        if (this._colorBr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBr = color;\r\n        }\r\n    };\r\n\r\n\r\n    set onUpdate(f) {\r\n        this._onUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this._onAfterUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this._onAfterCalcs = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevShader = this._shader;\r\n        this._shader = v;\r\n        if (!v && prevShader) {\r\n            // Disabled shader.\r\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\r\n            this._setShaderOwnerRecursive(newShaderOwner);\r\n        } else if (v) {\r\n            // Enabled shader.\r\n            this._setShaderOwnerRecursive(this);\r\n        }\r\n    }\r\n\r\n    get activeShader() {\r\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\r\n    }\r\n\r\n    get activeShaderOwner() {\r\n        return this._shaderOwner;\r\n    }\r\n\r\n    get clipping() {\r\n        return this._clipping;\r\n    }\r\n\r\n    set clipping(v) {\r\n        if (this._clipping !== v) {\r\n            this._clipping = v;\r\n\r\n            // Force update of scissor by updating translate.\r\n            // Alpha must also be updated because the scissor area may have been empty.\r\n            this._setRecalc(1 + 2);\r\n        }\r\n    }\r\n\r\n    get clipbox() {\r\n        return this._clipbox;\r\n    }\r\n\r\n    set clipbox(v) {\r\n        // In case of out-of-bounds element, all children will also be ignored.\r\n        // It will save us from executing the update/render loops for those.\r\n        // The optimization will be used immediately during the next frame.\r\n        this._clipbox = v;\r\n    }\r\n\r\n    _setShaderOwnerRecursive(elementCore) {\r\n        this._shaderOwner = elementCore;\r\n\r\n        if (this._children && !this._renderToTextureEnabled) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setShaderOwnerChildrenRecursive(elementCore) {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _hasRenderContext() {\r\n        return this._renderContext !== this._worldContext;\r\n    }\r\n\r\n    get renderContext() {\r\n        return this._renderContext;\r\n    }\r\n\r\n    updateRenderToTextureEnabled() {\r\n        // Enforce texturizer initialisation.\r\n        let v = this.texturizer._enabled;\r\n\r\n        if (v) {\r\n            this._enableRenderToTexture();\r\n        } else {\r\n            this._disableRenderToTexture();\r\n            this._texturizer.releaseRenderTexture();\r\n        }\r\n    }\r\n\r\n    _enableRenderToTexture() {\r\n        if (!this._renderToTextureEnabled) {\r\n            let prevIsZContext = this.isZContext();\r\n\r\n            this._renderToTextureEnabled = true;\r\n\r\n            this._renderContext = new ElementCoreContext();\r\n\r\n            // If render to texture is active, a new shader context is started.\r\n            this._setShaderOwnerChildrenRecursive(null);\r\n\r\n            if (!prevIsZContext) {\r\n                // Render context forces z context.\r\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\r\n            }\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.render = this._renderAdvanced;\r\n        }\r\n    }\r\n\r\n    _disableRenderToTexture() {\r\n        if (this._renderToTextureEnabled) {\r\n            this._renderToTextureEnabled = false;\r\n\r\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\r\n\r\n            this._renderContext = this._worldContext;\r\n\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            }\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            this.render = this._renderSimple;\r\n        }\r\n    }\r\n\r\n    isWhite() {\r\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\r\n    }\r\n\r\n    hasSimpleTexCoords() {\r\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\r\n    }\r\n\r\n    _stashTexCoords() {\r\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n    }\r\n\r\n    _unstashTexCoords() {\r\n        this._ulx = this._stashedTexCoords[0];\r\n        this._uly = this._stashedTexCoords[1];\r\n        this._brx = this._stashedTexCoords[2];\r\n        this._bry = this._stashedTexCoords[3];\r\n        this._stashedTexCoords = null;\r\n    }\r\n\r\n    _stashColors() {\r\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\r\n        this._colorUl = 0xFFFFFFFF;\r\n        this._colorUr = 0xFFFFFFFF;\r\n        this._colorBr = 0xFFFFFFFF;\r\n        this._colorBl = 0xFFFFFFFF;\r\n    }\r\n\r\n    _unstashColors() {\r\n        this._colorUl = this._stashedColors[0];\r\n        this._colorUr = this._stashedColors[1];\r\n        this._colorBr = this._stashedColors[2];\r\n        this._colorBl = this._stashedColors[3];\r\n        this._stashedColors = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return (this._localAlpha > 1e-14);\r\n    };\r\n\r\n    get outOfBounds() {\r\n        return this._outOfBounds;\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n\r\n        /**\r\n         *  null: inherit from parent.\r\n         *  number[4]: specific margins: left, top, right, bottom.\r\n         */\r\n        this._boundsMargin = v ? v.slice() : null;\r\n\r\n        // We force recalc in order to set all boundsMargin recursively during the next update.\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this._boundsMargin;\r\n    }\r\n\r\n    update() {\r\n        this._recalc |= this._parent._pRecalc;\r\n\r\n        if (this._layout && this._layout.isEnabled()) {\r\n            if (this._recalc & 256) {\r\n                this._layout.layoutFlexTree();\r\n            }\r\n        } else if ((this._recalc & 2) && this._optFlags) {\r\n            this._applyRelativeDimFuncs();\r\n        }\r\n\r\n        if (this._onUpdate) {\r\n            // Block all 'upwards' updates when changing things in this branch.\r\n            this._hasUpdates = true;\r\n            this._onUpdate(this.element, this);\r\n        }\r\n\r\n        const pw = this._parent._worldContext;\r\n        let w = this._worldContext;\r\n        const visible = (pw.alpha && this._localAlpha);\r\n\r\n        /**\r\n         * We must update if:\r\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\r\n         * - there are (inherited) updates and this branch is visible\r\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\r\n         */\r\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\r\n            let recalc = this._recalc;\r\n\r\n            // Update world coords/alpha.\r\n            if (recalc & 1) {\r\n                if (!w.alpha && visible) {\r\n                    // Becomes visible.\r\n                    this._hasRenderUpdates = 3;\r\n                }\r\n                w.alpha = pw.alpha * this._localAlpha;\r\n\r\n                if (w.alpha < 1e-14) {\r\n                    // Tiny rounding errors may cause failing visibility tests.\r\n                    w.alpha = 0;\r\n                }\r\n            }\r\n\r\n            if (recalc & 6) {\r\n                let calculatedX = this._localPx;\r\n                if (window.isRTL && !this._ignoreRTL) {\r\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\r\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                }\r\n\r\n                w.px = pw.px + calculatedX * pw.ta;\r\n                w.py = pw.py + this._localPy * pw.td;\r\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\r\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\r\n            }\r\n\r\n            if (recalc & 4) {\r\n                w.ta = this._localTa * pw.ta;\r\n                w.tb = this._localTd * pw.tb;\r\n                w.tc = this._localTa * pw.tc;\r\n                w.td = this._localTd * pw.td;\r\n\r\n                if (this._isComplex) {\r\n                    w.ta += this._localTc * pw.tb;\r\n                    w.tb += this._localTb * pw.ta;\r\n                    w.tc += this._localTc * pw.td;\r\n                    w.td += this._localTb * pw.tc;\r\n                }\r\n            }\r\n\r\n            // Update render coords/alpha.\r\n            const pr = this._parent._renderContext;\r\n            if (this._parent._hasRenderContext()) {\r\n                const init = this._renderContext === this._worldContext;\r\n                if (init) {\r\n                    // First render context build: make sure that it is fully initialized correctly.\r\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\r\n                    this._renderContext = new ElementCoreContext();\r\n                }\r\n\r\n                const r = this._renderContext;\r\n\r\n                // Update world coords/alpha.\r\n                if (init || (recalc & 1)) {\r\n                    r.alpha = pr.alpha * this._localAlpha;\r\n\r\n                    if (r.alpha < 1e-14) {\r\n                        r.alpha = 0;\r\n                    }\r\n                }\r\n\r\n                if (init || (recalc & 6)) {\r\n                    let calculatedX = this._localPx;\r\n                    if (window.isRTL && !this._ignoreRTL) {\r\n                      const parentW = this._element.__parent\r\n                        ? this._parent.w || 0\r\n                        : this.ctx.stage.getOption(\"w\");\r\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                    }\r\n                    \r\n                    r.px = pr.px + calculatedX * pr.ta;\r\n                    r.py = pr.py + this._localPy * pr.td;\r\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\r\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\r\n                }\r\n\r\n                if (init) {\r\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\r\n                    recalc |= 2;\r\n                }\r\n\r\n                if (init || (recalc & 4)) {\r\n                    r.ta = this._localTa * pr.ta;\r\n                    r.tb = this._localTd * pr.tb;\r\n                    r.tc = this._localTa * pr.tc;\r\n                    r.td = this._localTd * pr.td;\r\n\r\n                    if (this._isComplex) {\r\n                        r.ta += this._localTc * pr.tb;\r\n                        r.tb += this._localTb * pr.ta;\r\n                        r.tc += this._localTc * pr.td;\r\n                        r.td += this._localTb * pr.tc;\r\n                    }\r\n                }\r\n            } else {\r\n                this._renderContext = this._worldContext;\r\n            }\r\n\r\n            if (this.ctx.updateTreeOrder === -1) {\r\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\r\n            } else {\r\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n            }\r\n\r\n            // Determine whether we must use a 'renderTexture'.\r\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\r\n            if (this._useRenderToTexture !== useRenderToTexture) {\r\n                // Coords must be changed.\r\n                this._recalc |= 2 + 4;\r\n\r\n                // Scissor may change: force update.\r\n                recalc |= 2;\r\n\r\n                if (!this._useRenderToTexture) {\r\n                    // We must release the texture.\r\n                    this._texturizer.release();\r\n                }\r\n            }\r\n            this._useRenderToTexture = useRenderToTexture;\r\n\r\n            const r = this._renderContext;\r\n\r\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\r\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\r\n\r\n            // Calculate a bbox for this element.\r\n            let sx, sy, ex, ey;\r\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\r\n            if (rComplex) {\r\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n            } else {\r\n                sx = r.px;\r\n                ex = r.px + r.ta * bboxW;\r\n                sy = r.py;\r\n                ey = r.py + r.td * bboxH;\r\n            }\r\n\r\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\r\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\r\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                if (nx < sx) sx = nx;\r\n                if (ny < sy) sy = ny;\r\n                if (nx > ex) ex = nx;\r\n                if (ny > ey) ey = ny;\r\n            }\r\n\r\n            if (recalc & 6 || !this._scissor /* initial */) {\r\n                // Determine whether we must 'clip'.\r\n                if (this._clipping && r.isSquare()) {\r\n                    // If the parent renders to a texture, it's scissor should be ignored;\r\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                    if (area) {\r\n                        // Merge scissor areas.\r\n                        const lx = Math.max(area[0], sx);\r\n                        const ly = Math.max(area[1], sy);\r\n                        this._scissor = [\r\n                            lx,\r\n                            ly,\r\n                            Math.min(area[2] + area[0], ex) - lx,\r\n                            Math.min(area[3] + area[1], ey) - ly\r\n                        ];\r\n                    } else {\r\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\r\n                    }\r\n                } else {\r\n                    // No clipping: reuse parent scissor.\r\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                }\r\n            }\r\n\r\n            // Calculate the outOfBounds margin.\r\n            if (this._boundsMargin) {\r\n                this._recBoundsMargin = this._boundsMargin;\r\n            } else {\r\n                this._recBoundsMargin = this._parent._recBoundsMargin;\r\n            }\r\n\r\n            if (this._onAfterCalcs) {\r\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\r\n                if (this._onAfterCalcs(this.element)) {\r\n                    // Recalculate bbox.\r\n                    if (rComplex) {\r\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                    } else {\r\n                        sx = r.px;\r\n                        ex = r.px + r.ta * bboxW;\r\n                        sy = r.py;\r\n                        ey = r.py + r.td * bboxH;\r\n                    }\r\n\r\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                        if (nx < sx) sx = nx;\r\n                        if (ny < sy) sy = ny;\r\n                        if (nx > ex) ex = nx;\r\n                        if (ny > ey) ey = ny;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._parent._outOfBounds === 2) {\r\n                // Inherit parent out of boundsness.\r\n                this._outOfBounds = 2;\r\n\r\n                if (this._withinBoundsMargin) {\r\n                    this._withinBoundsMargin = false;\r\n                    this.element._disableWithinBoundsMargin();\r\n                }\r\n            } else {\r\n                if (recalc & 6) {\r\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\r\n                    this._outOfBounds = 0;\r\n                    let withinMargin = true;\r\n\r\n                    // Offscreens are always rendered as long as the parent is within bounds.\r\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\r\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\r\n                            // Empty scissor area.\r\n                            this._outOfBounds = 2;\r\n                        } else {\r\n                            // Use bbox to check out-of-boundness.\r\n                            if ((this._scissor[0] > ex) ||\r\n                                (this._scissor[1] > ey) ||\r\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\r\n                                (sy > (this._scissor[1] + this._scissor[3]))\r\n                            ) {\r\n                                this._outOfBounds = 1;\r\n                            }\r\n\r\n                            if (this._outOfBounds) {\r\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\r\n                                    this._outOfBounds = 2;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        withinMargin = (this._outOfBounds === 0);\r\n                        if (!withinMargin) {\r\n                            // Re-test, now with margins.\r\n                            if (this._recBoundsMargin) {\r\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\r\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\r\n                            } else {\r\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\r\n                                    (ey < this._scissor[1] - 100) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\r\n                            }\r\n                            if (withinMargin && this._outOfBounds === 2) {\r\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\r\n                                this._outOfBounds = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this._withinBoundsMargin !== withinMargin) {\r\n                        this._withinBoundsMargin = withinMargin;\r\n\r\n                        if (this._withinBoundsMargin) {\r\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\r\n\r\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\r\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\r\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\r\n                            // _recalc directly.\r\n\r\n                            // Changes in descendants are automatically executed within the current update loop, though we must\r\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\r\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\r\n                            this._hasUpdates = true;\r\n\r\n                            const recalc = this._recalc;\r\n                            this._recalc = 0;\r\n                            this.element._enableWithinBoundsMargin();\r\n\r\n                            if (this._recalc) {\r\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\r\n                                return this.update();\r\n                            }\r\n\r\n                            this._recalc = recalc;\r\n                        } else {\r\n                            this.element._disableWithinBoundsMargin();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                // Set viewport necessary for children scissor calculation.\r\n                if (this._viewport) {\r\n                    this._viewport[2] = bboxW;\r\n                    this._viewport[3] = bboxH;\r\n                } else {\r\n                    this._viewport = [0, 0, bboxW, bboxH];\r\n                }\r\n            }\r\n\r\n            // Filter out bits that should not be copied to the children (currently all are).\r\n            this._pRecalc = (this._recalc & 135);\r\n\r\n            // Clear flags so that future updates are properly detected.\r\n            this._recalc = 0;\r\n            this._hasUpdates = false;\r\n\r\n            if (this._outOfBounds < 2) {\r\n                if (this._useRenderToTexture) {\r\n                    if (this._worldContext.isIdentity()) {\r\n                        // Optimization.\r\n                        // The world context is already identity: use the world context as render context to prevents the\r\n                        // ancestors from having to update the render context.\r\n                        this._renderContext = this._worldContext;\r\n                    } else {\r\n                        // Temporarily replace the render coord attribs by the identity matrix.\r\n                        // This allows the children to calculate the render context.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n                    }\r\n                }\r\n\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        this._children[i].update();\r\n                    }\r\n                }\r\n\r\n                if (this._useRenderToTexture) {\r\n                    this._renderContext = r;\r\n                }\r\n            } else {\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._hasUpdates) {\r\n                            this._children[i].update();\r\n                        } else {\r\n                            // Make sure we don't lose the 'inherited' updates.\r\n                            this._children[i]._recalc |= this._pRecalc;\r\n                            this._children[i].updateOutOfBounds();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._onAfterUpdate) {\r\n                this._onAfterUpdate(this.element);\r\n            }\r\n        } else {\r\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\r\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\r\n                this.ctx.updateTreeOrder = -1;\r\n            } else {\r\n                this.updateTreeOrder();\r\n            }\r\n        }\r\n    }\r\n\r\n    _applyRelativeDimFuncs() {\r\n        if (this._optFlags & 1) {\r\n            const x = this._funcX(this._parent.w);\r\n            if (x !== this._x) {\r\n                this._localPx += (x - this._x);\r\n                this._x = x;\r\n            }\r\n        }\r\n        if (this._optFlags & 2) {\r\n            const y = this._funcY(this._parent.h);\r\n            if (y !== this._y) {\r\n                this._localPy += (y - this._y);\r\n                this._y = y;\r\n            }\r\n        }\r\n\r\n        let changedDims = false;\r\n        if (this._optFlags & 4) {\r\n            const w = this._funcW(this._parent.w);\r\n            if (w !== this._w) {\r\n                this._w = w;\r\n                changedDims = true;\r\n            }\r\n        }\r\n        if (this._optFlags & 8) {\r\n            const h = this._funcH(this._parent.h);\r\n            if (h !== this._h) {\r\n                this._h = h;\r\n                changedDims = true;\r\n            }\r\n        }\r\n\r\n        if (changedDims) {\r\n            // Recalc mount, scale position.\r\n            this._recalcLocalTranslate();\r\n\r\n            this.element.onDimensionsChanged(this._w, this._h);\r\n        }\r\n    }\r\n\r\n    updateOutOfBounds() {\r\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\r\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\r\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\r\n\r\n            // Inherit parent out of boundsness.\r\n            this._outOfBounds = 2;\r\n\r\n            if (this._withinBoundsMargin) {\r\n                this._withinBoundsMargin = false;\r\n                this.element._disableWithinBoundsMargin();\r\n            }\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateOutOfBounds();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateTreeOrder() {\r\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\r\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateTreeOrder();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderSimple() {\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                renderState.setShader(this.activeShader, this._shaderOwner);\r\n                renderState.setScissor(this._scissor);\r\n                this.renderState.addQuad(this);\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderAdvanced() {\r\n        const hasRenderUpdates = this._hasRenderUpdates;\r\n\r\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\r\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\r\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            let mustRenderChildren = true;\r\n            let renderTextureInfo;\r\n            let prevRenderTextureInfo;\r\n            if (this._useRenderToTexture) {\r\n                if (this._w === 0 || this._h === 0) {\r\n                    // Ignore this branch and don't draw anything.\r\n                    return;\r\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\r\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\r\n                    this.ctx.renderToTextureCount++;\r\n                    // Switch to default shader for building up the render texture.\r\n                    renderState.setShader(renderState.defaultShader, this);\r\n\r\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\r\n\r\n                    renderTextureInfo = {\r\n                        nativeTexture: null,\r\n                        offset: 0,  // Set by CoreRenderState.\r\n                        w: this._w,\r\n                        h: this._h,\r\n                        empty: true,\r\n                        cleared: false,\r\n                        ignore: false,\r\n                        cache: false\r\n                    };\r\n\r\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\r\n                        /**\r\n                         * We don't always cache render textures.\r\n                         *\r\n                         * The rule is, that caching for a specific render texture is only enabled if:\r\n                         * - There is a result texture to be updated.\r\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\r\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\r\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\r\n                         *   change while a lower one is not, that lower level will be cached instead.\r\n                         *\r\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\r\n                         * of GPU memory!\r\n                         *\r\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\r\n                         * noticable effect on performance as less render textures need to be allocated.\r\n                         */\r\n                        renderTextureInfo.cache = true;\r\n                        renderState.isCachingTexturizer = true;\r\n                    }\r\n\r\n                    if (!this._texturizer.hasResultTexture()) {\r\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\r\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\r\n                        //  render-to-texture layer.\r\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\r\n                        //  that result texture being filled.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    }\r\n\r\n                    renderState.setRenderTextureInfo(renderTextureInfo);\r\n                    renderState.setScissor(null);\r\n\r\n                    if (this._displayedTextureSource) {\r\n                        let r = this._renderContext;\r\n\r\n                        // Use an identity context for drawing the displayed texture to the render texture.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n\r\n                        // Add displayed texture source in local coordinates.\r\n                        this.renderState.addQuad(this);\r\n\r\n                        this._renderContext = r;\r\n                    }\r\n                } else {\r\n                    mustRenderChildren = false;\r\n                }\r\n            } else {\r\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                    renderState.setShader(this.activeShader, this._shaderOwner);\r\n                    renderState.setScissor(this._scissor);\r\n                    this.renderState.addQuad(this);\r\n                }\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (mustRenderChildren && this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                let updateResultTexture = false;\r\n                if (mustRenderChildren) {\r\n                    // Finished refreshing renderTexture.\r\n                    renderState.finishedRenderTexture();\r\n\r\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\r\n                    //  render-to-texture and filtering.\r\n                    this._texturizer.empty = renderTextureInfo.empty;\r\n\r\n                    if (renderTextureInfo.empty) {\r\n                        // We ignore empty render textures and do not draw the final quad.\r\n\r\n                        // The following cleans up memory and enforces that the result texture is also cleared.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    } else if (renderTextureInfo.nativeTexture) {\r\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\r\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\r\n\r\n                        renderTextureInfo.ignore = true;\r\n                    } else {\r\n                        if (this._texturizer.renderTextureReused) {\r\n                            // Quad operations must be written to a render texture actually owned.\r\n                            this._texturizer.releaseRenderTexture();\r\n                        }\r\n                        // Just create the render texture.\r\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\r\n                    }\r\n\r\n                    // Restore the parent's render texture.\r\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\r\n\r\n                    updateResultTexture = true;\r\n                }\r\n\r\n                if (!this._texturizer.empty) {\r\n                    let resultTexture = this._texturizer.getResultTexture();\r\n                    if (updateResultTexture) {\r\n                        if (resultTexture) {\r\n                            // Logging the update frame can be handy for userland.\r\n                            resultTexture.update = renderState.stage.frameCounter;\r\n                        }\r\n                        this._texturizer.updateResultTexture();\r\n                    }\r\n\r\n                    if (!this._texturizer.renderOffscreen) {\r\n                        // Render result texture to the actual render target.\r\n                        renderState.setShader(this.activeShader, this._shaderOwner);\r\n                        renderState.setScissor(this._scissor);\r\n\r\n                        // If no render texture info is set, the cache can be reused.\r\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\r\n\r\n                        renderState.setTexturizer(this._texturizer, cache);\r\n                        this._stashTexCoords();\r\n                        if (!this._texturizer.colorize) this._stashColors();\r\n                        this.renderState.addQuad(this, true);\r\n                        if (!this._texturizer.colorize) this._unstashColors();\r\n                        this._unstashTexCoords();\r\n                        renderState.setTexturizer(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (renderTextureInfo && renderTextureInfo.cache) {\r\n                // Allow siblings to cache.\r\n                renderState.isCachingTexturizer = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    get zSort() {\r\n        return this._zSort;\r\n    }\r\n\r\n    sortZIndexedChildren() {\r\n        /**\r\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\r\n         * - filtering out elements with a different zParent than this (were removed)\r\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\r\n         * - then, finally, we merge-sort both the new array and the 'old' one\r\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\r\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\r\n         */\r\n\r\n        const n = this._zIndexedChildren.length;\r\n        let ptr = 0;\r\n        const a = this._zIndexedChildren;\r\n\r\n        // Notice that items may occur multiple times due to z-index changing.\r\n        const b = [];\r\n        for (let i = 0; i < n; i++) {\r\n            if (a[i]._zParent === this) {\r\n                if (a[i]._zIndexResort) {\r\n                    b.push(a[i]);\r\n                } else {\r\n                    if (ptr !== i) {\r\n                        a[ptr] = a[i];\r\n                    }\r\n                    ptr++;\r\n                }\r\n            }\r\n        }\r\n\r\n        const m = b.length;\r\n        if (m) {\r\n            for (let j = 0; j < m; j++) {\r\n                b[j]._zIndexResort = false;\r\n            }\r\n\r\n            b.sort(ElementCore.sortZIndexedChildren);\r\n            const n = ptr;\r\n            if (!n) {\r\n                ptr = 0;\r\n                let j = 0;\r\n                do {\r\n                    a[ptr++] = b[j++];\r\n                } while (j < m);\r\n\r\n                if (a.length > ptr) {\r\n                    // Slice old (unnecessary) part off array.\r\n                    a.splice(ptr);\r\n                }\r\n            } else {\r\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\r\n+               // Beware that the function passed here to Array.sort must be stable\r\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\r\n                // Merge-sort arrays;\r\n                ptr = 0;\r\n                let i = 0;\r\n                let j = 0;\r\n                const mergeResult = [];\r\n                do {\r\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\r\n\r\n                    const add = v > 0 ? b[j++] : a[i++];\r\n\r\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                        mergeResult[ptr++] = add;\r\n                    }\r\n\r\n                    if (i >= n) {\r\n                        do {\r\n                            const add = b[j++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (j < m);\r\n                        break;\r\n                    } else if (j >= m) {\r\n                        do {\r\n                            const add = a[i++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (i < n);\r\n                        break;\r\n                    }\r\n                } while (true);\r\n\r\n                this._zIndexedChildren = mergeResult;\r\n            }\r\n        } else {\r\n            if (a.length > ptr) {\r\n                // Slice old (unnecessary) part off array.\r\n                a.splice(ptr);\r\n            }\r\n        }\r\n\r\n        this._zSort = false;\r\n    };\r\n\r\n    get localTa() {\r\n        return this._localTa;\r\n    };\r\n\r\n    get localTb() {\r\n        return this._localTb;\r\n    };\r\n\r\n    get localTc() {\r\n        return this._localTc;\r\n    };\r\n\r\n    get localTd() {\r\n        return this._localTd;\r\n    };\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get renderUpdates() {\r\n        return this._hasRenderUpdates;\r\n    }\r\n\r\n    get texturizer() {\r\n        if (!this._texturizer) {\r\n            this._texturizer = new ElementTexturizer(this);\r\n        }\r\n        return this._texturizer;\r\n    }\r\n\r\n    getCornerPoints() {\r\n        let w = this._worldContext;\r\n\r\n        return [\r\n            w.px,\r\n            w.py,\r\n            w.px + this._w * w.ta,\r\n            w.py + this._w * w.tc,\r\n            w.px + this._w * w.ta + this._h * w.tb,\r\n            w.py + this._w * w.tc + this._h * w.td,\r\n            w.px + this._h * w.tb,\r\n            w.py + this._h * w.td\r\n        ];\r\n    };\r\n\r\n    getRenderTextureCoords(relX, relY) {\r\n        let r = this._renderContext;\r\n        return [\r\n            r.px + r.ta * relX + r.tb * relY,\r\n            r.py + r.tc * relX + r.td * relY\r\n        ];\r\n    }\r\n\r\n    getAbsoluteCoords(relX, relY) {\r\n        let w = this._renderContext;\r\n        return [\r\n            w.px + w.ta * relX + w.tb * relY,\r\n            w.py + w.tc * relX + w.td * relY\r\n        ];\r\n    }\r\n\r\n    collectAtCoord(x, y, children) {\r\n        // return when branch is hidden\r\n        if (this._renderContext.alpha === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.inBound(x, y)) {\r\n            if (this._scissor) {\r\n                if (this.inScissor()) {\r\n                    children.push(this);\r\n                }\r\n            } else {\r\n                children.push(this);\r\n            }\r\n        }\r\n\r\n        if (this._children) {\r\n            const j = this._children.length;\r\n            for (let i = 0; i < j; i++) {\r\n                this._children[i].collectAtCoord(x, y, children);\r\n            }\r\n        }\r\n\r\n        return children.sort(ElementCore.sortZIndexedChildren);\r\n    }\r\n\r\n    inBound(tx, ty) {\r\n        const c = this.getCornerPoints();\r\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\r\n    }\r\n\r\n    inScissor() {\r\n        const sc = this._scissor;\r\n        const c = this.getCornerPoints();\r\n\r\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\r\n    }\r\n\r\n    get layout() {\r\n        this._ensureLayout();\r\n        return this._layout;\r\n    }\r\n\r\n    get flex() {\r\n        return this._layout ? this._layout.flex : null;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.layout.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this._layout ? this._layout.flexItem : null;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.layout.flexItem = v;\r\n    }\r\n\r\n    isFlexItem() {\r\n        return !!this._layout && this._layout.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexContainer() {\r\n        return !!this._layout && this._layout.isFlexEnabled();\r\n    }\r\n\r\n    enableFlexLayout() {\r\n        this._ensureLayout();\r\n    }\r\n\r\n    _ensureLayout() {\r\n        if (!this._layout) {\r\n            this._layout = new FlexTarget(this);\r\n        }\r\n    }\r\n\r\n    disableFlexLayout() {\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    hasFlexLayout() {\r\n        return (this._layout && this._layout.isEnabled());\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this._updateDimensions(w, h);\r\n    }\r\n\r\n    triggerLayout() {\r\n        this._setRecalc(256);\r\n    }\r\n\r\n    _triggerRecalcTranslate() {\r\n        this._setRecalc(2);\r\n    }\r\n\r\n}\r\n\r\nclass ElementCoreContext {\r\n\r\n    constructor() {\r\n        this.alpha = 1;\r\n\r\n        this.px = 0;\r\n        this.py = 0;\r\n\r\n        this.ta = 1;\r\n        this.tb = 0;\r\n        this.tc = 0;\r\n        this.td = 1;\r\n    }\r\n\r\n    isIdentity() {\r\n        return this.alpha === 1 &&\r\n            this.px === 0 &&\r\n            this.py === 0 &&\r\n            this.ta === 1 &&\r\n            this.tb === 0 &&\r\n            this.tc === 0 &&\r\n            this.td === 1;\r\n    }\r\n\r\n    isSquare() {\r\n        return this.tb === 0 && this.tc === 0;\r\n    }\r\n\r\n}\r\n\r\nElementCoreContext.IDENTITY = new ElementCoreContext();\r\nElementCore.sortZIndexedChildren = function (a, b) {\r\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\r\n};\r\n\r\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\r\nimport Utils from \"../Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * This is a partial (and more efficient) implementation of the event emitter.\r\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\r\n * Only if there are multiple listeners, they are combined in an array.\r\n */\r\nexport default class EventEmitter {\r\n\r\n    constructor() {\r\n        // This is set (and kept) to true when events are used at all.\r\n        this._hasEventListeners = false;\r\n    }\r\n\r\n    on(name, listener) {\r\n        if (!this._hasEventListeners) {\r\n            this._eventFunction = {}\r\n            this._eventListeners = {}\r\n            this._hasEventListeners = true;\r\n        }\r\n\r\n        const current = this._eventFunction[name];\r\n        if (!current) {\r\n            this._eventFunction[name] = listener;\r\n        } else {\r\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\r\n                this._eventListeners[name] = [this._eventFunction[name], listener];\r\n                this._eventFunction[name] = EventEmitter.combiner;\r\n            } else {\r\n                this._eventListeners[name].push(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    once(name, listener) {\r\n        const wrapper = (arg1, arg2, arg3) => {\r\n            listener(arg1, arg2, arg3);\r\n            this.off(name, wrapper);\r\n        }\r\n        wrapper.__originalFunc = listener;\r\n        this.on(name, wrapper);\r\n    }\r\n\r\n    has(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    for (const l of listeners) {\r\n                        if (l === listener || l.__originalFunc == listener) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    off(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    let index = listeners.indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    if (listeners.length === 1) {\r\n                        this._eventFunction[name] = listeners[0];\r\n                        this._eventListeners[name] = undefined;\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    this._eventFunction[name] = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListener(name, listener) {\r\n        this.off(name, listener);\r\n    }\r\n\r\n    emit(name, arg1, arg2, arg3) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    func(this, name, arg1, arg2, arg3);\r\n                } else {\r\n                    func(arg1, arg2, arg3);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    listenerCount(name) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    return this._eventListeners[name].length;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    removeAllListeners(name) {\r\n        if (this._hasEventListeners) {\r\n            delete this._eventFunction[name];\r\n            delete this._eventListeners[name];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\r\n    const listeners = object._eventListeners[name];\r\n    if (listeners) {\r\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\r\n           we need to create a copy to loop over it */\r\n        for (const listener of [...listeners]) {\r\n            listener(arg1, arg2, arg3);\r\n        }\r\n    }\r\n}\r\n\r\nEventEmitter.addAsMixin = function(cls) {\r\n    cls.prototype.on = EventEmitter.prototype.on;\r\n    cls.prototype.once = EventEmitter.prototype.once;\r\n    cls.prototype.has = EventEmitter.prototype.has;\r\n    cls.prototype.off = EventEmitter.prototype.off;\r\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\r\n    cls.prototype.emit = EventEmitter.prototype.emit;\r\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\r\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nexport default class Shader {\r\n\r\n    constructor(coreContext) {\r\n        this._initialized = false;\r\n\r\n        this.ctx = coreContext;\r\n\r\n        /**\r\n         * The (enabled) elements that use this shader.\r\n         * @type {Set<ElementCore>}\r\n         */\r\n        this._elements = new Set();\r\n    }\r\n\r\n    static create(stage, v) {\r\n        let shader;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                shader = stage.renderer.createShader(stage.ctx, v);\r\n            } else {\r\n                shader = this.shader;\r\n            }\r\n\r\n            if (shader) {\r\n                Base.patchObject(shader, v);\r\n            }\r\n        } else if (v === null) {\r\n            shader = stage.ctx.renderState.defaultShader;\r\n        } else if (v === undefined) {\r\n            shader = null;\r\n        } else {\r\n            if (v.isShader) {\r\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\r\n                    console.error(\"[Lightning] Invalid shader type\");\r\n                    v = null;\r\n                }\r\n                shader = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a shader type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return undefined;\r\n    }\r\n\r\n    static getC2d() {\r\n        return undefined;\r\n    }\r\n\r\n    addElement(elementCore) {\r\n        this._elements.add(elementCore);\r\n    }\r\n\r\n    removeElement(elementCore) {\r\n        this._elements.delete(elementCore);\r\n        if (!this._elements) {\r\n            this.cleanup();\r\n        }\r\n    }\r\n\r\n    redraw() {\r\n        this._elements.forEach(elementCore => {\r\n            elementCore.setHasRenderUpdates(2);\r\n        });\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    useDefault() {\r\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\r\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\r\n        return false;\r\n    }\r\n\r\n    addEmpty() {\r\n        // Draws this shader even if there are no quads to be added.\r\n        // This is handy for custom shaders.\r\n        return false;\r\n    }\r\n\r\n    cleanup() {\r\n        // Called when no more enabled elements have this shader.\r\n    }\r\n\r\n    get isShader() {\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Texture {\r\n\r\n    /**\r\n     * @param {Stage} stage\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.manager = this.stage.textureManager;\r\n\r\n        this.id = Texture.id++;\r\n\r\n        /**\r\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\r\n         * @type {Set<Element>}\r\n         */\r\n        this.elements = new Set();\r\n\r\n        /**\r\n         * The number of enabled elements that are active.\r\n         * @type {number}\r\n         */\r\n        this._activeCount = 0;\r\n\r\n        /**\r\n         * The associated texture source.\r\n         * Should not be changed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._source = null;\r\n\r\n        /**\r\n         * A resize mode can be set to cover or contain a certain area.\r\n         * It will reset the texture clipping settings.\r\n         * When manual texture clipping is performed, the resizeMode is reset.\r\n         * @type {{type: string, width: number, height: number}}\r\n         * @private\r\n         */\r\n        this._resizeMode = null;\r\n\r\n        /**\r\n         * The texture clipping x-offset.\r\n         * @type {number}\r\n         */\r\n        this._x = 0;\r\n\r\n        /**\r\n         * The texture clipping y-offset.\r\n         * @type {number}\r\n         */\r\n        this._y = 0;\r\n\r\n        /**\r\n         * The texture clipping width. If 0 then full width.\r\n         * @type {number}\r\n         */\r\n        this._w = 0;\r\n\r\n        /**\r\n         * The texture clipping height. If 0 then full height.\r\n         * @type {number}\r\n         */\r\n        this._h = 0;\r\n\r\n        /**\r\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._precision = 1;\r\n\r\n        /**\r\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mw = 0;\r\n\r\n        /**\r\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mh = 0;\r\n\r\n        /**\r\n         * Indicates if Texture.prototype.texture uses clipping.\r\n         * @type {boolean}\r\n         */\r\n        this.clipping = false;\r\n\r\n        /**\r\n         * Indicates whether this texture must update (when it becomes used again).\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._mustUpdate = true;\r\n\r\n    }\r\n\r\n    get source() {\r\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\r\n            this._performUpdateSource(true);\r\n            this.stage.removeUpdateSourceTexture(this);\r\n        }\r\n        return this._source;\r\n    }\r\n\r\n    addElement(v) {\r\n        if (!this.elements.has(v)) {\r\n            this.elements.add(v);\r\n\r\n            if (this.elements.size === 1) {\r\n                if (this._source) {\r\n                    this._source.addTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.incActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeElement(v) {\r\n        if (this.elements.delete(v)) {\r\n            if (this.elements.size === 0) {\r\n                if (this._source) {\r\n                    this._source.removeTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.decActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    incActiveCount() {\r\n        // Ensure that texture source's activeCount has transferred ownership.\r\n        const source = this.source;\r\n\r\n        if (source) {\r\n            this._checkForNewerReusableTextureSource();\r\n        }\r\n\r\n        this._activeCount++;\r\n        if (this._activeCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveCount() {\r\n        const source = this.source; // Force updating the source.\r\n        this._activeCount--;\r\n        if (!this._activeCount) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    becomesUsed() {\r\n        if (this.source) {\r\n            this.source.incActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        if (this._resizeMode) {\r\n            this._applyResizeMode();\r\n        }\r\n\r\n        this.elements.forEach(element => {\r\n            if (element.active) {\r\n                element.onTextureSourceLoaded();\r\n            }\r\n        });\r\n    }\r\n\r\n    _checkForNewerReusableTextureSource() {\r\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\r\n        // In the meantime another texture may have been generated loaded with the same lookup id.\r\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\r\n        const source = this.source;\r\n        if (!source.isLoaded()) {\r\n            const reusable = this._getReusableTextureSource();\r\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\r\n                this._replaceTextureSource(reusable);\r\n            }\r\n        } else {\r\n            if (this._resizeMode) {\r\n                this._applyResizeMode();\r\n            }\r\n        }\r\n    }\r\n\r\n    becomesUnused() {\r\n        if (this.source) {\r\n            this.source.decActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeCount > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\r\n     * @returns {string|null}\r\n     */\r\n    _getLookupId() {\r\n        // Default: do not reuse texture.\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\r\n     * It should return a function that receives a single callback argument.\r\n     * That callback should be called with the following arguments:\r\n     *   - err\r\n     *   - options: object\r\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\r\n     *     - w: Number\r\n     *     - h: Number\r\n     *     - permanent: Boolean\r\n     *     - hasAlpha: boolean\r\n     *     - permultiplyAlpha: boolean\r\n     *     - flipBlueRed: boolean\r\n     *     - renderInfo: object\r\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\r\n     * to stop fetching an image when it is no longer in element, for example.\r\n     */\r\n    _getSourceLoader() {\r\n        throw new Error(\"Texture.generate must be implemented.\");\r\n    }\r\n\r\n    get isValid() {\r\n        return this._getIsValid();\r\n    }\r\n\r\n    /**\r\n     * If texture is not 'valid', no source can be created for it.\r\n     * @returns {boolean}\r\n     */\r\n    _getIsValid() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This must be called when the texture source must be re-generated.\r\n     */\r\n    _changed() {\r\n        // If no element is actively using this texture, ignore it altogether.\r\n        if (this.isUsed()) {\r\n            this._updateSource();\r\n        } else {\r\n            this._mustUpdate = true;\r\n        }\r\n    }\r\n\r\n    _updateSource() {\r\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\r\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\r\n        // properties.\r\n        this.stage.addUpdateSourceTexture(this);\r\n    }\r\n\r\n    _performUpdateSource(force = false) {\r\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\r\n        // again.\r\n        if (force || this.isUsed()) {\r\n            this._mustUpdate = false;\r\n            let source = this._getTextureSource();\r\n            this._replaceTextureSource(source);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        let source = null;\r\n        if (this._getIsValid()) {\r\n            const lookupId = this._getLookupId();\r\n            source = this._getReusableTextureSource(lookupId);\r\n            if (!source) {\r\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n\r\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\r\n        if (this._getIsValid()) {\r\n            if (lookupId) {\r\n                return this.manager.getReusableTextureSource(lookupId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _replaceTextureSource(newSource = null) {\r\n        let oldSource = this._source;\r\n\r\n        this._source = newSource;\r\n\r\n        if (this.elements.size) {\r\n            if (oldSource) {\r\n                if (this._activeCount) {\r\n                    oldSource.decActiveTextureCount();\r\n                }\r\n\r\n                oldSource.removeTexture(this);\r\n\r\n                // free up unused TextTextures immediately as they are not reused anyway\r\n                if(this['text'] && !oldSource.isUsed()) {\r\n                    this.manager.freeTextureSource(oldSource);\r\n                }\r\n            }\r\n\r\n            if (newSource) {\r\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\r\n                newSource.addTexture(this);\r\n                if (this._activeCount) {\r\n                    newSource.incActiveTextureCount();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isUsed()) {\r\n            if (newSource) {\r\n                if (newSource.isLoaded()) {\r\n\r\n                    // Apply resizeMode\r\n                    if (this._resizeMode) {\r\n                        this._applyResizeMode();\r\n                    }\r\n\r\n                    this.elements.forEach(element => {\r\n                        if (element.active) {\r\n                            element._setDisplayedTexture(this);\r\n                        }\r\n                    });\r\n                } else {\r\n                    const loadError = newSource.loadError;\r\n                    if (loadError) {\r\n                        this.elements.forEach(element => {\r\n                            if (element.active) {\r\n                                element.onTextureSourceLoadError(loadError);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this.elements.forEach(element => {\r\n                    if (element.active) {\r\n                        element._setDisplayedTexture(null);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    load() {\r\n        // Make sure that source is up to date.\r\n        if (this.source) {\r\n            if (!this.isLoaded()) {\r\n                this.source.load(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._source && this._source.isLoaded();\r\n    }\r\n\r\n    get loadError() {\r\n        return this._source && this._source.loadError;\r\n    }\r\n\r\n    free() {\r\n        if (this._source) {\r\n            this._source.free();\r\n        }\r\n    }\r\n\r\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\r\n        this._resizeMode = {type, w, h, clipX, clipY};\r\n        if (this.isLoaded()) {\r\n            this._applyResizeMode();\r\n        }\r\n    }\r\n\r\n    get resizeMode() {\r\n        return this._resizeMode;\r\n    }\r\n\r\n    _clearResizeMode() {\r\n        this._resizeMode = null;\r\n    }\r\n\r\n    _applyResizeMode() {\r\n        if (this._resizeMode.type === \"cover\") {\r\n            this._applyResizeCover();\r\n        } else if (this._resizeMode.type === \"contain\") {\r\n            this._applyResizeContain();\r\n        }\r\n        this._updatePrecision();\r\n        this._updateClipping();\r\n    }\r\n\r\n    _applyResizeCover() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = Math.max(scaleX, scaleY);\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n        if (scaleX && scaleX < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.w;\r\n            const choppedOffPixels = this._source.w - desiredSize;\r\n            this._x = choppedOffPixels * this._resizeMode.clipX;\r\n            this._w = this._source.w - choppedOffPixels;\r\n        }\r\n        if (scaleY && scaleY < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.h;\r\n            const choppedOffPixels = this._source.h - desiredSize;\r\n            this._y = choppedOffPixels * this._resizeMode.clipY;\r\n            this._h = this._source.h - choppedOffPixels;\r\n        }\r\n    }\r\n\r\n    _applyResizeContain() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = scaleX;\r\n        if (!scale || scaleY < scale) {\r\n            scale = scaleY;\r\n        }\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n    }\r\n\r\n    enableClipping(x, y, w, h) {\r\n        this._clearResizeMode();\r\n\r\n        x *= this._precision;\r\n        y *= this._precision;\r\n        w *= this._precision;\r\n        h *= this._precision;\r\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\r\n            this._x = x;\r\n            this._y = y;\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._updateClipping(true);\r\n        }\r\n    }\r\n\r\n    disableClipping() {\r\n        this._clearResizeMode();\r\n\r\n        if (this._x || this._y || this._w || this._h) {\r\n            this._x = 0;\r\n            this._y = 0;\r\n            this._w = 0;\r\n            this._h = 0;\r\n\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    _updateClipping() {\r\n        this.clipping = !!(this._x || this._y || this._w || this._h);\r\n\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onDisplayedTextureClippingChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    _updatePrecision() {\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onPrecisionChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let nonDefaults = {};\r\n        nonDefaults['type'] = this.constructor.name;\r\n        if (this.x !== 0) nonDefaults['x'] = this.x;\r\n        if (this.y !== 0) nonDefaults['y'] = this.y;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\r\n        return nonDefaults;\r\n    }\r\n\r\n    get px() {\r\n        return this._x;\r\n    }\r\n\r\n    get py() {\r\n        return this._y;\r\n    }\r\n\r\n    get pw() {\r\n        return this._w;\r\n    }\r\n\r\n    get ph() {\r\n        return this._h;\r\n    }\r\n\r\n    get x() {\r\n        return this._x / this._precision;\r\n    }\r\n    set x(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._x !== v) {\r\n            this._x = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y / this._precision;\r\n    }\r\n    set y(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._y !== v) {\r\n            this._y = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w / this._precision;\r\n    }\r\n\r\n    set w(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h / this._precision;\r\n    }\r\n\r\n    set h(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get precision() {\r\n        return this._precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        this._clearResizeMode();\r\n        if (this._precision !== v) {\r\n            this._precision = v;\r\n            this._updatePrecision();\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return true;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\r\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nTexture.prototype.isTexture = true;\r\n\r\nTexture.id = 0;\r\n\r\nimport Base from \"./Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class ImageTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._src = undefined;\r\n        this._hasAlpha = false;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set src(v) {\r\n        if (this._src !== v) {\r\n            this._src = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    set hasAlpha(v) {\r\n        if (this._hasAlpha !== v) {\r\n            this._hasAlpha = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._src;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._src;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        let src = this._src;\r\n        let hasAlpha = this._hasAlpha;\r\n        if (this.stage.getOption('srcBasePath')) {\r\n            var fc = src.charCodeAt(0);\r\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\r\n                // Alphabetical or dot: prepend base path.\r\n                src = this.stage.getOption('srcBasePath') + src;\r\n            }\r\n        }\r\n\r\n        return (cb) => {\r\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\r\n        }\r\n    }\r\n\r\n    getNonDefaults() {\r\n        const obj = super.getNonDefaults();\r\n        if (this._src) {\r\n            obj.src = this._src;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Returns CSS font setting string for use in canvas context.\r\n *\r\n * @param fontFace\r\n * @param fontStyle\r\n * @param fontSize\r\n * @param precision\r\n * @param defaultFontFace\r\n * @returns\r\n */\r\nexport function getFontSetting(\r\n    fontFace: string | string[],\r\n    fontStyle: string,\r\n    fontSize: number,\r\n    precision: number,\r\n    defaultFontFace: string\r\n): string {\r\n    let ff = fontFace;\r\n\r\n    if (!Array.isArray(ff)) {\r\n        ff = [ff];\r\n    }\r\n\r\n    let ffs = [];\r\n    for (let i = 0, n = ff.length; i < n; i++) {\r\n        let curFf = ff[i];\r\n        // Replace the default font face `null` with the actual default font face set\r\n        // on the stage.\r\n        if (curFf === null) {\r\n            curFf = defaultFontFace;\r\n        }\r\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\r\n            ffs.push(curFf);\r\n        } else {\r\n            ffs.push(`\"${curFf}\"`);\r\n        }\r\n    }\r\n\r\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space.\r\n *\r\n * @param space\r\n */\r\nexport function isZeroWidthSpace(space: string): boolean {\r\n    return space === '' || space === '\\u200B';\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space or a regular space.\r\n *\r\n * @param space\r\n */\r\nexport function isSpace(space: string): boolean {\r\n    return isZeroWidthSpace(space) || space === ' ';\r\n}\r\n\r\n/**\r\n * Converts a string into an array of tokens and the words between them.\r\n *\r\n * @param tokenRegex\r\n * @param text\r\n */\r\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\r\n    const delimeters = text.match(tokenRegex) || [];\r\n    const words = text.split(tokenRegex) || [];\r\n\r\n    let final: string[] = [];\r\n    for (let i = 0; i < words.length; i++) {\r\n        final.push(words[i]!, delimeters[i]!)\r\n    }\r\n    final.pop()\r\n    return final.filter((word) => word != '');\r\n}\r\n\r\n/**\r\n * Measure the width of a string accounting for letter spacing.\r\n *\r\n * @param context\r\n * @param word\r\n * @param space\r\n */\r\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\r\n    if (!space) {\r\n        return context.measureText(word).width;\r\n    }\r\n    return word.split('').reduce((acc, char) => {\r\n        // Zero-width spaces should not include letter spacing.\r\n        // And since we know the width of a zero-width space is 0, we can skip\r\n        // measuring it.\r\n        if (isZeroWidthSpace(char)) {\r\n            return acc;\r\n        }\r\n        return acc + context.measureText(char).width + space;\r\n    }, 0);\r\n}\r\n\r\nexport interface WrapTextResult {\r\n    l: string[];\r\n    n: number[];\r\n}\r\n\r\n/**\r\n * Applies newlines to a string to have it optimally fit into the horizontal\r\n * bounds set by the Text object's wordWrapWidth property.\r\n *\r\n * @param context\r\n * @param text\r\n * @param wordWrapWidth\r\n * @param letterSpacing\r\n * @param indent\r\n */\r\nexport function wrapText(\r\n    context: CanvasRenderingContext2D,\r\n    text: string,\r\n    wordWrapWidth: number,\r\n    letterSpacing: number,\r\n    indent: number\r\n): WrapTextResult {\r\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\r\n    // than its horizontal bounds.\r\n    const spaceRegex = / |\\u200B/g;\r\n    let lines = text.split(/\\r?\\n/g);\r\n    let allLines: string[] = [];\r\n    let realNewlines: number[] = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        let resultLines: string[] = [];\r\n        let result = '';\r\n        let spaceLeft = wordWrapWidth - indent;\r\n        let words = lines[i]!.split(spaceRegex);\r\n        let spaces = lines[i]!.match(spaceRegex) || [];\r\n        for (let j = 0; j < words.length; j++) {\r\n            const space = spaces[j - 1] || '';\r\n            const word = words[j]!;\r\n            const wordWidth = measureText(context, word, letterSpacing);\r\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\r\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\r\n                // Skip printing the newline if it's the first word of the line that is.\r\n                // greater than the word wrap width.\r\n                if (j > 0) {\r\n                    resultLines.push(result);\r\n                    result = '';\r\n                }\r\n                result += word;\r\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\r\n            }\r\n            else {\r\n                spaceLeft -= wordWidthWithSpace;\r\n                result += space + word;\r\n            }\r\n        }\r\n\r\n        resultLines.push(result);\r\n        result = '';\r\n\r\n        allLines = allLines.concat(resultLines);\r\n\r\n        if (i < lines.length - 1) {\r\n            realNewlines.push(allLines.length);\r\n        }\r\n    }\r\n\r\n    return {l: allLines, n: realNewlines};\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRenderer {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        this._context.font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('[Lightning] Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('[Lightning] Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        let lineHeight = this._settings.lineHeight * precision;\r\n        const w = this._settings.w * precision;\r\n        const h = this._settings.h * precision;\r\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\r\n        const textIndent = this._settings.textIndent * precision;\r\n\r\n        // Set font properties.\r\n        this.setFontProperties();\r\n\r\n        // Total width.\r\n        let width = w || this._stage.getOption('w');\r\n\r\n        // Inner width.\r\n        let innerWidth = width - (paddingLeft);\r\n        if (innerWidth < 10) {\r\n            width += (10 - innerWidth);\r\n            innerWidth = 10;\r\n        }\r\n\r\n        if (!wordWrapWidth) {\r\n            wordWrapWidth = innerWidth;\r\n        }\r\n\r\n        // Text overflow\r\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\r\n        }\r\n\r\n        // word wrap\r\n        // preserve original text\r\n        let linesInfo;\r\n        if (this._settings.wordWrap) {\r\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\r\n        } else {\r\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\r\n            let i, n = linesInfo.l.length;\r\n            for (let i = 0; i < n - 1; i++) {\r\n                linesInfo.n.push(i);\r\n            }\r\n        }\r\n        let lines = linesInfo.l;\r\n\r\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\r\n            let usedLines = lines.slice(0, this._settings.maxLines);\r\n\r\n            let otherLines = null;\r\n            if (this._settings.maxLinesSuffix) {\r\n                // Wrap again with max lines suffix enabled.\r\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\r\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\r\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\r\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\r\n            } else {\r\n                otherLines = [''];\r\n            }\r\n\r\n            // Re-assemble the remaining text.\r\n            let i, n = lines.length;\r\n            let j = 0;\r\n            let m = linesInfo.n.length;\r\n            for (i = this._settings.maxLines; i < n; i++) {\r\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\r\n                if (i + 1 < m && linesInfo.n[i + 1]) {\r\n                    j++;\r\n                }\r\n            }\r\n\r\n            renderInfo.remainingText = otherLines.join(\"\\n\");\r\n\r\n            renderInfo.moreTextLines = true;\r\n\r\n            lines = usedLines;\r\n        } else {\r\n            renderInfo.moreTextLines = false;\r\n            renderInfo.remainingText = \"\";\r\n        }\r\n\r\n        // calculate text width\r\n        let maxLineWidth = 0;\r\n        let lineWidths = [];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\r\n        }\r\n\r\n        renderInfo.lineWidths = lineWidths;\r\n\r\n        if (!w) {\r\n            // Auto-set width to max text length.\r\n            width = maxLineWidth + paddingLeft + paddingRight;\r\n            innerWidth = maxLineWidth;\r\n        }\r\n\r\n        // calculate text height\r\n        lineHeight = lineHeight || fontSize;\r\n\r\n        let height;\r\n        if (h) {\r\n            height = h;\r\n        } else {\r\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\r\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\r\n        }\r\n\r\n        if (offsetY === null) {\r\n            offsetY = fontSize;\r\n        }\r\n\r\n        renderInfo.w = width;\r\n        renderInfo.h = height;\r\n        renderInfo.lines = lines;\r\n        renderInfo.precision = precision;\r\n\r\n        if (!width) {\r\n            // To prevent canvas errors.\r\n            width = 1;\r\n        }\r\n\r\n        if (!height) {\r\n            // To prevent canvas errors.\r\n            height = 1;\r\n        }\r\n\r\n        if (cutSx || cutEx) {\r\n            width = Math.min(width, cutEx - cutSx);\r\n        }\r\n\r\n        if (cutSy || cutEy) {\r\n            height = Math.min(height, cutEy - cutSy);\r\n        }\r\n\r\n        renderInfo.width = width;\r\n        renderInfo.innerWidth = innerWidth;\r\n        renderInfo.height = height;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.lineWidths = lineWidths;\r\n        renderInfo.offsetY = offsetY;\r\n        renderInfo.paddingLeft = paddingLeft;\r\n        renderInfo.paddingRight = paddingRight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textIndent = textIndent;\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n\r\n        // Add extra margin to prevent issue with clipped text when scaling.\r\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(renderInfo.height);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n        if (window.isRTL) {\r\n            this._context.direction = 'rtl';\r\n            this._context.textAlign = 'left';\r\n        }\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        let linePositionX;\r\n        let linePositionY;\r\n\r\n        let drawLines = [];\r\n\r\n        // Draw lines line by line.\r\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\r\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\r\n\r\n            // By default, text is aligned to top\r\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\r\n\r\n            if (this._settings.verticalAlign == 'middle') {\r\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\r\n            } else if (this._settings.verticalAlign == 'bottom') {\r\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\r\n            }\r\n\r\n            if (this._settings.textAlign === 'right') {\r\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\r\n            } else if (this._settings.textAlign === 'center') {\r\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\r\n            }\r\n            linePositionX += renderInfo.paddingLeft;\r\n\r\n            drawLines.push({ text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i] });\r\n        }\r\n\r\n        // Highlight.\r\n        if (this._settings.highlight) {\r\n            let color = this._settings.highlightColor || 0x00000000;\r\n\r\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\r\n            const offset = this._settings.highlightOffset * precision;\r\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(color);\r\n            for (let i = 0; i < drawLines.length; i++) {\r\n                let drawLine = drawLines[i];\r\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n\r\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor[0], this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur[0]];\r\n\r\n            for (let i in this._settings.shadowColor) {\r\n                this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor[i]);\r\n                this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n                this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n                this._context.shadowBlur = this._settings.shadowBlur[i] * precision;\r\n                this.renderText(drawLines, renderInfo);\r\n            }\r\n        } else {\r\n            this.renderText(drawLines, renderInfo);\r\n        }\r\n\r\n\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        this.renderInfo = renderInfo;\r\n    };\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -= 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\r\n    }\r\n\r\n    /**\r\n     * See {@link wrapText}\r\n     *\r\n     * @param {string} text\r\n     * @param {number} wordWrapWidth\r\n     * @param {number} letterSpacing\r\n     * @param {number} indent\r\n     * @returns\r\n     */\r\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\r\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    renderText(drawLines, renderInfo) {\r\n        for (let i = 0, n = drawLines.length; i < n; i++) {\r\n            let drawLine = drawLines[i];\r\n\r\n            if (renderInfo.letterSpacing === 0) {\r\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y + 5);\r\n            } else {\r\n                const textSplit = drawLine.text.split('');\r\n                let x = drawLine.x;\r\n                for (let i = 0, j = textSplit.length; i < j; i++) {\r\n                    this._context.fillText(textSplit[i], x, drawLine.y);\r\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRendererAdvanced {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        const font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.font = font;\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n        return font;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch(e) {\r\n                console.warn(\"Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\r\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\r\n        // const h = this._settings.h * precision;\r\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = this._settings.letterSpacing || 0;\r\n\r\n        // Set font properties.\r\n        renderInfo.baseFont = this.setFontProperties();\r\n\r\n        renderInfo.w = w;\r\n        renderInfo.width = w;\r\n        renderInfo.text = this._settings.text;\r\n        renderInfo.precision = precision;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textAlign = this._settings.textAlign;\r\n        renderInfo.textColor = this._settings.textColor;\r\n        renderInfo.verticalAlign = this._settings.verticalAlign;\r\n        renderInfo.highlight = this._settings.highlight;\r\n        renderInfo.highlightColor = this._settings.highlightColor;\r\n        renderInfo.highlightHeight = this._settings.highlightHeight;\r\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\r\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\r\n        renderInfo.highlightOffset = this._settings.highlightOffset;\r\n        renderInfo.paddingLeft = this._settings.paddingLeft;\r\n        renderInfo.paddingRight = this._settings.paddingRight;\r\n        renderInfo.maxLines = this._settings.maxLines;\r\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\r\n        renderInfo.textOverflow = this._settings.textOverflow;\r\n        renderInfo.wordWrap = this._settings.wordWrap;\r\n        renderInfo.wordWrapWidth = wordWrapWidth;\r\n        renderInfo.shadow = this._settings.shadow;\r\n        renderInfo.shadowColor = this._settings.shadowColor;\r\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\r\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\r\n        renderInfo.shadowBlur = this._settings.shadowBlur;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.textIndent = this._settings.textIndent * precision;\r\n        renderInfo.wordBreak = this._settings.wordBreak;\r\n\r\n        let text = renderInfo.text;\r\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\r\n\r\n        // Text overflow\r\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\r\n        }\r\n\r\n        text = this.tokenize(text);\r\n        text = this.parse(text);\r\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\r\n\r\n        if (renderInfo.textIndent) {\r\n            text = this.indent(text, renderInfo.textIndent);\r\n        }\r\n\r\n        if (renderInfo.wordBreak) {\r\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\r\n            this.resetFontStyle()\r\n        }\r\n\r\n        // Calculate detailed drawing information\r\n        let x = paddingLeft;\r\n        let lineNo = 0;\r\n\r\n        for (const t of text) {\r\n            // Wrap text\r\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\r\n                x = paddingLeft;\r\n                lineNo += 1;\r\n            }\r\n            t.lineNo = lineNo;\r\n\r\n            if (t.text == '\\n') {\r\n                continue;\r\n            }\r\n\r\n            t.x = x;\r\n            x += t.width;\r\n        }\r\n        renderInfo.lineNum = lineNo + 1;\r\n\r\n        if (this._settings.h) {\r\n            renderInfo.h = this._settings.h;\r\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\r\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\r\n        } else {\r\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\r\n        }\r\n\r\n        // This calculates the baseline offset in pixels from the font size.\r\n        // To retrieve this ratio, you would do this calculation:\r\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\r\n        //\r\n        // This give you the ratio for the baseline, which is then used to figure out\r\n        // where the baseline is relative to the bottom of the text bounding box.\r\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\r\n\r\n        // Vertical align\r\n        let vaOffset = 0;\r\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\r\n            vaOffset = -baselineOffsetInPx;\r\n        } else if (renderInfo.verticalAlign == 'middle') {\r\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\r\n        } else if (this._settings.verticalAlign == 'bottom') {\r\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\r\n        }\r\n\r\n        // Calculate lines information\r\n        renderInfo.lines = []\r\n        for (let i = 0; i < renderInfo.lineNum; i++) {\r\n            renderInfo.lines[i] = {\r\n                width: 0,\r\n                x: 0,\r\n                y: renderInfo.lineHeight * i + vaOffset,\r\n                text: [],\r\n            }\r\n        }\r\n\r\n        for (let t of text) {\r\n            renderInfo.lines[t.lineNo].text.push(t);\r\n        }\r\n\r\n        // Filter out white spaces at beginning and end of each line\r\n        for (const l of renderInfo.lines) {\r\n            if (l.text.length == 0) {\r\n                continue;\r\n            }\r\n\r\n            const firstWord = l.text[0].text;\r\n            const lastWord = l.text[l.text.length - 1].text;\r\n\r\n            if (firstWord == '\\n') {\r\n                l.text.shift();\r\n            }\r\n            if (isSpace(lastWord) || lastWord == '\\n') {\r\n                l.text.pop();\r\n            }\r\n        }\r\n\r\n\r\n        // Calculate line width\r\n        for (let l of renderInfo.lines) {\r\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\r\n        }\r\n\r\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\r\n        renderInfo.w = renderInfo.width;\r\n\r\n        // Apply maxLinesSuffix\r\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\r\n            const index = renderInfo.maxLines - 1;\r\n            let lastLineText = text.filter((t) => t.lineNo == index)\r\n            let suffix = renderInfo.maxLinesSuffix;\r\n            suffix = this.tokenize(suffix);\r\n            suffix = this.parse(suffix);\r\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\r\n            for (const s of suffix) {\r\n                s.lineNo = index;\r\n                s.x = 0;\r\n                lastLineText.push(s)\r\n            }\r\n\r\n            const spl = suffix.length + 1\r\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\r\n                lastLineText.splice(lastLineText.length - spl, 1);\r\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n                if (lastLineText.length < spl) {\r\n                    break;\r\n                }\r\n            }\r\n            this.alignLine(lastLineText, lastLineText[0].x)\r\n\r\n            renderInfo.lines[index].text = lastLineText;\r\n            renderInfo.lines[index].width = _w;\r\n        }\r\n\r\n        // Horizontal alignment offset\r\n        if (renderInfo.textAlign == 'center') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\r\n            }\r\n        } else if (renderInfo.textAlign == 'right') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = renderInfo.width - l.width - paddingLeft;\r\n            }\r\n        }\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n        const paddingLeft = renderInfo.paddingLeft * precision;\r\n\r\n        // Set canvas dimensions\r\n        let canvasWidth = renderInfo.w || renderInfo.width;\r\n        if (renderInfo.cutSx || renderInfo.cutEx) {\r\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\r\n        }\r\n\r\n        let canvasHeight = renderInfo.h;\r\n        if (renderInfo.cutSy || renderInfo.cutEy) {\r\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\r\n        }\r\n\r\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(canvasHeight);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        // Cut\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        // Highlight\r\n        if (renderInfo.highlight) {\r\n            const hlColor = renderInfo.highlightColor || 0x00000000;\r\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\r\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\r\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\r\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\r\n            for (let i = 0; i < lineNum; i++) {\r\n                const l = renderInfo.lines[i];\r\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\r\n\r\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\r\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\r\n        }\r\n\r\n        // Draw text\r\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\r\n        let currentColor = defaultColor;\r\n        this._context.fillStyle = defaultColor;\r\n        for (const line of renderInfo.lines) {\r\n            for (const t of line.text) {\r\n                let lx = 0;\r\n\r\n                if (t.text == '\\n') {\r\n                    continue;\r\n                }\r\n\r\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\r\n                    continue;\r\n                }\r\n\r\n                if (t.color != currentColor) {\r\n                    currentColor = t.color;\r\n                    this._context.fillStyle = currentColor;\r\n                }\r\n\r\n                this._context.font = t.fontStyle;\r\n\r\n                // Draw with letter spacing\r\n                if (t.letters) {\r\n                    for (let l of t.letters) {\r\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\r\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                        lx += l.width;\r\n                    }\r\n                // Standard drawing\r\n                } else {\r\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\r\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Reset text shadow\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        // Reset cut translation\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        // Postprocess renderInfo.lines to be compatible with standard version\r\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\r\n        if (renderInfo.maxLines) {\r\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\r\n        }\r\n\r\n\r\n        this.renderInfo = renderInfo;\r\n\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    tokenize(text) {\r\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\r\n    }\r\n\r\n    parse(tokens) {\r\n        let italic = 0;\r\n        let bold = 0;\r\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\r\n        let color = 0;\r\n\r\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\r\n\r\n        return tokens.map((t) => {\r\n            if (t == '<i>') {\r\n                italic += 1;\r\n                t = '';\r\n            } else if (t == '</i>' && italic > 0) {\r\n                italic -= 1;\r\n                t = '';\r\n            } else if (t == '<b>') {\r\n                bold += 1;\r\n                t = '';\r\n            } else if (t == '</b>' && bold > 0) {\r\n                bold -= 1;\r\n                t = '';\r\n            } else if (t == '</color>') {\r\n                if (colorStack.length > 1) {\r\n                    color -= 1;\r\n                    colorStack.pop();\r\n                }\r\n                t = '';\r\n            } else if (colorRegexp.test(t)) {\r\n                const matched = colorRegexp.exec(t);\r\n                colorStack.push(\r\n                    StageUtils.getRgbaString(parseInt(matched[1]))\r\n                );\r\n                color += 1;\r\n                t = '';\r\n\r\n            }\r\n\r\n            return {\r\n                text: t,\r\n                italic: italic,\r\n                bold: bold,\r\n                color: colorStack[color],\r\n            }\r\n        })\r\n        .filter((o) => o.text != '');\r\n    }\r\n\r\n    applyFontStyle(word, baseFont) {\r\n        let font = baseFont;\r\n        if (word.bold) {\r\n            font = 'bold ' + font;\r\n        }\r\n        if (word.italic) {\r\n            font = 'italic ' + font;\r\n        }\r\n        this._context.font = font\r\n        word.fontStyle = font;\r\n    }\r\n\r\n    resetFontStyle(baseFont) {\r\n        this._context.font = baseFont;\r\n    }\r\n\r\n    measure(parsed, letterSpacing = 0, baseFont) {\r\n        for (const p of parsed) {\r\n            this.applyFontStyle(p, baseFont);\r\n            p.width = this.measureText(p.text, letterSpacing);\r\n\r\n            // Letter by letter detail for letter spacing\r\n            if (letterSpacing > 0) {\r\n                p.letters = p.text.split('').map((l) => {return {text: l}});\r\n                for (let l of p.letters) {\r\n                    l.width = this.measureText(l.text, letterSpacing);\r\n                }\r\n            }\r\n\r\n        }\r\n        this.resetFontStyle(baseFont);\r\n        return parsed;\r\n    }\r\n\r\n    indent(parsed, textIndent) {\r\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\r\n        return parsed;\r\n    }\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\r\n    }\r\n\r\n    _getBreakIndex(word, width) {\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        if (wordWidth <= width) {\r\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\r\n        }\r\n\r\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > width) {\r\n            while (breakIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth > width) {\r\n                    breakIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (breakIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth < width) {\r\n                    breakIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    breakIndex -=1;\r\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return {breakIndex, truncWordWidth};\r\n\r\n    }\r\n\r\n    wordBreak(word, width, baseFont) {\r\n        if (!word.text) {\r\n            return word\r\n        }\r\n        this.applyFontStyle(word, baseFont)\r\n        const parts = [];\r\n        let text = word.text;\r\n        if (!word.letters) {\r\n            while (true) {\r\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = truncWordWidth;\r\n\r\n                if (breakIndex === text.length) {\r\n                    break;\r\n                }\r\n\r\n                text = text.slice(breakIndex);\r\n            }\r\n        } else {\r\n            let totalWidth = 0;\r\n            let letters = [];\r\n            let breakIndex = 0;\r\n            for (const l of word.letters) {\r\n                if (totalWidth + l.width >= width) {\r\n                    parts.push({...word});\r\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                    parts[parts.length - 1].width = totalWidth;\r\n                    parts[parts.length - 1].letters = letters;\r\n                    text = text.slice(breakIndex);\r\n                    totalWidth = 0;\r\n                    letters = [];\r\n                    breakIndex = 0;\r\n\r\n                } else {\r\n                    breakIndex += 1;\r\n                    letters.push(l);\r\n                    totalWidth += l.width;\r\n                }\r\n            }\r\n\r\n            if (totalWidth > 0) {\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = totalWidth;\r\n                parts[parts.length - 1].letters = letters;\r\n            }\r\n        }\r\n\r\n        return parts;\r\n    }\r\n\r\n    alignLine(parsed, initialX = 0) {\r\n        let prevWidth = 0;\r\n        let prevX = initialX;\r\n        for (const word of parsed) {\r\n            if (word.text == '\\n') {\r\n                continue;\r\n            }\r\n            word.x = prevX + prevWidth;\r\n            prevX = word.x;\r\n            prevWidth = word.width;\r\n        }\r\n\r\n    }\r\n}","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class TextTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        // We use the stage precision as the default precision in case of a text texture.\r\n        this._precision = this.stage.getOption('precision');\r\n    }\r\n\r\n    static renderer(stage, canvas, settings) {\r\n        if (this.advancedRenderer) {\r\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\r\n        } else {\r\n            return new TextTextureRenderer(stage, canvas, settings);\r\n        }\r\n    }\r\n\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(v) {\r\n        if (this._text !== v) {\r\n            this._text = \"\" + v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontStyle() {\r\n        return this._fontStyle;\r\n    }\r\n\r\n    set fontStyle(v) {\r\n        if (this._fontStyle !== v) {\r\n            this._fontStyle = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontBaselineRatio() {\r\n        return this._fontBaselineRatio;\r\n    }\r\n    \r\n    set fontBaselineRatio(v) {\r\n        if (this._fontBaselineRatio !== v) {\r\n            this._fontBaselineRatio = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n\r\n    set fontSize(v) {\r\n        if (this._fontSize !== v) {\r\n            this._fontSize = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontWeight() {\r\n        return this._fontWeight;\r\n    }\r\n\r\n    set fontWeight(v) {\r\n        if (this._fontWeight !== v) {\r\n            this._fontWeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontFace() {\r\n        return this._fontFace;\r\n    }\r\n\r\n    set fontFace(v) {\r\n        if (this._fontFace !== v) {\r\n            this._fontFace = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrap() {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(v) {\r\n        if (this._wordWrap !== v) {\r\n            this._wordWrap = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrapWidth() {\r\n        return this._wordWrapWidth;\r\n    }\r\n\r\n    set wordWrapWidth(v) {\r\n        if (this._wordWrapWidth !== v) {\r\n            this._wordWrapWidth = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordBreak() {\r\n        return this._wordBreak;\r\n    }\r\n\r\n    set wordBreak(v) {\r\n        if (this._wordBreak !== v) {\r\n            this._wordBreak = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textOverflow() {\r\n        return this._textOverflow;\r\n    }\r\n\r\n    set textOverflow(v) {\r\n        if (v != this._textOverflow) {\r\n            this._textOverflow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this._lineHeight;\r\n    }\r\n\r\n    set lineHeight(v) {\r\n        if (this._lineHeight !== v) {\r\n            this._lineHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textBaseline() {\r\n        return this._textBaseline;\r\n    }\r\n\r\n    set textBaseline(v) {\r\n        if (this._textBaseline !== v) {\r\n            this._textBaseline = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textAlign() {\r\n        return this._textAlign;\r\n    }\r\n\r\n    set textAlign(v) {\r\n        if (v != 'center' && window.isRTL) {\r\n            v = v == \"right\" ? \"left\" : \"right\";\r\n        }\r\n        if (this._textAlign !== v) {\r\n            this._textAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get verticalAlign() {\r\n        return this._verticalAlign;\r\n    }\r\n\r\n    set verticalAlign(v) {\r\n        if (this._verticalAlign !== v) {\r\n            this._verticalAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (this._offsetY !== v) {\r\n            this._offsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLines() {\r\n        return this._maxLines;\r\n    }\r\n\r\n    set maxLines(v) {\r\n        if (this._maxLines !== v) {\r\n            this._maxLines = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLinesSuffix() {\r\n        return this._maxLinesSuffix;\r\n    }\r\n\r\n    set maxLinesSuffix(v) {\r\n        if (this._maxLinesSuffix !== v) {\r\n            this._maxLinesSuffix = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textColor() {\r\n        return this._textColor;\r\n    }\r\n\r\n    set textColor(v) {\r\n        if (this._textColor !== v) {\r\n            this._textColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingLeft(v) {\r\n        if (this._paddingLeft !== v) {\r\n            this._paddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        if (this._paddingRight !== v) {\r\n            this._paddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadow() {\r\n        return this._shadow;\r\n    }\r\n\r\n    set shadow(v) {\r\n        if (this._shadow !== v) {\r\n            this._shadow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowColor() {\r\n        return this._shadowColor;\r\n    }\r\n\r\n    set shadowColor(v) {\r\n        if (this._shadowColor !== v) {\r\n            this._shadowColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetX() {\r\n        return this._shadowOffsetX;\r\n    }\r\n\r\n    set shadowOffsetX(v) {\r\n        if (this._shadowOffsetX !== v) {\r\n            this._shadowOffsetX = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetY() {\r\n        return this._shadowOffsetY;\r\n    }\r\n\r\n    set shadowOffsetY(v) {\r\n        if (this._shadowOffsetY !== v) {\r\n            this._shadowOffsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowBlur() {\r\n        return this._shadowBlur;\r\n    }\r\n\r\n    set shadowBlur(v) {\r\n        if (this._shadowBlur !== v) {\r\n            this._shadowBlur = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlight() {\r\n        return this._highlight;\r\n    }\r\n\r\n    set highlight(v) {\r\n        if (this._highlight !== v) {\r\n            this._highlight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightHeight() {\r\n        return this._highlightHeight;\r\n    }\r\n\r\n    set highlightHeight(v) {\r\n        if (this._highlightHeight !== v) {\r\n            this._highlightHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightColor() {\r\n        return this._highlightColor;\r\n    }\r\n\r\n    set highlightColor(v) {\r\n        if (this._highlightColor !== v) {\r\n            this._highlightColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightOffset() {\r\n        return this._highlightOffset;\r\n    }\r\n\r\n    set highlightOffset(v) {\r\n        if (this._highlightOffset !== v) {\r\n            this._highlightOffset = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingLeft() {\r\n        return this._highlightPaddingLeft;\r\n    }\r\n\r\n    set highlightPaddingLeft(v) {\r\n        if (this._highlightPaddingLeft !== v) {\r\n            this._highlightPaddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingRight() {\r\n        return this._highlightPaddingRight;\r\n    }\r\n\r\n    set highlightPaddingRight(v) {\r\n        if (this._highlightPaddingRight !== v) {\r\n            this._highlightPaddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSx() {\r\n        return this._cutSx;\r\n    }\r\n\r\n    set cutSx(v) {\r\n        if (this._cutSx !== v) {\r\n            this._cutSx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEx() {\r\n        return this._cutEx;\r\n    }\r\n\r\n    set cutEx(v) {\r\n        if (this._cutEx !== v) {\r\n            this._cutEx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSy() {\r\n        return this._cutSy;\r\n    }\r\n\r\n    set cutSy(v) {\r\n        if (this._cutSy !== v) {\r\n            this._cutSy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEy() {\r\n        return this._cutEy;\r\n    }\r\n\r\n    set cutEy(v) {\r\n        if (this._cutEy !== v) {\r\n            this._cutEy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get advancedRenderer() {\r\n        return this._advancedRenderer;\r\n    }\r\n\r\n    set advancedRenderer(v) {\r\n        if (this._advancedRenderer !== v) {\r\n            this._advancedRenderer = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    set letterSpacing(v) {\r\n        if (this._letterSpacing !== v) {\r\n            this._letterSpacing = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get letterSpacing() {\r\n        return this._letterSpacing;\r\n    }\r\n\r\n    set textIndent(v) {\r\n        if (this._textIndent !== v) {\r\n            this._textIndent = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textIndent() {\r\n        return this._textIndent;\r\n    }\r\n\r\n    get precision() {\r\n        return super.precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        // We actually draw differently when the precision changes.\r\n        if (this.precision !== v) {\r\n            super.precision = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this.text;\r\n    }\r\n\r\n    _getLookupId() {\r\n        let parts = [];\r\n\r\n        if (this.w !== 0) parts.push(\"w \" + this.w);\r\n        if (this.h !== 0) parts.push(\"h \" + this.h);\r\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\r\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\r\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\r\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\r\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\r\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\r\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\r\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\r\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\r\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\r\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\r\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\r\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\r\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\r\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\r\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\r\n        parts.push(\"pc\" + this.precision);\r\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\r\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\r\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\r\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\r\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\r\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\r\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\r\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\r\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\r\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\r\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\r\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\r\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\r\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\r\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\r\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\r\n\r\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\r\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\r\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\r\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\r\n\r\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\r\n\r\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\r\n        return id;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const args = this.cloneArgs();\r\n\r\n        const gl = this.stage.gl;\r\n\r\n        return function (cb) {\r\n            const canvas = this.stage.platform.getDrawingCanvas();\r\n            const renderer = (args.advancedRenderer)\r\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\r\n              : new TextTextureRenderer(this.stage, canvas, args);\r\n            \r\n            const p = renderer.draw();\r\n\r\n            const texParams = {};\r\n\r\n            const sharpCfg = this.stage.getOption('fontSharp');\r\n            let sharpen = false;\r\n\r\n            // Prevent text blur when text texture is downscaled\r\n            if (Utils.isBoolean(sharpCfg)) {\r\n                sharpen = sharpCfg;\r\n            } else if (Utils.isObject(sharpCfg)) {\r\n                const precision = this.stage.getRenderPrecision();\r\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\r\n            }\r\n\r\n            if (gl && sharpen) {\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            if (p) {\r\n                p.then(() => {\r\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\r\n                    cb(null, Object.assign({\r\n                        renderInfo: renderer.renderInfo,\r\n                        throttle: false,\r\n                        texParams: texParams,\r\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n                }).catch((err) => {\r\n                    cb(err);\r\n                });\r\n            } else {\r\n                cb(null, Object.assign({\r\n                    renderInfo: renderer.renderInfo,\r\n                    throttle: false,\r\n                    texParams: texParams,\r\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    getNonDefaults() {\r\n        const nonDefaults = super.getNonDefaults();\r\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\r\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\r\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\r\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\r\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\r\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\r\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\r\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\r\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\r\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\r\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\r\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\r\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\r\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\r\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\r\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\r\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\r\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\r\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\r\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\r\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\r\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\r\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\r\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\r\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\r\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\r\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\r\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\r\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\r\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\r\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\r\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\r\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\r\n\r\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\r\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\r\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\r\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\r\n\r\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\r\n        return nonDefaults;\r\n    }\r\n\r\n    cloneArgs() {\r\n        let obj = {};\r\n        obj.text = this._text;\r\n        obj.w = this._w;\r\n        obj.h = this._h;\r\n        obj.fontStyle = this._fontStyle;\r\n        obj.fontSize = this._fontSize;\r\n        obj.fontWeight = this._fontWeight;\r\n        obj.fontBaselineRatio = this._fontBaselineRatio;\r\n        obj.fontFace = this._fontFace;\r\n        obj.wordWrap = this._wordWrap;\r\n        obj.wordWrapWidth = this._wordWrapWidth;\r\n        obj.wordBreak = this._wordBreak;\r\n        obj.textOverflow = this._textOverflow;\r\n        obj.lineHeight = this._lineHeight;\r\n        obj.textBaseline = this._textBaseline;\r\n        obj.textAlign = this._textAlign;\r\n        obj.verticalAlign = this._verticalAlign;\r\n        obj.offsetY = this._offsetY;\r\n        obj.maxLines = this._maxLines;\r\n        obj.maxLinesSuffix = this._maxLinesSuffix;\r\n        obj.precision = this._precision;\r\n        obj.textColor = this._textColor;\r\n        obj.paddingLeft = this._paddingLeft;\r\n        obj.paddingRight = this._paddingRight;\r\n        obj.shadow = this._shadow;\r\n        obj.shadowColor = this._shadowColor;\r\n        obj.shadowOffsetX = this._shadowOffsetX;\r\n        obj.shadowOffsetY = this._shadowOffsetY;\r\n        obj.shadowBlur = this._shadowBlur;\r\n        obj.highlight = this._highlight;\r\n        obj.highlightHeight = this._highlightHeight;\r\n        obj.highlightColor = this._highlightColor;\r\n        obj.highlightOffset = this._highlightOffset;\r\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\r\n        obj.highlightPaddingRight = this._highlightPaddingRight;\r\n        obj.letterSpacing = this._letterSpacing;\r\n        obj.textIndent = this._textIndent;\r\n        obj.cutSx = this._cutSx;\r\n        obj.cutEx = this._cutEx;\r\n        obj.cutSy = this._cutSy;\r\n        obj.cutEy = this._cutEy;\r\n        obj.advancedRenderer = this._advancedRenderer;\r\n        return obj;\r\n    }\r\n\r\n\r\n}\r\n\r\n// Because there are so many properties, we prefer to use the prototype for default values.\r\n// This causes a decrease in performance, but also a decrease in memory usage.\r\nlet proto = TextTexture.prototype;\r\nproto._text = \"\";\r\nproto._w = 0;\r\nproto._h = 0;\r\nproto._fontStyle = \"normal\";\r\nproto._fontSize = 40;\r\nproto._fontWeight = \"normal\";\r\nproto._fontFace = null;\r\nproto._wordWrap = true;\r\nproto._wordWrapWidth = 0;\r\nproto._wordBreak = false;\r\nproto._textOverflow = \"\";\r\nproto._lineHeight = null;\r\nproto._textBaseline = \"alphabetic\";\r\nproto._textAlign = \"left\";\r\nproto._verticalAlign = \"top\";\r\nproto._offsetY = null;\r\nproto._maxLines = 0;\r\nproto._maxLinesSuffix = \"..\";\r\nproto._textColor = 0xFFFFFFFF;\r\nproto._paddingLeft = 0;\r\nproto._paddingRight = 0;\r\nproto._shadow = false;\r\nproto._shadowColor = 0xFF000000;\r\nproto._shadowOffsetX = 0;\r\nproto._shadowOffsetY = 0;\r\nproto._shadowBlur = 5;\r\nproto._highlight = false;\r\nproto._highlightHeight = 0;\r\nproto._highlightColor = 0xFF000000;\r\nproto._highlightOffset = 0;\r\nproto._highlightPaddingLeft = 0;\r\nproto._highlightPaddingRight = 0;\r\nproto._letterSpacing = 0;\r\nproto._textIndent = 0;\r\nproto._cutSx = 0;\r\nproto._cutEx = 0;\r\nproto._cutSy = 0;\r\nproto._cutEy = 0;\r\nproto._advancedRenderer = false;\r\nproto._fontBaselineRatio = 0;\r\n\r\n\r\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\r\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class SourceTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._textureSource = undefined;\r\n    }\r\n\r\n    get textureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n    set textureSource(v) {\r\n        if (v !== this._textureSource) {\r\n            if (v.isResultTexture) {\r\n                // In case of a result texture, automatically inherit the precision.\r\n                this._precision = this.stage.getRenderPrecision();\r\n            }\r\n            this._textureSource = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\n\r\nexport default class Transition extends EventEmitter {\r\n\r\n    constructor(manager, settings, element, property) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._getter = element.constructor.getGetter(property);\r\n        this._setter = element.constructor.getSetter(property);\r\n\r\n        this._merger = settings.merger;\r\n\r\n        if (!this._merger) {\r\n            this._merger = element.constructor.getMerger(property);\r\n        }\r\n\r\n        this._startValue = this._getter(this._element);\r\n        this._targetValue = this._startValue;\r\n\r\n        this._p = 1;\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    start(targetValue) {\r\n        this._startValue = this._getter(this._element);\r\n\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            if (targetValue === this._startValue) {\r\n                this.reset(targetValue, 1);\r\n            } else {\r\n                this._targetValue = targetValue;\r\n                this._p = 0;\r\n                this._delayLeft = this._settings.delay;\r\n                this.emit('start');\r\n                this.add();\r\n            }\r\n        }\r\n    }\r\n\r\n    finish() {\r\n        if (this._p < 1) {\r\n            // Value setting and will must be invoked (async) upon next transition cycle.\r\n            this._p = 1;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        // Just stop where the transition is at.\r\n        this.emit('stop');\r\n        this.manager.removeActive(this);\r\n    }\r\n\r\n    pause() {\r\n        this.stop();\r\n    }\r\n\r\n    play() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    reset(targetValue, p) {\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = p;\r\n            this.add();\r\n        }\r\n    }\r\n\r\n    _updateDrawValue() {\r\n        this._setter(this._element, this.getDrawValue());\r\n    }\r\n\r\n    add() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    isAttached() {\r\n        return this._element.attached;\r\n    }\r\n\r\n    isRunning() {\r\n        return (this._p < 1.0);\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this.isAttached()) {\r\n            // Skip to end of transition so that it is removed.\r\n            this._p = 1;\r\n        }\r\n\r\n        if (this.p < 1) {\r\n            if (this.delayLeft > 0) {\r\n                this._delayLeft -= dt;\r\n\r\n                if (this.delayLeft < 0) {\r\n                    dt = -this.delayLeft;\r\n                    this._delayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this._settings.duration == 0) {\r\n                this._p = 1;\r\n            } else {\r\n                this._p += dt / this._settings.duration;\r\n            }\r\n            if (this._p >= 1) {\r\n                // Finished!;\r\n                this._p = 1;\r\n            }\r\n        }\r\n\r\n        this._updateDrawValue();\r\n\r\n        this.invokeListeners();\r\n    }\r\n\r\n    invokeListeners() {\r\n        this.emit('progress', this.p);\r\n        if (this.p === 1) {\r\n            this.emit('finish');\r\n        }\r\n    }\r\n\r\n    updateTargetValue(targetValue) {\r\n        let t = this._settings.timingFunctionImpl(this.p);\r\n        if (t === 1) {\r\n            this._targetValue = targetValue;\r\n        } else if (t === 0) {\r\n            this._startValue = this._targetValue;\r\n            this._targetValue = targetValue;\r\n        } else {\r\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\r\n            this._targetValue = targetValue;\r\n        }\r\n    }\r\n\r\n    getDrawValue() {\r\n        if (this.p >= 1) {\r\n            return this.targetValue;\r\n        } else {\r\n            let v = this._settings._timingFunctionImpl(this.p);\r\n            return this._merger(this.targetValue, this.startValue, v);\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    get startValue() {\r\n        return this._startValue;\r\n    }\r\n\r\n    get targetValue() {\r\n        return this._targetValue;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n    set settings(v) {\r\n        this._settings = v;\r\n    }\r\n\r\n}\r\n\r\nTransition.prototype.isTransition = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages a list of objects.\r\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\r\n */\r\nexport default class ObjectList {\r\n\r\n    constructor() {\r\n        this._items = [];\r\n        this._refs = {}\r\n    }\r\n\r\n    get() {\r\n        return this._items;\r\n    }\r\n\r\n    get first() {\r\n        return this._items[0];\r\n    }\r\n\r\n    get last() {\r\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\r\n    }\r\n\r\n    add(item) {\r\n        this.addAt(item, this._items.length);\r\n    }\r\n\r\n    addAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex === index) {\r\n                return item;\r\n            }\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            if (currentIndex != -1) {\r\n                this.setAt(item, index);\r\n            } else {\r\n                if (item.ref) {\r\n                    this._refs[item.ref] = item;\r\n                }\r\n                this._items.splice(index, 0, item);\r\n                this.onAdd(item, index);\r\n            }\r\n        } else {\r\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    replaceByRef(item) {\r\n        if (item.ref) {\r\n            const existingItem = this.getByRef(item.ref);\r\n            if (!existingItem) {\r\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\r\n            }\r\n            this.replace(item, existingItem);\r\n        } else {\r\n            throw new Error('replaceByRef: no ref specified in item');\r\n        }\r\n        this.addAt(item, this._items.length);\r\n\r\n    }\r\n\r\n    replace(item, prevItem) {\r\n        const index = this.getIndex(prevItem);\r\n        if (index === -1) {\r\n            throw new Error('replace: The previous item does not exist');\r\n        }\r\n        this.setAt(item, index);\r\n    }\r\n\r\n    setAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex != -1) {\r\n                if (currentIndex !== index) {\r\n                    const fromIndex = currentIndex;\r\n                    if (fromIndex !== index) {\r\n                        this._items.splice(fromIndex, 1);\r\n                        this._items.splice(index, 0, item);\r\n                        this.onMove(item, fromIndex, index);\r\n                    }\r\n                }\r\n            } else {\r\n                if( index < this._items.length){\r\n\r\n                    if (this._items[index].ref) {\r\n                        this._refs[this._items[index].ref] = undefined;\r\n                    }\r\n\r\n                    const prevItem = this._items[index];\r\n\r\n                    // Doesn't exist yet: overwrite current.\r\n                    this._items[index] = item;\r\n\r\n                    if (item.ref) {\r\n                        this._refs[item.ref] = item;\r\n                    }\r\n\r\n                    this.onSet(item, index, prevItem);\r\n                } else {\r\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    getAt(index) {\r\n        return this._items[index];\r\n    }\r\n\r\n    getIndex(item) {\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    remove(item) {\r\n        let index = this._items.indexOf(item);\r\n\r\n        if (index !== -1) {\r\n            this.removeAt(index);\r\n        }\r\n    };\r\n\r\n    removeAt(index) {\r\n        if (index >= 0 && index < this._items.length) {\r\n            const item = this._items[index];\r\n\r\n            if (item.ref) {\r\n                this._refs[item.ref] = undefined;\r\n            }\r\n\r\n            this._items.splice(index, 1);\r\n\r\n            this.onRemove(item, index);\r\n\r\n            return item;\r\n        } else {\r\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        let n = this._items.length;\r\n        if (n) {\r\n            let prev = this._items;\r\n            this._items = [];\r\n            this._refs = {}\r\n            this.onSync(prev, [], []);\r\n        }\r\n    };\r\n\r\n    a(o) {\r\n        if (Utils.isObjectLiteral(o)) {\r\n            let c = this.createItem(o);\r\n            c.patch(o);\r\n            this.add(c);\r\n            return c;\r\n        } else if (Array.isArray(o)) {\r\n            for (let i = 0, n = o.length; i < n; i++) {\r\n                this.a(o[i]);\r\n            }\r\n            return null;\r\n        } else if (this.isItem(o)) {\r\n            this.add(o);\r\n            return o;\r\n        }\r\n    };\r\n\r\n    get length() {\r\n        return this._items.length;\r\n    }\r\n\r\n    _getRefs() {\r\n        return this._refs;\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this._refs[ref];\r\n    }\r\n\r\n    clearRef(ref) {\r\n        delete this._refs[ref];\r\n    }\r\n\r\n    setRef(ref, child) {\r\n        this._refs[ref] = child;\r\n    }\r\n\r\n    patch(settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            this._setByObject(settings);\r\n        } else if (Array.isArray(settings)) {\r\n            this._setByArray(settings);\r\n        }\r\n    }\r\n\r\n    _setByObject(settings) {\r\n        // Overrule settings of known referenced items.\r\n        let refs = this._getRefs();\r\n        let crefs = Object.keys(settings);\r\n        for (let i = 0, n = crefs.length; i < n; i++) {\r\n            let cref = crefs[i];\r\n            let s = settings[cref];\r\n\r\n            let c = refs[cref];\r\n            if (!c) {\r\n                if (this.isItem(s)) {\r\n                    // Replace previous item;\r\n                    s.ref = cref;\r\n                    this.add(s);\r\n                } else {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                    c.ref = cref;\r\n                    c.patch(s);\r\n                    this.add(c);\r\n                }\r\n            } else {\r\n                if (this.isItem(s)) {\r\n                    if (c !== s) {\r\n                        // Replace previous item;\r\n                        let idx = this.getIndex(c);\r\n                        s.ref = cref;\r\n                        this.setAt(s, idx);\r\n                    }\r\n                } else {\r\n                    c.patch(s);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _equalsArray(array) {\r\n        let same = true;\r\n        if (array.length === this._items.length) {\r\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\r\n                same = same && (this._items[i] === array[i]);\r\n            }\r\n        } else {\r\n            same = false;\r\n        }\r\n        return same;\r\n    }\r\n\r\n    _setByArray(array) {\r\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\r\n        if (this._equalsArray(array)) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0, n = this._items.length; i < n; i++) {\r\n            this._items[i].marker = true;\r\n        }\r\n\r\n        let refs;\r\n        let newItems = [];\r\n        for (let i = 0, n = array.length; i < n; i++) {\r\n            let s = array[i];\r\n            if (this.isItem(s)) {\r\n                s.marker = false;\r\n                newItems.push(s);\r\n            } else {\r\n                let cref = s.ref;\r\n                let c;\r\n                if (cref) {\r\n                    if (!refs) refs = this._getRefs();\r\n                    c = refs[cref];\r\n                }\r\n\r\n                if (!c) {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                } else {\r\n                    c.marker = false;\r\n                }\r\n\r\n                if (Utils.isObjectLiteral(s)) {\r\n                    c.patch(s);\r\n                }\r\n\r\n                newItems.push(c);\r\n            }\r\n        }\r\n\r\n        this._setItems(newItems);\r\n    }\r\n\r\n    _setItems(newItems) {\r\n        let prevItems = this._items;\r\n        this._items = newItems;\r\n\r\n        // Remove the items.\r\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\r\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\r\n\r\n        if (removed.length || added.length) {\r\n            // Recalculate refs.\r\n            this._refs = {}\r\n            for (let i = 0, n = this._items.length; i < n; i++) {\r\n                let ref = this._items[i].ref;\r\n                if (ref) {\r\n                    this._refs[ref] = this._items[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSync(removed, added, newItems);\r\n    }\r\n\r\n    sort(f) {\r\n        const items = this._items.slice();\r\n        items.sort(f);\r\n        this._setByArray(items);\r\n    }\r\n\r\n    onAdd(item, index) {\r\n    }\r\n\r\n    onRemove(item, index) {\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n    }\r\n\r\n    createItem(object) {\r\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\r\n    }\r\n\r\n    isItem(object) {\r\n        return false;\r\n    }\r\n\r\n    forEach(f) {\r\n        this.get().forEach(f);\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"./ObjectList.mjs\";\r\n\r\nexport default class ElementChildList extends ObjectList {\r\n\r\n    constructor(element) {\r\n        super();\r\n        this._element = element;\r\n    }\r\n\r\n    _connectParent(item) {\r\n        const prevParent = item.parent;\r\n        if (prevParent && prevParent !== this._element) {\r\n            // Cleanup in previous child list, without\r\n            const prevChildList = item.parent.childList;\r\n            const index = prevChildList.getIndex(item);\r\n\r\n            if (item.ref) {\r\n                prevChildList._refs[item.ref] = undefined;\r\n            }\r\n            prevChildList._items.splice(index, 1);\r\n\r\n            // Also clean up element core.\r\n            prevParent.core.removeChildAt(index);\r\n\r\n        }\r\n\r\n        item._setParent(this._element);\r\n\r\n        // We are expecting the caller to sync it to the core.\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._connectParent(item);\r\n        this._element.core.addChildAt(index, item.core);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        item._setParent(null);\r\n        this._element.core.removeChildAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i]._setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            this._connectParent(added[i]);\r\n        }\r\n        let gc = i => i.core;\r\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n        prevItem._setParent(null);\r\n\r\n        this._connectParent(item);\r\n        this._element.core.setChildAt(index, item.core);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._element.core.moveChild(fromIndex, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        if (object.type) {\r\n            return new object.type(this._element.stage);\r\n        } else {\r\n            return this._element.stage.createElement();\r\n        }\r\n    }\r\n\r\n    isItem(object) {\r\n        return object.isElement;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Render tree node.\r\n */\r\n\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport ElementCore from \"./core/ElementCore.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Element {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.__id = Element.id++;\r\n\r\n        this.__start();\r\n\r\n        // EventEmitter constructor.\r\n        this._hasEventListeners = false;\r\n\r\n        this.__core = new ElementCore(this);\r\n\r\n        /**\r\n         * A reference that can be used while merging trees.\r\n         * @type {string}\r\n         */\r\n        this.__ref = null;\r\n\r\n        /**\r\n         * An element is attached if it is a descendant of the stage root.\r\n         * @type {boolean}\r\n         */\r\n        this.__attached = false;\r\n\r\n        /**\r\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\r\n         * @type {boolean}\r\n         */\r\n        this.__enabled = false;\r\n\r\n        /**\r\n         * An element is active when it is enabled and it is within bounds.\r\n         * @type {boolean}\r\n         */\r\n        this.__active = false;\r\n\r\n        /**\r\n         * @type {Element}\r\n         */\r\n        this.__parent = null;\r\n\r\n        /**\r\n         * The texture that is currently set.\r\n         * @type {Texture}\r\n         */\r\n        this.__texture = null;\r\n\r\n        /**\r\n         * The currently displayed texture. While this.texture is loading, this one may be different.\r\n         * @type {Texture}\r\n         */\r\n        this.__displayedTexture = null;\r\n\r\n        /**\r\n         * Tags that can be used to identify/search for a specific element.\r\n         * @type {String[]}\r\n         */\r\n        this.__tags = null;\r\n\r\n        /**\r\n         * The tree's tags mapping.\r\n         * This contains all elements for all known tags, at all times.\r\n         * @type {Map}\r\n         */\r\n        this.__treeTags = null;\r\n\r\n        /**\r\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\r\n         * @type {boolean}\r\n         */\r\n        this.__tagRoot = false;\r\n\r\n        /**\r\n         * (Lazy-initialised) list of children owned by this elements.\r\n         * @type {ElementChildList}\r\n         */\r\n        this.__childList = null;\r\n\r\n        this._w = 0;\r\n\r\n        this._h = 0;\r\n    }\r\n\r\n    __start() {\r\n    }\r\n\r\n    get id() {\r\n        return this.__id;\r\n    }\r\n\r\n    set ref(ref) {\r\n        if (this.__ref !== ref) {\r\n            const charcode = ref.charCodeAt(0);\r\n            if (!Utils.isUcChar(charcode)) {\r\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\r\n            }\r\n            if (this.__ref !== null) {\r\n                this.removeTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.clearRef(this.__ref);\r\n                }\r\n            }\r\n\r\n            this.__ref = ref;\r\n\r\n            if (this.__ref) {\r\n                this._addTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.setRef(this.__ref, this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get ref() {\r\n        return this.__ref;\r\n    }\r\n\r\n    get core() {\r\n        return this.__core;\r\n    }\r\n\r\n    setAsRoot() {\r\n        this.__core.setAsRoot();\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n    }\r\n\r\n    get isRoot() {\r\n        return this.__core.isRoot;\r\n    }\r\n\r\n    _setParent(parent) {\r\n        if (this.__parent === parent) return;\r\n\r\n        if (this.__parent) {\r\n            this._unsetTagsParent();\r\n        }\r\n\r\n        this.__parent = parent;\r\n\r\n        if (parent) {\r\n            this._setTagsParent();\r\n        }\r\n\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n        this._updateCollision();\r\n\r\n        if (this.isRoot && parent) {\r\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\r\n        }\r\n    };\r\n\r\n    getDepth() {\r\n        let depth = 0;\r\n\r\n        let p = this.__parent;\r\n        while(p) {\r\n            depth++;\r\n            p = p.__parent;\r\n        }\r\n\r\n        return depth;\r\n    };\r\n\r\n    getAncestor(l) {\r\n        let p = this;\r\n        while (l > 0 && p.__parent) {\r\n            p = p.__parent;\r\n            l--;\r\n        }\r\n        return p;\r\n    };\r\n\r\n    getAncestors() {\r\n        const a = [];\r\n        let p = this;\r\n        while (p) {\r\n            a.push(p);\r\n            p = p.__parent;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getAncestorAtDepth(depth) {\r\n        let levels = this.getDepth() - depth;\r\n        if (levels < 0) {\r\n            return null;\r\n        }\r\n        return this.getAncestor(levels);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while(p = p.parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    getSharedAncestor(c) {\r\n        let o1 = this;\r\n        let o2 = c;\r\n        let l1 = o1.getDepth();\r\n        let l2 = o2.getDepth();\r\n        if (l1 > l2) {\r\n            o1 = o1.getAncestor(l1 - l2);\r\n        } else if (l2 > l1) {\r\n            o2 = o2.getAncestor(l2 - l1);\r\n        }\r\n\r\n        do {\r\n            if (o1 === o2) {\r\n                return o1;\r\n            }\r\n\r\n            o1 = o1.__parent;\r\n            o2 = o2.__parent;\r\n        } while (o1 && o2);\r\n\r\n        return null;\r\n    };\r\n\r\n    get attached() {\r\n        return this.__attached;\r\n    }\r\n\r\n    get enabled() {\r\n        return this.__enabled;\r\n    }\r\n\r\n    get active() {\r\n        return this.__active;\r\n    }\r\n\r\n    _isAttached() {\r\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\r\n    };\r\n\r\n    _isEnabled() {\r\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\r\n    };\r\n\r\n    _isActive() {\r\n        return this._isEnabled() && this.withinBoundsMargin;\r\n    };\r\n\r\n    /**\r\n     * Updates the 'attached' flag for this branch.\r\n     */\r\n    _updateAttachedFlag() {\r\n        let newAttached = this._isAttached();\r\n        if (this.__attached !== newAttached) {\r\n            this.__attached = newAttached;\r\n\r\n            if (newAttached) {\r\n                this._onSetup();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateAttachedFlag();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newAttached) {\r\n                this._onAttach();\r\n            } else {\r\n                this._onDetach();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Updates the 'enabled' flag for this branch.\r\n     */\r\n    _updateEnabledFlag() {\r\n        let newEnabled = this._isEnabled();\r\n        if (this.__enabled !== newEnabled) {\r\n            if (newEnabled) {\r\n                this._onEnabled();\r\n                this._setEnabledFlag();\r\n            } else {\r\n                this._onDisabled();\r\n                this._unsetEnabledFlag();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateEnabledFlag();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setEnabledFlag() {\r\n        this.__enabled = true;\r\n\r\n        // Force re-check of texture because dimensions might have changed (cutting).\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n\r\n        if (this.__texture) {\r\n            this.__texture.addElement(this);\r\n        }\r\n\r\n        if (this.withinBoundsMargin) {\r\n            this._setActiveFlag();\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.addElement(this.__core);\r\n        }\r\n\r\n    }\r\n\r\n    _unsetEnabledFlag() {\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this.__texture.removeElement(this);\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.removeElement(this.__core);\r\n        }\r\n\r\n        if (this._texturizer) {\r\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\r\n        }\r\n\r\n        this.__enabled = false;\r\n    }\r\n\r\n    _setActiveFlag() {\r\n        this.__active = true;\r\n\r\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\r\n        if (this.__texture) {\r\n            this.__texture.incActiveCount();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this._enableTexture();\r\n        }\r\n        this._onActive();\r\n    }\r\n\r\n    _unsetActiveFlag() {\r\n        if (this.__texture) {\r\n            this.__texture.decActiveCount();\r\n        }\r\n\r\n        this.__active = false;\r\n        if (this.__texture) {\r\n            this._disableTexture();\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            this.texturizer.deactivate();\r\n        }\r\n\r\n        this._onInactive();\r\n    }\r\n\r\n    _onSetup() {\r\n    }\r\n\r\n    _onAttach() {\r\n    }\r\n\r\n    _onDetach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n    }\r\n\r\n    _onDisabled() {\r\n    }\r\n\r\n    _onActive() {\r\n    }\r\n\r\n    _onInactive() {\r\n    }\r\n\r\n    _onResize() {\r\n    }\r\n\r\n    _getRenderWidth() {\r\n        if (this._w) {\r\n            return this._w;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderWidth();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderWidth();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    _getRenderHeight() {\r\n        if (this._h) {\r\n            return this._h;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderHeight();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderHeight();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    get renderWidth() {\r\n        if (this.__enabled) {\r\n            // Render width is only maintained if this element is enabled.\r\n            return this.__core.getRenderWidth();\r\n        } else {\r\n            return this._getRenderWidth();\r\n        }\r\n    }\r\n\r\n    get renderHeight() {\r\n        if (this.__enabled) {\r\n            return this.__core.getRenderHeight();\r\n        } else {\r\n            return this._getRenderHeight();\r\n        }\r\n    }\r\n\r\n    get finalX() {\r\n        return this.__core.x;\r\n    }\r\n\r\n    get finalY() {\r\n        return this.__core.y;\r\n    }\r\n\r\n    get finalW() {\r\n        return this.__core.w;\r\n    }\r\n\r\n    get finalH() {\r\n        return this.__core.h;\r\n    }\r\n\r\n    textureIsLoaded() {\r\n        return this.__texture && this.__texture.isLoaded();\r\n    }\r\n\r\n    loadTexture() {\r\n        if (this.__texture) {\r\n            this.__texture.load();\r\n\r\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\r\n                // Loading the texture will have no effect on the dimensions of this element.\r\n                // Manually update them, so that calcs can be performed immediately in userland.\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableTextureError() {\r\n        // txError event should automatically be re-triggered when a element becomes active.\r\n        const loadError = this.__texture.loadError;\r\n        if (loadError) {\r\n            this.emit('txError', loadError, this.__texture._source);\r\n        }\r\n    }\r\n\r\n    _enableTexture() {\r\n        if (this.__texture.isLoaded()) {\r\n            this._setDisplayedTexture(this.__texture);\r\n        } else {\r\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\r\n            this._setDisplayedTexture(null);\r\n\r\n            this._enableTextureError();\r\n        }\r\n    }\r\n\r\n    _disableTexture() {\r\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\r\n        // mw, mh for checking within bounds.\r\n        this._setDisplayedTexture(null);\r\n    }\r\n\r\n    get texture() {\r\n        return this.__texture;\r\n    }\r\n\r\n    set texture(v) {\r\n        let texture;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                texture = new v.type(this.stage);\r\n            } else {\r\n                texture = this.texture;\r\n            }\r\n\r\n            if (texture) {\r\n                Base.patchObject(texture, v);\r\n            }\r\n        } else if (!v) {\r\n            texture = null;\r\n        } else {\r\n            if (v.isTexture) {\r\n                texture = v;\r\n            } else if (v.isTextureSource) {\r\n                texture = new SourceTexture(this.stage);\r\n                texture.textureSource = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a texture type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        const prevTexture = this.__texture;\r\n        if (texture !== prevTexture) {\r\n            this.__texture = texture;\r\n\r\n            if (this.__texture) {\r\n                if (this.__enabled) {\r\n                    this.__texture.addElement(this);\r\n\r\n                    if (this.withinBoundsMargin) {\r\n                        if (this.__texture.isLoaded()) {\r\n                            this._setDisplayedTexture(this.__texture);\r\n                        } else {\r\n                            this._enableTextureError();\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\r\n                this._setDisplayedTexture(null);\r\n            }\r\n\r\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\r\n                prevTexture.removeElement(this);\r\n            }\r\n\r\n            this._updateDimensions();\r\n        }\r\n    }\r\n\r\n    get displayedTexture() {\r\n        return this.__displayedTexture;\r\n    }\r\n\r\n    _setDisplayedTexture(v) {\r\n        let prevTexture = this.__displayedTexture;\r\n\r\n        if (prevTexture && (v !== prevTexture)) {\r\n            if (this.__texture !== prevTexture) {\r\n                // The old displayed texture is deprecated.\r\n                prevTexture.removeElement(this);\r\n            }\r\n        }\r\n\r\n        const prevSource = this.__core.displayedTextureSource;\r\n        const sourceChanged = (v ? v._source : null) !== prevSource;\r\n\r\n        this.__displayedTexture = v;\r\n        this._updateDimensions();\r\n\r\n        if (this.__displayedTexture) {\r\n            if (sourceChanged) {\r\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\r\n                this._updateTextureCoords();\r\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\r\n            }\r\n        } else {\r\n            this.__core.setDisplayedTextureSource(null);\r\n        }\r\n\r\n        if (sourceChanged) {\r\n            if (this.__displayedTexture) {\r\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\r\n                this.emit('txLoaded', this.__displayedTexture);\r\n            } else {\r\n                this.emit('txUnloaded', this.__displayedTexture);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextureSourceLoaded() {\r\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\r\n        if (this.active) {\r\n            // We may be dealing with a texture reloading, so we must force update.\r\n            this._setDisplayedTexture(this.__texture);\r\n        }\r\n    };\r\n\r\n    onTextureSourceLoadError(e) {\r\n        this.emit('txError', e, this.__texture._source);\r\n    };\r\n\r\n    forceRenderUpdate() {\r\n        this.__core.setHasRenderUpdates(3);\r\n    }\r\n\r\n    onDisplayedTextureClippingChanged() {\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n    };\r\n\r\n    onPrecisionChanged() {\r\n        this._updateDimensions();\r\n    };\r\n\r\n    onDimensionsChanged(w, h) {\r\n        if (this.texture instanceof TextTexture) {\r\n            this.texture.w = w;\r\n            this.texture.h = h;\r\n            this.w = w;\r\n            this.h = h;\r\n        }\r\n    }\r\n\r\n    _updateDimensions() {\r\n        let w = this._getRenderWidth();\r\n        let h = this._getRenderHeight();\r\n\r\n        let unknownSize = false;\r\n        if (!w || !h) {\r\n            if (!this.__displayedTexture && this.__texture) {\r\n                // We use a 'max width' replacement instead in the ElementCore calcs.\r\n                // This makes sure that it is able to determine withinBounds.\r\n                w = w || this.__texture.mw;\r\n                h = h || this.__texture.mh;\r\n\r\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\r\n                    unknownSize = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.__core.setDimensions(w, h, unknownSize)) {\r\n            this._onResize();\r\n        }\r\n    }\r\n\r\n    _updateTextureCoords() {\r\n        if (this.displayedTexture && this.displayedTexture._source) {\r\n            let displayedTexture = this.displayedTexture;\r\n            let displayedTextureSource = this.displayedTexture._source;\r\n\r\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\r\n            if (displayedTexture.clipping) {\r\n                // Apply texture clipping.\r\n                let w = displayedTextureSource.getRenderWidth();\r\n                let h = displayedTextureSource.getRenderHeight();\r\n                let iw, ih, rw, rh;\r\n                iw = 1 / w;\r\n                ih = 1 / h;\r\n\r\n                if (displayedTexture.pw) {\r\n                    rw = (displayedTexture.pw) * iw;\r\n                } else {\r\n                    rw = (w - displayedTexture.px) * iw;\r\n                }\r\n\r\n                if (displayedTexture.ph) {\r\n                    rh = displayedTexture.ph * ih;\r\n                } else {\r\n                    rh = (h - displayedTexture.py) * ih;\r\n                }\r\n\r\n                iw *= (displayedTexture.px);\r\n                ih *= (displayedTexture.py);\r\n\r\n                tx1 = iw;\r\n                ty1 = ih;\r\n                tx2 = tx2 * rw + iw;\r\n                ty2 = ty2 * rh + ih;\r\n\r\n                tx1 = Math.max(0, tx1);\r\n                ty1 = Math.max(0, ty1);\r\n                tx2 = Math.min(1, tx2);\r\n                ty2 = Math.min(1, ty2);\r\n            }\r\n\r\n            if (displayedTextureSource._flipTextureY) {\r\n                let tempty = ty2;\r\n                ty2 = ty1;\r\n                ty1 = tempty;\r\n            }\r\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\r\n        }\r\n    }\r\n\r\n    getCornerPoints() {\r\n        return this.__core.getCornerPoints();\r\n    }\r\n\r\n    _unsetTagsParent() {\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                // Remove from treeTags.\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    let parentTreeTags = p.__treeTags.get(tag);\r\n                    parentTreeTags.delete(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        let tags = null;\r\n        let n = 0;\r\n        if (this.__treeTags) {\r\n            if (!this.__tagRoot) {\r\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\r\n                n = tags.length;\r\n\r\n                if (n > 0) {\r\n                    for (let i = 0; i < n; i++) {\r\n                        let tagSet = this.__treeTags.get(tags[i]);\r\n\r\n                        // Remove from treeTags.\r\n                        let p = this;\r\n                        while ((p = p.__parent)) {\r\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\r\n\r\n                            tagSet.forEach(function (comp) {\r\n                                parentTreeTags.delete(comp);\r\n                            });\r\n\r\n                            if (p.__tagRoot) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setTagsParent() {\r\n        // Just copy over the 'local' tags.\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.__treeTags && this.__treeTags.size) {\r\n            if (!this.__tagRoot) {\r\n                this.__treeTags.forEach((tagSet, tag) => {\r\n                    let p = this;\r\n                    while (!p.__tagRoot && (p = p.__parent)) {\r\n                        if (p.__tagRoot) {\r\n                            // Do not copy all subs.\r\n                        }\r\n                        if (!p.__treeTags) {\r\n                            p.__treeTags = new Map();\r\n                        }\r\n\r\n                        let s = p.__treeTags.get(tag);\r\n                        if (!s) {\r\n                            s = new Set();\r\n                            p.__treeTags.set(tag, s);\r\n                        }\r\n\r\n                        tagSet.forEach(function (comp) {\r\n                            s.add(comp);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    _getByTag(tag) {\r\n        if (!this.__treeTags) {\r\n            return [];\r\n        }\r\n        let t = this.__treeTags.get(tag);\r\n        return t ? Utils.setToArray(t) : [];\r\n    };\r\n\r\n    getTags() {\r\n        return this.__tags ? this.__tags : [];\r\n    };\r\n\r\n    setTags(tags) {\r\n        tags = tags.reduce((acc, tag) => {\r\n            return acc.concat(tag.split(' '));\r\n        }, []);\r\n\r\n        if (this.__ref) {\r\n            tags.push(this.__ref);\r\n        }\r\n\r\n        let i, n = tags.length;\r\n        let removes = [];\r\n        let adds = [];\r\n        for (i = 0; i < n; i++) {\r\n            if (!this.hasTag(tags[i])) {\r\n                adds.push(tags[i]);\r\n            }\r\n        }\r\n\r\n        let currentTags = this.tags || [];\r\n        n = currentTags.length;\r\n        for (i = 0; i < n; i++) {\r\n            if (tags.indexOf(currentTags[i]) == -1) {\r\n                removes.push(currentTags[i]);\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < removes.length; i++) {\r\n            this.removeTag(removes[i]);\r\n        }\r\n\r\n        for (i = 0; i < adds.length; i++) {\r\n            this.addTag(adds[i]);\r\n        }\r\n    }\r\n\r\n    addTag(tag) {\r\n        if (tag.indexOf(' ') === -1) {\r\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                this._throwError(\"Tag may not start with an upper case character.\");\r\n            }\r\n\r\n            this._addTag(tag);\r\n        } else {\r\n            const tags = tag.split(' ');\r\n            for (let i = 0, m = tags.length; i < m; i++) {\r\n                const tag = tags[i];\r\n\r\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                    this._throwError(\"Tag may not start with an upper case character.\");\r\n                }\r\n\r\n                this._addTag(tag);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addTag(tag) {\r\n        if (!this.__tags) {\r\n            this.__tags = [];\r\n        }\r\n        if (this.__tags.indexOf(tag) === -1) {\r\n            this.__tags.push(tag);\r\n\r\n            // Add to treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    removeTag(tag) {\r\n        let i = this.__tags.indexOf(tag);\r\n        if (i !== -1) {\r\n            this.__tags.splice(i, 1);\r\n\r\n            // Remove from treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    let list = p.__treeTags.get(tag);\r\n                    if (list) {\r\n                        list.delete(this);\r\n                    }\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    hasTag(tag) {\r\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\r\n    }\r\n\r\n    /**\r\n     * Returns one of the elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element}\r\n     */\r\n    _tag(tag) {\r\n        if (tag.indexOf(\".\") !== -1) {\r\n            return this.mtag(tag)[0];\r\n        } else {\r\n            if (this.__treeTags) {\r\n                let t = this.__treeTags.get(tag);\r\n                if (t) {\r\n                    const item = t.values().next();\r\n                    return item ? item.value : undefined;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    get tag() {\r\n        return this._tag;\r\n    }\r\n\r\n    set tag(t) {\r\n        this.tags = t;\r\n    }\r\n\r\n    /**\r\n     * Returns all elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element[]}\r\n     */\r\n    mtag(tag) {\r\n        let idx = tag.indexOf(\".\");\r\n        if (idx >= 0) {\r\n            let parts = tag.split('.');\r\n            let res = this._getByTag(parts[0]);\r\n            let level = 1;\r\n            let c = parts.length;\r\n            while (res.length && level < c) {\r\n                let resn = [];\r\n                for (let j = 0, n = res.length; j < n; j++) {\r\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\r\n                }\r\n\r\n                res = resn;\r\n                level++;\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._getByTag(tag);\r\n        }\r\n    };\r\n\r\n    stag(tag, settings) {\r\n        let t = this.mtag(tag);\r\n        let n = t.length;\r\n        for (let i = 0; i < n; i++) {\r\n            Base.patchObject(t[i], settings);\r\n        }\r\n    }\r\n\r\n    get tagRoot() {\r\n        return this.__tagRoot;\r\n    }\r\n\r\n    set tagRoot(v) {\r\n        if (this.__tagRoot !== v) {\r\n            if (!v) {\r\n                this._setTagsParent();\r\n            } else {\r\n                this._unsetTagsParent();\r\n            }\r\n\r\n            this.__tagRoot = v;\r\n        }\r\n    }\r\n\r\n    sel(path) {\r\n        const results = this.select(path);\r\n        if (results.length) {\r\n            return results[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    select(path) {\r\n        if (path.indexOf(\",\") !== -1) {\r\n            let selectors = path.split(',');\r\n            let res = [];\r\n            for (let i = 0; i < selectors.length; i++) {\r\n                res = res.concat(this._select(selectors[i]));\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._select(path);\r\n        }\r\n    }\r\n\r\n    _select(path) {\r\n        if (path === \"\") return [this];\r\n\r\n\r\n        let pointIdx = path.indexOf(\".\");\r\n        let arrowIdx = path.indexOf(\">\");\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            // Quick case.\r\n            return this.mtag(path);\r\n        }\r\n\r\n        // Detect by first char.\r\n        let isRef;\r\n        if (arrowIdx === 0) {\r\n            isRef = true;\r\n            path = path.substr(1);\r\n        } else if (pointIdx === 0) {\r\n            isRef = false;\r\n            path = path.substr(1);\r\n        } else {\r\n            isRef = false;\r\n        }\r\n\r\n        return this._selectChilds(path, isRef);\r\n    }\r\n\r\n    _selectChilds(path, isRef) {\r\n        const pointIdx = path.indexOf(\".\");\r\n        const arrowIdx = path.indexOf(\">\");\r\n\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            if (isRef) {\r\n                const ref = this.getByRef(path);\r\n                return ref ? [ref] : [];\r\n            } else {\r\n                return this.mtag(path);\r\n            }\r\n        }\r\n\r\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\r\n            let next;\r\n            const str = path.substr(0, pointIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(pointIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, false));\r\n            }\r\n            return total;\r\n        } else {\r\n            let next;\r\n            const str = path.substr(0, arrowIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(arrowIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, true));\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this.childList.getByRef(ref);\r\n    }\r\n\r\n    getLocationString() {\r\n        let i;\r\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\r\n        let localTags = this.getTags();\r\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\r\n        if (this.ref) {\r\n            str += \":[\" + i + \"]\" + this.ref;\r\n        } else if (localTags.length) {\r\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\r\n        } else {\r\n            str += \":[\" + i + \"]#\" + this.id;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    toString() {\r\n        let obj = this.getSettings();\r\n        return Element.getPrettyString(obj, \"\");\r\n    };\r\n\r\n    static getPrettyString(obj, indent) {\r\n        let children = obj.children;\r\n        delete obj.children;\r\n\r\n\r\n        // Convert singular json settings object.\r\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\r\n        let str = JSON.stringify(obj, function (k, v) {\r\n            if (colorKeys.indexOf(k) !== -1) {\r\n                return \"COLOR[\" + v.toString(16) + \"]\";\r\n            }\r\n            return v;\r\n        });\r\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\r\n\r\n        if (children) {\r\n            let childStr = \"\";\r\n            if (Utils.isObjectLiteral(children)) {\r\n                let refs = Object.keys(children);\r\n                childStr = \"\";\r\n                for (let i = 0, n = refs.length; i < n; i++) {\r\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\r\n                    delete children[refs[i]].ref;\r\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\r\n                }\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\r\n            } else {\r\n                let n = children.length;\r\n                childStr = \"[\";\r\n                for (let i = 0; i < n; i++) {\r\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\r\n                }\r\n                childStr += indent + \"]}\";\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\r\n            }\r\n\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    getSettings() {\r\n        let settings = this.getNonDefaults();\r\n\r\n        let children = this._children.get();\r\n        if (children) {\r\n            let n = children.length;\r\n            if (n) {\r\n                const childArray = [];\r\n                let missing = false;\r\n                for (let i = 0; i < n; i++) {\r\n                    childArray.push(children[i].getSettings());\r\n                    missing = missing || !children[i].ref;\r\n                }\r\n\r\n                if (!missing) {\r\n                    settings.children = {}\r\n                    childArray.forEach(child => {\r\n                        settings.children[child.ref] = child;\r\n                    });\r\n                } else {\r\n                    settings.children = childArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        settings.id = this.id;\r\n\r\n        return settings;\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let settings = {};\r\n\r\n        if (this.constructor !== Element) {\r\n            settings.type = this.constructor.name;\r\n        }\r\n\r\n        if (this.__ref) {\r\n            settings.ref = this.__ref;\r\n        }\r\n\r\n        if (this.__tags && this.__tags.length) {\r\n            settings.tags = this.__tags;\r\n        }\r\n\r\n        if (this.x !== 0) settings.x = this.x;\r\n        if (this.y !== 0) settings.y = this.y;\r\n        if (this.w !== 0) settings.w = this.w;\r\n        if (this.h !== 0) settings.h = this.h;\r\n\r\n        if (this.scaleX === this.scaleY) {\r\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\r\n        } else {\r\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\r\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\r\n        }\r\n\r\n        if (this.pivotX === this.pivotY) {\r\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\r\n        } else {\r\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\r\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\r\n        }\r\n\r\n        if (this.mountX === this.mountY) {\r\n            if (this.mountX !== 0) settings.mount = this.mountX;\r\n        } else {\r\n            if (this.mountX !== 0) settings.mountX = this.mountX;\r\n            if (this.mountY !== 0) settings.mountY = this.mountY;\r\n        }\r\n\r\n        if (this.alpha !== 1) settings.alpha = this.alpha;\r\n\r\n        if (!this.visible) settings.visible = false;\r\n\r\n        if (this.rotation !== 0) settings.rotation = this.rotation;\r\n\r\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\r\n        } else {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\r\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\r\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\r\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\r\n        }\r\n\r\n        if (this.zIndex) settings.zIndex = this.zIndex;\r\n\r\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\r\n\r\n        if (this.clipping) settings.clipping = this.clipping;\r\n\r\n        if (!this.clipbox) settings.clipbox = this.clipbox;\r\n\r\n        if (this.__texture) {\r\n            let tnd = this.__texture.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.texture = tnd;\r\n            }\r\n        }\r\n\r\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\r\n            let tnd = this.shader.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.shader = tnd;\r\n            }\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            if (this.texturizer.enabled) {\r\n                settings.renderToTexture = this.texturizer.enabled;\r\n            }\r\n            if (this.texturizer.lazy) {\r\n                settings.renderToTextureLazy = this.texturizer.lazy;\r\n            }\r\n            if (this.texturizer.colorize) {\r\n                settings.colorizeResultTexture = this.texturizer.colorize;\r\n            }\r\n            if (this.texturizer.renderOffscreen) {\r\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\r\n            }\r\n        }\r\n\r\n        return settings;\r\n    };\r\n\r\n    static getGetter(propertyPath) {\r\n        let getter = Element.PROP_GETTERS.get(propertyPath);\r\n        if (!getter) {\r\n            getter = new Function('obj', 'return obj.' + propertyPath);\r\n            Element.PROP_GETTERS.set(propertyPath, getter);\r\n        }\r\n        return getter;\r\n    }\r\n\r\n    static getSetter(propertyPath) {\r\n        let setter = Element.PROP_SETTERS.get(propertyPath);\r\n        if (!setter) {\r\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\r\n            Element.PROP_SETTERS.set(propertyPath, setter);\r\n        }\r\n        return setter;\r\n    }\r\n\r\n    get withinBoundsMargin() {\r\n        return this.__core._withinBoundsMargin;\r\n    }\r\n\r\n    _enableWithinBoundsMargin() {\r\n        // Iff enabled, this toggles the active flag.\r\n        if (this.__enabled) {\r\n            this._setActiveFlag();\r\n        }\r\n    }\r\n\r\n    _disableWithinBoundsMargin() {\r\n        // Iff active, this toggles the active flag.\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n        if (!Array.isArray(v) && v !== null) {\r\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\r\n        }\r\n        this.__core.boundsMargin = v;\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this.__core.boundsMargin;\r\n    }\r\n\r\n    get x() {\r\n        return this.__core.offsetX;\r\n    }\r\n\r\n    set x(v) {\r\n        this.__core.offsetX = v;\r\n    }\r\n\r\n    get y() {\r\n        return this.__core.offsetY;\r\n    }\r\n\r\n    set y(v) {\r\n        this.__core.offsetY = v;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._w = 0;\r\n            this.__core.funcW = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._w !== v) {\r\n                this.__core.disableFuncW();\r\n                this._w = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._h = 0;\r\n            this.__core.funcH = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._h !== v) {\r\n                this.__core.disableFuncH();\r\n                this._h = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get collision() {\r\n        return this._collision;\r\n    }\r\n\r\n    set collision(v) {\r\n        this._collision = v;\r\n    }\r\n\r\n    _updateCollision() {\r\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\r\n            /**\r\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\r\n             * This narrows down the search for elements with active collision.\r\n            */\r\n            this.__parent.collision = 2;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this.__core.scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        this.__core.scaleX = v;\r\n    }\r\n\r\n    get scaleY() {\r\n        return this.__core.scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        this.__core.scaleY = v;\r\n    }\r\n\r\n    get scale() {\r\n        return this.__core.scale;\r\n    }\r\n\r\n    set scale(v) {\r\n        this.__core.scale = v;\r\n    }\r\n\r\n    get pivotX() {\r\n        return this.__core.pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this.__core.pivotX = v;\r\n    }\r\n\r\n    get pivotY() {\r\n        return this.__core.pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this.__core.pivotY = v;\r\n    }\r\n\r\n    get pivot() {\r\n        return this.__core.pivot;\r\n    }\r\n\r\n    set pivot(v) {\r\n        this.__core.pivot = v;\r\n    }\r\n\r\n    get mountX() {\r\n        return this.__core.mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        this.__core.mountX = v;\r\n    }\r\n\r\n    get mountY() {\r\n        return this.__core.mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        this.__core.mountY = v;\r\n    }\r\n\r\n    get mount() {\r\n        return this.__core.mount;\r\n    }\r\n\r\n    set mount(v) {\r\n        this.__core.mount = v;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.__core.rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        this.__core.rotation = v;\r\n    }\r\n\r\n    get alpha() {\r\n        return this.__core.alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        this.__core.alpha = v;\r\n    }\r\n\r\n    get visible() {\r\n        return this.__core.visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        this.__core.visible = v;\r\n    }\r\n    \r\n    get colorUl() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set colorUl(v) {\r\n        this.__core.colorUl = v;\r\n    }\r\n\r\n    get colorUr() {\r\n        return this.__core.colorUr;\r\n    }\r\n\r\n    set colorUr(v) {\r\n        this.__core.colorUr = v;\r\n    }\r\n\r\n    get colorBl() {\r\n        return this.__core.colorBl;\r\n    }\r\n\r\n    set colorBl(v) {\r\n        this.__core.colorBl = v;\r\n    }\r\n\r\n    get colorBr() {\r\n        return this.__core.colorBr;\r\n    }\r\n\r\n    set colorBr(v) {\r\n        this.__core.colorBr = v;\r\n    }\r\n\r\n    get color() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorTop() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorTop(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n        }\r\n    }\r\n\r\n    get colorBottom() {\r\n        return this.colorBl;\r\n    }\r\n\r\n    set colorBottom(v) {\r\n        if (this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorLeft() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorLeft(v) {\r\n        if (this.colorUl !== v || this.colorBl !== v) {\r\n            this.colorUl = v;\r\n            this.colorBl = v;\r\n        }\r\n    }\r\n\r\n    get colorRight() {\r\n        return this.colorUr;\r\n    }\r\n\r\n    set colorRight(v) {\r\n        if (this.colorUr !== v || this.colorBr !== v) {\r\n            this.colorUr = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get zIndex() {return this.__core.zIndex}\r\n    set zIndex(v) {\r\n        this.__core.zIndex = v;\r\n    }\r\n\r\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\r\n    set forceZIndexContext(v) {\r\n        this.__core.forceZIndexContext = v;\r\n    }\r\n\r\n    get clipping() {return this.__core.clipping}\r\n    set clipping(v) {\r\n        this.__core.clipping = v;\r\n    }\r\n\r\n    get clipbox() {return this.__core.clipbox}\r\n    set clipbox(v) {\r\n        this.__core.clipbox = v;\r\n    }\r\n\r\n    get tags() {\r\n        return this.getTags();\r\n    }\r\n\r\n    set tags(v) {\r\n        if (!Array.isArray(v)) v = [v];\r\n        this.setTags(v);\r\n    }\r\n\r\n    set t(v) {\r\n        this.tags = v;\r\n    }\r\n\r\n    get _children() {\r\n        if (!this.__childList) {\r\n            this.__childList = new ElementChildList(this, false);\r\n        }\r\n        return this.__childList;\r\n    }\r\n\r\n    get childList() {\r\n        if (!this._allowChildrenAccess()) {\r\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\r\n        }\r\n        return this._children;\r\n    }\r\n\r\n    hasChildren() {\r\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return true;\r\n    }\r\n\r\n    get children() {\r\n        return this.childList.get();\r\n    }\r\n\r\n    set children(children) {\r\n        this.childList.patch(children);\r\n    }\r\n\r\n    add(o) {\r\n        return this.childList.a(o);\r\n    }\r\n\r\n    get p() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get parent() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get src() {\r\n        if (this.texture && this.texture instanceof ImageTexture) {\r\n            return this.texture._src;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    set src(v) {\r\n        const texture = new ImageTexture(this.stage);\r\n        texture.src = v;\r\n        this.texture = texture;\r\n    }\r\n\r\n    set mw(v) {\r\n        if (this.texture) {\r\n            this.texture.mw = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mw after setting a texture.');\r\n        }\r\n    }\r\n\r\n    set mh(v) {\r\n        if (this.texture) {\r\n            this.texture.mh = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mh after setting a texture.');\r\n        }\r\n    }\r\n\r\n    get rect() {\r\n        return (this.texture === this.stage.rectangleTexture);\r\n    }\r\n\r\n    set rect(v) {\r\n        if (v) {\r\n            this.texture = this.stage.rectangleTexture;\r\n        } else {\r\n            this.texture = null;\r\n        }\r\n    }\r\n\r\n    enableTextTexture() {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.texture = new TextTexture(this.stage);\r\n\r\n            if (!this.texture.w && !this.texture.h) {\r\n                // Inherit dimensions from element.\r\n                // This allows userland to set dimensions of the Element and then later specify the text.\r\n                this.texture.w = this.w;\r\n                this.texture.h = this.h;\r\n            }\r\n        }\r\n        return this.texture;\r\n    }\r\n\r\n    get text() {\r\n        if (this.texture && (this.texture instanceof TextTexture)) {\r\n            return this.texture;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set text(v) {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.enableTextTexture();\r\n        }\r\n        if (Utils.isString(v)) {\r\n            this.texture.text = v;\r\n        } else {\r\n            this.texture.patch(v);\r\n        }\r\n    }\r\n\r\n    set onUpdate(f) {\r\n        this.__core.onUpdate = f;\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this.__core.onAfterCalcs = f;\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this.__core.onAfterUpdate = f;\r\n    }\r\n\r\n    forceUpdate() {\r\n        // Make sure that the update loop is run.\r\n        this.__core._setHasUpdates();\r\n    }\r\n\r\n    get shader() {\r\n        return this.__core.shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        if (Utils.isObjectLiteral(v) && !v.type) {\r\n            // Setting properties on an existing shader.\r\n            if (this.shader) {\r\n                this.shader.patch(v);\r\n            }\r\n        } else {\r\n            const shader = Shader.create(this.stage, v);\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.removeElement(this.__core);\r\n            }\r\n\r\n            this.__core.shader = shader;\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.addElement(this.__core);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hasTexturizer() {\r\n        return !!this.__core._texturizer;\r\n    }\r\n\r\n    get renderToTexture() {\r\n        return this.rtt\r\n    }\r\n\r\n    set renderToTexture(v) {\r\n        this.rtt = v\r\n    }\r\n\r\n    get rtt() {\r\n        return this._hasTexturizer() && this.texturizer.enabled;\r\n    }\r\n\r\n    set rtt(v) {\r\n        this.texturizer.enabled = v;\r\n    }\r\n\r\n    get rttLazy() {\r\n        return this._hasTexturizer() && this.texturizer.lazy;\r\n    }\r\n\r\n    set rttLazy(v) {\r\n        this.texturizer.lazy = v;\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this.texturizer.renderOffscreen = v;\r\n    }\r\n\r\n    get colorizeResultTexture() {\r\n        return this._hasTexturizer() && this.texturizer.colorize;\r\n    }\r\n\r\n    set colorizeResultTexture(v) {\r\n        this.texturizer.colorize = v;\r\n    }\r\n\r\n    getTexture() {\r\n        return this.texturizer._getTextureSource();\r\n    }\r\n\r\n    get texturizer() {\r\n        return this.__core.texturizer;\r\n    }\r\n\r\n    patch(settings) {\r\n        let paths = Object.keys(settings);\r\n\r\n        for (let i = 0, n = paths.length; i < n; i++) {\r\n            let path = paths[i];\r\n            const v = settings[path];\r\n\r\n            const firstCharCode = path.charCodeAt(0);\r\n            if (Utils.isUcChar(firstCharCode)) {\r\n                // Ref.\r\n                const child = this.getByRef(path);\r\n                if (!child) {\r\n                    if (v !== undefined) {\r\n                        // Add to list immediately.\r\n                        let c;\r\n                        if (Utils.isObjectLiteral(v)) {\r\n                            // Catch this case to capture createMode flag.\r\n                            c = this.childList.createItem(v);\r\n                            c.patch(v);\r\n                        } else if (Utils.isObject(v)) {\r\n                            c = v;\r\n                        }\r\n                        if (c.isElement) {\r\n                            c.ref = path;\r\n                        }\r\n\r\n                        this.childList.a(c);\r\n                    }\r\n                } else {\r\n                    if (v === undefined) {\r\n                        if (child.parent) {\r\n                            child.parent.childList.remove(child);\r\n                        }\r\n                    } else if (Utils.isObjectLiteral(v)) {\r\n                        child.patch(v);\r\n                    } else if (v.isElement) {\r\n                        // Replace element by new element.\r\n                        v.ref = path;\r\n                        this.childList.replace(v, child);\r\n                    } else {\r\n                        this._throwError(\"Unexpected value for path: \" + path);\r\n                    }\r\n                }\r\n            } else {\r\n                // Property.\r\n                Base.patchObjectProperty(this, path, v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _throwError(message) {\r\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\r\n    }\r\n\r\n    animation(settings) {\r\n        return this.stage.animations.createAnimation(this, settings);\r\n    }\r\n\r\n    transition(property, settings = null) {\r\n        if (settings === null) {\r\n            return this._getTransition(property);\r\n        } else {\r\n            this._setTransition(property, settings);\r\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set transitions(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            this.transition(property, object[property]);\r\n        });\r\n    }\r\n\r\n    set smooth(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            let value = object[property];\r\n            if (Array.isArray(value)) {\r\n                this.setSmooth(property, value[0], value[1]);\r\n            } else {\r\n                this.setSmooth(property, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    fastForward(property) {\r\n        if (this._transitions) {\r\n            let t = this._transitions[property];\r\n            if (t && t.isTransition) {\r\n                t.finish();\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTransition(property) {\r\n        if (!this._transitions) {\r\n            this._transitions = {};\r\n        }\r\n        let t = this._transitions[property];\r\n        if (!t) {\r\n            // Create default transition.\r\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\r\n        } else if (t.isTransitionSettings) {\r\n            // Upgrade to 'real' transition.\r\n            t = new Transition(\r\n                this.stage.transitions,\r\n                t,\r\n                this,\r\n                property\r\n            );\r\n        }\r\n        this._transitions[property] = t;\r\n        return t;\r\n    }\r\n\r\n    _setTransition(property, settings) {\r\n        if (!settings) {\r\n            this._removeTransition(property);\r\n        } else {\r\n            if (Utils.isObjectLiteral(settings)) {\r\n                // Convert plain object to proper settings object.\r\n                settings = this.stage.transitions.createSettings(settings);\r\n            }\r\n\r\n            if (!this._transitions) {\r\n                this._transitions = {};\r\n            }\r\n\r\n            let current = this._transitions[property];\r\n            if (current && current.isTransition) {\r\n                // Runtime settings change.\r\n                current.settings = settings;\r\n                return current;\r\n            } else {\r\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\r\n                this._transitions[property] = settings;\r\n            }\r\n        }\r\n    }\r\n\r\n    _removeTransition(property) {\r\n        if (this._transitions) {\r\n            delete this._transitions[property];\r\n        }\r\n    }\r\n\r\n    getSmooth(property, v) {\r\n        let t = this._getTransition(property);\r\n        if (t && t.isAttached()) {\r\n            return t.targetValue;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setSmooth(property, v, settings) {\r\n        if (settings) {\r\n            this._setTransition(property, settings);\r\n        }\r\n        let t = this._getTransition(property);\r\n        t.start(v);\r\n        return t;\r\n    }\r\n\r\n    get flex() {\r\n        return this.__core.flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.__core.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this.__core.flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.__core.flexItem = v;\r\n    }\r\n\r\n    get ignoreRTL() {\r\n        return this.__core.ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this.__core.ignoreRTL = v;\r\n    }\r\n\r\n    static isColorProperty(property) {\r\n        return property.toLowerCase().indexOf(\"color\") >= 0;\r\n    }\r\n\r\n    static getMerger(property) {\r\n        if (Element.isColorProperty(property)) {\r\n            return StageUtils.mergeColors;\r\n        } else {\r\n            return StageUtils.mergeNumbers;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        const ref = [`${this.constructor.name}`];\r\n        const tree = {};\r\n        tree[ref] = {};\r\n\r\n        if (this.hasChildren()) {\r\n            Element.collectChildren(tree[ref], this.__childList);\r\n        } else {\r\n            tree[ref] = {...Element.getProperties(this)};\r\n        }\r\n        return tree;\r\n    }\r\n\r\n    static collectChildren(tree, children) {\r\n        const childList = children;\r\n        for (let i = 0, j = childList.length; i < j; i++) {\r\n            const element = childList.getAt(i);\r\n            const ref = `${element.__ref || `Element-${element.id}`}`;\r\n            const properties = this.getProperties(element);\r\n\r\n            tree[ref] = {...properties};\r\n\r\n            if (element.hasChildren()) {\r\n                tree[ref].children = {};\r\n                this.collectChildren(\r\n                    tree[ref].children, element.__childList\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    static getProperties(element) {\r\n        const props = {};\r\n        const list = [\r\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\r\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\r\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\r\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\r\n        ];\r\n        let n = list.length;\r\n\r\n        while (n--) {\r\n            let key = list[n];\r\n            const getBoolean = /^!{2}/;\r\n            const isFunction = /\\(\\)$/;\r\n\r\n            if (getBoolean.test(key)) {\r\n                key = key.substring(2, key.length);\r\n                props[key] = !!element[key];\r\n            } else if (isFunction.test(key)) {\r\n                key = key.substring(0, key.length - 2);\r\n                if (typeof element[key] === \"function\") {\r\n                    props[key] = element[key]();\r\n                }\r\n            } else {\r\n                props[key] = element[key];\r\n            }\r\n        }\r\n        return {...props, ...element.getNonDefaults()};\r\n    }\r\n}\r\n\r\n// This gives a slight performance benefit compared to extending EventEmitter.\r\nEventEmitter.addAsMixin(Element);\r\n\r\nElement.prototype.isElement = 1;\r\n\r\nElement.id = 1;\r\n\r\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_GETTERS = new Map();\r\n\r\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_SETTERS = new Map();\r\n\r\nimport Texture from \"./Texture.mjs\";\r\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\r\nimport TextTexture from \"../textures/TextTexture.mjs\";\r\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\r\nimport Transition from \"../animation/Transition.mjs\";\r\nimport ElementChildList from \"./ElementChildList.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StateMachine {\r\n\r\n    constructor() {\r\n        StateMachine.setupStateMachine(this);\r\n    }\r\n\r\n    static setupStateMachine(target) {\r\n        const targetConstructor = target.constructor;\r\n        const router = StateMachine.create(targetConstructor);\r\n        Object.setPrototypeOf(target, router.prototype);\r\n        target.constructor = targetConstructor;\r\n        target._initStateMachine();\r\n    }\r\n\r\n    /**\r\n     * Creates a state machine implementation.\r\n     * It extends the original type and should be used when creating new instances.\r\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\r\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\r\n     * @param {Class} type\r\n     * @returns {StateMachine}\r\n     */\r\n    static create(type) {\r\n        if (!type.hasOwnProperty('_sm')) {\r\n            // Only need to run once.\r\n            const stateMachineType = new StateMachineType(type);\r\n            type._sm = stateMachineType;\r\n        }\r\n\r\n        return type._sm.router;\r\n    }\r\n\r\n    /**\r\n     * Calls the specified method if it exists.\r\n     * @param {string} event\r\n     * @param {*...} args\r\n     */\r\n    fire(event, ...args) {\r\n        if (this._hasMethod(event)) {\r\n            return this[event](...args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current state path (for example \"Initialized.Loading\").\r\n     * @returns {string}\r\n     * @protected\r\n     */\r\n    _getState() {\r\n        return this._state.__path;\r\n    }\r\n\r\n    /**\r\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\r\n     * @param {string} statePath\r\n     * @param {string} currentStatePath\r\n     * @returns {Boolean}\r\n     * @protected\r\n     */\r\n    _inState(statePath, currentStatePath = this._state.__path) {\r\n        const state = this._sm.getStateByPath(statePath);\r\n        const currentState = this._sm.getStateByPath(currentStatePath);\r\n        const level = state.__level;\r\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\r\n        return (stateAtLevel === state);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is defined for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMember(name) {\r\n        return !!this.constructor.prototype[name];\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is a method for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMethod(name) {\r\n        const member = this.constructor.prototype[name];\r\n        return !!member && (typeof member === \"function\")\r\n    }\r\n\r\n    /**\r\n     * Switches to the specified state.\r\n     * @param {string} statePath\r\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\r\n     * @param {*[]} [args]\r\n     *   Args that are supplied in $enter and $exit events.\r\n     * @protected\r\n     */\r\n    _setState(statePath, args) {\r\n        const setStateId = ++this._setStateCounter;\r\n        this._setStateId = setStateId;\r\n\r\n        if (this._state.__path !== statePath) {\r\n            // Performance optimization.\r\n            let newState = this._sm._stateMap[statePath];\r\n            if (!newState) {\r\n                // Check for super state.\r\n                newState = this._sm.getStateByPath(statePath);\r\n            }\r\n\r\n            const prevState = this._state;\r\n\r\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\r\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\r\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\r\n                const sharedState = StateMachine._getSharedState(this._state, newState);\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path,\r\n                    sharedState: sharedState.__path\r\n                };\r\n                const sharedLevel = sharedState.__level;\r\n\r\n                if (hasDifferentExitMethod) {\r\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\r\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\r\n                        this.__setState(exitStates[i]);\r\n                        this._callExit(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasDifferentEnterMethod) {\r\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\r\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\r\n                        this.__setState(enterStates[i]);\r\n                        this._callEnter(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            this.__setState(newState);\r\n\r\n            if (this._changedState) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n\r\n                if (args) {\r\n                    this._changedState(context, ...args);\r\n                } else {\r\n                    this._changedState(context);\r\n                }\r\n            }\r\n\r\n            if (this._onStateChange) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n                this._onStateChange(context);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    _callEnter(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$enter) {\r\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\r\n                state.prototype.$enter.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _callExit(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$exit) {\r\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\r\n                state.prototype.$exit.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    __setState(state) {\r\n        this._state = state;\r\n        this._stateIndex = state.__index;\r\n        this.constructor = state;\r\n    }\r\n\r\n    _initStateMachine() {\r\n        this._state = null;\r\n        this._stateIndex = 0;\r\n        this._setStateCounter = 0;\r\n        this._sm = this._routedType._sm;\r\n        this.__setState(this._sm.getStateByPath(\"\"));\r\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\r\n        this._callEnter(this._state, [], context);\r\n        this._onStateChange = undefined;\r\n    }\r\n\r\n    /**\r\n     * Between multiple member names, select the one specified in the deepest state.\r\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\r\n     * @param {string[]} memberNames\r\n     * @returns {string|undefined}\r\n     * @protected\r\n     */\r\n    _getMostSpecificHandledMember(memberNames) {\r\n        let cur = this._state;\r\n        do {\r\n            for (let i = 0, n = memberNames.length; i < n; i++) {\r\n                const memberName = memberNames[i];\r\n                if (!cur.__parent) {\r\n                    if (cur.prototype[memberName]) {\r\n                        return memberName;\r\n                    }\r\n                } else {\r\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\r\n                    if (this[alias]) {\r\n                        return memberName;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.__parent;\r\n        } while (cur);\r\n    }\r\n\r\n    static _getStatesUntilLevel(state, level) {\r\n        const states = [];\r\n        while (state.__level > level) {\r\n            states.push(state);\r\n            state = state.__parent;\r\n        }\r\n        return states;\r\n    }\r\n\r\n    static _getSharedState(state1, state2) {\r\n        const state1Array = StateMachine._getAncestorStates(state1);\r\n        const state2Array = StateMachine._getAncestorStates(state2);\r\n        const n = Math.min(state1Array.length, state2Array.length);\r\n        for (let i = 0; i < n; i++) {\r\n            if (state1Array[i] !== state2Array[i]) {\r\n                return state1Array[i - 1];\r\n            }\r\n        }\r\n        return state1Array[n - 1];\r\n    }\r\n\r\n    static _getAncestorStates(state) {\r\n        const result = [];\r\n        do {\r\n            result.push(state);\r\n        } while(state = state.__parent);\r\n        return result.reverse();\r\n    }\r\n\r\n    static _getStateAtLevel(state, level) {\r\n        if (level > state.__level) {\r\n            return undefined;\r\n        }\r\n\r\n        while(level < state.__level) {\r\n            state = state.__parent;\r\n        }\r\n        return state;\r\n    }\r\n}\r\n\r\nclass StateMachineType {\r\n\r\n    constructor(type) {\r\n        this._type = type;\r\n        this._router = null;\r\n\r\n        this.init();\r\n    }\r\n\r\n    get router() {\r\n        return this._router;\r\n    }\r\n\r\n    init() {\r\n        this._router = this._createRouter();\r\n\r\n        this._stateMap = this._getStateMap();\r\n\r\n        this._addStateMemberDelegatorsToRouter();\r\n\r\n    }\r\n\r\n    _createRouter() {\r\n        const type = this._type;\r\n\r\n        const router = class StateMachineRouter extends type {\r\n            constructor() {\r\n                super(...arguments);\r\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\r\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\r\n                }\r\n            }\r\n        };\r\n        router._isRouter = true;\r\n        router.prototype._routedType = type;\r\n        router.original = type;\r\n\r\n        this._mixinStateMachineMethods(router);\r\n\r\n        return router;\r\n    }\r\n\r\n    _mixinStateMachineMethods(router) {\r\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\r\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\r\n        for (let i = 0, n = names.length; i < n; i++) {\r\n            const name = names[i];\r\n            if (name !== \"constructor\") {\r\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\r\n                Object.defineProperty(router.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addStateMemberDelegatorsToRouter() {\r\n        const members = this._getAllMemberNames();\r\n\r\n        members.forEach(member => {\r\n            this._addMemberRouter(member);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @note We are generating code because it yields much better performance.\r\n     */\r\n    _addMemberRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member);\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        let type = undefined;\r\n        descriptors.forEach(descriptor => {\r\n            if (descriptor) {\r\n                const descType = this._getDescriptorType(descriptor);\r\n                if (type && (type !== descType)) {\r\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\r\n                    return;\r\n                }\r\n                type = descType;\r\n            }\r\n        });\r\n\r\n        switch(type) {\r\n            case \"method\":\r\n                this._addMethodRouter(member, descriptors, aliases);\r\n                break;\r\n            case \"getter\":\r\n                this._addGetterSetterRouters(member);\r\n                break;\r\n            case \"property\":\r\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\r\n                break;\r\n        }\r\n    }\r\n\r\n    _getDescriptor(state, member, isValid = () => true) {\r\n        let type = state;\r\n        let curState = state;\r\n\r\n        do {\r\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\r\n            if (descriptor) {\r\n                if (isValid(descriptor)) {\r\n                    descriptor._source = curState;\r\n                    return descriptor;\r\n                }\r\n            }\r\n            type = Object.getPrototypeOf(type);\r\n            if (type && type.hasOwnProperty('__state')) {\r\n                curState = type;\r\n            }\r\n        } while(type && type.prototype);\r\n        return undefined;\r\n    }\r\n\r\n    _getDescriptorType(descriptor) {\r\n        if (descriptor.get || descriptor.set) {\r\n            return 'getter';\r\n        } else {\r\n            if (typeof descriptor.value === \"function\") {\r\n                return 'method';\r\n            } else {\r\n                return 'property';\r\n            }\r\n        }\r\n    }\r\n\r\n    static _supportsSpread() {\r\n        if (this.__supportsSpread === undefined) {\r\n            this.__supportsSpread = false;\r\n            try {\r\n                const func = new Function(\"return [].concat(...arguments);\");\r\n                func();\r\n                this.__supportsSpread = true;\r\n            } catch(e) {}\r\n        }\r\n        return this.__supportsSpread;\r\n    }\r\n\r\n    _addMethodRouter(member, descriptors, aliases) {\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        const supportsSpread = StateMachineType._supportsSpread();\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    if (supportsSpread) {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\r\n                    } else {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\r\n                    }\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            if (supportsSpread) {\r\n                code.push(`return this[\"${cur}\"](...arguments);`);\r\n            } else {\r\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\r\n            }\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n\r\n        const descriptor = {value: router};\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _addGetterSetterRouters(member) {\r\n        const getter = this._getGetterRouter(member);\r\n        const setter = this._getSetterRouter(member);\r\n        const descriptor = {\r\n            get: getter,\r\n            set: setter\r\n        };\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _getGetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`return this[\"${cur}\"];`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n        return router;\r\n    }\r\n\r\n    _getSetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`this[\"${cur}\"] = arg;`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([\"arg\"], functionBody);\r\n        return router;\r\n    }\r\n\r\n    static getStateMemberAlias(path, member) {\r\n        return \"$\" + (path ? path + \".\" : \"\") + member;\r\n    }\r\n\r\n    _getAllMemberNames() {\r\n        const stateMap = this._stateMap;\r\n        const map = Object.keys(stateMap);\r\n        let members = new Set();\r\n        map.forEach(statePath => {\r\n            if (statePath === \"\") {\r\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\r\n                return;\r\n            }\r\n            const state = stateMap[statePath];\r\n            const names = this._getStateMemberNames(state);\r\n            names.forEach(name => {\r\n                members.add(name);\r\n            })\r\n        });\r\n        return [...members];\r\n    }\r\n\r\n    _getStateMemberNames(state) {\r\n        let type = state;\r\n        let members = new Set();\r\n        const isRoot = this._type === state;\r\n        do {\r\n            const names = this._getStateMemberNamesForType(type);\r\n            names.forEach(name => {\r\n                members.add(name)\r\n            });\r\n\r\n            type = Object.getPrototypeOf(type);\r\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\r\n\r\n        return members;\r\n    }\r\n\r\n    _getStateMemberNamesForType(type) {\r\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\r\n        return memberNames.filter(memberName => {\r\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\r\n        });\r\n    }\r\n\r\n    static _isStateLocalMember(memberName) {\r\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\r\n    }\r\n\r\n    getStateByPath(statePath) {\r\n        if (this._stateMap[statePath]) {\r\n            return this._stateMap[statePath];\r\n        }\r\n\r\n        // Search for closest match.\r\n        const parts = statePath.split(\".\");\r\n        while(parts.pop()) {\r\n            const statePath = parts.join(\".\");\r\n            if (this._stateMap[statePath]) {\r\n                return this._stateMap[statePath];\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStateMap() {\r\n        if (!this._stateMap) {\r\n            this._stateMap = this._createStateMap();\r\n        }\r\n        return this._stateMap;\r\n    }\r\n\r\n    _createStateMap() {\r\n        const stateMap = {};\r\n        this._addState(this._type, null, \"\", stateMap);\r\n        return stateMap;\r\n    }\r\n\r\n    _addState(state, parentState, name, stateMap) {\r\n        state.__state = true;\r\n        state.__name = name;\r\n\r\n        this._addStaticStateProperty(state, parentState);\r\n\r\n        const parentPath = (parentState ? parentState.__path : \"\");\r\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\r\n        state.__path = path;\r\n        state.__level = parentState ? parentState.__level + 1 : 0;\r\n        state.__parent = parentState;\r\n        state.__index = Object.keys(stateMap).length;\r\n        stateMap[path] = state;\r\n\r\n        const states = state._states;\r\n        if (states) {\r\n            const isInheritedFromParent = (parentState && parentState._states === states);\r\n            if (!isInheritedFromParent) {\r\n                const subStates = state._states();\r\n                subStates.forEach(subState => {\r\n                    const stateName = StateMachineType._getStateName(subState);\r\n                    this._addState(subState, state, stateName, stateMap);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    static _getStateName(state) {\r\n        const name = state.name;\r\n\r\n        const index = name.indexOf('$');\r\n        if (index > 0) {\r\n            // Strip off rollup name suffix.\r\n            return name.substr(0, index);\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    _addStaticStateProperty(state, parentState) {\r\n        if (parentState) {\r\n            const isClassStateLevel = parentState && !parentState.__parent;\r\n            if (isClassStateLevel) {\r\n                this._router[state.__name] = state;\r\n            } else {\r\n                parentState[state.__name] = state;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Element from \"../tree/Element.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StateMachine from \"./StateMachine.mjs\";\r\n\r\n/**\r\n * @extends StateMachine\r\n */\r\nexport default class Component extends Element {\r\n\r\n    constructor(stage, properties) {\r\n        super(stage);\r\n\r\n        // Encapsulate tags to prevent leaking.\r\n        this.tagRoot = true;\r\n\r\n        if (Utils.isObjectLiteral(properties)) {\r\n            Object.assign(this, properties);\r\n        }\r\n\r\n        this.__initialized = false;\r\n        this.__firstActive = false;\r\n        this.__firstEnable = false;\r\n\r\n        this.__signals = undefined;\r\n\r\n        this.__passSignals = undefined;\r\n\r\n        this.__construct();\r\n\r\n        // Quick-apply template.\r\n        const func = this.constructor.getTemplateFunc(this);\r\n        func.f(this, func.a);\r\n\r\n        this._build();\r\n    }\r\n\r\n    __start() {\r\n        StateMachine.setupStateMachine(this);\r\n        this._onStateChange = Component.prototype.__onStateChange;\r\n    }\r\n\r\n    get state() {\r\n        return this._getState();\r\n    }\r\n\r\n    __onStateChange() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    _refocus() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    static bindProp(name, func = null) {\r\n        return {__propertyBinding: true, __name: name, __func: func};\r\n    }\r\n\r\n    __bindProperty(propObj, targetObj, targetProp) {\r\n        // 1. find binding position: find object and property name to be bound\r\n        const obj = targetObj;\r\n        const prop = targetProp;\r\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\r\n\r\n        // 2. create setters for every given dependency\r\n        for (let i = 0; i < propDependencies.length; i++) {\r\n            const propName = propDependencies[i];\r\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\r\n\r\n            if (!this.hasOwnProperty(propName)) {\r\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\r\n                Object.defineProperty(this, propName, {\r\n                    set: (value) => {\r\n                        this[`__prop_${propName}`] = value;\r\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\r\n                            __obj[__prop] = __func(this);\r\n                        }\r\n                    },\r\n                    get: () => this[`__prop_${propName}`]\r\n                });\r\n            } else {\r\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a high-performance template patcher.\r\n     */\r\n    static getTemplateFunc(ctx) {\r\n        // We need a different template function per patch id.\r\n        const name = \"_templateFunc\";\r\n\r\n        // Be careful with class-based static inheritance.\r\n        const hasName = '__has' + name;\r\n        if (this[hasName] !== this) {\r\n            this[hasName] = this;\r\n            this[name] = this.parseTemplate(this._template(ctx));\r\n        }\r\n        return this[name];\r\n    }\r\n\r\n    static parseTemplate(obj) {\r\n        const context = {\r\n            loc: [],\r\n            store: [],\r\n            rid: 0\r\n        };\r\n\r\n        this.parseTemplateRec(obj, context, \"element\");\r\n\r\n        const code = context.loc.join(\";\\n\");\r\n        const f = new Function(\"element\", \"store\", code);\r\n        return {f: f, a: context.store};\r\n    }\r\n\r\n    static parseTemplateRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            let value = obj[key];\r\n            if (Utils.isUcChar(key.charCodeAt(0))) {\r\n                // Value must be expanded as well.\r\n                if (Utils.isObjectLiteral(value)) {\r\n                    // Ref.\r\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\r\n                    let type = value.type ? value.type : Element;\r\n                    if (type === Element) {\r\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\r\n                    } else {\r\n                        store.push(type);\r\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                    }\r\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\r\n                    context.rid++;\r\n\r\n                    // Enter sub.\r\n                    this.parseTemplateRec(value, context, childCursor);\r\n\r\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\r\n                } else if (Utils.isObject(value)) {\r\n                    // Dynamic assignment.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\r\n                }\r\n            } else {\r\n                if (key === \"text\") {\r\n                    const propKey = cursor + \"__text\";\r\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\r\n                    if (value.__propertyBinding === true) {\r\n                        // Allow binding entire objects to text property\r\n                        store.push(value);\r\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                    } else {\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\r\n                    const shaderCursor = `${cursor}[\"shader\"]`\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    this.parsePropertyBindings(value, context, shaderCursor);\r\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\r\n                    const propKey = cursor + \"__texture\";\r\n                    const type = value.type;\r\n                    if (type) {\r\n                        store.push(type);\r\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\r\n                    } else {\r\n                        loc.push(`${propKey} = ${cursor}.texture`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else {\r\n                    // Property;\r\n                    if (Utils.isNumber(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                    } else if (Utils.isBoolean(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                        // Dynamic assignment.\r\n                        // Because literal objects may contain dynamics, we store the full object.\r\n                        store.push(value);\r\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    } else {\r\n                        // String etc.\r\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parseTemplatePropRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isNumber(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                } else if (Utils.isBoolean(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                    // Dynamic assignment.\r\n                    // Because literal objects may contain dynamics, we store the full object.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                } else {\r\n                    // String etc.\r\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parsePropertyBindings(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _onSetup() {\r\n        if (!this.__initialized) {\r\n            this._setup();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n    }\r\n\r\n    _onAttach() {\r\n        if (!this.__initialized) {\r\n            this.__init();\r\n            this.__initialized = true;\r\n        }\r\n\r\n        this._attach();\r\n    }\r\n\r\n    _attach() {\r\n    }\r\n\r\n    _onDetach() {\r\n        this._detach();\r\n    }\r\n\r\n    _detach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n        if (!this.__firstEnable) {\r\n            this._firstEnable();\r\n            this.__firstEnable = true;\r\n        }\r\n\r\n        this._enable();\r\n    }\r\n\r\n    _firstEnable() {\r\n    }\r\n\r\n    _enable() {\r\n    }\r\n\r\n    _onDisabled() {\r\n        this._disable();\r\n    }\r\n\r\n    _disable() {\r\n    }\r\n\r\n    _onActive() {\r\n        if (!this.__firstActive) {\r\n            this._firstActive();\r\n            this.__firstActive = true;\r\n        }\r\n\r\n        this._active();\r\n    }\r\n\r\n    _firstActive() {\r\n    }\r\n\r\n    _active() {\r\n    }\r\n\r\n    _onInactive() {\r\n        this._inactive();\r\n    }\r\n\r\n    _inactive() {\r\n    }\r\n\r\n    get application() {\r\n        return this.stage.application;\r\n    }\r\n\r\n    __construct() {\r\n        this._construct();\r\n    }\r\n\r\n    _construct() {\r\n    }\r\n\r\n    _build() {\r\n    }\r\n\r\n    __init() {\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n    }\r\n\r\n    _focus(newTarget, prevTarget) {\r\n    }\r\n\r\n    _unfocus(newTarget) {\r\n    }\r\n\r\n    _focusChange(target, newTarget) {\r\n    }\r\n\r\n    _getFocused() {\r\n        // Override to delegate focus to child components.\r\n        return this;\r\n    }\r\n\r\n    _setFocusSettings(settings) {\r\n        // Override to add custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    _handleFocusSettings(settings) {\r\n        // Override to react on custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    static _template() {\r\n        return {};\r\n    }\r\n\r\n    hasFinalFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && path.length && path[path.length - 1] === this;\r\n    }\r\n\r\n    hasFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && (path.indexOf(this) >= 0);\r\n    }\r\n\r\n    get cparent() {\r\n        return Component.getParent(this);\r\n    }\r\n\r\n    seekAncestorByType(type) {\r\n        let c = this.cparent;\r\n        while (c) {\r\n            if (c.constructor === type) {\r\n                return c;\r\n            }\r\n            c = c.cparent;\r\n        }\r\n    }\r\n\r\n    getSharedAncestorComponent(element) {\r\n        let ancestor = this.getSharedAncestor(element);\r\n        while (ancestor && !ancestor.isComponent) {\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return ancestor;\r\n    }\r\n\r\n    get signals() {\r\n        return this.__signals;\r\n    }\r\n\r\n    set signals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        this.__signals = v;\r\n    }\r\n\r\n    set alterSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__signals) {\r\n            this.__signals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__signals[key];\r\n            } else {\r\n                this.__signals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get passSignals() {\r\n        return this.__passSignals || {};\r\n    }\r\n\r\n    set passSignals(v) {\r\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\r\n    }\r\n\r\n    set alterPassSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__passSignals) {\r\n            this.__passSignals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__passSignals[key];\r\n            } else {\r\n                this.__passSignals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signals the parent of the specified event.\r\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\r\n     * @param {string} event\r\n     * @param {...*} args\r\n     */\r\n    signal(event, ...args) {\r\n        return this._signal(event, args);\r\n    }\r\n\r\n    _signal(event, args) {\r\n        const signalParent = this._getParentSignalHandler();\r\n        if (signalParent) {\r\n            if (this.__signals) {\r\n                let fireEvent = this.__signals[event];\r\n                if (fireEvent === false) {\r\n                    // Ignore event.\r\n                    return;\r\n                }\r\n                if (fireEvent) {\r\n                    if (fireEvent === true) {\r\n                        fireEvent = event;\r\n                    }\r\n \r\n                    if (Utils.isFunction(fireEvent)) {\r\n                        return fireEvent(...args);\r\n                    }\r\n\r\n                    if (signalParent._hasMethod(fireEvent)) {\r\n                        return signalParent[fireEvent](...args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\r\n            if (passSignal) {\r\n                // Bubble up.\r\n                if (passSignal && passSignal !== true) {\r\n                    // Replace signal name.\r\n                    event = passSignal;\r\n                }\r\n\r\n                return signalParent._signal(event, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getParentSignalHandler() {\r\n        return this.cparent ? this.cparent._getSignalHandler() : null;\r\n    }\r\n\r\n    _getSignalHandler() {\r\n        if (this._signalProxy) {\r\n            return this.cparent ? this.cparent._getSignalHandler() : null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return false;\r\n    }\r\n\r\n    fireAncestors(name, ...args) {\r\n        if (!name.startsWith('$')) {\r\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\r\n        }\r\n\r\n        const parent = this._getParentSignalHandler();\r\n        if (parent) {\r\n            return parent._doFireAncestors(name, args);\r\n        }\r\n    }\r\n\r\n    _doFireAncestors(name, args) {\r\n        if (this._hasMethod(name)) {\r\n            return this.fire(name, ...args);\r\n        } else {\r\n            const signalParent = this._getParentSignalHandler();\r\n            if (signalParent) {\r\n                return signalParent._doFireAncestors(name, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    static collectSubComponents(subs, element) {\r\n        if (element.hasChildren()) {\r\n            const childList = element.__childList;\r\n            for (let i = 0, n = childList.length; i < n; i++) {\r\n                const child = childList.getAt(i);\r\n                if (child.isComponent) {\r\n                    subs.push(child);\r\n                } else {\r\n                    Component.collectSubComponents(subs, child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getComponent(element) {\r\n        let parent = element;\r\n        while (parent && !parent.isComponent) {\r\n            parent = parent.parent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    static getParent(element) {\r\n        return Component.getComponent(element.parent);\r\n    }\r\n}\r\n\r\nComponent.prototype.isComponent = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n\r\n        this.ctx = ctx;\r\n\r\n        this.quadTextures = [];\r\n\r\n        this.quadElements = [];\r\n    }\r\n\r\n    get length() {\r\n        return this.quadTextures.length;\r\n    }\r\n\r\n    reset() {\r\n        this.quadTextures = [];\r\n        this.quadElements = [];\r\n        this.dataLength = 0;\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quadElements[index]._element;\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quadElements[index];\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quadTextures[index];\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.w) {\r\n            // Render texture;\r\n            return nativeTexture.w;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.w;\r\n        }\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.h) {\r\n            // Render texture;\r\n            return nativeTexture.h;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class WebGLCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\r\n        // We do not (want to) handle memory overflow.\r\n        const byteSize = ctx.stage.getOption('bufferMemory');\r\n\r\n        this.dataLength = 0;\r\n\r\n        this.data = new ArrayBuffer(byteSize);\r\n        this.floats = new Float32Array(this.data);\r\n        this.uints = new Uint32Array(this.data);\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return index * 80;\r\n    }\r\n\r\n    getQuadContents() {\r\n        // Debug: log contents of quad buffer.\r\n        let floats = this.floats;\r\n        let uints = this.uints;\r\n        let lines = [];\r\n        for (let i = 1; i <= this.length; i++) {\r\n            let str = 'entry ' + i + ': ';\r\n            for (let j = 0; j < 4; j++) {\r\n                let b = i * 20 + j * 4;\r\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\r\n            }\r\n            lines.push(str);\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n\r\n        this.ctx = ctx;\r\n        this.shader = shader;\r\n        this.shaderOwner = shaderOwner;\r\n        this.renderTextureInfo = renderTextureInfo;\r\n        this.scissor = scissor;\r\n        this.index = index;\r\n        this.length = 0;\r\n\r\n    }\r\n\r\n    get quads() {\r\n        return this.ctx.renderState.quads;\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quads.getTexture(this.index + index);\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quads.getElementCore(this.index + index);\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quads.getElement(this.index + index);\r\n    }\r\n\r\n    getElementWidth(index) {\r\n        return this.getElement(index).renderWidth;\r\n    }\r\n\r\n    getElementHeight(index) {\r\n        return this.getElement(index).renderHeight;\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        return this.quads.getTextureWidth(this.index + index);\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        return this.quads.getTextureHeight(this.index + index);\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.w;\r\n        } else {\r\n            return this.ctx.stage.w;\r\n        }\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.h;\r\n        } else {\r\n            return this.ctx.stage.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n\r\n        this.extraAttribsDataByteOffset = 0;\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return this.quads.getAttribsDataByteOffset(this.index + index);\r\n    }\r\n\r\n    /**\r\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\r\n     * @param x\r\n     * @param y\r\n     * @return {number[]}\r\n     */\r\n    getNormalRenderTextureCoords(x, y) {\r\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\r\n        coords[0] /= this.getRenderWidth();\r\n        coords[1] /= this.getRenderHeight();\r\n        coords[0] = coords[0] * 2 - 1;\r\n        coords[1] = 1 - coords[1] * 2;\r\n        return coords;\r\n    }\r\n\r\n    getProjection() {\r\n        if (this.renderTextureInfo === null) {\r\n            return this.ctx.renderExec._projection;\r\n        } else {\r\n            return this.renderTextureInfo.nativeTexture.projection;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.renderState = ctx.renderState;\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n    }\r\n\r\n    destroy() {\r\n        this.ctx = null;\r\n        this.renderState = null;\r\n        this.gl = null;\r\n\r\n        delete this.ctx;\r\n        delete this.renderState;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        this._bindRenderTexture(null);\r\n        this._setScissor(null);\r\n        this._clearRenderTexture();\r\n    }\r\n\r\n    execute() {\r\n        this._reset();\r\n\r\n        let qops = this.renderState.quadOperations;\r\n\r\n        let i = 0, j = 0, n = qops.length;\r\n        while (i < n) {\r\n            this._processQuadOperation(qops[i]);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    _processQuadOperation(quadOperation) {\r\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\r\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\r\n            return;\r\n        }\r\n\r\n        this._setupQuadOperation(quadOperation);\r\n        this._execQuadOperation(quadOperation);\r\n\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n    }\r\n\r\n    _execQuadOperation(op) {\r\n        // Set render texture.\r\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\r\n\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this._bindRenderTexture(nativeTexture);\r\n        }\r\n\r\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\r\n            this._setScissor(null);\r\n            this._clearRenderTexture();\r\n            op.renderTextureInfo.cleared = true;\r\n            this._setScissor(op.scissor);\r\n        } else {\r\n            this._setScissor(op.scissor);\r\n        }\r\n\r\n        this._renderQuadOperation(op);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        this._renderTexture = renderTexture;\r\n    }\r\n\r\n    _clearRenderTexture(renderTexture) {\r\n    }\r\n\r\n    _setScissor(area) {\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\n\r\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        super(ctx)\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let gl = this.gl;\r\n\r\n        // Create new sharable buffer for params.\r\n        this._attribsBuffer = gl.createBuffer();\r\n\r\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\r\n\r\n        // Init webgl arrays.\r\n        let allIndices = new Uint16Array(maxQuads * 6);\r\n\r\n        // fill the indices with the quads to draw.\r\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\r\n            allIndices[i] = j;\r\n            allIndices[i + 1] = j + 1;\r\n            allIndices[i + 2] = j + 2;\r\n            allIndices[i + 3] = j;\r\n            allIndices[i + 4] = j + 2;\r\n            allIndices[i + 5] = j + 3;\r\n        }\r\n\r\n        // The quads buffer can be (re)used to draw a range of quads.\r\n        this._quadsBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\r\n\r\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\r\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\r\n\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.gl.deleteBuffer(this._attribsBuffer);\r\n        this.gl.deleteBuffer(this._quadsBuffer);\r\n\r\n        this.gl = null;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        super._reset();\r\n\r\n        let gl = this.gl;\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.enable(gl.BLEND);\r\n        gl.disable(gl.DEPTH_TEST);\r\n\r\n        this._stopShaderProgram();\r\n        this._setupBuffers();\r\n    }\r\n\r\n    _setupBuffers() {\r\n        let gl = this.gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n        super._setupQuadOperation(quadOperation);\r\n        this._useShaderProgram(quadOperation.shader, quadOperation);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            shader.beforeDraw(op);\r\n            shader.draw(op);\r\n            shader.afterDraw(op);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {WebGLShader} shader;\r\n     * @param {CoreQuadOperation} operation;\r\n     */\r\n    _useShaderProgram(shader, operation) {\r\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\r\n            if (this._currentShaderProgram) {\r\n                this._currentShaderProgram.stopProgram();\r\n            }\r\n            shader.useProgram();\r\n            this._currentShaderProgram = shader;\r\n        }\r\n        shader.setupUniforms(operation);\r\n    }\r\n\r\n    _stopShaderProgram() {\r\n        if (this._currentShaderProgram) {\r\n            // The currently used shader program should be stopped gracefully.\r\n            this._currentShaderProgram.stopProgram();\r\n            this._currentShaderProgram = null;\r\n        }\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        super._bindRenderTexture(renderTexture);\r\n\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\r\n        } else {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\r\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        super._clearRenderTexture();\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            let glClearColor = this.ctx.stage.getClearColor();\r\n            if (glClearColor) {\r\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\r\n                gl.clear(gl.COLOR_BUFFER_BIT);\r\n            }\r\n        } else {\r\n            // Clear texture.\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n    }\r\n\r\n    _setScissor(area) {\r\n        super._setScissor(area);\r\n\r\n        if (this._scissor === area) {\r\n            return;\r\n        }\r\n        this._scissor = area;\r\n\r\n        let gl = this.gl;\r\n        if (!area) {\r\n            gl.disable(gl.SCISSOR_TEST);\r\n        } else {\r\n            gl.enable(gl.SCISSOR_TEST);\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            let y = area[1];\r\n            if (this._renderTexture === null) {\r\n                // Flip.\r\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\r\n            }\r\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreRenderState {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.stage = ctx.stage;\r\n\r\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\r\n\r\n        this.renderer = ctx.stage.renderer;\r\n\r\n        this.quads = this.renderer.createCoreQuadList(ctx);\r\n\r\n    }\r\n\r\n    reset() {\r\n        this._renderTextureInfo = null;\r\n\r\n        this._scissor = null;\r\n\r\n        this._shader = null;\r\n\r\n        this._shaderOwner = null;\r\n\r\n        this._realShader = null;\r\n\r\n        this._check = false;\r\n\r\n        this.quadOperations = [];\r\n\r\n        this._texturizer = null;\r\n\r\n        this._texturizerTemporary = false;\r\n\r\n        this._quadOperation = null;\r\n\r\n        this.quads.reset();\r\n\r\n        this._temporaryTexturizers = [];\r\n        \r\n        this._isCachingTexturizer = false;\r\n\r\n    }\r\n\r\n    get length() {\r\n        return this.quads.quadTextures.length;\r\n    }\r\n\r\n    setShader(shader, owner) {\r\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\r\n            // Same shader owner: active shader is also the same.\r\n            // Prevent any shader usage to save performance.\r\n\r\n            this._realShader = shader;\r\n\r\n            if (shader.useDefault()) {\r\n                // Use the default shader when possible to prevent unnecessary program changes.\r\n                shader = this.defaultShader;\r\n            }\r\n            if (this._shader !== shader || this._shaderOwner !== owner) {\r\n                this._shader = shader;\r\n                this._shaderOwner = owner;\r\n                this._check = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderTextureInfo() {\r\n        return this._renderTextureInfo;\r\n    }\r\n\r\n    setScissor(area) {\r\n        if (this._scissor !== area) {\r\n            if (area) {\r\n                this._scissor = area;\r\n            } else {\r\n                this._scissor = null;\r\n            }\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    getScissor() {\r\n        return this._scissor;\r\n    }\r\n\r\n    setRenderTextureInfo(renderTextureInfo) {\r\n        if (this._renderTextureInfo !== renderTextureInfo) {\r\n            this._renderTextureInfo = renderTextureInfo;\r\n            this._scissor = null;\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texturizer to be drawn during subsequent addQuads.\r\n     * @param {ElementTexturizer} texturizer\r\n     */\r\n    setTexturizer(texturizer, cache = false) {\r\n        this._texturizer = texturizer;\r\n        this._cacheTexturizer = cache;\r\n    }\r\n\r\n    set isCachingTexturizer(v) {\r\n        this._isCachingTexturizer = v;\r\n    }\r\n\r\n    get isCachingTexturizer() {\r\n        return this._isCachingTexturizer;\r\n    }\r\n\r\n    addQuad(elementCore) {\r\n        if (!this._quadOperation) {\r\n            this._createQuadOperation();\r\n        } else if (this._check && this._hasChanges()) {\r\n            this._finishQuadOperation();\r\n            this._check = false;\r\n        }\r\n\r\n        let nativeTexture = null;\r\n        if (this._texturizer) {\r\n            nativeTexture = this._texturizer.getResultTexture();\r\n\r\n            if (!this._cacheTexturizer) {\r\n                // We can release the temporary texture immediately after finalizing this quad operation.\r\n                this._temporaryTexturizers.push(this._texturizer);\r\n            }\r\n        }\r\n\r\n        if (!nativeTexture) {\r\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\r\n        }\r\n\r\n        if (this._renderTextureInfo) {\r\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\r\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\r\n                this._renderTextureInfo.nativeTexture = nativeTexture;\r\n                this._renderTextureInfo.offset = this.length;\r\n            } else {\r\n                // It is not possible to reuse another texture when there is more than one quad.\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n            this._renderTextureInfo.empty = false;\r\n        }\r\n\r\n        this.quads.quadTextures.push(nativeTexture);\r\n        this.quads.quadElements.push(elementCore);\r\n\r\n        this._quadOperation.length++;\r\n\r\n        this.renderer.addQuad(this, this.quads, this.length - 1)\r\n    }\r\n\r\n    finishedRenderTexture() {\r\n        if (this._renderTextureInfo.nativeTexture) {\r\n            // There was only one texture drawn in this render texture.\r\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\r\n            // (it should exactly span this render texture).\r\n            if (!this._isRenderTextureReusable()) {\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isRenderTextureReusable() {\r\n        const offset = this._renderTextureInfo.offset;\r\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\r\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\r\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\r\n    }\r\n\r\n    _hasChanges() {\r\n        let q = this._quadOperation;\r\n        if (this._shader !== q.shader) return true;\r\n        if (this._shaderOwner !== q.shaderOwner) return true;\r\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\r\n        if (this._scissor !== q.scissor) {\r\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _finishQuadOperation(create = true) {\r\n        if (this._quadOperation) {\r\n            if (this._quadOperation.length || this._shader.addEmpty()) {\r\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\r\n                    // Ignore empty clipping regions.\r\n                    this.quadOperations.push(this._quadOperation);\r\n                }\r\n            }\r\n\r\n            if (this._temporaryTexturizers.length) {\r\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\r\n                    // We can now reuse these render-to-textures in subsequent stages.\r\n                    // Huge performance benefit when filtering (fast blur).\r\n                    this._temporaryTexturizers[i].releaseRenderTexture();\r\n                }\r\n                this._temporaryTexturizers = [];\r\n            }\r\n\r\n            this._quadOperation = null;\r\n        }\r\n\r\n        if (create) {\r\n            this._createQuadOperation();\r\n        }\r\n    }\r\n\r\n    _createQuadOperation() {\r\n        this._quadOperation = this.renderer.createCoreQuadOperation(\r\n            this.ctx,\r\n            this._shader,\r\n            this._shaderOwner,\r\n            this._renderTextureInfo,\r\n            this._scissor,\r\n            this.length\r\n        );\r\n        this._check = false;\r\n    }\r\n\r\n    finish() {\r\n        if (this._quadOperation) {\r\n            // Add remaining.\r\n            this._finishQuadOperation(false);\r\n        }\r\n\r\n        this.renderer.finishRenderState(this);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Base functionality for shader setup/destroy.\r\n */\r\nexport default class WebGLShaderProgram {\r\n\r\n    constructor(vertexShaderSource, fragmentShaderSource) {\r\n\r\n        this.vertexShaderSource = vertexShaderSource;\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n\r\n        this._program = null;\r\n        this.gl = null;\r\n\r\n        this._uniformLocations = new Map();\r\n        this._attributeLocations = new Map();\r\n\r\n        this._currentUniformValues = {};\r\n    }\r\n\r\n    compile(gl) {\r\n        if (this._program) return;\r\n\r\n        this.gl = gl;\r\n\r\n        this._program = gl.createProgram();\r\n\r\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\r\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\r\n\r\n        gl.attachShader(this._program, glVertShader);\r\n        gl.attachShader(this._program, glFragShader);\r\n        gl.linkProgram(this._program);\r\n\r\n        // if linking fails, then log and cleanup\r\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\r\n            console.error('[Lightning] Error: Could not initialize shader.');\r\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\r\n            console.error('[Lightning] gl.getError()', gl.getError());\r\n\r\n            // if there is a program info log, log it\r\n            if (gl.getProgramInfoLog(this._program) !== '') {\r\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\r\n            }\r\n\r\n            gl.deleteProgram(this._program);\r\n            this._program = null;\r\n        }\r\n\r\n        // clean up some shaders\r\n        gl.deleteShader(glVertShader);\r\n        gl.deleteShader(glFragShader);\r\n    }\r\n\r\n    _glCompile(type, src) {\r\n        let shader = this.gl.createShader(type);\r\n\r\n        this.gl.shaderSource(shader, src);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\r\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\r\n            let idx = 0;\r\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    getUniformLocation(name) {\r\n        let location = this._uniformLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getUniformLocation(this._program, name);\r\n            this._uniformLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    getAttribLocation(name) {\r\n        let location = this._attributeLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getAttribLocation(this._program, name);\r\n            this._attributeLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._program) {\r\n            this.gl.deleteProgram(this._program);\r\n        }\r\n\r\n        this._attributeLocations = null;\r\n        this._currentUniformValues = null;\r\n        this.fragmentShaderSource = null;\r\n        this._program = null;\r\n        this.gl = null;\r\n        this._uniformLocations = null;\r\n        this.vertexShaderSource = null;  \r\n\r\n        delete this.vertexShaderSource;\r\n        delete this._program;        \r\n        delete this._currentUniformValues;\r\n        delete this.fragmentShaderSource;\r\n        delete this.gl;\r\n        delete this._uniformLocations;\r\n        delete this._attributeLocations;\r\n\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program;\r\n    }\r\n\r\n    get compiled() {\r\n        return !!this._program;\r\n    }\r\n\r\n    _valueEquals(v1, v2) {\r\n        // Uniform value is either a typed array or a numeric value.\r\n        if (v1.length && v2.length) {\r\n            for (let i = 0, n = v1.length; i < n; i++) {\r\n                if (v1[i] !== v2[i]) return false;\r\n            }\r\n            return true;\r\n        } else {\r\n            return (v1 === v2);\r\n        }\r\n    }\r\n\r\n    _valueClone(v) {\r\n        if (v.length) {\r\n            return v.slice(0);\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setUniformValue(name, value, glFunction) {\r\n        let v = this._currentUniformValues[name];\r\n        if (v === undefined || !this._valueEquals(v, value)) {\r\n            let clonedValue = this._valueClone(value);\r\n            this._currentUniformValues[name] = clonedValue;\r\n\r\n            let loc = this.getUniformLocation(name);\r\n            if (loc) {\r\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\r\n                if (isMatrix) {\r\n                    glFunction.call(this.gl, loc, false, clonedValue);\r\n                } else {\r\n                    glFunction.call(this.gl, loc, clonedValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class WebGLShader extends Shader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        const stage = ctx.stage;\r\n\r\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\r\n        if (!this._program) {\r\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\r\n\r\n            // Let the vbo context perform garbage collection.\r\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\r\n        }\r\n\r\n        this.gl = stage.gl;\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program.glProgram;\r\n    }\r\n\r\n    _init() {\r\n        if (!this._initialized) {\r\n            this.initialize();\r\n            this._initialized = true;\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this._program.compile(this.gl);\r\n    }\r\n\r\n    get initialized() {\r\n        return this._initialized;\r\n    }\r\n\r\n    _uniform(name) {\r\n        return this._program.getUniformLocation(name);\r\n    }\r\n\r\n    _attrib(name) {\r\n        return this._program.getAttribLocation(name);\r\n    }\r\n\r\n    _setUniform(name, value, glFunction) {\r\n        this._program.setUniformValue(name, value, glFunction);\r\n    }\r\n\r\n    useProgram() {\r\n        this._init();\r\n        this.gl.useProgram(this.glProgram);\r\n        this.beforeUsage();\r\n        this.enableAttribs();\r\n    }\r\n\r\n    stopProgram() {\r\n        this.afterUsage();\r\n        this.disableAttribs();\r\n    }\r\n\r\n    hasSameProgram(other) {\r\n        // For performance reasons, we first check for identical references.\r\n        return (other && ((other === this) || (other._program === this._program)));\r\n    }\r\n\r\n    beforeUsage() {\r\n        // Override to set settings other than the default settings (blend mode etc).\r\n    }\r\n\r\n    afterUsage() {\r\n        // All settings changed in beforeUsage should be reset here.\r\n    }\r\n\r\n    enableAttribs() {\r\n\r\n    }\r\n\r\n    disableAttribs() {\r\n\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 0;\r\n    }\r\n\r\n    getVertexAttribPointerOffset(operation) {\r\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\r\n        // operation.extraAttribsBufferByteOffset.\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        // Set all shader-specific uniforms.\r\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\r\n        // The uniforms are shared by all shaders that have the same type (and shader program).\r\n    }\r\n\r\n    _getProjection(operation) {\r\n        return operation.getProjection();\r\n    }\r\n\r\n    getFlipY(operation) {\r\n        return this._getProjection(operation)[1] < 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n    cleanup() {\r\n        this._initialized = false;\r\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../WebGLShader.mjs\";\r\n\r\nexport default class DefaultShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            \r\n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDefaultShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDefaultShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Renderer {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._defaultShader = undefined;\r\n    }\r\n\r\n    gc(aggressive) {\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    getDefaultShader(ctx = this.stage.ctx) {\r\n        if (!this._defaultShader) {\r\n            this._defaultShader = this._createDefaultShader(ctx);\r\n        }\r\n        return this._defaultShader;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n    }\r\n\r\n    isValidShaderType(shaderType) {\r\n        return (shaderType.prototype instanceof this._getShaderBaseType());\r\n    }\r\n\r\n    createShader(ctx, settings) {\r\n        const shaderType = settings.type;\r\n        // If shader type is not correct, use a different platform.\r\n        if (!this.isValidShaderType(shaderType)) {\r\n            const convertedShaderType = this._getShaderAlternative(shaderType);\r\n            if (!convertedShaderType) {\r\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\r\n                return this._createDefaultShader(ctx);\r\n            }\r\n            return new convertedShaderType(ctx);\r\n        } else {\r\n            const shader = new shaderType(ctx);\r\n            Base.patchObject(this, settings);\r\n            return shader;\r\n        }\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return this.getDefaultShader();\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\r\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\r\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport WebGLShader from \"./WebGLShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\n\r\nexport default class WebGLRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this.shaderPrograms = new Map();\r\n        this._compressedTextureExtensions = {\r\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\r\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\r\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\r\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\r\n        }\r\n    }\r\n\r\n    getCompressedTextureExtensions() {\r\n        return this._compressedTextureExtensions\r\n    }\r\n\r\n    destroy() {\r\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\r\n\r\n        this.shaderPrograms = null;\r\n        this._compressedTextureExtensions = null;\r\n\r\n        delete this.shaderPrograms;\r\n        delete this._compressedTextureExtensions;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return WebGLShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getWebGL && shaderType.getWebGL();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new WebGLCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new WebGLCoreRenderExecutor(ctx);\r\n    }\r\n\r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const gl = this.stage.gl;\r\n        const glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        glTexture.params = {};\r\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\r\n\r\n        // We need a specific framebuffer for every render texture.\r\n        glTexture.framebuffer = gl.createFramebuffer();\r\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeRenderTexture(glTexture) {\r\n        let gl = this.stage.gl;\r\n        gl.deleteFramebuffer(glTexture.framebuffer);\r\n        gl.deleteTexture(glTexture);\r\n    }\r\n\r\n    _getBytesPerPixel(fmt, type) {\r\n        const gl = this.stage.gl;\r\n\r\n        if (fmt === gl.RGBA) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 4;\r\n\r\n                case gl.UNSIGNED_SHORT_4_4_4_4:\r\n                    return 2;\r\n\r\n                case gl.UNSIGNED_SHORT_5_5_5_1:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGBA format');\r\n            }\r\n        }\r\n        else if (fmt === gl.RGB) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 3;\r\n\r\n                case gl.UNSIGNED_BYTE_5_6_5:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGB format');\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\r\n        }\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        const gl = this.stage.gl;\r\n\r\n        const source = options.source;\r\n        let compressed = false;\r\n        if (options.renderInfo) {\r\n            compressed = options.renderInfo.compressed || false\r\n        }\r\n\r\n        const format = {\r\n            premultiplyAlpha: true,\r\n            hasAlpha: true\r\n        };\r\n\r\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\r\n            format.premultiplyAlpha = options.premultiplyAlpha;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('flipBlueRed')) {\r\n            format.flipBlueRed = options.flipBlueRed;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('hasAlpha')) {\r\n            format.hasAlpha = options.hasAlpha;\r\n        }\r\n\r\n        if (!format.hasAlpha) {\r\n            format.premultiplyAlpha = false;\r\n        }\r\n\r\n        format.texParams = options.texParams || {}\r\n        format.texOptions = options.texOptions || {}\r\n\r\n        let glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\r\n\r\n        if (Utils.isNode) {\r\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\r\n        }\r\n\r\n        const texParams = format.texParams;\r\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n\r\n        Object.keys(texParams).forEach(key => {\r\n            const value = texParams[key];\r\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\r\n        });\r\n\r\n        if (compressed) {\r\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\r\n            return glTexture;\r\n        }\r\n         \r\n        const texOptions = format.texOptions;\r\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\r\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\r\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\r\n        if (options && options.imageRef) {\r\n            texOptions.imageRef = options.imageRef;\r\n        }\r\n        \r\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\r\n        \r\n        glTexture.params = Utils.cloneObjShallow(texParams);\r\n        glTexture.options = Utils.cloneObjShallow(texOptions);\r\n\r\n        // calculate bytes per pixel for vram usage tracking\r\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        let offset = (index * 20);\r\n        const elementCore = quads.quadElements[index];\r\n\r\n        let r = elementCore._renderContext;\r\n\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        const mca = StageUtils.mergeColorAlpha;\r\n\r\n        if (r.tb !== 0 || r.tc !== 0) {\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta;\r\n            floats[offset++] = r.py + elementCore._w * r.tc;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        } else {\r\n            // Simple.\r\n            let cx = r.px + elementCore._w * r.ta;\r\n            let cy = r.py + elementCore._h * r.td;\r\n\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        }\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        return ((floats[offset] === 0) &&\r\n            (floats[offset + 1] === 0) &&\r\n            (floats[offset + 2] === 0) &&\r\n            (floats[offset + 3] === 0) &&\r\n            (uints[offset + 4] === 0xFFFFFFFF) &&\r\n            (floats[offset + 5] === renderTextureInfo.w) &&\r\n            (floats[offset + 6] === 0) &&\r\n            (floats[offset + 7] === 1) &&\r\n            (floats[offset + 8] === 0) &&\r\n            (uints[offset + 9] === 0xFFFFFFFF) &&\r\n            (floats[offset + 10] === renderTextureInfo.w) &&\r\n            (floats[offset + 11] === renderTextureInfo.h) &&\r\n            (floats[offset + 12] === 1) &&\r\n            (floats[offset + 13] === 1) &&\r\n            (uints[offset + 14] === 0xFFFFFFFF) &&\r\n            (floats[offset + 15] === 0) &&\r\n            (floats[offset + 16] === renderTextureInfo.h) &&\r\n            (floats[offset + 17] === 0) &&\r\n            (floats[offset + 18] === 1) &&\r\n            (uints[offset + 19] === 0xFFFFFFFF));\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n        // Set extra shader attribute data.\r\n        let offset = renderState.length * 80;\r\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\r\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\r\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\r\n            offset += extra;\r\n            if (extra) {\r\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\r\n            }\r\n        }\r\n        renderState.quads.dataLength = offset;\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        const gl = this.stage.gl;\r\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\r\n        const precision = renderTexture.precision;\r\n        gl.copyTexSubImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            precision * (options.sx || 0),\r\n            precision * (options.sy || 0),\r\n            precision * (options.x || 0),\r\n            precision * (options.y || 0),\r\n            precision * (options.w || renderTexture.ow),\r\n            precision * (options.h || renderTexture.oh));\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class C2dCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this.renderContexts = [];\r\n        this.modes = [];\r\n    }\r\n\r\n    setRenderContext(index, v) {\r\n        this.renderContexts[index] = v;\r\n    }\r\n\r\n    setSimpleTc(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 1;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 1);\r\n        }\r\n    }\r\n\r\n    setWhite(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 2;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 2);\r\n        }\r\n    }\r\n\r\n    getRenderContext(index) {\r\n        return this.renderContexts[index];\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return (this.modes[index] & 1);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return (this.modes[index] & 2);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    getRenderContext(index) {\r\n        return this.quads.getRenderContext(this.index + index);\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return this.quads.getSimpleTc(this.index + index);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return this.quads.getWhite(this.index + index);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport Utils from \"../../tree/Utils.mjs\";\r\n\r\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    init() {\r\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            const target = this._renderTexture || this._mainRenderTexture;\r\n            shader.beforeDraw(op, target);\r\n            shader.draw(op, target);\r\n            shader.afterDraw(op, target);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        const ctx = this._getContext();\r\n\r\n        let clearColor = [0, 0, 0, 0];\r\n        if (this._mainRenderTexture.ctx === ctx) {\r\n            clearColor = this.ctx.stage.getClearColor();\r\n        }\r\n\r\n        const renderTexture = ctx.canvas;\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\r\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\r\n        } else {\r\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\r\n            // Do not use fillRect because it produces artifacts.\r\n            ctx.globalCompositeOperation = 'copy';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.globalCompositeOperation = 'source-over';\r\n        }\r\n    }\r\n    \r\n    _getContext() {\r\n        if (this._renderTexture) {\r\n            return this._renderTexture.ctx;\r\n        } else {\r\n            return this._mainRenderTexture.ctx;\r\n        } \r\n    }\r\n\r\n    _restoreContext() {\r\n        const ctx = this._getContext();\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx._scissor = null;\r\n    }\r\n\r\n    _setScissor(area) {\r\n        const ctx = this._getContext();\r\n\r\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\r\n            // Clipping is stored in the canvas context state.\r\n            // We can't reset clipping alone so we need to restore the full context.\r\n            this._restoreContext();\r\n\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            if (area) {\r\n                ctx.beginPath();\r\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n                ctx.closePath();\r\n                ctx.clip();\r\n            }\r\n            ctx._scissor = area;\r\n        }\r\n    }\r\n\r\n    static _equalScissorAreas(canvas, area, current) {\r\n        if (!area) {\r\n            area = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        if (!current) {\r\n            current = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        return Utils.equalValues(area, current)\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class C2dShader extends Shader {\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dShader from \"../C2dShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class DefaultShader extends C2dShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\r\n        this._tintManager = this.ctx.stage.renderer.tintManager;\r\n    }\r\n\r\n    draw(operation, target) {\r\n        const ctx = target.ctx;\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const tx = operation.getTexture(i);\r\n            const vc = operation.getElementCore(i);\r\n            const rc = operation.getRenderContext(i);\r\n            const white = operation.getWhite(i);\r\n            const stc = operation.getSimpleTc(i);\r\n\r\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\r\n            const precision = this.ctx.stage.getRenderPrecision();\r\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\r\n\r\n            const rect = (tx === this._rectangleTexture);\r\n            const info = {operation, target, index: i, rect};\r\n\r\n            if (rect) {\r\n                // Check for gradient.\r\n                if (white) {\r\n                    ctx.fillStyle = 'white';\r\n                } else {\r\n                    this._setColorGradient(ctx, vc);\r\n                }\r\n\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n                ctx.fillRect(0, 0, vc.w, vc.h);\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            } else {\r\n                // @todo: set image smoothing based on the texture.\r\n\r\n                // @todo: optimize by registering whether identity texcoords are used.\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n\r\n                // @todo: test if rounding yields better performance.\r\n\r\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\r\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\r\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\r\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\r\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\r\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\r\n\r\n                let colorize = !white;\r\n                if (colorize) {\r\n                    // @todo: cache the tint texture for better performance.\r\n\r\n                    // Draw to intermediate texture with background color/gradient.\r\n                    // This prevents us from having to create a lot of render texture canvases.\r\n\r\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\r\n                    let color = vc._colorUl;\r\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\r\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\r\n                    }\r\n\r\n                    const alpha = ((color / 16777216) | 0) / 255.0;\r\n                    ctx.globalAlpha *= alpha;\r\n\r\n                    const rgb = color & 0x00FFFFFF;\r\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\r\n\r\n                    // Actually draw result.\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                } else {\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                }\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\r\n        let color = vc._colorUl;\r\n        let gradient;\r\n        //@todo: quick single color check.\r\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\r\n\r\n        if (vc._colorUl === vc._colorUr) {\r\n            if (vc._colorBl === vc._colorBr) {\r\n                if (vc._colorUl === vc.colorBl) {\r\n                    // Single color.\r\n                } else {\r\n                    // Vertical gradient.\r\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\r\n                    if (transparency) {\r\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\r\n                    } else {\r\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                // Not supported gradient.\r\n            }\r\n        } else {\r\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\r\n                // Horizontal gradient.\r\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\r\n                if (transparency) {\r\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\r\n                } else {\r\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (gradient) {\r\n            ctx.fillStyle = gradient;\r\n        } else {\r\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\r\n        }\r\n    }\r\n\r\n    _beforeDrawEl(info) {\r\n    }\r\n\r\n    _afterDrawEl(info) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class C2dTextureTintManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._usedMemory = 0;\r\n        this._cachedNativeTextures = new Set();\r\n    }\r\n\r\n    destroy() {\r\n        this.gc(true);\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    delete(nativeTexture) {\r\n        // Should be called when native texture is cleaned up.\r\n        if (this._hasCache(nativeTexture)) {\r\n            const cache = this._getCache(nativeTexture);\r\n            const prevMemUsage = cache.memoryUsage;\r\n            cache.clear();\r\n            this._cachedNativeTextures.delete(nativeTexture);\r\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\r\n        }\r\n    }\r\n\r\n    getTintTexture(nativeTexture, color) {\r\n        const frame = this.stage.frameCounter;\r\n\r\n        this._cachedNativeTextures.add(nativeTexture);\r\n\r\n        const cache = this._getCache(nativeTexture);\r\n\r\n        const item = cache.get(color);\r\n        item.lf = frame;\r\n\r\n        if (item.tx) {\r\n            if (nativeTexture.update > item.u) {\r\n                // Native texture was updated in the mean time: renew.\r\n                this._tintTexture(item.tx, nativeTexture, color)\r\n            }\r\n\r\n            return item.tx;\r\n        } else {\r\n            const before = cache.memoryUsage;\r\n\r\n            // Find blanco tint texture.\r\n            let target = cache.reuseTexture(frame);\r\n            if (target) {\r\n                target.ctx.clearRect(0, 0, target.width, target.height);\r\n            } else {\r\n                // Allocate new.\r\n                target = document.createElement('canvas');\r\n                target.width = nativeTexture.w;\r\n                target.height = nativeTexture.h;\r\n                target.ctx = target.getContext('2d');\r\n            }\r\n\r\n            this._tintTexture(target, nativeTexture, color);\r\n            cache.set(color, target, frame);\r\n\r\n            const after = cache.memoryUsage;\r\n\r\n            if (after !== before) {\r\n                this._addMemoryUsage(after - before);\r\n            }\r\n\r\n            return target;\r\n        }\r\n    }\r\n\r\n    _tintTexture(target, source, color) {\r\n        let col = color.toString(16);\r\n        while (col.length < 6) {\r\n            col = \"0\" + col;\r\n        }\r\n        target.ctx.fillStyle = '#' + col;\r\n        target.ctx.globalCompositeOperation = 'copy';\r\n        target.ctx.fillRect(0, 0, source.w, source.h);\r\n        target.ctx.globalCompositeOperation = 'multiply';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n\r\n        // Alpha-mix the texture.\r\n        target.ctx.globalCompositeOperation = 'destination-in';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n    }\r\n\r\n    _hasCache(nativeTexture) {\r\n        return !!nativeTexture._tintCache;\r\n    }\r\n\r\n    _getCache(nativeTexture) {\r\n        if (!nativeTexture._tintCache) {\r\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\r\n        }\r\n        return nativeTexture._tintCache;\r\n    }\r\n\r\n    gc(aggressive = false) {\r\n        const frame = this.stage.frameCounter;\r\n        let delta = 0;\r\n        this._cachedNativeTextures.forEach(texture => {\r\n            const cache = this._getCache(texture);\r\n            if (aggressive) {\r\n                delta += cache.memoryUsage;\r\n                cache.clear();\r\n            } else {\r\n                const before = cache.memoryUsage;\r\n                cache.cleanup(frame);\r\n                cache.releaseBlancoTextures();\r\n                delta += (cache.memoryUsage - before);\r\n            }\r\n        });\r\n\r\n        if (aggressive) {\r\n            this._cachedNativeTextures.clear();\r\n        }\r\n\r\n        if (delta) {\r\n            this._addMemoryUsage(delta);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass C2dTintCache {\r\n\r\n    constructor(nativeTexture) {\r\n        this._tx = nativeTexture;\r\n        this._colors = new Map();\r\n        this._blancoTextures = null;\r\n        this._lastCleanupFrame = 0;\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get memoryUsage() {\r\n        return this._memTextures * this._tx.w * this._tx.h;\r\n    }\r\n\r\n    releaseBlancoTextures() {\r\n        this._memTextures -= this._blancoTextures.length;\r\n        this._blancoTextures = [];\r\n    }\r\n\r\n    clear() {\r\n        // Dereference the textures.\r\n        this._blancoTextures = null;\r\n        this._colors.clear();\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get(color) {\r\n        let item = this._colors.get(color);\r\n        if (!item) {\r\n            item = {lf: -1, tx: undefined, u: -1};\r\n            this._colors.set(color, item);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    set(color, texture, frame) {\r\n        const item = this.get(color);\r\n        item.lf = frame;\r\n        item.tx = texture;\r\n        item.u = frame;\r\n        this._memTextures++;\r\n    }\r\n\r\n    cleanup(frame) {\r\n        // We only need to clean up once per frame.\r\n        if (this._lastCleanupFrame !== frame) {\r\n\r\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\r\n            this._blancoTextures = [];\r\n\r\n            this._colors.forEach((item, color) => {\r\n                // Clean up entries that were not used last frame.\r\n                if (item.lf < frame - 1) {\r\n                    if (item.tx) {\r\n                        // Keep as reusable blanco texture.\r\n                        this._blancoTextures.push(item.tx);\r\n                    }\r\n                    this._colors.delete(color);\r\n                }\r\n            });\r\n\r\n            this._lastCleanupFrame = frame;\r\n        }\r\n    }\r\n\r\n    reuseTexture(frame) {\r\n        // Try to reuse textures, because creating them every frame is expensive.\r\n        this.cleanup(frame);\r\n        if (this._blancoTextures && this._blancoTextures.length) {\r\n            this._memTextures--;\r\n            return this._blancoTextures.pop();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\r\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\r\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport C2dShader from \"./C2dShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\r\n\r\nexport default class C2dRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this.tintManager = new TextureTintManager(stage);\r\n\r\n        this.setupC2d(this.stage.c2d.canvas);\r\n    }\r\n\r\n    destroy() {\r\n        this.tintManager.destroy();\r\n\r\n        this.tintManager = null;\r\n        delete this.tintManager;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return C2dShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getC2d && shaderType.getC2d();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new C2dCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new C2dCoreRenderExecutor(ctx);\r\n    }\r\n    \r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = pw;\r\n        canvas.height = ph;\r\n        this.setupC2d(canvas);\r\n        return canvas;\r\n    }\r\n    \r\n    freeRenderTexture(nativeTexture) {\r\n        this.tintManager.delete(nativeTexture);\r\n    }\r\n\r\n    gc(aggressive) {\r\n        this.tintManager.gc(aggressive);\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        // For canvas, we do not need to upload.\r\n        if (options.source.buffer) {\r\n            // Convert RGBA buffer to canvas.\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = options.w;\r\n            canvas.height = options.h;\r\n\r\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\r\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\r\n            return canvas;\r\n        }\r\n\r\n        return options.source;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.tintManager.delete(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        // Render context changes while traversing so we save it by ref.\r\n        const elementCore = quads.quadElements[index];\r\n        quads.setRenderContext(index, elementCore._renderContext);\r\n        quads.setWhite(index, elementCore.isWhite());\r\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        // @todo: check render coords/matrix, maybe move this to core?\r\n        return false;\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n    }\r\n\r\n    setupC2d(canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.ctx = ctx;\r\n\r\n        ctx._scissor = null;\r\n\r\n        // Save base state so we can restore the defaults later.\r\n        canvas.ctx.save();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\r\n\r\nexport default class SparkShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    if (glTexture.options && glTexture.options.imageRef) {\r\n                        let elementPostion = (i > 0) ? (i - 1) : i;\r\n                        const precision = this.ctx.stage.getOption('precision');\r\n                        let vc = operation.getElementCore(elementPostion);\r\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                    } else {\r\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    }\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            if (pos < length) {\r\n                if (glTexture.options && glTexture.options.imageRef) {\r\n                    const precision = this.ctx.stage.getOption('precision');\r\n                    let vc = operation.getElementCore(pos);\r\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                } else {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nSparkShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nSparkShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\r\nimport SparkShader from \"./shaders/SparkShader.mjs\";\r\n\r\nexport default class SparkRenderer extends WebGLRenderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new SparkShader(ctx);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        global.beginDrawing();\r\n        let ret = super.createCoreRenderExecutor(ctx);\r\n        global.endDrawing();\r\n        return ret;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ImageWorker {\r\n\r\n    constructor(options = {}) {\r\n        this._items = new Map();\r\n        this._id = 0;\r\n\r\n        this._initWorker();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._worker) {\r\n            this._worker.terminate();\r\n        }\r\n\r\n        this._items = null;\r\n        this._worker = null;\r\n\r\n        delete this._items;\r\n        delete this._worker;        \r\n    }\r\n\r\n    _initWorker() {\r\n        const code = `(${createWorker.toString()})()`;\r\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\r\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\r\n            type: 'application/javascript; charset=utf-8'\r\n        });\r\n        this._worker = new Worker(blobURL);\r\n\r\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\r\n\r\n        this._worker.onmessage = (e) => {\r\n            if (e.data && e.data.id) {\r\n                const id = e.data.id;\r\n                const item = this._items.get(id);\r\n                if (item) {\r\n                    if (e.data.type == 'data') {\r\n                        this.finish(item, e.data.info);\r\n                    } else {\r\n                        this.error(item, e.data.info);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    create(src) {\r\n        const id = ++this._id;\r\n        const item = new ImageWorkerImage(this, id, src);\r\n        this._items.set(id, item);\r\n        this._worker.postMessage({type: \"add\", id: id, src: src});\r\n        return item;\r\n    }\r\n\r\n    cancel(image) {\r\n        this._worker.postMessage({type: \"cancel\", id: image.id});\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    error(image, info) {\r\n        image.error(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    finish(image, info) {\r\n        image.load(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n}\r\n\r\nclass ImageWorkerImage {\r\n\r\n    constructor(manager, id, src) {\r\n        this._manager = manager;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._onError = null;\r\n        this._onLoad = null;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set onError(f) {\r\n        this._onError = f;\r\n    }\r\n\r\n    set onLoad(f) {\r\n        this._onLoad = f;\r\n    }\r\n\r\n    cancel() {\r\n        this._manager.cancel(this);\r\n    }\r\n\r\n    load(info) {\r\n        if (this._onLoad) {\r\n            this._onLoad(info);\r\n        }\r\n    }\r\n\r\n    error(info) {\r\n        if (this._onError) {\r\n            this._onError(info);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\r\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\r\n */\r\nconst createWorker = function() {\r\n\r\n    function ImageWorkerServer() {\r\n\r\n        this.items = new Map();\r\n\r\n        var t = this;\r\n        onmessage = function(e) {\r\n            t._receiveMessage(e);\r\n        }\r\n\r\n    }\r\n\r\n    ImageWorkerServer.isPathAbsolute = function(path) {\r\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\r\n    };\r\n\r\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\r\n        if (e.data.type === 'config') {\r\n            this.config = e.data.config;\r\n\r\n            var base = this.config.path;\r\n            // the constructing of the basepath fails\r\n            // if location.hash contains a slash\r\n            var hasHashPath = /#.*?\\//;\r\n            if(hasHashPath.test(base)){\r\n                base = base.replace(/#.*$/,'');\r\n            }\r\n\r\n            var parts = base.split(\"/\");\r\n            parts.pop();\r\n            this._relativeBase = parts.join(\"/\") + \"/\";\r\n\r\n        } else if (e.data.type === 'add') {\r\n            this.add(e.data.id, e.data.src);\r\n        } else if (e.data.type === 'cancel') {\r\n            this.cancel(e.data.id);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServer.prototype.add = function(id, src) {\r\n        // Convert relative URLs.\r\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\r\n            src = this._relativeBase + src;\r\n        }\r\n\r\n        if (src.substr(0,2) === \"//\") {\r\n            // This doesn't work for image workers.\r\n            src = this.config.protocol + src;\r\n        }\r\n\r\n        var item = new ImageWorkerServerItem(id, src);\r\n        var t = this;\r\n        item.onFinish = function(result) {\r\n            t.finish(item, result);\r\n        };\r\n        item.onError = function(info) {\r\n            t.error(item, info);\r\n        };\r\n        this.items.set(id, item);\r\n        item.start();\r\n    };\r\n\r\n    ImageWorkerServer.prototype.cancel = function(id) {\r\n        var item = this.items.get(id);\r\n        if (item) {\r\n            item.cancel();\r\n            this.items.delete(id);\r\n        }\r\n    }\r\n\r\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\r\n        postMessage({\r\n            type: \"data\",\r\n            id: item.id,\r\n            info: {\r\n                imageBitmap,\r\n                hasAlphaChannel\r\n            }\r\n        }, [imageBitmap]);\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\r\n        postMessage({\r\n            type: \"error\",\r\n            id: item.id,\r\n            info: {\r\n                type,\r\n                message\r\n            }\r\n        });\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.isWPEBrowser = function() {\r\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\n    };\r\n\r\n    function ImageWorkerServerItem(id, src) {\r\n\r\n        this._onError = undefined;\r\n        this._onFinish = undefined;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._xhr = undefined;\r\n        this._mimeType = undefined;\r\n        this._canceled = false;\r\n\r\n    }\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\r\n        get: function() {\r\n            return this._id;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\r\n        get: function() {\r\n            return this._onFinish;\r\n        },\r\n        set: function(f) {\r\n            this._onFinish = f;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\r\n        get: function() {\r\n            return this._onError;\r\n        },\r\n        set: function(f) {\r\n            this._onError = f;\r\n        }\r\n    });\r\n\r\n    ImageWorkerServerItem.prototype.start = function() {\r\n        this._xhr = new XMLHttpRequest();\r\n        this._xhr.open(\"GET\", this._src, true);\r\n        this._xhr.responseType = \"blob\";\r\n\r\n        var t = this;\r\n        this._xhr.onerror = function(oEvent) {\r\n            t.error({type: \"connection\", message: \"Connection error\"});\r\n        };\r\n\r\n        this._xhr.onload = function(oEvent) {\r\n            var blob = t._xhr.response;\r\n            t._mimeType = blob.type;\r\n\r\n            t._createImageBitmap(blob);\r\n        };\r\n\r\n        this._xhr.send();\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\r\n        var t = this;\r\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\r\n            t.finish({\r\n                imageBitmap,\r\n                hasAlphaChannel: t._hasAlphaChannel()\r\n            });\r\n        }).catch(function(e) {\r\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\r\n        });\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\r\n        if (ImageWorkerServer.isWPEBrowser()) {\r\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\r\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\r\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\r\n            return true;\r\n        } else {\r\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.cancel = function() {\r\n        if (this._canceled) return;\r\n        if (this._xhr) {\r\n            this._xhr.abort();\r\n        }\r\n        this._canceled = true;\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.error = function(type, message) {\r\n        if (!this._canceled && this._onError) {\r\n            this._onError({type, message});\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.finish = function(info) {\r\n        if (!this._canceled && this._onFinish) {\r\n            this._onFinish(info);\r\n        }\r\n    };\r\n\r\n    var worker = new ImageWorkerServer();\r\n};\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport ImageWorker from \"./ImageWorker.mjs\";\r\n\r\n/**\r\n * Platform-specific functionality.\r\n */\r\nexport default class WebPlatform {\r\n\r\n    init(stage) {\r\n        this.stage = stage;\r\n        this._looping = false;\r\n        this._awaitingLoop = false;\r\n\r\n        // Alternative handler to avoid RAF when idle\r\n        this._loopHandler = null;\r\n        this._idleLoopCounter = 0;\r\n        this._idleLoopDelay = 60;\r\n\r\n        if (this.stage.getOption(\"useImageWorker\")) {\r\n            if (!window.createImageBitmap || !window.Worker) {\r\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\r\n            } else {\r\n                this._imageWorker = new ImageWorker();\r\n            }\r\n        }\r\n\r\n        this._registerVisibilityChangeHandler();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._imageWorker) {\r\n            this._imageWorker.destroy();\r\n        }\r\n\r\n        clearInterval(this._loopHandler);\r\n\r\n        this._removeKeyHandler();\r\n        this._removeClickHandler();\r\n        this._removeHoverHandler();\r\n        this._removeScrollWheelHandler();\r\n        this._removeVisibilityChangeHandler();\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    startLoop() {\r\n        this._looping = true;\r\n        if (!this._awaitingLoop) {\r\n            this.loop();\r\n        }\r\n    }\r\n\r\n    stopLoop() {\r\n        this._looping = false;\r\n    }\r\n\r\n    switchLoop() {\r\n        if (this._idleLoopCounter < this._idleLoopDelay) {\r\n            this._idleLoopCounter++;\r\n            return;\r\n        }\r\n        if (!this.stage.ctx.hasRenderUpdates()) {\r\n            this.stopLoop();\r\n            this._loopHandler = setInterval(() => {\r\n                this.stage.updateFrame();\r\n                this.stage.idleFrame();\r\n                if (this.stage.ctx.hasRenderUpdates()) {\r\n                    clearInterval(this._loopHandler);\r\n                    this.startLoop();\r\n                };\r\n            }, 1000 / 60);\r\n        } else {\r\n            this._idleLoopCounter = 0;\r\n        }\r\n    }\r\n\r\n    loop() {\r\n        let self = this;\r\n        let lp = function () {\r\n            self._awaitingLoop = false;\r\n            if (self._looping) {\r\n                self.stage.updateFrame();\r\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\r\n                    self.switchLoop();\r\n                }\r\n                self.stage.renderFrame();\r\n                requestAnimationFrame(lp);\r\n                self._awaitingLoop = true;\r\n            }\r\n        }\r\n        requestAnimationFrame(lp);\r\n    }\r\n\r\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\r\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\r\n        gl.compressedTexImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            source.glInternalFormat,\r\n            source.pixelWidth,\r\n            source.pixelHeight,\r\n            0,\r\n            view,\r\n        )\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    uploadGlTexture(gl, textureSource, source, options) {\r\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\r\n            // Web-specific data types.\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n        } else if (source instanceof HTMLCanvasElement) {\r\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\r\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n            } else if (source.width > 0 && source.height > 0) {\r\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\r\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\r\n                const ctx = source.getContext('2d');\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\r\n            }\r\n        } else {\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * KTX File format specification\r\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n     **/\r\n    handleKtxLoad(cb, src) {\r\n        var self = this;\r\n        return function () {\r\n            var arraybuffer = this.response;\r\n            var view = new DataView(arraybuffer);\r\n\r\n            // identifier, big endian\r\n            var targetIdentifier = 3632701469\r\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\r\n                cb('Parsing failed: identifier ktx mismatch:', src)\r\n            }\r\n\r\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\r\n            var data = {\r\n                glType: view.getUint32(16, littleEndian),\r\n                glTypeSize: view.getUint32(20, littleEndian),\r\n                glFormat: view.getUint32(24, littleEndian),\r\n                glInternalFormat: view.getUint32(28, littleEndian),\r\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\r\n                pixelWidth: view.getUint32(36, littleEndian),\r\n                pixelHeight: view.getUint32(40, littleEndian),\r\n                pixelDepth: view.getUint32(44, littleEndian),\r\n                numberOfArrayElements: view.getUint32(48, littleEndian),\r\n                numberOfFaces: view.getUint32(52, littleEndian),\r\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\r\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\r\n                kvps: [],\r\n                mipmaps: [],\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            const props = (obj) => {\r\n                const p = [];\r\n                for (let v in obj) {\r\n                    p.push(obj[v]);\r\n                }\r\n                return p;\r\n            }\r\n\r\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\r\n                .filter((obj) => obj != null)\r\n                .map((obj) => props(obj))\r\n                .reduce((prev, current) => prev.concat(current));\r\n\r\n            if (!formats.includes(data.glInternalFormat)) {\r\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\r\n            }\r\n\r\n            var offset = 64\r\n            // Key Value Pairs of data start at byte offset 64\r\n            // But the only known kvp is the API version, so skipping parsing.\r\n            offset += data.bytesOfKeyValueData;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                var imageSize = view.getUint32(offset);\r\n                offset += 4;\r\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\r\n                offset += imageSize\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePvrLoad(cb, src) {\r\n        return function () {\r\n            // pvr header length in 32 bits\r\n            const pvrHeaderLength = 13;\r\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\r\n            const pvrFormatEtc1 = 0x8D64;\r\n            const pvrWidth = 7;\r\n            const pvrHeight = 6;\r\n            const pvrMipmapCount = 11;\r\n            const pvrMetadata = 12;\r\n            const arrayBuffer = this.response;\r\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\r\n            const dataOffset = header[pvrMetadata] + 52;\r\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\r\n\r\n            var data = {\r\n                glInternalFormat: pvrFormatEtc1,\r\n                pixelWidth: header[pvrWidth],\r\n                pixelHeight: header[pvrHeight],\r\n                numberOfMipmapLevels: header[pvrMipmapCount],\r\n                mipmaps: [],\r\n                pvr: true,\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            let offset = 0\r\n            let width = data.pixelWidth;\r\n            let height = data.pixelHeight;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\r\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\r\n                data.mipmaps.push(view);\r\n                offset += level;\r\n                width = width >> 1;\r\n                height = height >> 1;\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    loadSrcTexture({ src, hasAlpha }, cb) {\r\n        let cancelCb = undefined;\r\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\r\n        // shahid splash service uses the type query param to determine the format.\r\n        let isKtx = src.indexOf('.ktx') >= 0 || src.indexOf('type=etc') >= 0;\r\n        let isPvr = src.indexOf('.pvr') >= 0;\r\n        if (isKtx || isPvr) {\r\n            let request = new XMLHttpRequest();\r\n            request.addEventListener(\r\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\r\n            );\r\n            request.open(\"GET\", src);\r\n            request.responseType = \"arraybuffer\";\r\n            request.send();\r\n            cancelCb = function () {\r\n                request.abort();\r\n            }\r\n        } else if (this._imageWorker) {\r\n            // WPE-specific image parser.\r\n            const image = this._imageWorker.create(src);\r\n            image.onError = function (err) {\r\n                return cb(\"Image load error\");\r\n            };\r\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\r\n                cb(null, {\r\n                    source: imageBitmap,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: hasAlphaChannel,\r\n                    premultiplyAlpha: true\r\n                });\r\n            };\r\n            cancelCb = function () {\r\n                image.cancel();\r\n            }\r\n        } else {\r\n            let image = new Image();\r\n\r\n            // On the PS4 platform setting the `crossOrigin` attribute on\r\n            // images can cause CORS failures.\r\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\r\n                // Base64.\r\n                image.crossOrigin = \"Anonymous\";\r\n            }\r\n            image.onerror = function (err) {\r\n                // Ignore error message when cancelled.\r\n                if (image.src) {\r\n                    return cb(\"Image load error\");\r\n                }\r\n            };\r\n            image.onload = function () {\r\n                cb(null, {\r\n                    source: image,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: isPng || hasAlpha\r\n                });\r\n            };\r\n            image.src = src;\r\n\r\n            cancelCb = function () {\r\n                image.onerror = null;\r\n                image.onload = null;\r\n                image.removeAttribute('src');\r\n            }\r\n        }\r\n\r\n        return cancelCb;\r\n    }\r\n\r\n    createWebGLContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let opts = {\r\n            alpha: true,\r\n            antialias: false,\r\n            premultipliedAlpha: true,\r\n            stencil: true,\r\n            preserveDrawingBuffer: false\r\n        };\r\n\r\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\r\n\r\n        if (!gl) {\r\n            throw new Error('This browser does not support webGL.');\r\n        }\r\n\r\n        return gl;\r\n    }\r\n\r\n    createCanvasContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let c2d = canvas.getContext('2d');\r\n        if (!c2d) {\r\n            throw new Error('This browser does not support 2d canvas.');\r\n        }\r\n\r\n        return c2d;\r\n    }\r\n\r\n    getHrTime() {\r\n        return window.performance ? window.performance.now() : (new Date()).getTime();\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        // We can't reuse this canvas because textures may load async.\r\n        return document.createElement('canvas');\r\n    }\r\n\r\n    getTextureOptionsForDrawingCanvas(canvas) {\r\n        let options = {};\r\n        options.source = canvas;\r\n        return options;\r\n    }\r\n\r\n    nextFrame(changes) {\r\n        /* WebGL blits automatically */\r\n    }\r\n\r\n    registerKeydownHandler(keyhandler) {\r\n        this._keydownListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keydown', this._keydownListener);\r\n    }\r\n\r\n    registerKeyupHandler(keyhandler) {\r\n        this._keyupListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keyup', this._keyupListener);\r\n    }\r\n\r\n    _removeKeyHandler() {\r\n        if (this._keydownListener) {\r\n            window.removeEventListener('keydown', this._keydownListener);\r\n        }\r\n\r\n        if (this._keyupListener) {\r\n            window.removeEventListener('keyup', this._keyupListener);\r\n        }\r\n    }\r\n\r\n    registerClickHandler(clickHandler) {\r\n        this._clickListener = e => {\r\n            clickHandler(e);\r\n        };\r\n        window.addEventListener('mousedown', this._clickListener);\r\n    }\r\n\r\n    _removeClickHandler() {\r\n        if (this._clickListener) {\r\n            window.removeEventListener('mousedown', this._clickListener);\r\n        }\r\n    }\r\n\r\n    registerHoverHandler(hoverHandler) {\r\n        this._hoverListener = e => {\r\n            hoverHandler(e);\r\n        };\r\n        window.addEventListener('mousemove', this._hoverListener);\r\n    }\r\n\r\n    _removeHoverHandler() {\r\n        if (this._hoverListener) {\r\n            window.removeEventListener('mousemove', this._hoverListener);\r\n        }\r\n    }\r\n\r\n    registerScrollWheelHandler(registerScrollWheelHandler) {\r\n        this._scrollWheelListener = e => {\r\n            registerScrollWheelHandler(e);\r\n        }\r\n        window.addEventListener('wheel', this._scrollWheelListener);\r\n    }\r\n\r\n    _removeScrollWheelHandler() {\r\n        if (this._scrollWheelListener) {\r\n            window.removeEventListener('wheel', this._scrollWheelListener);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\r\n     */\r\n    _registerVisibilityChangeHandler() {\r\n        this._visibilityChangeHandler = () => {\r\n            if (document.visibilityState === 'visible') {\r\n                this.stage.root.core.setHasRenderUpdates(2);\r\n                this.stage.renderFrame();\r\n            }\r\n        }\r\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\r\n    }\r\n\r\n    _removeVisibilityChangeHandler() {\r\n        if (this._visibilityChangeHandler) {\r\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\r\n\r\nexport default class PlatformLoader {\r\n    static load(options) {\r\n        if (options.platform) {\r\n            return options.platform;\r\n        } else {\r\n            return WebPlatform;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value == 'string';\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object' || type == 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\r\n        } else {\r\n            return v1 === v2\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Maintains the state of a WebGLRenderingContext.\r\n */\r\nclass WebGLState {\r\n\r\n    constructor(id, gl) {\r\n        this._id = id;\r\n        this._gl = gl;\r\n        this._program = undefined;\r\n        this._buffers = new Map();\r\n        this._framebuffers = new Map();\r\n        this._renderbuffers = new Map();\r\n\r\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\r\n        this._vertexAttribs = new Array(16);\r\n        this._nonDefaultFlags = new Set();\r\n        this._settings = new Map();\r\n        this._textures = new Array(8);\r\n        this._maxTexture = 0;\r\n        this._activeTexture = gl.TEXTURE0;\r\n        this._pixelStorei = new Array(5);\r\n    }\r\n\r\n    _getDefaultFlag(cap) {\r\n        return (cap === this._gl.DITHER);\r\n    }\r\n\r\n    setFlag(cap, v) {\r\n        const def = this._getDefaultFlag(cap);\r\n        if (v === def) {\r\n            return this._nonDefaultFlags.delete(cap);\r\n        } else {\r\n            if (!this._nonDefaultFlags.has(cap)) {\r\n                this._nonDefaultFlags.add(cap);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setBuffer(target, buffer) {\r\n        const change = this._buffers.get(target) !== buffer;\r\n        this._buffers.set(target, buffer);\r\n\r\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\r\n            // When the array buffer is changed all attributes are cleared.\r\n            this._vertexAttribs = [];\r\n        }\r\n\r\n        return change;\r\n    }\r\n\r\n    setFramebuffer(target, buffer) {\r\n        const change = this._framebuffers.get(target) !== buffer;\r\n        this._framebuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setRenderbuffer(target, buffer) {\r\n        const change = this._renderbuffers.get(target) !== buffer;\r\n        this._renderbuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setProgram(program) {\r\n        const change = this._program !== program;\r\n        this._program = program;\r\n        return change\r\n    }\r\n\r\n    setSetting(func, v) {\r\n        const s = this._settings.get(func);\r\n        const change = !s || !Utils.equalValues(s, v);\r\n        this._settings.set(func, v);\r\n        return change\r\n    }\r\n\r\n    disableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va && va[5]) {\r\n            va[5] = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    enableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va) {\r\n            if (!va[0]) {\r\n                va[0] = true;\r\n                return true;\r\n            }\r\n        } else {\r\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    vertexAttribPointer(index, props) {\r\n        let va = this._vertexAttribs[index];\r\n        let equal = false;\r\n        if (va) {\r\n            equal = va[0] === props[0] &&\r\n                va[1] === props[1] &&\r\n                va[2] === props[2] &&\r\n                va[3] === props[3] &&\r\n                va[4] === props[4];\r\n        }\r\n\r\n        if (equal) {\r\n            return false;\r\n        } else {\r\n            props[5] = va ? va[5] : false;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setActiveTexture(texture) {\r\n        const changed = this._activeTexture !== texture;\r\n        this._activeTexture = texture;\r\n        return changed;\r\n    }\r\n\r\n    bindTexture(target, texture) {\r\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\r\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\r\n        const current = this._textures[activeIndex];\r\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\r\n        if (current) {\r\n            if (current[targetIndex] === texture) {\r\n                return false;\r\n            }\r\n            current[targetIndex] = texture;\r\n            return true;\r\n        } else {\r\n            if (texture) {\r\n                this._textures[activeIndex] = [];\r\n                this._textures[activeIndex][targetIndex] = texture;\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    setPixelStorei(pname, param) {\r\n        const i = WebGLState._getPixelStoreiIndex(pname);\r\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\r\n        this._pixelStorei[i] = param;\r\n        return change;\r\n    }\r\n\r\n    migrate(s) {\r\n        const t = this;\r\n\r\n        // Warning: migrate should call the original prototype methods directly.\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        // useProgram\r\n        if (s._program !== t._program) {\r\n            this._gl._useProgram(s._program);\r\n        }\r\n\r\n        this._migrateFramebuffers(t, s);\r\n        this._migrateRenderbuffers(t, s);\r\n\r\n        const buffersChanged = this._migrateBuffers(t, s);\r\n        this._migrateAttributes(t, s, buffersChanged);\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        this._migrateSettings(t, s);\r\n\r\n        this._migratePixelStorei(t, s);\r\n        \r\n        this._migrateTextures(t, s);\r\n        \r\n    }\r\n\r\n    _migratePixelStorei(t, s) {\r\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\r\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\r\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\r\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\r\n            }\r\n        }\r\n    }\r\n\r\n    _migrateTextures(t, s) {\r\n        const max = Math.max(t._maxTexture, s._maxTexture);\r\n\r\n        let activeTexture = t._activeTexture;\r\n\r\n        for (let i = 0; i < max; i++) {\r\n            const sTargets = s._textures[i];\r\n            const tTargets = t._textures[i];\r\n            const textureNumb = WebGLState._getTextureByIndex(i);\r\n\r\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\r\n            for (let j = 0, n = targetMax; j < n; j++) {\r\n                const target = WebGLState._getTextureTargetByIndex(j);\r\n                if (activeTexture !== textureNumb) {\r\n                    this._gl._activeTexture(textureNumb);\r\n                    activeTexture = textureNumb;\r\n                }\r\n\r\n                const texture = (sTargets && sTargets[j]) || null;\r\n                this._gl._bindTexture(target, texture);\r\n            }\r\n        }\r\n\r\n        if (s._activeTexture !== activeTexture) {\r\n            this._gl._activeTexture(s._activeTexture);\r\n        }\r\n    }\r\n\r\n    _migrateBuffers(t, s) {\r\n        s._buffers.forEach((framebuffer, target) => {\r\n            if (t._buffers.get(target) !== framebuffer) {\r\n                this._gl._bindBuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._buffers.forEach((buffer, target) => {\r\n            const b = s._buffers.get(target);\r\n            if (b === undefined) {\r\n                this._gl._bindBuffer(target, null);\r\n            }\r\n        });\r\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\r\n    }\r\n\r\n    _migrateFramebuffers(t, s) {\r\n        s._framebuffers.forEach((framebuffer, target) => {\r\n            if (t._framebuffers.get(target) !== framebuffer) {\r\n                this._gl._bindFramebuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._framebuffers.forEach((framebuffer, target) => {\r\n            const fb = s._framebuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindFramebuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateRenderbuffers(t, s) {\r\n        s._renderbuffers.forEach((renderbuffer, target) => {\r\n            if (t._renderbuffers.get(target) !== renderbuffer) {\r\n                this._gl._bindRenderbuffer(target, renderbuffer);\r\n            }\r\n        });\r\n\r\n        t._renderbuffers.forEach((renderbuffer, target) => {\r\n            const fb = s._renderbuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindRenderbuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateAttributes(t, s, buffersChanged) {\r\n\r\n        if (!buffersChanged) {\r\n            t._vertexAttribs.forEach((attrib, index) => {\r\n                if (!s._vertexAttribs[index]) {\r\n                    // We can't 'delete' a vertex attrib so we'll disable it.\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                } else {\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n        } else {\r\n            // When buffers are changed, previous attributes were reset automatically.\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                if (attrib[0]) {\r\n                    // Do not set vertex attrib pointer when it was just the default value.\r\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\r\n                }\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _migrateSettings(t, s) {\r\n        const defaults = this.constructor.getDefaultSettings();\r\n        t._settings.forEach((value, func) => {\r\n            const name = func.name || func.xname;\r\n            if (!s._settings.has(func)) {\r\n                let args = defaults.get(name);\r\n                if (Utils.isFunction(args)) {\r\n                    args = args(this._gl);\r\n                }\r\n                // We are actually setting the setting for optimization purposes.\r\n                s._settings.set(func, args);\r\n                func.apply(this._gl, args);\r\n            }\r\n        });\r\n        s._settings.forEach((value, func) => {\r\n            const tValue = t._settings.get(func);\r\n            if (!tValue || !Utils.equalValues(tValue, value)) {\r\n                func.apply(this._gl, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateFlags(t, s) {\r\n        t._nonDefaultFlags.forEach(setting => {\r\n            if (!s._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._enable(setting);\r\n                } else {\r\n                    this._gl._disable(setting);\r\n                }\r\n            }\r\n        });\r\n        s._nonDefaultFlags.forEach(setting => {\r\n            if (!t._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._disable(setting);\r\n                } else {\r\n                    this._gl._enable(setting);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static getDefaultSettings() {\r\n        if (!this._defaultSettings) {\r\n            this._defaultSettings = new Map();\r\n            const d = this._defaultSettings;\r\n            const g = WebGLRenderingContext.prototype;\r\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"blendColor\", [0, 0, 0, 0]);\r\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\r\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\r\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\r\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\r\n            d.set(\"clearColor\", [0, 0, 0, 0]);\r\n            d.set(\"clearDepth\", [1]);\r\n            d.set(\"clearStencil\", [0]);\r\n            d.set(\"colorMask\", [true, true, true, true]);\r\n            d.set(\"cullFace\", [g.BACK]);\r\n            d.set(\"depthFunc\", [g.LESS]);\r\n            d.set(\"depthMask\", [true]);\r\n            d.set(\"depthRange\", [0, 1]);\r\n            d.set(\"frontFace\", [g.CCW]);\r\n            d.set(\"lineWidth\", [1]);\r\n            d.set(\"polygonOffset\", [0, 0]);\r\n            d.set(\"sampleCoverage\", [1, false]);\r\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"stencilMask\", [1]);\r\n            d.set(\"_stencilMaskSeparateFront\", [1]);\r\n            d.set(\"_stencilMaskSeparateBack\", [1]);\r\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\r\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"vertexAttrib1f\", []);\r\n            d.set(\"vertexAttrib1fv\", []);\r\n            d.set(\"vertexAttrib2f\", []);\r\n            d.set(\"vertexAttrib2fv\", []);\r\n            d.set(\"vertexAttrib3f\", []);\r\n            d.set(\"vertexAttrib3fv\", []);\r\n            d.set(\"vertexAttrib4f\", []);\r\n            d.set(\"vertexAttrib4fv\", []);\r\n        }\r\n        return this._defaultSettings\r\n    }\r\n\r\n    static _getTextureTargetIndex(target) {\r\n        switch(target) {\r\n            case 0x0DE1:\r\n                /* TEXTURE_2D */\r\n                return 0;\r\n            case 0x8513:\r\n                /* TEXTURE_CUBE_MAP */\r\n                return 1;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown texture target: ' + target);\r\n        }\r\n    }\r\n\r\n    static _getTextureTargetByIndex(index) {\r\n        if (!this._textureTargetIndices) {\r\n            this._textureTargetIndices = [0x0DE1, 0x8513];\r\n        }\r\n        return this._textureTargetIndices[index]\r\n    }\r\n\r\n    static _getTextureIndex(index) {\r\n        return index - 0x84C0 /* GL_TEXTURE0 */;\r\n    }\r\n\r\n    static _getTextureByIndex(index) {\r\n        return index + 0x84C0;\r\n    }\r\n\r\n    static _getPixelStoreiIndex(pname) {\r\n        switch(pname) {\r\n            case 0x0D05:\r\n                /* PACK_ALIGNMENT */\r\n                return 0;\r\n            case 0x0CF5:\r\n                /* UNPACK_ALIGNMENT */\r\n                return 1;\r\n            case 0x9240:\r\n                /* UNPACK_FLIP_Y_WEBGL */\r\n                return 2;\r\n            case 0x9241:\r\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\r\n                return 3;\r\n            case 0x9243:\r\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\r\n                return 4;\r\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\r\n            case 0x9245:\r\n                /* UNPACK_FLIP_BLUE_RED */\r\n                return 5;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown pixelstorei: ' + pname);\r\n        }\r\n    }\r\n\r\n    static _getPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiIndices) {\r\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\r\n        }\r\n        return this._pixelStoreiIndices[index]\r\n    }\r\n\r\n    static _getDefaultPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiDefaults) {\r\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\r\n        }\r\n        return this._pixelStoreiDefaults[index]\r\n    }\r\n}\r\n\r\nclass WebGLStateManager {\r\n\r\n    _initStateManager(id = \"default\") {\r\n        this._states = {};\r\n        this._state = this._getState(id);\r\n    }\r\n\r\n    _getState(id) {\r\n        if (!this._states[id]) {\r\n            this._states[id] = new WebGLState(id, this);\r\n        }\r\n        return this._states[id];\r\n    }\r\n\r\n    switchState(id = \"default\") {\r\n        if (this._state._id !== id) {\r\n            const newState = this._getState(id);\r\n            this._state.migrate(newState);\r\n            this._state = newState;\r\n        }\r\n    }\r\n\r\n    $useProgram(program) {\r\n        if (this._state.setProgram(program))\r\n            this._useProgram(program);\r\n    }\r\n\r\n    $bindBuffer(target, fb) {\r\n        if (this._state.setBuffer(target, fb))\r\n            this._bindBuffer(target, fb);\r\n    }\r\n\r\n    $bindFramebuffer(target, fb) {\r\n        if (this._state.setFramebuffer(target, fb))\r\n            this._bindFramebuffer(target, fb);\r\n    }\r\n\r\n    $bindRenderbuffer(target, fb) {\r\n        if (this._state.setRenderbuffer(target, fb))\r\n            this._bindRenderbuffer(target, fb);\r\n    }\r\n\r\n    $enable(cap) {\r\n        if (this._state.setFlag(cap, true))\r\n            this._enable(cap);\r\n    }\r\n\r\n    $disable(cap) {\r\n        if (this._state.setFlag(cap, false))\r\n            this._disable(cap);\r\n    }\r\n\r\n    $viewport(x, y, w, h) {\r\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\r\n            this._viewport(x, y, w, h);\r\n    }\r\n\r\n    $scissor(x, y, w, h) {\r\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\r\n            this._scissor(x, y, w, h);\r\n    }\r\n\r\n    $disableVertexAttribArray(index) {\r\n        if (this._state.disableVertexAttribArray(index))\r\n            this._disableVertexAttribArray(index);\r\n    }\r\n\r\n    $enableVertexAttribArray(index) {\r\n        if (this._state.enableVertexAttribArray(index))\r\n            this._enableVertexAttribArray(index);\r\n    }\r\n\r\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\r\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n    }\r\n\r\n    $activeTexture(texture) {\r\n        if (this._state.setActiveTexture(texture))\r\n            this._activeTexture(texture);\r\n    }\r\n\r\n    $bindTexture(target, texture) {\r\n        if (this._state.bindTexture(target, texture))\r\n            this._bindTexture(target, texture);\r\n    }\r\n\r\n    $pixelStorei(pname, param) {\r\n        if (this._state.setPixelStorei(pname, param)) {\r\n            this._pixelStorei(pname, param);\r\n        }\r\n    }\r\n\r\n    $stencilFuncSeparate(face, func, ref, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilFuncSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilFuncSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilFuncSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [func, ref, mask]))\r\n            f.apply(this, [func, ref, mask]);\r\n    }\r\n\r\n    _stencilFuncSeparateFront(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\r\n    }\r\n\r\n    $stencilMaskSeparate(face, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilMaskSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilMaskSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilMaskSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [mask]))\r\n            f.apply(this, [mask]);\r\n    }\r\n\r\n    _stencilMaskSeparateFront(mask) {\r\n        this._stencilMaskSeparate(this.FRONT, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateBack(mask) {\r\n        this._stencilMaskSeparate(this.BACK, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateFrontAndBack(mask) {\r\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\r\n    }\r\n\r\n    $stencilOpSeparate(face, fail, zfail, zpass) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilOpSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilOpSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilOpSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\r\n            f.apply(this, [fail, zfail, zpass]);\r\n    }\r\n\r\n    _stencilOpSeparateFront(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    $blendColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\r\n            this._blendColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $blendEquation(mode) {\r\n        if (this._state.setSetting(this._blendEquation, [mode]))\r\n            this._blendEquation(mode);\r\n    }\r\n\r\n    $blendEquationSeparate(modeRGB, modeAlpha) {\r\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\r\n            this._blendEquationSeparate(modeRGB, modeAlpha);\r\n    }\r\n\r\n    $blendFunc(sfactor, dfactor) {\r\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\r\n            this._blendFunc(sfactor, dfactor);\r\n    }\r\n\r\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\r\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\r\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    $clearColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\r\n            this._clearColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $clearDepth(depth) {\r\n        if (this._state.setSetting(this._clearDepth, [depth]))\r\n            this._clearDepth(depth);\r\n    }\r\n\r\n    $clearStencil(s) {\r\n        if (this._state.setSetting(this._clearStencil, [s]))\r\n            this._clearStencil(s);\r\n    }\r\n\r\n    $colorMask(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\r\n            this._colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    $cullFace(mode) {\r\n        if (this._state.setSetting(this._cullFace, [mode]))\r\n            this._cullFace(mode);\r\n    }\r\n\r\n    $depthFunc(func) {\r\n        if (this._state.setSetting(this._depthFunc, [func]))\r\n            this._depthFunc(func);\r\n    }\r\n\r\n    $depthMask(flag) {\r\n        if (this._state.setSetting(this._depthMask, [flag]))\r\n            this._depthMask(flag);\r\n    }\r\n\r\n    $depthRange(zNear, zFar) {\r\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\r\n            this._depthRange(zNear, zFar);\r\n    }\r\n\r\n    $frontFace(mode) {\r\n        if (this._state.setSetting(this._frontFace, [mode]))\r\n            this._frontFace(mode);\r\n    }\r\n\r\n    $lineWidth(width) {\r\n        if (this._state.setSetting(this._lineWidth, [width]))\r\n            this._lineWidth(width);\r\n    }\r\n\r\n    $polygonOffset(factor, units) {\r\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\r\n            this._polygonOffset(factor, units);\r\n    }\r\n\r\n    $sampleCoverage(value, invert) {\r\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\r\n            this._sampleCoverage(value, invert);\r\n    }\r\n\r\n    $stencilFunc(func, ref, mask) {\r\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\r\n            this._stencilFunc(func, ref, mask);\r\n    }\r\n\r\n    $stencilMask(mask) {\r\n        if (this._state.setSetting(this._stencilMask, [mask]))\r\n            this._stencilMask(mask);\r\n    }\r\n\r\n    $stencilOp(fail, zfail, zpass) {\r\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\r\n            this._stencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n    $vertexAttrib1f(indx, x) {\r\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\r\n            this._vertexAttrib1f(indx, x);\r\n    }\r\n\r\n    $vertexAttrib1fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\r\n            this._vertexAttrib1fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib2f(indx, x, y) {\r\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\r\n            this._vertexAttrib2f(indx, x, y);\r\n    }\r\n\r\n    $vertexAttrib2fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\r\n            this._vertexAttrib2fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib3f(indx, x, y, z) {\r\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\r\n            this._vertexAttrib3f(indx, x, y, z);\r\n    }\r\n\r\n    $vertexAttrib3fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\r\n            this._vertexAttrib3fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib4f(indx, x, y, z, w) {\r\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\r\n            this._vertexAttrib4f(indx, x, y, z, w);\r\n    }\r\n\r\n    $vertexAttrib4fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\r\n            this._vertexAttrib4fv(indx, values);\r\n    }\r\n\r\n    /**\r\n     * Sets up the rendering context for context sharing.\r\n     * @param {WebGLRenderingContext} gl\r\n     * @param {string} id\r\n     */\r\n    static enable(gl, id = \"default\") {\r\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\r\n        const WebGLRenderingContextProto = gl.__proto__;\r\n        names.forEach(name => {\r\n            if (name !== \"constructor\") {\r\n                const method = WebGLStateManager.prototype[name];\r\n                if (name.charAt(0) === \"$\") {\r\n                    name = name.substr(1);\r\n                }\r\n                if (gl[name] !== method) {\r\n                    if (gl[name]) {\r\n                        if (!gl[name].name) {\r\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\r\n                            gl[name].xname = name;\r\n                        }\r\n                        gl['_' + name] = gl[name];\r\n                    }\r\n                    gl[name] = method;\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\r\n\r\n        return gl;\r\n    }\r\n\r\n}\r\n\r\nexport default WebGLStateManager;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from \"./TextureSource.mjs\";\r\nimport Stage from './Stage.mjs';\r\n\r\nexport default class TextureManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        /**\r\n         * The currently used amount of texture memory.\r\n         * @type {number}\r\n         */\r\n        this._usedMemory = 0;\r\n\r\n        /**\r\n         * All uploaded texture sources.\r\n         * @type {TextureSource[]}\r\n         */\r\n        this._uploadedTextureSources = [];\r\n\r\n        /**\r\n         * The texture source lookup id to texture source hashmap.\r\n         * @type {Map<String, TextureSource>}\r\n         */\r\n        this.textureSourceHashmap = new Map();\r\n\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\r\n        }\r\n        \r\n        this.textureSourceHashmap.clear();\r\n        this._usedMemory = 0;\r\n    }\r\n\r\n    getReusableTextureSource(id) {\r\n        return this.textureSourceHashmap.get(id);\r\n    }\r\n\r\n    getTextureSource(func, id) {\r\n        // Check if texture source is already known.\r\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\r\n        if (!textureSource) {\r\n            // Create new texture source.\r\n            textureSource = new TextureSource(this, func);\r\n\r\n            if (id) {\r\n                textureSource.lookupId = id;\r\n                this.textureSourceHashmap.set(id, textureSource);\r\n            }\r\n        }\r\n\r\n        return textureSource;\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        if (textureSource.isLoaded()) return;\r\n\r\n        this._addMemoryUsage(textureSource.w * textureSource.h);\r\n\r\n        // Load texture.\r\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\r\n\r\n        textureSource._nativeTexture = nativeTexture;\r\n\r\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\r\n        nativeTexture.w = textureSource.w;\r\n        nativeTexture.h = textureSource.h;\r\n\r\n        nativeTexture.update = this.stage.frameCounter;\r\n\r\n        this._uploadedTextureSources.push(textureSource);\r\n        \r\n        this.addToLookupMap(textureSource);\r\n\r\n        // add VRAM tracking if using the webgl renderer\r\n        this._updateVramUsage(textureSource, 1);\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    _updateVramUsage(textureSource, sign) {\r\n        const nativeTexture = textureSource.nativeTexture;\r\n        var usage;\r\n\r\n        // do nothing if webgl isn't even supported\r\n        if (!Stage.isWebglSupported())\r\n            return;\r\n\r\n        // or if there is no native texture\r\n        if (!textureSource.isLoaded())\r\n            return;\r\n\r\n        // or, finally, if there is no bytes per pixel specified\r\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\r\n            return;\r\n\r\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\r\n\r\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\r\n    }\r\n\r\n    addToLookupMap(textureSource) {\r\n        const lookupId = textureSource.lookupId;\r\n        if (lookupId) {\r\n            if (!this.textureSourceHashmap.has(lookupId)) {\r\n                this.textureSourceHashmap.set(lookupId, textureSource);\r\n            }\r\n        }\r\n    }\r\n\r\n    gc() {\r\n        this.freeUnusedTextureSources();\r\n        this._cleanupLookupMap();\r\n    }\r\n    \r\n    freeUnusedTextureSources() {\r\n        let remainingTextureSources = [];\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            let ts = this._uploadedTextureSources[i];\r\n            if (ts.allowCleanup()) {\r\n                this._freeManagedTextureSource(ts);\r\n            } else {\r\n                remainingTextureSources.push(ts);\r\n            }\r\n        }\r\n\r\n        this._uploadedTextureSources = remainingTextureSources;\r\n\r\n        this._cleanupLookupMap();\r\n    }\r\n\r\n    _freeManagedTextureSource(textureSource) {\r\n        if (textureSource.isLoaded()) {\r\n            this._nativeFreeTextureSource(textureSource);\r\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n\r\n            // add VRAM tracking if using the webgl renderer\r\n            this._updateVramUsage(textureSource, -1);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _cleanupLookupMap() {\r\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\r\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\r\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\r\n                this.textureSourceHashmap.delete(lookupId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Externally free texture source.\r\n     * @param textureSource\r\n     */\r\n    freeTextureSource(textureSource) {\r\n        const index = this._uploadedTextureSources.indexOf(textureSource);\r\n        const managed = (index !== -1);\r\n\r\n        if (textureSource.isLoaded()) {\r\n            if (managed) {\r\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n                this._uploadedTextureSources.splice(index, 1);\r\n            }\r\n            this._nativeFreeTextureSource(textureSource);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _nativeUploadTextureSource(textureSource, options) {\r\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\r\n    }\r\n\r\n    _nativeFreeTextureSource(textureSource) {\r\n        this.stage.renderer.freeTextureSource(textureSource);\r\n        textureSource.clearNativeTexture();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Allows throttling of loading texture sources, keeping the app responsive.\r\n */\r\nexport default class TextureThrottler {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.genericCancelCb = (textureSource) => {\r\n            this._remove(textureSource);\r\n        };\r\n\r\n        this._sources = [];\r\n        this._data = [];\r\n    }\r\n\r\n    destroy() {\r\n        this._sources = [];\r\n        this._data = [];\r\n        this.stage = null;\r\n\r\n        delete this._sources;\r\n        delete this._data;\r\n        delete this.stage;\r\n    }\r\n\r\n    processSome() {\r\n        if (this._sources.length) {\r\n            const start = Date.now();\r\n            do {\r\n                this._processItem();\r\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\r\n        }\r\n    }\r\n\r\n    _processItem() {\r\n        const source = this._sources.pop();\r\n        const data = this._data.pop();\r\n        if (source.isLoading()) {\r\n            source.processLoadedSource(data);\r\n        }\r\n    }\r\n\r\n    add(textureSource, data) {\r\n        this._sources.push(textureSource);\r\n        this._data.push(data);\r\n    }\r\n\r\n    _remove(textureSource) {\r\n        const index = this._sources.indexOf(textureSource);\r\n        if (index >= 0) {\r\n            this._sources.splice(index, 1);\r\n            this._data.splice(index, 1);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreContext {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.root = null;\r\n\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\r\n\r\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\r\n        this.renderExec.init();\r\n\r\n        this._usedMemory = 0;\r\n        this._renderTexturePool = [];\r\n\r\n        this._renderTextureId = 1;\r\n\r\n        this._zSorts = [];\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\r\n        this._usedMemory = 0;\r\n\r\n        this.stage = null;\r\n        this.root = null;\r\n\r\n        this.renderState = null;\r\n        this.renderExec = null;\r\n        this._renderTexturePool = null;\r\n        this._zSorts = null;\r\n\r\n        delete this.stage;\r\n        delete this.root;\r\n        delete this.renderState;\r\n        delete this.renderExec;\r\n        delete this._renderTexturePool;\r\n        delete this._zSorts;\r\n    }\r\n\r\n    hasRenderUpdates() {\r\n        return !!this.root._parent._hasRenderUpdates;\r\n    }\r\n\r\n    render() {\r\n        // Clear flag to identify if anything changes before the next frame.\r\n        this.root._parent._hasRenderUpdates = 0;\r\n\r\n        this._render();\r\n    }\r\n\r\n    update() {\r\n        this._update();\r\n\r\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\r\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\r\n        // (but not recursively to prevent infinite loops).\r\n        if (this.root._hasUpdates) {\r\n            this._update();\r\n        }\r\n\r\n        this._performForcedZSorts();\r\n    }\r\n\r\n    /**\r\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\r\n     */\r\n    _performForcedZSorts() {\r\n        const n = this._zSorts.length;\r\n        if (n) {\r\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\r\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\r\n                if (this._zSorts[i].zSort) {\r\n                    this._zSorts[i].sortZIndexedChildren();\r\n                }\r\n            }\r\n            this._zSorts = [];\r\n        }\r\n    }\r\n\r\n    _update() {\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.root.update();\r\n    }\r\n\r\n    _render() {\r\n        const debugFrame = this.stage.getOption('debugFrame');\r\n        // Obtain a sequence of the quad operations.\r\n        this._fillRenderState();\r\n\r\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\r\n            this._readPixels();\r\n        }\r\n\r\n        // Now run them with the render executor.\r\n        this._performRender();\r\n\r\n        if (debugFrame) {\r\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\r\n        }\r\n\r\n        // Block OpenGL pipeline to prevent framebuffer flickering\r\n        // on certain devices\r\n        if (this.stage.getOption('readPixelsAfterDraw') &&\r\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\r\n        ) {\r\n            if (debugFrame) {\r\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\r\n            }\r\n            this._readPixels();\r\n        }\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    _readPixels() {\r\n        const pixels = new Uint8Array(4);\r\n        const gl = this.stage.gl;\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    }\r\n\r\n    _fillRenderState() {\r\n        this.renderState.reset();\r\n        this.root.render();\r\n        this.renderState.finish();\r\n    }\r\n\r\n    _performRender() {\r\n        this.renderExec.execute();\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    allocateRenderTexture(w, h) {\r\n        let prec = this.stage.getRenderPrecision();\r\n        let pw = Math.max(1, Math.round(w * prec));\r\n        let ph = Math.max(1, Math.round(h * prec));\r\n\r\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\r\n        const n = this._renderTexturePool.length;\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const texture = this._renderTexturePool[i];\r\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\r\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\r\n                texture.f = this.stage.frameCounter;\r\n                this._renderTexturePool.splice(i, 1);\r\n                return texture;\r\n            }\r\n        }\r\n\r\n        const texture = this._createRenderTexture(w, h, pw, ph);\r\n        texture.precision = prec;\r\n        return texture;\r\n    }\r\n\r\n    releaseRenderTexture(texture) {\r\n        this._renderTexturePool.push(texture);\r\n    }\r\n\r\n    freeUnusedRenderTextures(maxAge = 60) {\r\n        // Clean up all textures that are no longer used.\r\n        // This cache is short-lived because it is really just meant to supply running shaders that are\r\n        // updated during a number of frames.\r\n        let limit = this.stage.frameCounter - maxAge;\r\n\r\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\r\n            if (texture.f <= limit) {\r\n                this._freeRenderTexture(texture);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    _createRenderTexture(w, h, pw, ph) {\r\n        this._addMemoryUsage(pw * ph);\r\n\r\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\r\n        texture.id = this._renderTextureId++;\r\n        texture.f = this.stage.frameCounter;\r\n        texture.ow = w;\r\n        texture.oh = h;\r\n        texture.w = pw;\r\n        texture.h = ph;\r\n\r\n        return texture;\r\n    }\r\n\r\n    _freeRenderTexture(nativeTexture) {\r\n        this.stage.renderer.freeRenderTexture(nativeTexture);\r\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\r\n    }\r\n\r\n    forceZSort(elementCore) {\r\n        this._zSorts.push(elementCore);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class TransitionSettings {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._timingFunction = 'ease';\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\r\n        this.delay = 0;\r\n        this.duration = 0.2;\r\n        this.merger = null;\r\n    }\r\n\r\n    get timingFunction() {\r\n        return this._timingFunction;\r\n    }\r\n\r\n    set timingFunction(v) {\r\n        this._timingFunction = v;\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get timingFunctionImpl() {\r\n        return this._timingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n}\r\n\r\nTransitionSettings.prototype.isTransitionSettings = true;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TransitionManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All transitions that are running and attached.\r\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\r\n         * @type {Set<Transition>}\r\n         */\r\n        this.active = new Set();\r\n\r\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                a.progress(dt);\r\n                if (!a.isRunning()) {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\r\n            }\r\n        }\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const transitionSettings = new TransitionSettings();\r\n        Base.patchObject(transitionSettings, settings);\r\n        return transitionSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n\r\n    removeActive(transition) {\r\n        this.active.delete(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport TransitionSettings from \"./TransitionSettings.mjs\";\r\nimport Transition from \"./Transition.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class MultiSpline {\r\n\r\n    constructor() {\r\n        this._clear();\r\n    }\r\n\r\n    _clear() {\r\n        this._p = [];\r\n        this._pe = [];\r\n        this._idp = [];\r\n        this._f = [];\r\n        this._v = [];\r\n        this._lv = [];\r\n        this._sm = [];\r\n        this._s = [];\r\n        this._ve = [];\r\n        this._sme = [];\r\n        this._se = [];\r\n\r\n        this._length = 0;\r\n    }\r\n\r\n    parse(rgba, def) {\r\n        let i, n;\r\n        if (!Utils.isObjectLiteral(def)) {\r\n            def = {0: def}\r\n        }\r\n\r\n        let defaultSmoothness = 0.5;\r\n\r\n        let items = [];\r\n        for (let key in def) {\r\n            if (def.hasOwnProperty(key)) {\r\n                let obj = def[key];\r\n                if (!Utils.isObjectLiteral(obj)) {\r\n                    obj = {v: obj}\r\n                }\r\n\r\n                let p = parseFloat(key);\r\n\r\n                if (key === \"sm\") {\r\n                    defaultSmoothness = obj.v;\r\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\r\n                    obj.p = p;\r\n\r\n                    obj.f = Utils.isFunction(obj.v);\r\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\r\n\r\n                    items.push(obj);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Sort by progress value.\r\n        items = items.sort(function(a, b) {return a.p - b.p});\r\n\r\n        n = items.length;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            let last = (i === n - 1);\r\n            if (!items[i].hasOwnProperty('pe')) {\r\n                // Progress.\r\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\r\n            } else {\r\n                // Prevent multiple items at the same time.\r\n                const max = i < n - 1 ? items[i + 1].p : 1;\r\n                if (items[i].pe > max) {\r\n                    items[i].pe = max;\r\n                }\r\n            }\r\n            if (items[i].pe === items[i].p) {\r\n                items[i].idp = 0;\r\n            } else {\r\n                items[i].idp = 1 / (items[i].pe - items[i].p);\r\n            }\r\n        }\r\n\r\n        // Color merger: we need to split/combine RGBA components.\r\n\r\n        // Calculate bezier helper values.;\r\n        for (i = 0; i < n; i++) {\r\n            if (!items[i].hasOwnProperty('sm')) {\r\n                // Smoothness.;\r\n                items[i].sm = defaultSmoothness;\r\n            }\r\n            if (!items[i].hasOwnProperty('s')) {\r\n                // Slope.;\r\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\r\n                    // Horizontal slope at start and end.;\r\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                } else {\r\n                    const pi = items[i - 1];\r\n                    const ni = items[i + 1];\r\n                    if (pi.p === ni.p) {\r\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                    } else {\r\n                        if (rgba) {\r\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\r\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\r\n                            const d = 1 / (ni.p - pi.p);\r\n                            items[i].s = [\r\n                                d * (nc[0] - pc[0]),\r\n                                d * (nc[1] - pc[1]),\r\n                                d * (nc[2] - pc[2]),\r\n                                d * (nc[3] - pc[3])\r\n                            ];\r\n                        } else {\r\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < n - 1; i++) {\r\n            // Calculate value function.;\r\n            if (!items[i].f) {\r\n\r\n                let last = (i === n - 1);\r\n                if (!items[i].hasOwnProperty('ve')) {\r\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\r\n                }\r\n\r\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\r\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\r\n                    if (!items[i].hasOwnProperty('sme')) {\r\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\r\n                    }\r\n                    if (!items[i].hasOwnProperty('se')) {\r\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\r\n                    }\r\n\r\n                    // Generate spline.;\r\n                    if (rgba) {\r\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    } else {\r\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    }\r\n\r\n                    items[i].f = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.length) {\r\n            this._clear();\r\n        }\r\n\r\n        for (i = 0, n = items.length; i < n; i++) {\r\n            this._add(items[i]);\r\n        }\r\n    }\r\n\r\n    _add(item) {\r\n        this._p.push(item.p || 0);\r\n        this._pe.push(item.pe || 0);\r\n        this._idp.push(item.idp || 0);\r\n        this._f.push(item.f || false);\r\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\r\n        this._lv.push(item.lv || 0);\r\n        this._sm.push(item.sm || 0);\r\n        this._s.push(item.s || 0);\r\n        this._ve.push(item.ve || 0);\r\n        this._sme.push(item.sme || 0);\r\n        this._se.push(item.se || 0);\r\n        this._length++;\r\n    }\r\n\r\n    _getItem(p) {\r\n        const n = this._length;\r\n        if (!n) {\r\n            return -1;\r\n        }\r\n\r\n        if (p < this._p[0]) {\r\n            return 0;\r\n        }\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (this._p[i] <= p && p < this._pe[i]) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return n - 1;\r\n    }\r\n\r\n    getValue(p) {\r\n        const i = this._getItem(p);\r\n        if (i === -1) {\r\n            return undefined;\r\n        } else {\r\n            if (this._f[i]) {\r\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\r\n                return this._v[i](o);\r\n            } else {\r\n                return this._v[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    get length() {\r\n        return this._length;\r\n    }\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1 *= dp;\r\n        s2 *= dp;\r\n\r\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\r\n        if (!helpers) {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return v2 * p + v1 * (1 - p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n                return MultiSpline.calculateSpline(helpers, p);\r\n            };\r\n        }\r\n    };\r\n\r\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1[0] *= dp;\r\n        s1[1] *= dp;\r\n        s1[2] *= dp;\r\n        s1[3] *= dp;\r\n        s2[0] *= dp;\r\n        s2[1] *= dp;\r\n        s2[2] *= dp;\r\n        s2[3] *= dp;\r\n\r\n        let cv1 = MultiSpline.getRgbaComponents(v1);\r\n        let cv2 = MultiSpline.getRgbaComponents(v2);\r\n\r\n        let helpers = [\r\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\r\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\r\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\r\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\r\n        ];\r\n\r\n        if (!helpers[0]) {\r\n            return function (p) {\r\n                // Linear.\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.mergeColors(v2, v1, p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.getArgbNumber([\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\r\n                ]);\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates helpers to be used in the spline function.\r\n     * @param {number} v1\r\n     *   From value.\r\n     * @param {number} v2\r\n     *   To value.\r\n     * @param {number} o1\r\n     *   From smoothness (0 = linear, 1 = smooth).\r\n     * @param {number} s1\r\n     *   From slope (0 = horizontal, infinite = vertical).\r\n     * @param {number} i2\r\n     *   To smoothness.\r\n     * @param {number} s2\r\n     *   To slope.\r\n     * @returns {Number[]}\r\n     *   The helper values to be supplied to the spline function.\r\n     *   If the configuration is actually linear, null is returned.\r\n     */\r\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\r\n        if (!o1 && !i2) {\r\n            // Linear.\r\n            return null;\r\n        }\r\n\r\n        // Cubic bezier points.\r\n        // http://cubic-bezier.com/\r\n        let csx = o1;\r\n        let csy = v1 + s1 * o1;\r\n        let cex = 1 - i2;\r\n        let cey = v2 - s2 * i2;\r\n\r\n        let xa = 3 * csx - 3 * cex + 1;\r\n        let xb = -6 * csx + 3 * cex;\r\n        let xc = 3 * csx;\r\n\r\n        let ya = 3 * csy - 3 * cey + v2 - v1;\r\n        let yb = 3 * (cey + v1) - 6 * csy;\r\n        let yc = 3 * (csy - v1);\r\n        let yd = v1;\r\n\r\n        return [xa, xb, xc, ya, yb, yc, yd];\r\n    };\r\n\r\n    /**\r\n     * Calculates the intermediate spline value based on the specified helpers.\r\n     * @param {number[]} helpers\r\n     *   Obtained from getSplineHelpers.\r\n     * @param {number} p\r\n     * @return {number}\r\n     */\r\n    static calculateSpline(helpers, p) {\r\n        let xa = helpers[0];\r\n        let xb = helpers[1];\r\n        let xc = helpers[2];\r\n        let ya = helpers[3];\r\n        let yb = helpers[4];\r\n        let yc = helpers[5];\r\n        let yd = helpers[6];\r\n\r\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\r\n            // Linear.\r\n            return p;\r\n        }\r\n\r\n        // Find t for p.\r\n        let t = 0.5, cbx, dx;\r\n\r\n        for (let it = 0; it < 20; it++) {\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\r\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                // Problematic. Fall back to binary search method.\r\n                break;\r\n            }\r\n\r\n            t += dx / cbxd;\r\n        }\r\n\r\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n        let minT = 0;\r\n        let maxT = 1;\r\n        for (let it = 0; it < 20; it++) {\r\n            t = 0.5 * (minT + maxT);\r\n\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            if (dx < 0) {\r\n                maxT = t;\r\n            } else {\r\n                minT = t;\r\n            }\r\n        }\r\n\r\n        return t;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationActionSettings {\r\n\r\n    constructor(animationSettings) {\r\n\r\n        this.animationSettings = animationSettings;\r\n\r\n        /**\r\n         * The selector that selects the elements.\r\n         * @type {string}\r\n         */\r\n        this._selector = \"\";\r\n\r\n        /**\r\n         * The value items, ordered by progress offset.\r\n         * @type {MultiSpline}\r\n         * @private;\r\n         */\r\n        this._items = new MultiSpline();\r\n\r\n        /**\r\n         * The affected properties (paths).\r\n         * @private;\r\n         */\r\n        this._props = [];\r\n\r\n        /**\r\n         * Property setters, indexed according to props.\r\n         * @private;\r\n         */\r\n        this._propSetters = [];\r\n\r\n        this._resetValue = undefined;\r\n        this._hasResetValue = false;\r\n\r\n        this._hasColorProperty = undefined;\r\n    }\r\n\r\n    getResetValue() {\r\n        if (this._hasResetValue) {\r\n            return this._resetValue;\r\n        } else {\r\n            return this._items.getValue(0);\r\n        }\r\n    }\r\n\r\n    apply(element, p, factor) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this._items.getValue(p);\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        if (factor !== 1) {\r\n            // Stop factor.;\r\n            let sv = this.getResetValue();\r\n\r\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\r\n                if (this.hasColorProperty()) {\r\n                    v = StageUtils.mergeColors(v, sv, factor);\r\n                } else {\r\n                    v = StageUtils.mergeNumbers(v, sv, factor);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Apply transformation to all components.;\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    getAnimatedElements(element) {\r\n        return element.select(this._selector);\r\n    }\r\n\r\n    reset(element) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this.getResetValue();\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        // Apply transformation to all components.\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    set selector(v) {\r\n        this._selector = v;\r\n    }\r\n\r\n    set t(v) {\r\n        this.selector = v;\r\n    }\r\n\r\n    get resetValue() {\r\n        return this._resetValue;\r\n    }\r\n    \r\n    set resetValue(v) {\r\n        this._resetValue = v;\r\n        this._hasResetValue = (v !== undefined);\r\n    }\r\n\r\n    set rv(v) {\r\n        this.resetValue = v;\r\n    }\r\n\r\n    set value(v) {\r\n        this._items.parse(this.hasColorProperty(), v);\r\n    }\r\n\r\n    set v(v) {\r\n        this.value = v;\r\n    }\r\n\r\n    set properties(v) {\r\n        if (!Array.isArray(v)) {\r\n            v = [v];\r\n        }\r\n\r\n        this._props = [];\r\n\r\n        v.forEach((prop) => {\r\n            this._props.push(prop);\r\n            this._propSetters.push(Element.getSetter(prop));\r\n        });\r\n    }\r\n\r\n    set property(v) {\r\n        this._hasColorProperty = undefined;\r\n        this.properties = v;\r\n    }\r\n\r\n    set p(v) {\r\n        this.properties = v;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    hasColorProperty() {\r\n        if (this._hasColorProperty === undefined) {\r\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\r\n        }\r\n        return this._hasColorProperty;\r\n    }\r\n}\r\n\r\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\r\n\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\nimport Element from \"../tree/Element.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class AnimationSettings {\r\n    constructor() {\r\n        /**\r\n         * @type {AnimationActionSettings[]}\r\n         */\r\n        this._actions = [];\r\n\r\n        this.delay = 0;\r\n        this.duration = 1;\r\n\r\n        this.repeat = 0;\r\n        this.repeatOffset = 0;\r\n        this.repeatDelay = 0;\r\n\r\n        this.autostop = false;\r\n\r\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\r\n        this._stopTimingFunction = 'ease';\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\r\n        this.stopDuration = 0;\r\n        this.stopDelay = 0;\r\n    }\r\n\r\n    get actions() {\r\n        return this._actions;\r\n    }\r\n\r\n    set actions(v) {\r\n        this._actions = [];\r\n        for (let i = 0, n = v.length; i < n; i++) {\r\n            const e = v[i];\r\n            if (!e.isAnimationActionSettings) {\r\n                const aas = new AnimationActionSettings(this);\r\n                aas.patch(e);\r\n                this._actions.push(aas);\r\n            } else {\r\n                this._actions.push(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\r\n     * @param {Element} element;\r\n     * @param {number} p;\r\n     * @param {number} factor;\r\n     */\r\n    apply(element, p, factor = 1) {\r\n        this._actions.forEach(function(action) {\r\n            action.apply(element, p, factor);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets the animation to the reset values.\r\n     * @param {Element} element;\r\n     */\r\n    reset(element) {\r\n        this._actions.forEach(function(action) {\r\n            action.reset(element);\r\n        });\r\n    }\r\n\r\n    get stopTimingFunction() {\r\n        return this._stopTimingFunction;\r\n    }\r\n\r\n    set stopTimingFunction(v) {\r\n        this._stopTimingFunction = v;\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get stopTimingFunctionImpl() {\r\n        return this._stopTimingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nAnimationSettings.STOP_METHODS = {\r\n    FADE: 'fade',\r\n    REVERSE: 'reverse',\r\n    FORWARD: 'forward',\r\n    IMMEDIATE: 'immediate',\r\n    ONETOTWO: 'onetotwo'\r\n};\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\n\r\nexport default class Animation extends EventEmitter {\r\n\r\n    constructor(manager, settings, element) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._state = Animation.STATES.IDLE;\r\n\r\n        this._p = 0;\r\n        this._delayLeft = 0;\r\n        this._repeatsLeft = 0;\r\n\r\n        this._stopDelayLeft = 0;\r\n        this._stopP = 0;\r\n    }\r\n\r\n    start() {\r\n        if (this._element && this._element.attached) {\r\n            this._p = 0;\r\n            this._delayLeft = this.settings.delay;\r\n            this._repeatsLeft = this.settings.repeat;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('start');\r\n            this.checkActive();\r\n        } else {\r\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\r\n        }\r\n    }\r\n\r\n    play() {\r\n        if (this._state === Animation.STATES.PAUSED) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.checkActive();\r\n            this.emit('resume');\r\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('stopContinue');\r\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\r\n            // Restart.;\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._state = Animation.STATES.PAUSED;\r\n            this.emit('pause');\r\n        }\r\n    }\r\n\r\n    replay() {\r\n        if (this._state == Animation.STATES.FINISHED) {\r\n            this.start();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n        this._stopDelayLeft = 0;\r\n    }\r\n\r\n    finish() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._delayLeft = 0;\r\n            this._p = 1;\r\n        } else if (this._state === Animation.STATES.STOPPING) {\r\n            this._stopDelayLeft = 0;\r\n            this._p = 0;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\r\n\r\n        this._stopDelayLeft = this.settings.stopDelay || 0;\r\n\r\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\r\n            // Stop upon next progress.;\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        } else {\r\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                this._stopP = 0;\r\n            }\r\n\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        }\r\n\r\n        this.checkActive();\r\n    }\r\n\r\n    stopNow() {\r\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\r\n            this._state = Animation.STATES.STOPPING;\r\n            this._p = 0;\r\n            this.emit('stop');\r\n            this.reset();\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        }\r\n    }\r\n\r\n    isPaused() {\r\n        return this._state === Animation.STATES.PAUSED;\r\n    }\r\n\r\n    isPlaying() {\r\n        return this._state === Animation.STATES.PLAYING;\r\n    }\r\n\r\n    isStopping() {\r\n        return this._state === Animation.STATES.STOPPING;\r\n    }\r\n\r\n    isFinished() {\r\n        return this._state === Animation.STATES.FINISHED;\r\n    }\r\n\r\n    checkActive() {\r\n        if (this.isActive()) {\r\n            this.manager.addActive(this);\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this._element) return;\r\n        this._progress(dt);\r\n        this.apply();\r\n    }\r\n\r\n    _progress(dt) {\r\n        if (this._state == Animation.STATES.STOPPING) {\r\n            this._stopProgress(dt);\r\n            return;\r\n        }\r\n\r\n        if (this._state != Animation.STATES.PLAYING) {\r\n            return;\r\n        }\r\n\r\n        if (this._delayLeft > 0) {\r\n            this._delayLeft -= dt;\r\n\r\n            if (this._delayLeft < 0) {\r\n                dt = -this._delayLeft;\r\n                this._delayLeft = 0;\r\n\r\n                this.emit('delayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.settings.duration === 0) {\r\n            this._p = 1;\r\n        } else if (this.settings.duration > 0) {\r\n            this._p += dt / this.settings.duration;\r\n        }\r\n        if (this._p >= 1) {\r\n            // Finished!;\r\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\r\n                if (this._repeatsLeft > 0) {\r\n                    this._repeatsLeft--;\r\n                }\r\n                this._p = this.settings.repeatOffset;\r\n                this.emit('progress', this._p);\r\n                \r\n                if (this.settings.repeatDelay) {\r\n                    this._delayLeft = this.settings.repeatDelay;\r\n                }\r\n\r\n                this.emit('repeat', this._repeatsLeft);\r\n            } else {\r\n                this._p = 1;\r\n                this.emit('progress', this._p);\r\n                \r\n                this._state = Animation.STATES.FINISHED;\r\n                this.emit('finish');\r\n                if (this.settings.autostop) {\r\n                    this.stop();\r\n                }\r\n            }\r\n        } else {\r\n            this.emit('progress', this._p);\r\n        }\r\n    }\r\n    \r\n    _stopProgress(dt) {\r\n        let duration = this._getStopDuration();\r\n\r\n        if (this._stopDelayLeft > 0) {\r\n            this._stopDelayLeft -= dt;\r\n\r\n            if (this._stopDelayLeft < 0) {\r\n                dt = -this._stopDelayLeft;\r\n                this._stopDelayLeft = 0;\r\n\r\n                this.emit('stopDelayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            if (duration === 0) {\r\n                this._p = 0;\r\n            } else if (duration > 0) {\r\n                this._p -= dt / duration;\r\n            }\r\n\r\n            if (this._p <= 0) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\r\n            this._progressStopTransition(dt);\r\n            if (this._stopP >= 1) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\r\n            if (this._p < 2) {\r\n                if (duration === 0) {\r\n                    this._p = 2;\r\n                } else if (duration > 0) {\r\n                    if (this._p < 1) {\r\n                        this._p += dt / this.settings.duration;\r\n                    } else {\r\n                        this._p += dt / duration;\r\n                    }\r\n                }\r\n                if (this._p >= 2) {\r\n                    this._p = 2;\r\n                    this._state = Animation.STATES.STOPPED;\r\n                    this.emit('stopFinish');\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n            if (this._p < 1) {\r\n                if (this.settings.duration == 0) {\r\n                    this._p = 1;\r\n                } else {\r\n                    this._p += dt / this.settings.duration;\r\n                }\r\n                if (this._p >= 1) {\r\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n                        this._p = 1;\r\n                        this._state = Animation.STATES.STOPPED;\r\n                        this.emit('stopFinish');\r\n                    } else {\r\n                        if (this._repeatsLeft > 0) {\r\n                            this._repeatsLeft--;\r\n                            this._p = 0;\r\n                            this.emit('repeat', this._repeatsLeft);\r\n                        } else {\r\n                            this._p = 1;\r\n                            this._state = Animation.STATES.STOPPED;\r\n                            this.emit('stopFinish');\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    _progressStopTransition(dt) {\r\n        if (this._stopP < 1) {\r\n            if (this._stopDelayLeft > 0) {\r\n                this._stopDelayLeft -= dt;\r\n\r\n                if (this._stopDelayLeft < 0) {\r\n                    dt = -this._stopDelayLeft;\r\n                    this._stopDelayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            const duration = this._getStopDuration();\r\n\r\n            if (duration == 0) {\r\n                this._stopP = 1;\r\n            } else {\r\n                this._stopP += dt / duration;\r\n            }\r\n            if (this._stopP >= 1) {\r\n                // Finished!;\r\n                this._stopP = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStopDuration() {\r\n        return this.settings.stopDuration || this.settings.duration;\r\n    }\r\n\r\n    apply() {\r\n        if (this._state === Animation.STATES.STOPPED) {\r\n            this.reset();\r\n        } else {\r\n            let factor = 1;\r\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\r\n            }\r\n            this._settings.apply(this._element, this._p, factor);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this._settings.reset(this._element);\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get frame() {\r\n        return Math.round(this._p * this._settings.duration * 60);\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n}\r\n\r\nAnimation.STATES = {\r\n    IDLE: 0,\r\n    PLAYING: 1,\r\n    STOPPING: 2,\r\n    STOPPED: 3,\r\n    FINISHED: 4,\r\n    PAUSED: 5\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All running animations on attached subjects.\r\n         * @type {Set<Animation>}\r\n         */\r\n        this.active = new Set();\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                if (a.isActive()) {\r\n                    a.progress(dt);\r\n                } else {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => t.isActive()));\r\n            }\r\n        }\r\n    }\r\n\r\n    createAnimation(element, settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            // Convert plain object to proper settings object.\r\n            settings = this.createSettings(settings);\r\n        }\r\n\r\n        return new Animation(\r\n            this,\r\n            settings,\r\n            element\r\n        );\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const animationSettings = new AnimationSettings();\r\n        Base.patchObject(animationSettings, settings);\r\n        return animationSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\nimport Animation from \"./Animation.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class RectangleTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__whitepix';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return function(cb) {\r\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\r\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Application render tree.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Utils from \"./Utils.mjs\";\r\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\r\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\r\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\r\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\r\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Stage extends EventEmitter {\r\n\r\n    constructor(options = {}) {\r\n        super();\r\n        this._setOptions(options);\r\n\r\n        this._usedMemory = 0;\r\n        this._lastGcFrame = 0;\r\n\r\n        // attempt to track VRAM usage more accurately by accounting for different color channels\r\n        this._usedVramAlpha = 0;\r\n        this._usedVramNonAlpha = 0;\r\n\r\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\r\n        this.platform = new platformType();\r\n\r\n        if (this.platform.init) {\r\n            this.platform.init(this);\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n\r\n        const context = this.getOption('context');\r\n        if (context) {\r\n            if (context.useProgram) {\r\n                this.gl = context;\r\n            } else {\r\n                this.c2d = context;\r\n            }\r\n        } else {\r\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\r\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\r\n            } else {\r\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\r\n            }\r\n        }\r\n\r\n        if (this.gl) {\r\n            // Wrap in WebGLStateManager.\r\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\r\n            // Context switching is necessary when reusing the same context for Three.js.\r\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\r\n            //  when manually passing over a canvas or context in the options.\r\n            WebGLStateManager.enable(this.gl, \"lightning\")\r\n        }\r\n\r\n        this._mode = this.gl ? 0 : 1;\r\n\r\n        // Override width and height.\r\n        if (this.getCanvas()) {\r\n            if (this.getOption('devicePixelRatio') !== 1) {\r\n                const ratio = this.getOption('devicePixelRatio');\r\n                // set correct display sie\r\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\r\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\r\n            }\r\n\r\n            // set display buffer size\r\n            this._options.w = this.getCanvas().width;\r\n            this._options.h = this.getCanvas().height;\r\n        }\r\n\r\n        if (this._mode === 0) {\r\n            if (Utils.isSpark) {\r\n                this._renderer = new SparkRenderer(this);\r\n            } else {\r\n                this._renderer = new WebGLRenderer(this);\r\n            }\r\n        } else {\r\n            this._renderer = new C2dRenderer(this);\r\n        }\r\n\r\n        this.setClearColor(this.getOption('clearColor'));\r\n\r\n        this.frameCounter = 0;\r\n\r\n        this.transitions = new TransitionManager(this);\r\n        this.animations = new AnimationManager(this);\r\n\r\n        this.textureManager = new TextureManager(this);\r\n        this.textureThrottler = new TextureThrottler(this);\r\n\r\n        this.startTime = 0;\r\n        this.currentTime = 0;\r\n        this.dt = 0;\r\n\r\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\r\n        this.rectangleTexture = new RectangleTexture(this);\r\n        this.rectangleTexture.load();\r\n\r\n        // Never clean up because we use it all the time.\r\n        this.rectangleTexture.source.permanent = true;\r\n\r\n        this.ctx = new CoreContext(this);\r\n\r\n        this._updateSourceTextures = new Set();\r\n    }\r\n\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    static isWebglSupported() {\r\n        if (Utils.isNode) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            return !!window.WebGLRenderingContext;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the rendering mode.\r\n     * @returns {number}\r\n     *  0: WebGL\r\n     *  1: Canvas2d\r\n     */\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n\r\n    isWebgl() {\r\n        return this.mode === 0;\r\n    }\r\n\r\n    isC2d() {\r\n        return this.mode === 1;\r\n    }\r\n\r\n    getOption(name) {\r\n        return this._options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this._options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this._options[name] = def;\r\n            } else {\r\n                this._options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('canvas', null);\r\n        opt('context', null);\r\n        opt('w', 1920);\r\n        opt('h', 1080);\r\n        opt('srcBasePath', null);\r\n        opt('memoryPressure', 24e6);\r\n        opt('bufferMemory', 2e6);\r\n        opt('textRenderIssueMargin', 0);\r\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\r\n        opt('clearColor', [0, 0, 0, 0]);\r\n        opt('defaultFontFace', 'sans-serif');\r\n        opt('fixedDt', 0);\r\n        opt('useImageWorker', true);\r\n        opt('autostart', true);\r\n        opt('precision', 1);\r\n        opt('canvas2d', false);\r\n        opt('platform', null);\r\n        opt('readPixelsBeforeDraw', false);\r\n        opt('devicePixelRatio', 1)       \r\n        opt('readPixelsAfterDraw', false);\r\n        opt('readPixelsAfterDrawThreshold', 0);\r\n        opt('debugFrame', false);\r\n        opt('forceTxCanvasSource', false);\r\n        opt('pauseRafLoopOnIdle', false);\r\n        opt('RTL', false);\r\n\r\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\r\n            this._options['precision'] *= o['devicePixelRatio']\r\n            this._options['w'] *= o['devicePixelRatio']\r\n            this._options['h'] *= o['devicePixelRatio']\r\n        }\r\n    }\r\n\r\n    setApplication(app) {\r\n        this.application = app;\r\n    }\r\n\r\n    init() {\r\n\r\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\r\n            console.log('[Lightning] Using image worker!');\r\n        }\r\n\r\n        if (this.application.getOption('debug') && this.c2d) {\r\n            console.log('[Lightning] Using canvas2d renderer');\r\n        }\r\n\r\n        this.application.setAsRoot();\r\n        if (this.getOption('autostart')) {\r\n            this.platform.startLoop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.platform.stopLoop();\r\n        this.platform.destroy();\r\n        this.ctx.destroy();\r\n        this.textureManager.destroy();\r\n        this._renderer.destroy();\r\n\r\n        // clear last rendered frame\r\n        if (this.gl) {\r\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n        } else if (this.c2d) {\r\n            this.c2d.clearRect(\r\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\r\n            );\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n        this.ctx = null;\r\n        this._options = null;\r\n        this.platform = null;\r\n        this.textureManager = null;\r\n        this._renderer = null;\r\n\r\n        delete this.gl;\r\n        delete this.c2d;\r\n        delete this.ctx;\r\n        delete this._options;\r\n        delete this.platform;\r\n        delete this.textureManager;\r\n        delete this._renderer;\r\n    }\r\n\r\n    stop() {\r\n        this.platform.stopLoop();\r\n    }\r\n\r\n    resume() {\r\n        this.platform.startLoop();\r\n    }\r\n\r\n    get root() {\r\n        return this.application;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\r\n    }\r\n\r\n    getRenderPrecision() {\r\n        return this._options.precision;\r\n    }\r\n\r\n    /**\r\n     * Marks a texture for updating it's source upon the next drawFrame.\r\n     * @param texture\r\n     */\r\n    addUpdateSourceTexture(texture) {\r\n        if (this._updatingFrame) {\r\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\r\n            texture._performUpdateSource();\r\n        } else {\r\n            this._updateSourceTextures.add(texture);\r\n        }\r\n    }\r\n\r\n    removeUpdateSourceTexture(texture) {\r\n        if (this._updateSourceTextures) {\r\n            this._updateSourceTextures.delete(texture);\r\n        }\r\n    }\r\n\r\n    hasUpdateSourceTexture(texture) {\r\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\r\n    }\r\n\r\n\r\n    _performUpdateSource() {\r\n        if (this._updateSourceTextures.size) {\r\n            this._updateSourceTextures.forEach(texture => {\r\n                texture._performUpdateSource();\r\n            });\r\n            this._updateSourceTextures = new Set();\r\n        }\r\n    }\r\n\r\n    _calculateDt() {\r\n        this.startTime = this.currentTime;\r\n        this.currentTime = this.platform.getHrTime();\r\n\r\n        if (this._options.fixedDt) {\r\n            this.dt = this._options.fixedDt;\r\n        } else {\r\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\r\n        }\r\n    }\r\n\r\n    updateFrame() {\r\n        this._calculateDt();\r\n        this.emit('frameStart');\r\n        this._performUpdateSource();\r\n        this.emit('update');\r\n    }\r\n\r\n    idleFrame() {\r\n        this.textureThrottler.processSome();\r\n        this.emit('frameEnd');\r\n        this.frameCounter++;\r\n    }\r\n\r\n    renderFrame() {\r\n        const changes = this.ctx.hasRenderUpdates();\r\n\r\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\r\n        // during the current frame already.\r\n        this.textureThrottler.processSome();\r\n\r\n        if (changes) {\r\n            this._updatingFrame = true;\r\n            this.ctx.update();\r\n            this.ctx.render();\r\n            this._updatingFrame = false;\r\n        }\r\n\r\n        this.platform.nextFrame(changes);\r\n\r\n        this.emit('frameEnd');\r\n\r\n        this.frameCounter++;\r\n    }\r\n\r\n    isUpdatingFrame() {\r\n        return this._updatingFrame;\r\n    }\r\n\r\n    drawFrame() {\r\n        // Maintain original functionality of `drawFrame()` while retaining the\r\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\r\n        // The full functionality of this method is relied directly by our own unit tests and\r\n        // the unit tests of third party users\r\n        this.updateFrame();\r\n        this.renderFrame();\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Enforce re-rendering.\r\n        if (this.root) {\r\n            this.root.core._parent.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    setClearColor(clearColor) {\r\n        this.forceRenderUpdate();\r\n        if (clearColor === null) {\r\n            // Do not clear.\r\n            this._clearColor = null;\r\n        } else if (Array.isArray(clearColor)) {\r\n            this._clearColor = clearColor;\r\n        } else {\r\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\r\n        }\r\n    }\r\n\r\n    getClearColor() {\r\n        return this._clearColor;\r\n    }\r\n\r\n    createElement(settings) {\r\n        if (settings) {\r\n            return this.element(settings);\r\n        } else {\r\n            return new Element(this);\r\n        }\r\n    }\r\n\r\n    createShader(settings) {\r\n        return Shader.create(this, settings);\r\n    }\r\n\r\n    element(settings) {\r\n        if (settings.isElement) return settings;\r\n\r\n        let element;\r\n        if (settings.type) {\r\n            element = new settings.type(this);\r\n        } else {\r\n            element = new Element(this);\r\n        }\r\n\r\n        element.patch(settings);\r\n\r\n        return element;\r\n    }\r\n\r\n    c(settings) {\r\n        return this.element(settings);\r\n    }\r\n\r\n    get w() {\r\n        return this._options.w;\r\n    }\r\n\r\n    get h() {\r\n        return this._options.h;\r\n    }\r\n\r\n    get coordsWidth() {\r\n        return this.w / this._options.precision;\r\n    }\r\n\r\n    get coordsHeight() {\r\n        return this.h / this._options.precision;\r\n    }\r\n\r\n    addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            if (this._usedMemory > this.getOption('memoryPressure')) {\r\n                this.gc(false);\r\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\r\n                    // Too few released. Aggressive cleanup.\r\n                    this.gc(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    addVramUsage(delta, alpha) {\r\n        if (alpha) {\r\n            this._usedVramAlpha += delta;\r\n        }\r\n        else {\r\n            this._usedVramNonAlpha += delta;\r\n        }\r\n    }\r\n\r\n    get usedVramAlpha() {\r\n        return this._usedVramAlpha;\r\n    }\r\n\r\n    get usedVramNonAlpha() {\r\n        return this._usedVramNonAlpha;\r\n    }\r\n\r\n    get usedVram() {\r\n        return this._usedVramAlpha + this._usedVramNonAlpha;\r\n    }\r\n\r\n    gc(aggressive) {\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            this._lastGcFrame = this.frameCounter;\r\n            const memoryUsageBefore = this._usedMemory;\r\n            this.gcTextureMemory(aggressive);\r\n            this.gcRenderTextureMemory(aggressive);\r\n            this.renderer.gc(aggressive);\r\n\r\n            if (this.application.getOption('debug')) {\r\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\r\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\r\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\r\n            }\r\n        }\r\n    }\r\n\r\n    gcTextureMemory(aggressive = false) {\r\n        if (aggressive && this.ctx.root.visible) {\r\n            // Make sure that ALL textures are cleaned;\r\n            this.ctx.root.visible = false;\r\n            this.textureManager.gc();\r\n            this.ctx.root.visible = true;\r\n        } else {\r\n            this.textureManager.gc();\r\n        }\r\n    }\r\n\r\n    gcRenderTextureMemory(aggressive = false) {\r\n        if (aggressive && this.root.visible) {\r\n            // Make sure that ALL render textures are cleaned;\r\n            this.root.visible = false;\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n            this.root.visible = true;\r\n        } else {\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n        }\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        return this.platform.getDrawingCanvas();\r\n    }\r\n\r\n    update() {\r\n        this.ctx.update()\r\n    }\r\n\r\n    addServiceProvider(serviceprovider) {\r\n        if (Utils.isSpark) {\r\n            this.platform.addServiceProvider(serviceprovider);\r\n        }\r\n    }\r\n\r\n    getChildrenByPosition(x, y) {\r\n        const children = [];\r\n        this.root.core.update();\r\n        this.root.core.collectAtCoord(x, y, children);\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nimport Element from \"./Element.mjs\";\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport TextureManager from \"./TextureManager.mjs\";\r\nimport TextureThrottler from \"./TextureThrottler.mjs\";\r\nimport CoreContext from \"./core/CoreContext.mjs\";\r\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\r\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\r\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"./Component.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class Application extends Component {\r\n\r\n    constructor(options = {}, properties) {\r\n        // Save options temporarily to avoid having to pass it through the constructor.\r\n        Application._temp_options = options;\r\n\r\n        // Booting flag is used to postpone updateFocusSettings;\r\n        Application.booting = true;\r\n        const stage = new Stage(options.stage);\r\n        super(stage, properties);\r\n        Application.booting = false;\r\n\r\n        this.__updateFocusCounter = 0;\r\n        this.__keypressTimers = new Map();\r\n        this.__hoveredChild = null;\r\n\r\n        // We must construct while the application is not yet attached.\r\n        // That's why we 'init' the stage later (which actually emits the attach event).\r\n        this.stage.init();\r\n\r\n        // Initially, the focus settings are updated after both the stage and application are constructed.\r\n        this.updateFocusSettings();\r\n\r\n        this.__keymap = this.getOption('keys');\r\n\r\n        if (this.__keymap) {\r\n            this.stage.platform.registerKeydownHandler((e) => {\r\n                this._receiveKeydown(e);\r\n            });\r\n\r\n            this.stage.platform.registerKeyupHandler((e) => {\r\n                this._receiveKeyup(e);\r\n            });\r\n        }\r\n\r\n        if (this.getOption(\"enablePointer\")) {\r\n            this.stage.platform.registerClickHandler((e) => {\r\n                this._receiveClick(e);\r\n            });\r\n\r\n            this.stage.platform.registerHoverHandler((e) => {\r\n                this._receiveHover(e);\r\n            });\r\n\r\n            this.stage.platform.registerScrollWheelHandler((e) => {\r\n                this._recieveScrollWheel(e);\r\n            });\r\n\r\n            this.cursor = 'default';\r\n        }\r\n    }\r\n\r\n    getOption(name) {\r\n        return this.__options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this.__options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this.__options[name] = def;\r\n            } else {\r\n                this.__options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('debug', false);\r\n        opt('keys', {\r\n            38: \"Up\",\r\n            40: \"Down\",\r\n            37: \"Left\",\r\n            39: \"Right\",\r\n            13: \"Enter\",\r\n            8: \"Back\",\r\n            27: \"Exit\"\r\n        });\r\n        opt('enablePointer', false);\r\n    }\r\n\r\n    __construct() {\r\n        this.stage.setApplication(this);\r\n\r\n        this._setOptions(Application._temp_options);\r\n        delete Application._temp_options;\r\n\r\n        super.__construct();\r\n    }\r\n\r\n    __init() {\r\n        super.__init();\r\n        this.__updateFocus();\r\n    }\r\n\r\n    updateFocusPath() {\r\n        this.__updateFocus();\r\n    }\r\n\r\n    __updateFocus() {\r\n        const notOverridden = this.__updateFocusRec();\r\n\r\n        if (!Application.booting && notOverridden) {\r\n            this.updateFocusSettings();\r\n        }\r\n    }\r\n\r\n    __updateFocusRec() {\r\n        const updateFocusId = ++this.__updateFocusCounter;\r\n        this.__updateFocusId = updateFocusId;\r\n\r\n        const newFocusPath = this.__getFocusPath();\r\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\r\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\r\n\r\n        if (!prevFocusedComponent) {\r\n            // Focus events.\r\n            this._focusPath = [];\r\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\r\n                this._focusPath.push(newFocusPath[i]);\r\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\r\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                if (focusOverridden) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\r\n            let index;\r\n            for (index = 0; index < m; index++) {\r\n                if (this._focusPath[index] !== newFocusPath[index]) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\r\n\r\n                if (this.getOption('debug')) {\r\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\r\n                }\r\n\r\n                // Unfocus events.\r\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\r\n                    const unfocusedElement = this._focusPath.pop();\r\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus events.\r\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\r\n                    this._focusPath.push(newFocusPath[i]);\r\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus changed events.\r\n                for (let i = 0; i < index; i++) {\r\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    updateFocusSettings() {\r\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\r\n\r\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\r\n        // focus directly (such as the application background).\r\n        const focusSettings = {};\r\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\r\n                this._focusPath[i]._setFocusSettings(focusSettings);\r\n            }\r\n        }\r\n\r\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\r\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\r\n            }\r\n        }\r\n\r\n        this.__prevFocusSettings = focusSettings;\r\n    }\r\n\r\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\r\n        // Override to handle focus-based settings.\r\n    }\r\n\r\n    __getFocusPath() {\r\n        const path = [this];\r\n        let current = this;\r\n        do {\r\n            const nextFocus = current._getFocused();\r\n            if (!nextFocus || (nextFocus === current)) {\r\n                // Found!;\r\n                break;\r\n            }\r\n\r\n\r\n            let ptr = nextFocus.cparent;\r\n            if (ptr === current) {\r\n                path.push(nextFocus);\r\n            } else {\r\n                // Not an immediate child: include full path to descendant.\r\n                const newParts = [nextFocus];\r\n                do {\r\n                    if (!ptr) {\r\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\r\n                    }\r\n                    newParts.push(ptr);\r\n                    ptr = ptr.cparent;\r\n                } while (ptr !== current);\r\n\r\n                // Add them reversed.\r\n                for (let i = 0, n = newParts.length; i < n; i++) {\r\n                    path.push(newParts[n - i - 1]);\r\n                }\r\n            }\r\n\r\n            current = nextFocus;\r\n        } while (true);\r\n\r\n        return path;\r\n    }\r\n\r\n    get focusPath() {\r\n        return this._focusPath;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, top-down from application to focused component.\r\n     */\r\n    focusTopDownEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = 0; i < n; i++) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, bottom-up from focused component to application.\r\n     */\r\n    focusBottomUpEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _receiveKeydown(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n        const path = this.focusPath;\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                const hasTimer = this.__keypressTimers.has(keys[i]);\r\n                // prevent event from getting fired when the timeout is still active\r\n                if (path[path.length - 1].longpress && hasTimer) {\r\n                    return;\r\n                }\r\n\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        const consumer = path[path.length - 1];\r\n\r\n        if (keys && consumer.longpress) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                this._startLongpressTimer(keys[i], consumer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Keyup listener\r\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\r\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\r\n     *\r\n     * @param e\r\n     * @private\r\n     */\r\n    _receiveKeyup(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (this.__keypressTimers.has(keys[i])) {\r\n                    // keyup has fired before end of timeout so we clear it\r\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\r\n                    // delete so we can register it again\r\n                    this.__keypressTimers.delete(keys[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\r\n     * before the timer goes off.\r\n     *\r\n     * If key is not release (keyup) the longpress handler will be fired.\r\n     * Configuration can be via the Components template:\r\n     *\r\n     * static _template() {\r\n     *     return {\r\n     *         w:100, h:100,\r\n     *         longpress:{up:700, down:500}\r\n     *     }\r\n     * }     *\r\n     * // this will get called when up has been pressed for 700ms\r\n     * _handleUpLong() {\r\n     *\r\n     * }\r\n     *\r\n     * @param key\r\n     * @param element\r\n     * @private\r\n     */\r\n    _startLongpressTimer(key, element) {\r\n        const config = element.longpress;\r\n        const lookup = key.toLowerCase();\r\n\r\n        if (config[lookup]) {\r\n            const timeout = config[lookup];\r\n            if (!Utils.isNumber(timeout)) {\r\n                element._throwError(\"config value for longpress must be a number\");\r\n            } else {\r\n                this.__keypressTimers.set(key, setTimeout(() => {\r\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\r\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\r\n                    }\r\n\r\n                    this.__keypressTimers.delete(key);\r\n                }, timeout || 500 /* prevent 0ms */));\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    _recieveScrollWheel(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\r\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    fireTopDownScrollWheelHandler(event, obj) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children).reverse();\r\n        let n = affected.length;\r\n\r\n        while (n--) {\r\n            const child = affected[n];\r\n            if (child && child[event]) {\r\n                child._captureScroll(obj);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    fireBottomUpScrollWheelHandler(event, obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[event]) {\r\n                child._handleScroll(obj);\r\n                return true;\r\n            }\r\n            child = child.parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _receiveClick(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpClickHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpClickHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[\"_handleClick\"]) {\r\n                const { px, py } = child.core._worldContext;\r\n                const cx = px * precision;\r\n                const cy = py * precision;\r\n\r\n                const localCoords = {\r\n                    x: clientX - cx,\r\n                    y: clientY - cy\r\n                }\r\n\r\n                const returnValue = child._handleClick(target, localCoords);\r\n                if (returnValue !== false) {\r\n                    break;\r\n                }\r\n            }\r\n            child = child.parent;\r\n        }\r\n    }\r\n\r\n    _receiveHover(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpHoverHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpHoverHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n\r\n        // Only fire handlers when pointer target changes\r\n        if (target !== this.__hoveredChild) {\r\n\r\n            let hoveredBranch = new Set();\r\n            let newHoveredBranch = new Set();\r\n\r\n            if (target) {\r\n                newHoveredBranch = new Set(target.getAncestors());\r\n            }\r\n\r\n            if (this.__hoveredChild) {\r\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\r\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\r\n                    const c = Component.getComponent(elem);\r\n                    if (c[\"_handleUnhover\"]) {\r\n                        c._handleUnhover(elem);\r\n                    }\r\n                    if (elem.parent && elem.parent.cursor) {\r\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.__hoveredChild = target;\r\n\r\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\r\n            for (const elem of diffBranch) {\r\n                const c = Component.getComponent(elem);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(elem);\r\n                }\r\n            }\r\n\r\n            // New element hover cursor\r\n            const lastElement = diffBranch[0];\r\n            if (lastElement && lastElement.cursor) {\r\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\r\n            }\r\n\r\n            // Rerun _handleHover for target element in case it's been hovered\r\n            // back from its child\r\n            if (diffBranch.length === 0 && target) {\r\n                const c = Component.getComponent(target);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(target);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTargetChild(clientX, clientY) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children);\r\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\r\n\r\n        hoverableChildren.sort((a, b) => {\r\n            // Sort by zIndex and then id\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex < b.zIndex) {\r\n                return -1;\r\n            } else {\r\n                return a.id > b.id ? 1 : -1;\r\n            }\r\n        });\r\n\r\n        if (hoverableChildren.length) {\r\n            // Assume target has highest zIndex (id when zIndex equal)\r\n            return hoverableChildren.slice(-1)[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    _findChildren(bucket, children) {\r\n        let n = children.length;\r\n        while (n--) {\r\n            const child = children[n];\r\n            // only add active children\r\n            if (child.__active && child.collision) {\r\n                if (child.collision === true) {\r\n                    bucket.push(child);\r\n                }\r\n                if (child.hasChildren()) {\r\n                    this._findChildren(bucket, child.children);\r\n                }\r\n            }\r\n        }\r\n        return bucket;\r\n    }\r\n\r\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\r\n        let n = affectedChildren.length;\r\n        const candidates = [];\r\n\r\n        // loop through affected children\r\n        // and perform collision detection\r\n        while (n--) {\r\n            const child = affectedChildren[n];\r\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n            const ctx = child.core._worldContext;\r\n\r\n            const cx = ctx.px * precision;\r\n            const cy = ctx.py * precision;\r\n            const cw = child.finalW * ctx.ta * precision;\r\n            const ch = child.finalH * ctx.td * precision;\r\n\r\n            if (cx > this.stage.w || cy > this.stage.h) {\r\n                continue;\r\n            }\r\n\r\n            if (child.parent.core._scissor) {\r\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\r\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\r\n                    continue\r\n            }\r\n\r\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\r\n                candidates.push(child);\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n\r\n    _testCollision(px, py, cx, cy, cw, ch) {\r\n        if (px >= cx &&\r\n            px <= cx + cw &&\r\n            py >= cy &&\r\n            py <= cy + ch) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        if (!this._destroyed) {\r\n            this._destroy();\r\n            this.stage.destroy();\r\n            this._destroyed = true;\r\n        }\r\n    }\r\n\r\n    _destroy() {\r\n        // This forces the _detach, _disabled and _active events to be called.\r\n        this.stage.setApplication(undefined);\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n\r\n        if (this.__keypressTimers.size) {\r\n            for (const timer of this.__keypressTimers.values()) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            this.__keypressTimers.clear();\r\n        }\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.stage.getCanvas();\r\n    }\r\n\r\n}\r\n\r\nimport Stage from \"../tree/Stage.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticCanvasTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._factory = undefined;\r\n        this._lookupId = undefined;\r\n    }\r\n\r\n    set content({factory, lookupId = undefined}) {\r\n        this._factory = factory;\r\n        this._lookupId = lookupId;\r\n        this._changed();\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._factory;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._lookupId;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const f = this._factory;\r\n        return (cb) => {\r\n            return f((err, canvas) => {\r\n                if (err) {\r\n                    return cb(err);\r\n                }\r\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\r\n            }, this.stage);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\r\n\r\nexport default class Tools {\r\n\r\n    static getCanvasTexture(canvasFactory, lookupId) {\r\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\r\n    }\r\n\r\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\r\n            } else {\r\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\r\n            }\r\n        };\r\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (fill === undefined) fill = true;\r\n        if (strokeWidth === undefined) strokeWidth = 0;\r\n\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + strokeWidth + 2;\r\n        canvas.height = h + strokeWidth + 2;\r\n\r\n        ctx.beginPath();\r\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n\r\n        if (fill) {\r\n            if (Utils.isNumber(fillColor)) {\r\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\r\n            } else {\r\n                ctx.fillStyle = \"white\";\r\n            }\r\n            ctx.fill();\r\n        }\r\n\r\n        if (strokeWidth) {\r\n            if (Utils.isNumber(strokeColor)) {\r\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\r\n            } else {\r\n                ctx.strokeStyle = \"white\";\r\n            }\r\n            ctx.lineWidth = strokeWidth;\r\n            ctx.stroke();\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\r\n            } else {\r\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\r\n            }\r\n        };\r\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createShadowRect(stage, w, h, radius, blur, margin) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + margin * 2;\r\n        canvas.height = h + margin * 2;\r\n\r\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\r\n        ctx.globalAlpha = 0.01;\r\n        ctx.fillRect(0, 0, 0.01, 0.01);\r\n        ctx.globalAlpha = 1.0;\r\n\r\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.shadowBlur = blur;\r\n        ctx.shadowOffsetX = (w + 10) + margin;\r\n        ctx.shadowOffsetY = margin;\r\n\r\n        ctx.beginPath();\r\n        const x = -(w + 10);\r\n        const y = 0;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getSvgTexture(url, w, h) {\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createSvg(cb, stage, url, w, h);\r\n            } else {\r\n                this.createSvg(cb, stage, url, w, h);\r\n            }\r\n        };\r\n        let id = 'svg' + [w, h, url].join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createSvg(cb, stage, url, w, h) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            cb(null, canvas);\r\n        }\r\n        img.onerror = (err) => {\r\n            cb(err);\r\n        }\r\n\r\n        // On the PS4 platform setting the `crossOrigin` attribute on images\r\n        // can cause CORS failures.\r\n        if (!Utils.isPS4) {\r\n            img.crossOrigin = \"Anonymous\";\r\n        }\r\n\r\n        img.src = url;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class ObjMerger {\r\n\r\n    static isMf(f) {\r\n        return Utils.isFunction(f) && f.__mf;\r\n    }\r\n\r\n    static mf(f) {\r\n        // Set as merge function.\r\n        f.__mf = true;\r\n        return f;\r\n    }\r\n\r\n    static merge(a, b) {\r\n        const aks = Object.keys(a);\r\n        const bks = Object.keys(b);\r\n\r\n        if (!bks.length) {\r\n            return a;\r\n        }\r\n\r\n        // Create index array for all elements.\r\n        const ai = {};\r\n        const bi = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n            ai[key] = -1;\r\n            bi[key] = i;\r\n        }\r\n        for (let i = 0, n = aks.length; i < n; i++) {\r\n            const key = aks[i];\r\n            ai[key] = i;\r\n            if (bi[key] === undefined) {\r\n                bi[key] = -1;\r\n            }\r\n        }\r\n\r\n        const aksl = aks.length;\r\n\r\n        const result = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n\r\n            // Prepend all items in a that are not in b - before the now added b attribute.\r\n            const aIndex = ai[key];\r\n            let curIndex = aIndex;\r\n            while(--curIndex >= 0) {\r\n                const akey = aks[curIndex];\r\n                if (bi[akey] !== -1) {\r\n                    // Already found? Stop processing.\r\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\r\n                    break;\r\n                }\r\n            }\r\n            while(++curIndex < aIndex) {\r\n                const akey = aks[curIndex];\r\n                result[akey] = a[akey];\r\n            }\r\n\r\n            const bv = b[key];\r\n            const av = a[key];\r\n            let r;\r\n            if (this.isMf(bv)) {\r\n                r = bv(av);\r\n            } else {\r\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\r\n                    r = bv;\r\n                } else {\r\n                    r = ObjMerger.merge(av, bv);\r\n                }\r\n            }\r\n\r\n            // When marked as undefined, property is deleted.\r\n            if (r !== undefined) {\r\n                result[key] = r;\r\n            }\r\n        }\r\n\r\n        // Append remaining final items in a.\r\n        let curIndex = aksl;\r\n        while(--curIndex >= 0) {\r\n            const akey = aks[curIndex];\r\n            if (bi[akey] !== -1) {\r\n                break;\r\n            }\r\n        }\r\n        while(++curIndex < aksl) {\r\n            const akey = aks[curIndex];\r\n            result[akey] = a[akey];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"../tree/ObjectList.mjs\";\r\n\r\nexport default class ObjectListProxy extends ObjectList {\r\n\r\n    constructor(target) {\r\n        super();\r\n        this._target = target;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._target.addAt(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        this._target.removeAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        this._target._setByArray(order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        this._target.setAt(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._target.setAt(item, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        return this._target.createItem(object);\r\n    }\r\n\r\n    isItem(object) {\r\n        return this._target.isItem(object);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\r\n\r\nexport default class ObjectListWrapper extends ObjectListProxy {\r\n\r\n    constructor(target, wrap) {\r\n        super(target);\r\n        this._wrap = wrap;\r\n    }\r\n\r\n    wrap(item) {\r\n        let wrapper = this._wrap(item);\r\n        item._wrapper = wrapper;\r\n        return wrapper;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        item = this.wrap(item);\r\n        super.onAdd(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        added.forEach(a => this.wrap(a));\r\n        order = order.map(a => a._wrapper);\r\n        super.onSync(removed, added, order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        item = this.wrap(item);\r\n        super.onSet(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        super.onMove(item, fromIndex, toIndex);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class NoiseTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__noise';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const gl = this.stage.gl;\r\n        return function(cb) {\r\n            const noise = new Uint8Array(128 * 128 * 4);\r\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\r\n                const v = Math.floor(Math.random() * 256);\r\n                noise[i] = v;\r\n                noise[i+1] = v;\r\n                noise[i+2] = v;\r\n                noise[i+3] = 255;\r\n            }\r\n            const texParams = {}\r\n\r\n            if (gl) {\r\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class HtmlTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._htmlElement = undefined;\r\n        this._scale = 1;\r\n    }\r\n\r\n    set htmlElement(v) {\r\n        this._htmlElement = v;\r\n        this._changed();\r\n    }\r\n\r\n    get htmlElement() {\r\n        return this._htmlElement;\r\n    }\r\n\r\n    set scale(v) {\r\n        this._scale = v;\r\n        this._changed();\r\n    }\r\n\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set html(v) {\r\n        if (!v) {\r\n            this.htmlElement = undefined;\r\n        } else {\r\n            const d = document.createElement('div');\r\n            d.innerHTML = \"<div>\" + v + \"</div>\";\r\n            this.htmlElement = d.firstElementChild;\r\n        }\r\n    }\r\n\r\n    get html() {\r\n        return this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return this.htmlElement;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._scale + \":\" + this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const htmlElement = this._htmlElement;\r\n        const scale = this._scale;\r\n        return function(cb) {\r\n            if (!window.html2canvas) {\r\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\r\n            }\r\n\r\n            const area = HtmlTexture.getPreloadArea();\r\n            area.appendChild(htmlElement);\r\n\r\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\r\n                area.removeChild(htmlElement);\r\n                if (canvas.height === 0) {\r\n                    return cb(new Error(\"Canvas height is 0\"));\r\n                }\r\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\r\n            }).catch(e => {\r\n                console.error('[Lightning]', e);\r\n            });\r\n        }\r\n    }\r\n\r\n    static getPreloadArea() {\r\n        if (!this._preloadArea) {\r\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\r\n            this._preloadArea = document.createElement('div');\r\n            if (this._preloadArea.attachShadow) {\r\n                // Use a shadow DOM if possible to prevent styling from interfering.\r\n                this._preloadArea.attachShadow({mode: 'closed'});\r\n            }\r\n            this._preloadArea.style.opacity = 0;\r\n            this._preloadArea.style.pointerEvents = 'none';\r\n            this._preloadArea.style.position = 'fixed';\r\n            this._preloadArea.style.display = 'block';\r\n            this._preloadArea.style.top = '100vh';\r\n            this._preloadArea.style.overflow = 'hidden';\r\n            document.body.appendChild(this._preloadArea);\r\n        }\r\n        return this._preloadArea;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticTexture extends Texture {\r\n\r\n    constructor(stage, options) {\r\n        super(stage);\r\n\r\n        this._options = options;\r\n    }\r\n\r\n    set options(v) {\r\n        if (this._options !== v) {\r\n            this._options = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._options;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return (cb) => {\r\n            cb(null, this._options);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class ListComponent extends Component {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._wrapper = super._children.a({});\r\n\r\n        this._reloadVisibleElements = false;\r\n\r\n        this._visibleItems = new Set();\r\n\r\n        this._index = 0;\r\n\r\n        this._started = false;\r\n\r\n        /**\r\n         * The transition definition that is being used when scrolling the items.\r\n         * @type TransitionSettings\r\n         */\r\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\r\n\r\n        /**\r\n         * The scroll area size in pixels per item.\r\n         */\r\n        this._itemSize = 100;\r\n\r\n        this._viewportScrollOffset = 0;\r\n\r\n        this._itemScrollOffset = 0;\r\n\r\n        /**\r\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\r\n         */\r\n        this._roll = false;\r\n\r\n        /**\r\n         * Allows restricting the start scroll position.\r\n         */\r\n        this._rollMin = 0;\r\n\r\n        /**\r\n         * Allows restricting the end scroll position.\r\n         */\r\n        this._rollMax = 0;\r\n\r\n        /**\r\n         * Definition for a custom animation that is applied when an item is (partially) selected.\r\n         * @type AnimationSettings\r\n         */\r\n        this._progressAnimation = null;\r\n\r\n        /**\r\n         * Inverts the scrolling direction.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._invertDirection = false;\r\n\r\n        /**\r\n         * Layout the items horizontally or vertically?\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._horizontal = true;\r\n\r\n        this.itemList = new ListItems(this);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return false;\r\n    }\r\n\r\n    get items() {\r\n        return this.itemList.get();\r\n    }\r\n\r\n    set items(children) {\r\n        this.itemList.patch(children);\r\n    }\r\n\r\n    start() {\r\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\r\n        this._scrollTransition = this._wrapper.transition(this.property);\r\n        this._scrollTransition.on('progress', p => this.update());\r\n\r\n        this.setIndex(0, true, true);\r\n\r\n        this._started = true;\r\n\r\n        this.update();\r\n    }\r\n\r\n    setIndex(index, immediate = false, closest = false) {\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n\r\n        if (closest) {\r\n            // Scroll to same offset closest to the index.\r\n            let offset = Utils.getModuloIndex(index, nElements);\r\n            let o = Utils.getModuloIndex(this.index, nElements);\r\n            let diff = offset - o;\r\n            if (diff > 0.5 * nElements) {\r\n                diff -= nElements;\r\n            } else if (diff < -0.5 * nElements) {\r\n                diff += nElements;\r\n            }\r\n            this._index += diff;\r\n        } else {\r\n            this._index = index;\r\n        }\r\n\r\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\r\n            this._index = Utils.getModuloIndex(this._index, nElements);\r\n        }\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = direction * this._index * this._itemSize;\r\n\r\n        if (this._roll) {\r\n            let min, max, scrollDelta;\r\n            if (direction == 1) {\r\n                max = (nElements - 1) * this._itemSize;\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max -= scrollDelta;\r\n\r\n                min = this.viewportSize - (this._itemSize + scrollDelta);\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.max(Math.min(value, max), min);\r\n            } else {\r\n                max = (nElements * this._itemSize - this.viewportSize);\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max += scrollDelta;\r\n\r\n                let min = scrollDelta;\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.min(Math.max(-max, value), -min);\r\n            }\r\n        }\r\n\r\n        this._scrollTransition.start(value);\r\n\r\n        if (immediate) {\r\n            this._scrollTransition.finish();\r\n        }\r\n\r\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n    }\r\n\r\n    getAxisPosition() {\r\n        let target = -this._scrollTransition._targetValue;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = -direction * this._index * this._itemSize;\r\n\r\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\r\n    }\r\n\r\n    update() {\r\n        if (!this._started) return;\r\n\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n\r\n        // Map position to index value.\r\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\r\n\r\n        let viewportSize = this.viewportSize;\r\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\r\n        v += scrollDelta;\r\n\r\n        let s, e, ps, pe;\r\n        if (direction == -1) {\r\n            s = Math.floor(-v / this._itemSize);\r\n            ps = 1 - ((-v / this._itemSize) - s);\r\n            e = Math.floor((viewportSize - v) / this._itemSize);\r\n            pe = (((viewportSize - v) / this._itemSize) - e);\r\n        } else {\r\n            s = Math.ceil(v / this._itemSize);\r\n            ps = 1 + (v / this._itemSize) - s;\r\n            e = Math.ceil((v - viewportSize) / this._itemSize);\r\n            pe = e - ((v - viewportSize) / this._itemSize);\r\n        }\r\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\r\n            // Don't show additional items.\r\n            if (e >= nElements) {\r\n                e = nElements - 1;\r\n                pe = 1;\r\n            }\r\n            if (s >= nElements) {\r\n                s = nElements - 1;\r\n                ps = 1;\r\n            }\r\n            if (e <= -1) {\r\n                e = 0;\r\n                pe = 1;\r\n            }\r\n            if (s <= -1) {\r\n                s = 0;\r\n                ps = 1;\r\n            }\r\n        }\r\n\r\n        let offset = -direction * s * this._itemSize;\r\n\r\n        let item;\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n\r\n            let element = this.getElement(realIndex);\r\n            item = element.parent;\r\n            this._visibleItems.delete(item);\r\n            if (this._horizontal) {\r\n                item.x = offset + scrollDelta;\r\n            } else {\r\n                item.y = offset + scrollDelta;\r\n            }\r\n\r\n            let wasVisible = item.visible;\r\n            item.visible = true;\r\n\r\n            if (!wasVisible || this._reloadVisibleElements) {\r\n                // Turned visible.\r\n                this.emit('visible', index, realIndex);\r\n            }\r\n\r\n\r\n\r\n            if (this._progressAnimation) {\r\n                let p = 1;\r\n                if (index == s) {\r\n                    p = ps;\r\n                } else if (index == e) {\r\n                    p = pe;\r\n                }\r\n\r\n                // Use animation to progress.\r\n                this._progressAnimation.apply(element, p);\r\n            }\r\n\r\n            offset += this._itemSize;\r\n        }\r\n\r\n        // Handle item visibility.\r\n        let self = this;\r\n        this._visibleItems.forEach(function(invisibleItem) {\r\n            invisibleItem.visible = false;\r\n            self._visibleItems.delete(invisibleItem);\r\n        });\r\n\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n            this._visibleItems.add(this.getWrapper(realIndex));\r\n        }\r\n\r\n        this._reloadVisibleElements = false;\r\n    }\r\n\r\n    setPrevious() {\r\n        this.setIndex(this._index - 1);\r\n    }\r\n\r\n    setNext() {\r\n        this.setIndex(this._index + 1);\r\n    }\r\n\r\n    getWrapper(index) {\r\n        return this._wrapper.children[index];\r\n    }\r\n\r\n    getElement(index) {\r\n        let e = this._wrapper.children[index];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    reload() {\r\n        this._reloadVisibleElements = true;\r\n        this.update();\r\n    }\r\n\r\n    get element() {\r\n        let e = this._wrapper.children[this.realIndex];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    get length() {\r\n        return this._wrapper.children.length;\r\n    }\r\n\r\n    get property() {\r\n        return this._horizontal ? 'x' : 'y';\r\n    }\r\n\r\n    get viewportSize() {\r\n        return this._horizontal ? this.w : this.h;\r\n    }\r\n\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    get realIndex() {\r\n        return Utils.getModuloIndex(this._index, this.length);\r\n    }\r\n\r\n    get itemSize() {\r\n        return this._itemSize;\r\n    }\r\n\r\n    set itemSize(v) {\r\n        this._itemSize = v;\r\n        this.update();\r\n    }\r\n\r\n    get viewportScrollOffset() {\r\n        return this._viewportScrollOffset;\r\n    }\r\n\r\n    set viewportScrollOffset(v) {\r\n        this._viewportScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get itemScrollOffset() {\r\n        return this._itemScrollOffset;\r\n    }\r\n\r\n    set itemScrollOffset(v) {\r\n        this._itemScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get scrollTransitionSettings() {\r\n        return this._scrollTransitionSettings;\r\n    }\r\n\r\n    set scrollTransitionSettings(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    set scrollTransition(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    get scrollTransition() {\r\n        return this._scrollTransition;\r\n    }\r\n\r\n    get progressAnimation() {\r\n        return this._progressAnimation;\r\n    }\r\n\r\n    set progressAnimation(v) {\r\n        if (Utils.isObjectLiteral(v)) {\r\n            this._progressAnimation = this.stage.animations.createSettings(v);\r\n        } else {\r\n            this._progressAnimation = v;\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    get roll() {\r\n        return this._roll;\r\n    }\r\n\r\n    set roll(v) {\r\n        this._roll = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMin() {\r\n        return this._rollMin;\r\n    }\r\n\r\n    set rollMin(v) {\r\n        this._rollMin = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMax() {\r\n        return this._rollMax;\r\n    }\r\n\r\n    set rollMax(v) {\r\n        this._rollMax = v;\r\n        this.update();\r\n    }\r\n\r\n    get invertDirection() {\r\n        return this._invertDirection;\r\n    }\r\n\r\n    set invertDirection(v) {\r\n        if (!this._started) {\r\n            this._invertDirection = v;\r\n        }\r\n    }\r\n\r\n    get horizontal() {\r\n        return this._horizontal;\r\n    }\r\n\r\n    set horizontal(v) {\r\n        if (v !== this._horizontal) {\r\n            if (!this._started) {\r\n                this._horizontal = v;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\r\nclass ListItems extends ObjectListWrapper {\r\n    constructor(list) {\r\n        let wrap = (item => {\r\n            let parent = item.stage.createElement();\r\n            parent.add(item);\r\n            parent.visible = false;\r\n            return parent;\r\n        })\r\n\r\n        super(list._wrapper._children, wrap);\r\n        this.list = list;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        super.onAdd(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    checkStarted(index) {\r\n        this.list._reloadVisibleElements = true;\r\n        if (!this.list._started) {\r\n            this.list.start();\r\n        } else {\r\n            if (this.list.length === 1) {\r\n                this.list.setIndex(0, true, true);\r\n            } else {\r\n                if (this.list._index >= this.list.length) {\r\n                    this.list.setIndex(0);\r\n                }\r\n            }\r\n            this.list.update();\r\n        }\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n        let ri = this.list.realIndex;\r\n        if (ri === index) {\r\n            if (ri === this.list.length) {\r\n                ri--;\r\n            }\r\n            if (ri >= 0) {\r\n                this.list.setIndex(ri);\r\n            }\r\n        } else if (ri > index) {\r\n            this.list.setIndex(ri - 1);\r\n        }\r\n\r\n        this.list._reloadVisibleElements = true;\r\n    }\r\n\r\n    onSet(item, index) {\r\n        super.onSet(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        super.onSync(removed, added, order);\r\n        this.checkStarted(0);\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class LinearBlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n\r\n        this._direction = new Float32Array([1, 0]);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get x() {\r\n        return this._direction[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._direction[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._direction[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._direction[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n\r\n    useDefault() {\r\n        return (this._kernelRadius === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\r\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\r\n\r\n        const w = operation.getRenderWidth();\r\n        const h = operation.getRenderHeight();\r\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nLinearBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 resolution;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 direction;\r\n    uniform int kernelRadius;\r\n    \r\n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3333333333333333) * direction;\r\n        color += texture2D(image, uv) * 0.29411764705882354;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n        return color; \r\n    }\r\n    \r\n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3846153846) * direction;\r\n        vec2 off2 = vec2(3.2307692308) * direction;\r\n        color += texture2D(image, uv) * 0.2270270270;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\r\n        return color;\r\n    }\r\n    \r\n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.411764705882353) * direction;\r\n        vec2 off2 = vec2(3.2941176470588234) * direction;\r\n        vec2 off3 = vec2(5.176470588235294) * direction;\r\n        color += texture2D(image, uv) * 0.1964825501511404;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\r\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\r\n        return color;\r\n    }    \r\n\r\n    void main(void){\r\n        if (kernelRadius == 1) {\r\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else if (kernelRadius == 2) {\r\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else {\r\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\r\n */\r\nexport default class BoxBlurShader extends DefaultShader {\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const dx = 1.0 / operation.getTextureWidth(0);\r\n        const dy = 1.0 / operation.getTextureHeight(0);\r\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\r\n    }\r\n\r\n}\r\n\r\nBoxBlurShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 stepTextureCoord;\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\r\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\r\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\r\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nBoxBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class BlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\r\nimport Shader from \"../tree/Shader.mjs\";\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\n\r\nexport default class FastBlurComponent extends Component {\r\n    static _template() {\r\n        return {}\r\n    }\r\n\r\n    get wrap() {\r\n        return this.tag(\"Wrap\");\r\n    }\r\n\r\n    set content(v) {\r\n        return this.wrap.content = v;\r\n    }\r\n\r\n    get content() {\r\n        return this.wrap.content;\r\n    }\r\n\r\n    set padding(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set amount(v) {\r\n        return this.wrap.amount = v;\r\n    }\r\n\r\n    get amount() {\r\n        return this.wrap.amount;\r\n    }\r\n\r\n    _onResize() {\r\n        this.wrap.w = this.renderWidth;\r\n        this.wrap.h = this.renderHeight;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    _build() {\r\n        this.patch({\r\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nclass C2dFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            forceZIndexContext: true,\r\n            rtt: true,\r\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n\r\n    }\r\n\r\n    static getSpline() {\r\n        if (!this._multiSpline) {\r\n            this._multiSpline = new MultiSpline();\r\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\r\n        }\r\n        return this._multiSpline;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        this._wrapper.x = paddingX;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._wrapper.y = paddingY;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this._textwrap.w = w + paddingX * 2;\r\n        this._textwrap.h = h + paddingY * 2;\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\r\n    }\r\n\r\n    static _amountToKernelRadius(v) {\r\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nclass WebGLFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            },\r\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n        this._output = this.sel(\"Result\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _buildLayers() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._output.x = -paddingX;\r\n        this._textwrap.x = -paddingX;\r\n        this._output.w = fw;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._output.y = -paddingY;\r\n        this._textwrap.y = -paddingY;\r\n        this._output.h = fh;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v === 0) {\r\n            this._textwrap.renderToTexture = false;\r\n            this._output.shader.otherTextureSource = null;\r\n            this._output.visible = false;\r\n        } else {\r\n            this._textwrap.renderToTexture = true;\r\n            this._output.visible = true;\r\n\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n\r\n            if (v <= 1) {\r\n                this._output.texture = this._textwrap.getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\r\n                this._output.shader.a = v;\r\n            } else if (v <= 2) {\r\n                this._output.texture = this.getLayer(0).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\r\n                this._output.shader.a = v - 1;\r\n            } else if (v <= 3) {\r\n                this._output.texture = this.getLayer(1).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\r\n                this._output.shader.a = v - 2;\r\n            } else if (v <= 4) {\r\n                this._output.texture = this.getLayer(2).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\r\n                this._output.shader.a = v - 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._buildLayers();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Shader that combines two textures into one output.\r\n */\r\nclass FastBlurOutputShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._a = 0;\r\n        this._otherTextureSource = null;\r\n    }\r\n\r\n    get a() {\r\n        return this._a;\r\n    }\r\n\r\n    set a(v) {\r\n        this._a = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set otherTextureSource(v) {\r\n        this._otherTextureSource = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\r\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\r\n\r\n        let gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n\r\nFastBlurOutputShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uSampler2;\r\n    uniform float a;\r\n    void main(void){\r\n        if (a == 1.0) {\r\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\r\n        } else {\r\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport default class BloomComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\r\n                BloomBase: {shader: {type: BloomBaseShader},\r\n                    Content: {}\r\n                }\r\n            },\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap.Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _build() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap.Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap.Content').patch(v);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v > 0) {\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._build();\r\n    }\r\n\r\n}\r\n\r\nclass BloomBaseShader extends DefaultShader {\r\n}\r\n\r\nBloomBaseShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float m = max(max(color.r, color.g), color.b);\r\n        float c = max(0.0, (m - 0.80)) * 5.0;\r\n        color = color * c;\r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class SmoothScaleComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\r\n                Content: {}\r\n            },\r\n            Scale: {visible: false}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._smoothScale = 1;\r\n        this._iterations = 0;\r\n    }\r\n\r\n    get content() {\r\n        return this.tag('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.tag('Content').patch(v, true);\r\n    }\r\n\r\n    get smoothScale() {\r\n        return this._smoothScale;\r\n    }\r\n\r\n    set smoothScale(v) {\r\n        if (this._smoothScale !== v) {\r\n            let its = 0;\r\n            while(v < 0.5 && its < 12) {\r\n                its++;\r\n                v = v * 2;\r\n            }\r\n\r\n            this.scale = v;\r\n            this._setIterations(its);\r\n\r\n            this._smoothScale = v;\r\n        }\r\n    }\r\n\r\n    _setIterations(its) {\r\n        if (this._iterations !== its) {\r\n            const scalers = this.sel(\"Scale\").childList;\r\n            const content = this.sel(\"ContentWrap\");\r\n            while (scalers.length < its) {\r\n                const first = scalers.length === 0;\r\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\r\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\r\n            }\r\n\r\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\r\n\r\n            const useScalers = (its > 0);\r\n            this.patch({\r\n                ContentWrap: {renderToTexture: useScalers},\r\n                Scale: {visible: useScalers}\r\n            });\r\n\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                scalers.getAt(i).patch({\r\n                    visible: i < its,\r\n                    renderOffscreen: i !== its - 1\r\n                });\r\n            }\r\n            this._iterations = its;\r\n        }\r\n    }\r\n\r\n    static _updateDimensions(contentWrap, force) {\r\n        const content = contentWrap.children[0];\r\n        let w = content.renderWidth;\r\n        let h = content.renderHeight;\r\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\r\n            contentWrap.w = w;\r\n            contentWrap.h = h;\r\n\r\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                w = w * 0.5;\r\n                h = h * 0.5;\r\n                scalers[i].w = w;\r\n                scalers[i].h = h;\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class BorderComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            Content: {},\r\n            Borders: {\r\n                Top: {rect: true, visible: false, mountY: 1},\r\n                Right: {rect: true, visible: false},\r\n                Bottom: {rect: true, visible: false},\r\n                Left: {rect: true, visible: false, mountX: 1}\r\n            }\r\n        };\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._borderTop = this.tag(\"Top\");\r\n        this._borderRight = this.tag(\"Right\");\r\n        this._borderBottom = this.tag(\"Bottom\");\r\n        this._borderLeft = this.tag(\"Left\");\r\n\r\n        this.onAfterUpdate = function (element) {\r\n            const content = element.childList.first;\r\n            let w = element.core.w || content.renderWidth;\r\n            let h = element.core.h || content.renderHeight;\r\n            element._borderTop.w = w;\r\n            element._borderBottom.y = h;\r\n            element._borderBottom.w = w;\r\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderLeft.y = -element._borderTop.h;\r\n            element._borderRight.x = w;\r\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderRight.y = -element._borderTop.h;\r\n        };\r\n\r\n        this.borderWidth = 1;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Content').patch(v, true);\r\n    }\r\n\r\n    get borderWidth() {\r\n        return this.borderWidthTop;\r\n    }\r\n\r\n    get borderWidthTop() {\r\n        return this._borderTop.h;\r\n    }\r\n\r\n    get borderWidthRight() {\r\n        return this._borderRight.w;\r\n    }\r\n\r\n    get borderWidthBottom() {\r\n        return this._borderBottom.h;\r\n    }\r\n\r\n    get borderWidthLeft() {\r\n        return this._borderLeft.w;\r\n    }\r\n\r\n    set borderWidth(v) {\r\n        this.borderWidthTop = v;\r\n        this.borderWidthRight = v;\r\n        this.borderWidthBottom = v;\r\n        this.borderWidthLeft = v;\r\n    }\r\n\r\n    set borderWidthTop(v) {\r\n        this._borderTop.h = v;\r\n        this._borderTop.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthRight(v) {\r\n        this._borderRight.w = v;\r\n        this._borderRight.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthBottom(v) {\r\n        this._borderBottom.h = v;\r\n        this._borderBottom.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthLeft(v) {\r\n        this._borderLeft.w = v;\r\n        this._borderLeft.visible = (v > 0);\r\n    }\r\n\r\n    get colorBorder() {\r\n        return this.colorBorderTop;\r\n    }\r\n\r\n    get colorBorderTop() {\r\n        return this._borderTop.color;\r\n    }\r\n\r\n    get colorBorderRight() {\r\n        return this._borderRight.color;\r\n    }\r\n\r\n    get colorBorderBottom() {\r\n        return this._borderBottom.color;\r\n    }\r\n\r\n    get colorBorderLeft() {\r\n        return this._borderLeft.color;\r\n    }\r\n\r\n    set colorBorder(v) {\r\n        this.colorBorderTop = v;\r\n        this.colorBorderRight = v;\r\n        this.colorBorderBottom = v;\r\n        this.colorBorderLeft = v;\r\n    }\r\n\r\n    set colorBorderTop(v) {\r\n        this._borderTop.color = v;\r\n    }\r\n\r\n    set colorBorderRight(v) {\r\n        this._borderRight.color = v;\r\n    }\r\n\r\n    set colorBorderBottom(v) {\r\n        this._borderBottom.color = v;\r\n    }\r\n\r\n    set colorBorderLeft(v) {\r\n        this._borderLeft.color = v;\r\n    }\r\n\r\n    get borderTop() {\r\n        return this._borderTop;\r\n    }\r\n\r\n    set borderTop(settings) {\r\n        this.borderTop.patch(settings);\r\n    }\r\n\r\n    get borderRight() {\r\n        return this._borderRight;\r\n    }\r\n\r\n    set borderRight(settings) {\r\n        this.borderRight.patch(settings);\r\n    }\r\n\r\n    get borderBottom() {\r\n        return this._borderBottom;\r\n    }\r\n\r\n    set borderBottom(settings) {\r\n        this.borderBottom.patch(settings);\r\n    }\r\n\r\n    get borderLeft() {\r\n        return this._borderLeft;\r\n    }\r\n\r\n    set borderLeft(settings) {\r\n        this.borderLeft.patch(settings);\r\n    }\r\n\r\n    set borders(settings) {\r\n        this.borderTop = settings;\r\n        this.borderLeft = settings;\r\n        this.borderBottom = settings;\r\n        this.borderRight = settings;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\r\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getC2d() {\r\n        return C2dGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nWebGLGrayscaleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\r\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\r\n    }\r\n`;\r\n\r\nexport class C2dGrayscaleShader extends C2dDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return WebGLGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * This shader can be used to fix a problem that is known as 'gradient banding'.\r\n */\r\nexport default class DitheringShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._noiseTexture = new NoiseTexture(ctx.stage);\r\n\r\n        this._graining = 1/256;\r\n\r\n        this._random = false;\r\n    }\r\n\r\n    set graining(v) {\r\n        this._graining = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set random(v) {\r\n        this._random = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Make sure that the noise texture is uploaded to the GPU.\r\n        this._noiseTexture.load();\r\n\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            // Calculate noise texture coordinates so that it spans the full element.\r\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\r\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\r\n\r\n            let ulx = 0;\r\n            let uly = 0;\r\n            if (this._random) {\r\n                ulx = Math.random();\r\n                uly = Math.random();\r\n\r\n                brx += ulx;\r\n                bry += uly;\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = ulx;\r\n                    ulx = brx;\r\n                    brx = t;\r\n                }\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = uly;\r\n                    uly = bry;\r\n                    bry = t;\r\n                }\r\n            }\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = ulx;\r\n            floats[offset + 1] = uly;\r\n\r\n            floats[offset + 2] = brx;\r\n            floats[offset + 3] = uly;\r\n\r\n            floats[offset + 4] = brx;\r\n            floats[offset + 5] = bry;\r\n\r\n            floats[offset + 6] = ulx;\r\n            floats[offset + 7] = bry;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n\r\n        let glTexture = this._noiseTexture.source.nativeTexture;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\r\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        let gl = this.gl;\r\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    useDefault() {\r\n        return this._graining === 0;\r\n    }\r\n\r\n    afterDraw(operation) {\r\n        if (this._random) {\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDitheringShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec2 aNoiseTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vNoiseTextureCoord = aNoiseTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDitheringShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uNoiseSampler;\r\n    uniform float graining;\r\n    void main(void){\r\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../../tree/Utils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class CircularPushShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._inputValue = 0;\r\n\r\n        this._maxDerivative = 0.01;\r\n\r\n        this._normalizedValue = 0;\r\n\r\n        // The offset between buckets. A value between 0 and 1.\r\n        this._offset = 0;\r\n\r\n        this._amount = 0.1;\r\n\r\n        this._aspectRatio = 1;\r\n\r\n        this._offsetX = 0;\r\n\r\n        this._offsetY = 0;\r\n\r\n        this.buckets = 100;\r\n    }\r\n\r\n    get aspectRatio() {\r\n        return this._aspectRatio;\r\n    }\r\n\r\n    set aspectRatio(v) {\r\n        this._aspectRatio = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetX() {\r\n        return this._offsetX;\r\n    }\r\n\r\n    set offsetX(v) {\r\n        this._offsetX = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        this._offsetY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    set inputValue(v) {\r\n        this._inputValue = v;\r\n    }\r\n\r\n    get inputValue() {\r\n        return this._inputValue;\r\n    }\r\n\r\n    set maxDerivative(v) {\r\n        this._maxDerivative = v;\r\n    }\r\n\r\n    get maxDerivative() {\r\n        return this._maxDerivative;\r\n    }\r\n\r\n    set buckets(v) {\r\n        if (v > 100) {\r\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\r\n            v = 100;\r\n        }\r\n\r\n        // This should be set before starting.\r\n        this._buckets = v;\r\n\r\n        // Init values array in the correct length.\r\n        this._values = new Uint8Array(this._getValues(v));\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    get buckets() {\r\n        return this._buckets;\r\n    }\r\n\r\n    _getValues(n) {\r\n        const v = [];\r\n        for (let i = 0; i < n; i++) {\r\n            v.push(this._inputValue);\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * Progresses the shader with the specified (fractional) number of buckets.\r\n     * @param {number} o;\r\n     *   A number from 0 to 1 (1 = all buckets).\r\n     */\r\n    progress(o) {\r\n        this._offset += o * this._buckets;\r\n        const full = Math.floor(this._offset);\r\n        this._offset -= full;\r\n        this._shiftBuckets(full);\r\n        this.redraw();\r\n    }\r\n\r\n    _shiftBuckets(n) {\r\n        for (let i = this._buckets - 1; i >= 0; i--) {\r\n            const targetIndex = i - n;\r\n            if (targetIndex < 0) {\r\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\r\n                this._values[i] = 255 * this._normalizedValue;\r\n            } else {\r\n                this._values[i] = this._values[targetIndex];\r\n            }\r\n        }\r\n    }\r\n\r\n    set offset(v) {\r\n        this._offset = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\r\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\r\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\r\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\r\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        const gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        if (!this._valuesTexture) {\r\n            this._valuesTexture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            if (Utils.isNode) {\r\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\r\n            }\r\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        } else {\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n        }\r\n\r\n        // Upload new values.\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    cleanup() {\r\n        if (this._valuesTexture) {\r\n            this.gl.deleteTexture(this._valuesTexture);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nCircularPushShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    uniform float offsetX;\r\n    uniform float offsetY;\r\n    uniform float aspectRatio;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vPos;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vPos = vTextureCoord * 2.0 - 1.0;\r\n        vPos.y = vPos.y * aspectRatio;\r\n        vPos.y = vPos.y + offsetY;\r\n        vPos.x = vPos.x + offsetX;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nCircularPushShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vPos;\r\n    uniform float amount;\r\n    uniform float offset;\r\n    uniform float values[100];\r\n    uniform float buckets;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uValueSampler;\r\n    void main(void){\r\n        float l = length(vPos);\r\n        float m = (l * buckets * 0.678 - offset) / buckets;\r\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\r\n        vec2 unit = vPos / l;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\r\n    }\r\n`;\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class InversionShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nInversionShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class OutlineShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._width = 5;\r\n        this._col = 0xFFFFFFFF;\r\n        this._color = [1,1,1,1];\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get color() {\r\n        return this._col;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this._col !== v) {\r\n            const col = StageUtils.getRgbaComponentsNormalized(v);\r\n            col[0] = col[0] * col[3];\r\n            col[1] = col[1] * col[3];\r\n            col[2] = col[2] * col[3];\r\n\r\n            this._color = col;\r\n\r\n            this.redraw();\r\n\r\n            this._col = v;\r\n        }\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._width === 0 || this._col[3] === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            const elementCore = operation.getElementCore(i);\r\n\r\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\r\n            const ddw = this._width / elementCore.w;\r\n            const dw = ddw / (1 - 2 * ddw);\r\n            const ddh = this._width / elementCore.h;\r\n            const dh = ddh / (1 - 2 * ddh);\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = -dw;\r\n            floats[offset + 1] = -dh;\r\n\r\n            floats[offset + 2] = 1 + dw;\r\n            floats[offset + 3] = -dh;\r\n\r\n            floats[offset + 4] = 1 + dw;\r\n            floats[offset + 5] = 1 + dh;\r\n\r\n            floats[offset + 6] = -dw;\r\n            floats[offset + 7] = 1 + dh;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n}\r\n\r\nOutlineShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aCorner;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vCorner;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vCorner = aCorner;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nOutlineShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vCorner;\r\n    uniform vec4 color;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec2 m = min(vCorner, 1.0 - vCorner);\r\n        float value = step(0.0, min(m.x, m.y));\r\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\r\n */\r\nexport default class PixelateShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._size = new Float32Array([4, 4]);\r\n    }\r\n\r\n    get x() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._size[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._size[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get size() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set size(v) {\r\n        this._size[0] = v;\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return ((this._size[0] === 0) && (this._size[1] === 0));\r\n    }\r\n\r\n    static getWebGLImpl() {\r\n        return WebGLPixelateShaderImpl;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let w = operation.quads.getTextureWidth(operation.index + i);\r\n            let h = operation.quads.getTextureHeight(operation.index + i);\r\n\r\n            floats[offset] = w;\r\n            floats[offset + 1] = h;\r\n            floats[offset + 2] = w;\r\n            floats[offset + 3] = h;\r\n            floats[offset + 4] = w;\r\n            floats[offset + 5] = h;\r\n            floats[offset + 6] = w;\r\n            floats[offset + 7] = h;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\r\n    }\r\n}\r\n\r\nPixelateShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aTextureRes;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        vTextureRes = aTextureRes;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPixelateShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n\r\n    uniform vec2 size;\r\n    uniform sampler2D uSampler;\r\n    \r\n    vec2 mapCoord( vec2 coord )\r\n    {\r\n        coord *= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 unmapCoord( vec2 coord )\r\n    {\r\n        coord /= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 pixelate(vec2 coord, vec2 size)\r\n    {\r\n        return floor( coord / size ) * size;\r\n    }\r\n    \r\n    void main(void)\r\n    {\r\n        vec2 coord = mapCoord(vTextureCoord);\r\n        coord = pixelate(coord, size);\r\n        coord = unmapCoord(coord);\r\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class RadialFilterShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._radius = 0;\r\n        this._cutoff = 1;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set cutoff(v) {\r\n        this._cutoff = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get cutoff() {\r\n        return this._cutoff;\r\n    }\r\n    \r\n    useDefault() {\r\n        return this._radius === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        // We substract half a pixel to get a better cutoff effect.\r\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\r\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nRadialFilterShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 pos;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n        pos = gl_Position.xy;\r\n    }\r\n`;\r\n\r\nRadialFilterShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 pos;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float radius;\r\n    uniform float cutoff;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RoundedRectangleShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._blend = 0;\r\n        this._radius = [1, 1, 1, 1];\r\n        this._stroke = 0;\r\n        this._fc = 0x00ffffff;\r\n        this._fillColor = this._getNormalizedColor(0xffffffff);\r\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\r\n    }\r\n\r\n    set blend(p) {\r\n        this._blend = Math.min(Math.max(p, 0), 1);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._radius = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._radius = v;\r\n            }\r\n            else {\r\n                this._radius = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._radius = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set topLeft(num) {\r\n        this._radius[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topLeft() {\r\n        return this._radius[0];\r\n    }\r\n\r\n    set topRight(num) {\r\n        this._radius[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topRight() {\r\n        return this._radius[1];\r\n    }\r\n\r\n    set bottomRight(num) {\r\n        this._radius[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomRight() {\r\n        return this._radius[2];\r\n    }\r\n\r\n    set bottomLeft(num) {\r\n        this._radius[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomLeft() {\r\n        return this._radius[4];\r\n    }\r\n\r\n    set strokeColor(argb) {\r\n        this._sc = argb;\r\n        this._strokeColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get strokeColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set fillColor(argb) {\r\n        this._fc = argb;\r\n        this._fillColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get fillColor() {\r\n        return this._fc;\r\n    }\r\n\r\n    set stroke(num) {\r\n        this._stroke = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\r\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\r\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\r\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nRoundedRectangleShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nRoundedRectangleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n\r\n    #define PI 3.14159265359\r\n\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 radius;\r\n    uniform float stroke;\r\n    uniform vec4 strokeColor;\r\n    uniform vec4 fillColor;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float blend;\r\n    \r\n    float boxDist(vec2 p, vec2 size, float radius){\r\n        size -= vec2(radius);\r\n        vec2 d = abs(p) - size;\r\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    float innerBorderMask(float dist, float width){\r\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\r\n        float alpha2 = clamp(dist, 0.0, 1.0);\r\n        return alpha1 - alpha2;\r\n    }\r\n\r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        float r = 0.0;\r\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[0];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[1];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\r\n            r = radius[2];\r\n        } else {\r\n            r = radius[3];\r\n        }\r\n        \r\n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\r\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \r\n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\r\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from './DefaultShader.mjs';\r\n\r\nexport default class FadeOutShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._fade = [0, 0, 0, 0];\r\n    }\r\n\r\n    set top(num) {\r\n        this._fade[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get top() {\r\n        return this._fade[0];\r\n    }\r\n\r\n    set right(num) {\r\n        this._fade[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get right() {\r\n        return this._fade[1];\r\n    }\r\n\r\n    set bottom(num) {\r\n        this._fade[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottom() {\r\n        return this._fade[2];\r\n    }\r\n\r\n    set left(num) {\r\n        this._fade[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get left() {\r\n        return this._fade[3];\r\n    }\r\n\r\n    set fade(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._fade = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._fade = v;\r\n            }\r\n            else {\r\n                this._fade = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._fade = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get fade() {\r\n        return this._fade;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const fade = this._fade.map((f) => f * renderPrecision);\r\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nFadeOutShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 fade;\r\n    \r\n    void main() {\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 point = vTextureCoord.xy * resolution.xy;\r\n        \r\n        vec2 pos1;\r\n        vec2 pos2;\r\n        vec2 d;\r\n        float c;\r\n        float t = 0.0;\r\n             \r\n        if(fade[0] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x, point.y + fade[0]);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[1] > 0.0) {\r\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\r\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[2] > 0.0) {\r\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\r\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[3] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x + fade[3], point.y);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class VignetteShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._magnitude = 1.3;\r\n        this._intensity = 0.7;\r\n        this._pivot = [0.5, 0.5];\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\r\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\r\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\r\n        this.redraw()\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v)) {\r\n            this._pivot = v;\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivot[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivot[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get intensity() {\r\n        return this._intensity;\r\n    }\r\n\r\n    set intensity(v) {\r\n        this._intensity = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get magnitude() {\r\n        return this._magnitude;\r\n\r\n    }\r\n\r\n    set magnitude(v) {\r\n        this._magnitude = v;\r\n        this.redraw();\r\n    }\r\n}\r\n\r\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nVignetteShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float magnitude;\r\n    uniform float intensity;\r\n    uniform vec2 pivot;\r\n\r\n    void main() {\r\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\r\n        uv.x = clamp(uv.x, 0.0, 1.0);\r\n        uv.y = clamp(uv.y, 0.0, 1.0);\r\n   \r\n        uv *=  1.00 - uv.yx;\r\n        float vig = uv.x * uv.y * 25.0 * intensity;\r\n        vig = pow(vig, 0.45 * magnitude);\r\n        vec4 fragColor = vec4(vig) * vColor;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\r\n\r\n    }\r\n`\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from '../../../tree/StageUtils.mjs'\r\n\r\nexport default class SpinnerShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._radius = 100;\r\n        this._width = 50;\r\n        this._period = 1;\r\n        this._angle = 0.5;\r\n        this._smooth = 0.005;\r\n        this._color = 0xffffffff;\r\n        this._backgroundColor = 0xff000000;\r\n        this._time = Date.now();\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set angle(v) {\r\n        this._angle = v\r\n        this.redraw();\r\n    }\r\n\r\n    set smooth(v) {\r\n        this._smooth = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set color(v) {\r\n        this._color = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set backgroundColor(v) {\r\n        this._backgroundColor = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner\r\n\r\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\r\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\r\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\r\n\r\n        this.redraw()\r\n    }\r\n}\r\n\r\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nSpinnerShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float iTime;\r\n    uniform float radius;\r\n    uniform float width;\r\n    uniform float period;\r\n    uniform float angle;\r\n    uniform float smooth;\r\n    uniform vec2 resolution;\r\n\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n\r\n    float ratio = resolution.y / resolution.x;\r\n\r\n    vec2 transpose_pos(vec2 pos) {\r\n        if (ratio < 1.) {\r\n            float diff = 0.5 - pos.x;\r\n            pos.x = 0.5 - diff / ratio;\r\n        } else {\r\n            float diff = 0.5 - pos.y;\r\n            pos.y = 0.5 - diff * ratio;\r\n        }\r\n        return pos;\r\n    }\r\n\r\n    float get_angle(vec2 pos) {\r\n        pos = transpose_pos(pos);\r\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\r\n        a = (1.0+a/3.14159)/2.0;\r\n        \r\n        return a;\r\n    }\r\n\r\n    float dist(vec2 pos1, vec2 pos2) {\r\n        pos1 = transpose_pos(pos1);\r\n        return distance(pos1, pos2);\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 fragCoord = vTextureCoord;\r\n        vec4 fragColor = vColor;\r\n        \r\n        vec2 st = vTextureCoord;\r\n        float pct = dist(st, vec2(0.5));\r\n\r\n        float a = get_angle(st);\r\n        float t = iTime / 1000.0 / period;\r\n\r\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\r\n        float outer = max(radius / resolution.x, radius / resolution.y);\r\n\r\n        float x1 = mod(t, 1.0);\r\n        float x2 = mod(t + angle, 1.0);\r\n\r\n        if (x1 < x2) {\r\n            if (a > x1 && a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        } else {\r\n            if (a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else if (a > x1) {\r\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        }\r\n\r\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\r\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class HoleShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n        this._radius = 0;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        this._x = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        this._y = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        this._w = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        this._h = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\r\n\r\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\r\n    }\r\n}\r\n\r\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nHoleShader.fragmentShaderSource = `\r\n   #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float x;\r\n    uniform float y;\r\n    uniform float w;\r\n    uniform float h;\r\n    uniform vec2 resolution;\r\n    uniform float radius;\r\n\r\n    float roundBox(vec2 p, vec2 b, float r) {\r\n        float d = length(max(abs(p)-b+r, 0.1))-r;\r\n        return smoothstep(1.0, 0.0, d);\r\n    }\r\n\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n        vec2 size = vec2(w, h) / 2.0;\r\n        float b = roundBox(pos, size, radius);\r\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RadialGradientShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._pivot = [0, 0];\r\n        this._ic = 0xffffffff;\r\n        this._normalizedIC = this._getNormalizedColor(this._ic);\r\n        this._oc = 0x00ffffff;\r\n        this._normalizedOC = this._getNormalizedColor(this._oc);\r\n        this._radius = 0;\r\n    }\r\n\r\n    set radiusX(v) {\r\n        this.radius = v;\r\n    }\r\n\r\n    get radiusX() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radiusY(v) {\r\n        this._radiusY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radiusY() {\r\n        return this._radiusY;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set innerColor(argb) {\r\n        this._ic = argb;\r\n        this._normalizedIC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get innerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set outerColor(argb) {\r\n        this._oc = argb;\r\n        this._normalizedOC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    set color(argb) {\r\n        this.innerColor = argb;\r\n    }\r\n\r\n    get color() {\r\n        return this.innerColor;\r\n    }\r\n\r\n    get outerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set x(f) {\r\n        this._x = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set y(f) {\r\n        this._y = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v) && v.length === 2) {\r\n            this._pivot = v;\r\n        }\r\n        else if(Array.isArray(v)) {\r\n            this._pivot = [v[0], v[1] || v[0]];\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotY(f) {\r\n        this._pivot[1] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotX(f) {\r\n        this._pivot[0] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        if(this._x) {\r\n            this._pivot[0] = this._x / owner.w;\r\n        }\r\n        if(this._y) {\r\n            this._pivot[1] = this._y / owner.h;\r\n        }\r\n\r\n        if(this._radius === 0) {\r\n            this._radius = owner.w * 0.5;\r\n        }\r\n\r\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\r\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\r\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\r\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\r\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\r\n    }\r\n}\r\n\r\nRadialGradientShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec2 pivot;\r\n    uniform vec4 innerColor;\r\n    uniform vec4 outerColor;\r\n    uniform float radius;\r\n    uniform float radiusY;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float aspectRatio;\r\n    \r\n    void main() {\r\n        vec2 point = vTextureCoord.xy * resolution;\r\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\r\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\r\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\r\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class Light3dShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._strength = 0.5;\r\n        this._ambient = 0.5;\r\n        this._fudge = 0.4;\r\n\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n\r\n        this._z = 0;\r\n        this._pivotX = NaN;\r\n        this._pivotY = NaN;\r\n        this._pivotZ = 0;\r\n\r\n        this._lightY = 0;\r\n        this._lightZ = 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        let vr = operation.shaderOwner;\r\n        let element = vr.element;\r\n\r\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\r\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\r\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n\r\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        let gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\r\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\r\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\r\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set strength(v) {\r\n        this._strength = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get strength() {\r\n        return this._strength;\r\n    }\r\n\r\n    set ambient(v) {\r\n        this._ambient = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ambient() {\r\n        return this._ambient;\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivotX = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivotY = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightY() {\r\n        return this._lightY;\r\n    }\r\n\r\n    set lightY(v) {\r\n        this._lightY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotZ() {\r\n        return this._pivotZ;\r\n    }\r\n\r\n    set pivotZ(v) {\r\n        this._pivotZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightZ() {\r\n        return this._lightZ;\r\n    }\r\n\r\n    set lightZ(v) {\r\n        this._lightZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\r\n    }\r\n\r\n}\r\n\r\nLight3dShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float fudge;\r\n    uniform float strength;\r\n    uniform float ambient;\r\n    uniform float z;\r\n    uniform float lightY;\r\n    uniform float lightZ;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Set depth perspective\r\n        float perspective = 1.0 + fudge * pos.z;\r\n\r\n        pos.z += lightZ * projection.x;\r\n\r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, perspective);\r\n\r\n        // Correct light source position.\r\n        pos.y += lightY * abs(projection.y);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nLight3dShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec3 pos;\r\n    uniform sampler2D uSampler;\r\n    uniform float ambient;\r\n    uniform float strength;\r\n    void main(void){\r\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\r\n        float d = length(pos);\r\n        float n = 1.0 / max(0.1, d);\r\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\r\n        gl_FragColor = rgba * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class PerspectiveShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._fudge = 0.2;\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n        this._z = 1.0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const vr = operation.shaderOwner;\r\n        const element = vr.element;\r\n\r\n        const pivotX = element.pivotX * vr.w;\r\n        const pivotY = element.pivotY * vr.h;\r\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        const gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\r\n    }\r\n\r\n}\r\n\r\nPerspectiveShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float z;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, z);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPerspectiveShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform vec3 rot;\r\n    uniform float fudge;\r\n\r\n    void main(void) {\r\n        vec2 coords = vTextureCoord;\r\n\r\n        coords.xy -= vec2(0.5);\r\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\r\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\r\n        coords.xy += vec2(0.5);\r\n\r\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\r\n            gl_FragColor = vec4(0.0);\r\n        } else {\r\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class MagnifierShader extends DefaultShader {\r\n\tconstructor(context) {\r\n\t  super(context);\r\n\t  this._x = 0;\r\n\t  this._y = 0;\r\n\t  this._w = 0;\r\n\t  this._h = 0;\r\n\t  this._radius = 0;\r\n\t  this._magnification = 0.6;\r\n\t}\r\n  \r\n\tget x() {\r\n\t  return this._x;\r\n\t}\r\n  \r\n\tset x(v) {\r\n\t  this._x = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget y() {\r\n\t  return this._y;\r\n\t}\r\n  \r\n\tset y(v) {\r\n\t  this._y = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget w() {\r\n\t  return this._w;\r\n\t}\r\n  \r\n\tset w(v) {\r\n\t  this._w = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget h() {\r\n\t  return this._h;\r\n\t}\r\n  \r\n\tset h(v) {\r\n\t  this._h = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget magnification() {\r\n\t  return this._magnification;\r\n\t}\r\n  \r\n\tset magnification(v) {\r\n\t  this._magnification = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget radius() {\r\n\t  return this._radius;\r\n\t}\r\n  \r\n\tset radius(v) {\r\n\t  this._radius = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tsetupUniforms(operation) {\r\n\t  super.setupUniforms(operation);\r\n  \r\n\t  const owner = operation.shaderOwner;\r\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\r\n\t  this._setUniform(\r\n\t\t'radius',\r\n\t\t(this._radius + 0.5) * renderPrecision,\r\n\t\tthis.gl.uniform1f\r\n\t  );\r\n\t  this._setUniform(\r\n\t\t'resolution',\r\n\t\tnew Float32Array([\r\n\t\t  owner._w * renderPrecision,\r\n\t\t  owner._h * renderPrecision\r\n\t\t]),\r\n\t\tthis.gl.uniform2fv\r\n\t  );\r\n\t}\r\n \r\n\tuseDefault() {\r\n\t  return this._w === 0 && this._h === 0;\r\n\t}\r\n  }\r\n  \r\n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n  \r\n  MagnifierShader.fragmentShaderSource = `\r\n\t  #ifdef GL_ES\r\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\r\n\t\tprecision highp float;\r\n\t\t# else\r\n\t\tprecision lowp float;\r\n\t\t# endif\r\n\t  #endif\r\n\r\n\t  varying vec2 vTextureCoord;\r\n\t  varying vec4 vColor;\r\n\t  uniform sampler2D uSampler;\r\n\t  uniform float x;\r\n\t  uniform float y;\r\n\t  uniform float w;\r\n\t  uniform float h;\r\n\t  uniform vec2 resolution;\r\n\t  uniform float radius;\r\n\t  uniform float magnification;\r\n  \r\n\t  float roundBox(vec2 p, vec2 b, float r) {\r\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\r\n\t\t  return smoothstep(1.0, 0.0, d);\r\n\t  }\r\n\r\n\t  float inside(vec2 v) {\r\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\r\n\t\treturn s.x * s.y;   \r\n      }\r\n  \r\n\t  void main(void) {\r\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\r\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n\t\tvec2 size = vec2(w, h) / 2.0;\r\n\t\tfloat b = roundBox(pos, size, radius);\r\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\r\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\r\n\t  }\r\n  `;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class SpinnerShader2 extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._period = 1;\r\n        this._stroke = 0;\r\n        this._showDot = true;\r\n        this._clockwise = true;\r\n        this._bc = 0xff000000;\r\n        this._normalizedBC = this._getNormalizedColor(this._bc);\r\n        this._c = 0xffffffff;\r\n        this._normalizedC = this._getNormalizedColor(this._c);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(v === 0) {\r\n            v = 1;\r\n        }\r\n        this._radius = v;\r\n    }\r\n\r\n    set stroke(value) {\r\n        this._stroke = Math.abs(value);\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    set color(argb) {\r\n        this._c = argb;\r\n        this._normalizedC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get color() {\r\n        return this._c;\r\n    }\r\n\r\n    set backgroundColor(argb) {\r\n        this._bc = argb;\r\n        this._normalizedBC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set showDot(bool) {\r\n        this._showDot = bool;\r\n    }\r\n\r\n    get showDot() {\r\n        return this._showDot;\r\n    }\r\n\r\n    set clockwise(bool) {\r\n        this._clockwise = bool;\r\n    }\r\n\r\n    get clockwise() {\r\n        return this._clockwise;\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n    }\r\n\r\n    get period() {\r\n        return this._period;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const radius = this._radius || (owner._w / 2);\r\n\r\n        if(this._stroke === 0) {\r\n            this._stroke = radius * 0.33;\r\n        }\r\n\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\r\n        this._setUniform('radius',  radius, this.gl.uniform1f);\r\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\r\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\r\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n\r\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\r\n            this.redraw();\r\n        }\r\n    }\r\n}\r\n\r\nSpinnerShader2.spinSync = Date.now();\r\n\r\nSpinnerShader2.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    \r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n    uniform float direction;\r\n    uniform float radius;\r\n    uniform float time;\r\n    uniform float stroke;\r\n    uniform float showDot;\r\n    uniform float period;\r\n    uniform float alpha;\r\n    \r\n    float circleDist(vec2 p, float radius){\r\n        return length(p) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\r\n        \r\n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\r\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\r\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\r\n        \r\n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\r\n        \r\n        float strokeRad = stroke * 0.5;\r\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\r\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\r\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Application from \"./application/Application.mjs\";\r\nimport Component from \"./application/Component.mjs\";\r\nimport Base from \"./tree/Base.mjs\";\r\nimport Utils from \"./tree/Utils.mjs\";\r\nimport StageUtils from \"./tree/StageUtils.mjs\";\r\nimport Element from \"./tree/Element.mjs\";\r\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\r\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\r\nimport Texture from \"./tree/Texture.mjs\";\r\n\r\nimport Tools from \"./tools/Tools.mjs\";\r\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\r\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\r\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\r\n\r\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\r\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\r\nimport TextTexture from \"./textures/TextTexture.mjs\";\r\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\r\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\r\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\r\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\r\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\r\n\r\nimport ListComponent from \"./components/ListComponent.mjs\";\r\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\r\nimport BloomComponent from \"./components/BloomComponent.mjs\";\r\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\r\nimport BorderComponent from \"./components/BorderComponent.mjs\";\r\nimport EventEmitter from \"./EventEmitter.mjs\";\r\n\r\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\r\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\r\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\r\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\r\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\r\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\r\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\r\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\r\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\r\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\r\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\r\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\r\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\r\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\r\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\r\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\r\n\r\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\r\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\r\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\r\n\r\nimport Stage from \"./tree/Stage.mjs\";\r\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\r\n\r\nconst lightning = {\r\n    Application,\r\n    Component,\r\n    Base,\r\n    Utils,\r\n    StageUtils,\r\n    Element,\r\n    Tools,\r\n    Stage,\r\n    ElementCore,\r\n    ElementTexturizer,\r\n    Texture,\r\n    EventEmitter,\r\n    shaders: {\r\n        Grayscale: WebGLGrayscaleShader,\r\n        BoxBlur: BoxBlurShader,\r\n        Dithering: DitheringShader,\r\n        CircularPush: CircularPushShader,\r\n        Inversion: InversionShader,\r\n        LinearBlur: LinearBlurShader,\r\n        Outline: OutlineShader,\r\n        Pixelate: PixelateShader,\r\n        RadialFilter: RadialFilterShader,\r\n        RoundedRectangle: RoundedRectangleShader,\r\n        Spinner2: SpinnerShader2,\r\n        FadeOut: FadeOutShader,\r\n        Hole: HoleShader,\r\n        Vignette: VignetteShader,\r\n        Spinner: SpinnerShader,\r\n        RadialGradient: RadialGradientShader,\r\n        Light3d: Light3dShader,\r\n        Perspective: PerspectiveShader,\r\n        Magnifier: MagnifierShader,\r\n        WebGLShader,\r\n        WebGLDefaultShader,\r\n        C2dShader,\r\n        C2dDefaultShader,\r\n        c2d: {\r\n            Grayscale: C2dGrayscaleShader,\r\n            Blur: C2dBlurShader\r\n        }\r\n    },\r\n    textures: {\r\n        RectangleTexture,\r\n        NoiseTexture,\r\n        TextTexture,\r\n        ImageTexture,\r\n        HtmlTexture,\r\n        StaticTexture,\r\n        StaticCanvasTexture,\r\n        SourceTexture\r\n    },\r\n    components: {\r\n        FastBlurComponent,\r\n        BloomComponent,\r\n        SmoothScaleComponent,\r\n        BorderComponent,\r\n        ListComponent\r\n    },\r\n    tools: {\r\n        ObjMerger,\r\n        ObjectListProxy,\r\n        ObjectListWrapper\r\n    }\r\n};\r\n\r\nif (Utils.isWeb) {\r\n    window.lng = lightning;\r\n}\r\n\r\nexport default lightning;\r\n"],"names":["StageUtils","_classCallCheck","key","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","mergeMultiColors","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_createClass","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","arguments","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_ignoreRTL","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","px","pivotYMul","isRTL","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","_setIgnoreRTL","enableZSort","newShaderOwner","_setShaderOwnerRecursive","ignoreRTL","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","calculatedX","__parent","getOption","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","removeListener","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_Texture","_callSuper","_src","_inherits","src","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","call","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","fontWeight","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","textAlign","globalAlpha","fillRect","translate","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","textColor","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","renderText","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","fillText","textSplit","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_iterator2","_step2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","apply","lastLineText","filter","_suffix","_iterator5","_step5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_step11","_iterator11","_step12","_iterator12","_getBreakIndex","breakIndex","_step13","totalWidth","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontWeight","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","_EventEmitter","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_ObjectList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","_Element","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","_CoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","_CoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_CoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","_Shader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","_WebGLShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_Renderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","_WebGLRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","csx","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_Component","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","getCanvasTexture","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_ObjectListProxy","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_ObjectListWrapper","checkStarted","ri","LinearBlurShader","_DefaultShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_Component2","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_Component3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}