{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StageUtils {\r\n\r\n    static mergeNumbers(v1, v2, p) {\r\n        return v1 * p + v2 * (1 - p);\r\n    };\r\n\r\n    static rgb(r, g, b) {\r\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\r\n    };\r\n\r\n    static rgba(r, g, b, a) {\r\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\r\n    };\r\n\r\n    static getRgbString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n    };\r\n\r\n    static getRgbaString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        let a = ((color / 16777216) | 0) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaStringFromArray(color) {\r\n        let r = Math.floor(color[0] * 255);\r\n        let g = Math.floor(color[1] * 255);\r\n        let b = Math.floor(color[2] * 255);\r\n        let a = Math.floor(color[3] * 255) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r / 255, g / 255, b / 255, a / 255];\r\n    };\r\n\r\n    static getRgbComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        return [r / 255, g / 255, b / 255];\r\n    };\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static mergeMultiColors(c, p) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1 * p[i];\r\n            g += g1 * p[i];\r\n            b += b1 * p[i];\r\n            a += a1 * p[i];\r\n            t += p[i];\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeMultiColorsEqual(c) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1;\r\n            g += g1;\r\n            b += b1;\r\n            a += a1;\r\n            t += 1.0;\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeColorAlpha(c, alpha) {\r\n        let a = ((c / 16777216 | 0) * alpha) | 0;\r\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\r\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\r\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\r\n            (a << 24);\r\n    };\r\n\r\n    static rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    };\r\n\r\n    static getTimingBezier(a, b, c, d) {\r\n        let xc = 3.0 * a;\r\n        let xb = 3.0 * (c - a) - xc;\r\n        let xa = 1.0 - xc - xb;\r\n        let yc = 3.0 * b;\r\n        let yb = 3.0 * (d - b) - yc;\r\n        let ya = 1.0 - yc - yb;\r\n\r\n        return function (time) {\r\n            if (time >= 1.0) {\r\n                return 1;\r\n            }\r\n            if (time <= 0) {\r\n                return 0;\r\n            }\r\n\r\n            let t = 0.5, cbx, cbxd, dx;\r\n\r\n            for (let it = 0; it < 20; it++) {\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                // Cubic bezier derivative.\r\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                    // Problematic. Fall back to binary search method.\r\n                    break;\r\n                }\r\n\r\n                t += dx / cbxd;\r\n            }\r\n\r\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n            let minT = 0;\r\n            let maxT = 1;\r\n            for (let it = 0; it < 20; it++) {\r\n                t = 0.5 * (minT + maxT);\r\n\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    // Solution found!\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                if (dx < 0) {\r\n                    maxT = t;\r\n                } else {\r\n                    minT = t;\r\n                }\r\n            }\r\n\r\n        };\r\n    };\r\n\r\n    static getTimingFunction(str) {\r\n        switch (str) {\r\n            case \"linear\":\r\n                return function (time) {\r\n                    return time\r\n                };\r\n            case \"ease\":\r\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\r\n            case \"ease-in\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\r\n            case \"ease-out\":\r\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\r\n            case \"ease-in-out\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\r\n            case \"step-start\":\r\n                return function () {\r\n                    return 1\r\n                };\r\n            case \"step-end\":\r\n                return function (time) {\r\n                    return time === 1 ? 1 : 0;\r\n                };\r\n            default:\r\n                let s = \"cubic-bezier(\";\r\n                if (str && str.indexOf(s) === 0) {\r\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\r\n                    if (parts.length !== 4) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n                    let a = parseFloat(parts[0]);\r\n                    let b = parseFloat(parts[1]);\r\n                    let c = parseFloat(parts[2]);\r\n                    let d = parseFloat(parts[3]);\r\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n\r\n                    return StageUtils.getTimingBezier(a, b, c, d);\r\n                } else {\r\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                    // Fallback: use linear.\r\n                    return function (time) {\r\n                        return time\r\n                    };\r\n                }\r\n        }\r\n    };\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    static clone(v) {\r\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\r\n            return Utils.getDeepClone(v);\r\n        } else {\r\n            // Copy by value.\r\n            return v;\r\n        }\r\n    }\r\n\r\n    static cloneObjShallow(obj) {\r\n        let keys = Object.keys(obj);\r\n        let clone = {}\r\n        for (let i = 0; i < keys.length; i++) {\r\n            clone[keys[i]] = obj[keys[i]];\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    static merge(obj1, obj2) {\r\n        let keys = Object.keys(obj2);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            obj1[keys[i]] = obj2[keys[i]];\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object' || type === 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object;\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static getModuloIndex(index, len) {\r\n        if (len === 0) return index;\r\n        while (index < 0) {\r\n            index += Math.ceil(-index / len) * len;\r\n        }\r\n        index = index % len;\r\n        return index;\r\n    }\r\n\r\n    static getDeepClone(obj) {\r\n        let i, c;\r\n        if (Utils.isFunction(obj)) {\r\n            // Copy functions by reference.\r\n            return obj;\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            c = [];\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else if (Utils.isObject(obj)) {\r\n            c = {}\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false;\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\r\n        } else {\r\n            return v1 === v2;\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false;\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static setToArray(s) {\r\n        let result = [];\r\n        s.forEach(function (value) {\r\n            result.push(value);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static iteratorToArray(iterator) {\r\n        let result = [];\r\n        let iteratorResult = iterator.next();\r\n        while (!iteratorResult.done) {\r\n            result.push(iteratorResult.value);\r\n            iteratorResult = iterator.next();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isUcChar(charcode) {\r\n        return charcode >= 65 && charcode <= 90;\r\n    }\r\n\r\n}\r\n\r\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\r\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\r\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\r\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\r\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Base {\r\n\r\n    static defaultSetter(obj, name, value) {\r\n        obj[name] = value;\r\n    }\r\n\r\n    static patchObject(obj, settings) {\r\n        if (!Utils.isObjectLiteral(settings)) {\r\n            console.error(\"[Lightning] Settings must be object literal\");\r\n        } else {\r\n            let names = Object.keys(settings);\r\n            for (let i = 0, n = names.length; i < n; i++) {\r\n                let name = names[i];\r\n\r\n                this.patchObjectProperty(obj, name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    static patchObjectProperty(obj, name, value) {\r\n        let setter = obj.setSetting || Base.defaultSetter;\r\n\r\n        if (name.charAt(0) === \"_\") {\r\n            // Disallow patching private variables.\r\n            if (name !== \"__create\") {\r\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\r\n            }\r\n        } else if (name !== \"type\") {\r\n            // Type is a reserved keyword to specify the class type on creation.\r\n            if (Utils.isFunction(value) && value.__local) {\r\n                // Local function (Base.local(s => s.something))\r\n                value = value.__local(obj);\r\n            }\r\n\r\n            setter(obj, name, value);\r\n        }\r\n    }\r\n\r\n    static local(func) {\r\n        // This function can be used as an object setting, which is called with the target object.\r\n        func.__local = true;\r\n    }\r\n\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SpacingCalculator {\r\n\r\n    static getSpacing(mode, numberOfItems, remainingSpace) {\r\n        const itemGaps = (numberOfItems - 1);\r\n        let spacePerGap;\r\n\r\n        let spacingBefore, spacingBetween;\r\n\r\n        switch(mode) {\r\n            case \"flex-start\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"flex-end\":\r\n                spacingBefore = remainingSpace;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"center\":\r\n                spacingBefore = remainingSpace / 2;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"space-between\":\r\n                spacingBefore = 0;\r\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\r\n                break;\r\n            case \"space-around\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 1);\r\n                    spacingBefore = 0.5 * spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"space-evenly\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 2);\r\n                    spacingBefore = spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"stretch\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unknown mode: \" + mode);\r\n        }\r\n\r\n        return {spacingBefore, spacingBetween}\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\r\n\r\nexport default class ContentAligner {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._totalCrossAxisSize = 0;\r\n    }\r\n\r\n    get _lines() {\r\n        return this._layout._lines;\r\n    }\r\n\r\n    init() {\r\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\r\n    }\r\n\r\n    align() {\r\n        const crossAxisSize = this._layout.crossAxisSize;\r\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\r\n\r\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\r\n\r\n        const lines = this._lines;\r\n\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        let growSize = 0;\r\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\r\n            growSize = remainingSpace / lines.length;\r\n        }\r\n\r\n        let currentPos = spacingBefore;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const crossAxisLayoutOffset = currentPos;\r\n            const aligner = lines[i].createItemAligner();\r\n\r\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\r\n\r\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\r\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\r\n\r\n            aligner.align();\r\n\r\n            if (aligner.recursiveResizeOccured) {\r\n                lines[i].setItemPositions();\r\n            }\r\n\r\n            currentPos += finalCrossAxisLayoutSize;\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    get totalCrossAxisSize() {\r\n        return this._totalCrossAxisSize;\r\n    }\r\n\r\n    _getTotalCrossAxisSize() {\r\n        const lines = this._lines;\r\n        let total = 0;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const line = lines[i];\r\n            total += line.crossAxisLayoutSize;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    _getSpacing(remainingSpace) {\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        const numberOfItems = this._lines.length;\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class FlexUtils {\r\n\r\n    static getParentAxisSizeWithPadding(item, horizontal) {\r\n        const target = item.target;\r\n        const parent = target.getParent();\r\n        if (!parent) {\r\n            return 0;\r\n        } else {\r\n            const flexParent = item.flexParent;\r\n            if (flexParent) {\r\n                // Use pending layout size.\r\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\r\n            } else {\r\n                // Use 'absolute' size.\r\n                return horizontal ? parent.w : parent.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRelAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            if (item.funcW) {\r\n                if (this._allowRelAxisSizeFunction(item, true)) {\r\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalWidth;\r\n            }\r\n        } else {\r\n            if (item.funcH) {\r\n                if (this._allowRelAxisSizeFunction(item, false)) {\r\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    static _allowRelAxisSizeFunction(item, horizontal) {\r\n        const flexParent = item.flexParent;\r\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\r\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static isZeroAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            return !item.originalWidth && !item.funcW;\r\n        } else {\r\n            return !item.originalHeight && !item.funcH;\r\n        }\r\n    }\r\n\r\n    static getAxisLayoutPos(item, horizontal) {\r\n        return horizontal ? item.x : item.y;\r\n    }\r\n\r\n    static getAxisLayoutSize(item, horizontal) {\r\n        return horizontal ? item.w : item.h;\r\n    }\r\n\r\n    static setAxisLayoutPos(item, horizontal, pos) {\r\n        if (horizontal) {\r\n            item.x = pos;\r\n        } else {\r\n            item.y = pos;\r\n        }\r\n    }\r\n\r\n    static setAxisLayoutSize(item, horizontal, size) {\r\n        if (horizontal) {\r\n            item.w = size;\r\n        } else {\r\n            item.h = size;\r\n        }\r\n    }\r\n\r\n    static getAxisMinSize(item, horizontal) {\r\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\r\n\r\n        let flexItemMinSize = 0;\r\n        if (item.isFlexItemEnabled()) {\r\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\r\n        }\r\n\r\n        const hasLimitedMinSize = (flexItemMinSize > 0);\r\n        if (hasLimitedMinSize) {\r\n            minSize = Math.max(minSize, flexItemMinSize);\r\n        }\r\n        return minSize;\r\n    }\r\n\r\n    static getPlainAxisMinSize(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            return item._flex._layout.getAxisMinSize(horizontal);\r\n        } else {\r\n            const isShrinkable = (item.flexItem.shrink !== 0);\r\n            if (isShrinkable) {\r\n                return 0;\r\n            } else {\r\n                return this.getRelAxisSize(item, horizontal);\r\n            }\r\n        }\r\n    }\r\n\r\n    static resizeAxis(item, horizontal, size) {\r\n        if (item.isFlexEnabled()) {\r\n            const isMainAxis = (item._flex._horizontal === horizontal);\r\n            if (isMainAxis) {\r\n                item._flex._layout.resizeMainAxis(size);\r\n            } else {\r\n                item._flex._layout.resizeCrossAxis(size);\r\n            }\r\n        } else {\r\n            this.setAxisLayoutSize(item, horizontal, size);\r\n        }\r\n    }\r\n\r\n\r\n    static getPaddingOffset(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalPadding(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingRight + flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop + flex.paddingBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMarginOffset(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalMargin(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginRight + flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop + flexItem.marginBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeShrinker {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._shrunkSize = 0;\r\n    }\r\n\r\n    shrink(amount) {\r\n        this._shrunkSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalShrinkAmount = this._getTotalShrinkAmount();\r\n        if (totalShrinkAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const shrinkAmount = flexItem.shrink;\r\n                    const isShrinkableItem = (shrinkAmount > 0);\r\n                    if (isShrinkableItem) {\r\n                        let shrink = shrinkAmount * amountPerShrink;\r\n                        const minSize = flexItem._getMainAxisMinSize();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (size > minSize) {\r\n                            const maxShrink = size - minSize;\r\n                            const isFullyShrunk = (shrink >= maxShrink);\r\n                            if (isFullyShrunk) {\r\n                                shrink = maxShrink;\r\n\r\n                                // Destribute remaining amount over the other flex items.\r\n                                totalShrinkAmount -= shrinkAmount;\r\n                            }\r\n\r\n                            const finalSize = size - shrink;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._shrunkSize += shrink;\r\n                            this._amountRemaining -= shrink;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalShrinkAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.shrink) {\r\n                const minSize = flexItem._getMainAxisMinSize();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully shrunk.\r\n                if (size > minSize) {\r\n                    total += flexItem.shrink;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getShrunkSize() {\r\n        return this._shrunkSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeGrower {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._grownSize = 0;\r\n    }\r\n\r\n    grow(amount) {\r\n        this._grownSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalGrowAmount = this._getTotalGrowAmount();\r\n        if (totalGrowAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const growAmount = flexItem.grow;\r\n                    const isGrowableItem = (growAmount > 0);\r\n                    if (isGrowableItem) {\r\n                        let grow = growAmount * amountPerGrow;\r\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (maxSize > 0) {\r\n                            if (size >= maxSize) {\r\n                                // Already fully grown.\r\n                                grow = 0;\r\n                            } else {\r\n                                const maxGrow = maxSize - size;\r\n                                const isFullyGrown = (grow >= maxGrow);\r\n                                if (isFullyGrown) {\r\n                                    grow = maxGrow;\r\n\r\n                                    // Destribute remaining amount over the other flex items.\r\n                                    totalGrowAmount -= growAmount;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (grow > 0) {\r\n                            const finalSize = size + grow;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._grownSize += grow;\r\n                            this._amountRemaining -= grow;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalGrowAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.grow) {\r\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully grown.\r\n                if (maxSize === 0 || size < maxSize) {\r\n                    total += flexItem.grow;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getGrownSize() {\r\n        return this._grownSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\r\n\r\nexport default class ItemPositioner {\r\n\r\n    constructor(lineLayout) {\r\n        this._line = lineLayout;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    position() {\r\n        const {spacingBefore, spacingBetween} = this._getSpacing();\r\n\r\n        let currentPos = spacingBefore;\r\n\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n\r\n            item.flexItem._setMainAxisLayoutPos(currentPos);\r\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    _getSpacing() {\r\n        const remainingSpace = this._line._availableSpace;\r\n        let mode = this._layout._flexContainer.justifyContent;\r\n        const numberOfItems = this._line.numberOfItems;\r\n\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ItemAligner {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._crossAxisLayoutSize = 0;\r\n        this._crossAxisLayoutOffset = 0;\r\n        this._alignItemsSetting = null;\r\n        this._recursiveResizeOccured = false;\r\n        this._isCrossAxisFitToContents = false;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    setCrossAxisLayoutSize(size) {\r\n        this._crossAxisLayoutSize = size;\r\n    }\r\n\r\n    setCrossAxisLayoutOffset(offset) {\r\n        this._crossAxisLayoutOffset = offset;\r\n    }\r\n\r\n    align() {\r\n        this._alignItemsSetting = this._flexContainer.alignItems;\r\n\r\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\r\n\r\n        this._recursiveResizeOccured = false;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            this._alignItem(item);\r\n        }\r\n    }\r\n\r\n    get recursiveResizeOccured() {\r\n        return this._recursiveResizeOccured;\r\n    }\r\n\r\n    _alignItem(item) {\r\n        const flexItem = item.flexItem;\r\n        let align = flexItem.alignSelf || this._alignItemsSetting;\r\n\r\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\r\n            align = \"flex-start\";\r\n        }\r\n\r\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\r\n            if (flexItem._hasRelCrossAxisSize()) {\r\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\r\n                flexItem._resetCrossAxisLayoutSize();\r\n            }\r\n        }\r\n\r\n        switch(align) {\r\n            case \"flex-start\":\r\n                this._alignItemFlexStart(flexItem);\r\n                break;\r\n            case \"flex-end\":\r\n                this._alignItemFlexEnd(flexItem);\r\n                break;\r\n            case \"center\":\r\n                this._alignItemFlexCenter(flexItem);\r\n                break;\r\n            case \"stretch\":\r\n                this._alignItemStretch(flexItem);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _alignItemFlexStart(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n    }\r\n\r\n    _alignItemFlexEnd(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\r\n    }\r\n\r\n    _alignItemFlexCenter(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\r\n    }\r\n\r\n    _alignItemStretch(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n\r\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\r\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\r\n\r\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\r\n        if (crossAxisMinSizeSetting > 0) {\r\n            size = Math.max(size, crossAxisMinSizeSetting);\r\n        }\r\n\r\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\r\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\r\n        if (crossAxisMaxSizeSettingEnabled) {\r\n            size = Math.min(size, crossAxisMaxSizeSetting);\r\n        }\r\n\r\n        flexItem._resizeCrossAxis(size);\r\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\r\n\r\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\r\n        if (recursiveResize) {\r\n            // Recursive resize can happen when this flex item has the opposite direction than the container\r\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\r\n            // item may decrease. If it does so, we must re-justify-content the complete line.\r\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\r\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\r\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\r\n            // as slow layout or endless loops.\r\n            this._recursiveResizeOccured = true;\r\n        }\r\n    }\r\n\r\n    _preventStretch(flexItem) {\r\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\r\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\r\n        return hasFixedCrossAxisSize && !forceStretch;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SizeShrinker from \"./SizeShrinker.mjs\";\r\nimport SizeGrower from \"./SizeGrower.mjs\";\r\nimport ItemPositioner from \"./ItemPositioner.mjs\";\r\nimport ItemAligner from \"./ItemAligner.mjs\";\r\n\r\nexport default class LineLayout {\r\n\r\n    constructor(layout, startIndex, endIndex, availableSpace) {\r\n        this._layout = layout;\r\n        this.items = layout.items;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this._availableSpace = availableSpace;\r\n    }\r\n\r\n    performLayout() {\r\n        this._setItemSizes();\r\n        this.setItemPositions();\r\n        this._calcLayoutInfo();\r\n    }\r\n\r\n    _setItemSizes() {\r\n        if (this._availableSpace > 0) {\r\n            this._growItemSizes(this._availableSpace);\r\n        } else if (this._availableSpace < 0) {\r\n            this._shrinkItemSizes(-this._availableSpace);\r\n        }\r\n    }\r\n\r\n    _growItemSizes(amount) {\r\n        const grower = new SizeGrower(this);\r\n        grower.grow(amount);\r\n        this._availableSpace -= grower.getGrownSize();\r\n    }\r\n\r\n    _shrinkItemSizes(amount) {\r\n        const shrinker = new SizeShrinker(this);\r\n        shrinker.shrink(amount);\r\n        this._availableSpace += shrinker.getShrunkSize();\r\n    }\r\n\r\n    setItemPositions() {\r\n        const positioner = new ItemPositioner(this);\r\n        positioner.position();\r\n    }\r\n\r\n    createItemAligner() {\r\n        return new ItemAligner(this);\r\n    }\r\n\r\n    _calcLayoutInfo() {\r\n        this._calcCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    getMainAxisMinSize() {\r\n        let mainAxisMinSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\r\n        }\r\n        return mainAxisMinSize;\r\n    }\r\n    \r\n    get numberOfItems() {\r\n        return this.endIndex - this.startIndex + 1;\r\n    }\r\n\r\n    get crossAxisLayoutSize() {\r\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\r\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\r\n        if (shouldFitToContents) {\r\n            return this._crossAxisMaxLayoutSize;\r\n        } else {\r\n            return this._layout.crossAxisSize;\r\n        }\r\n    }\r\n\r\n    _calcCrossAxisMaxLayoutSize() {\r\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    _getCrossAxisMaxLayoutSize() {\r\n        let crossAxisMaxSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\r\n        }\r\n        return crossAxisMaxSize;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport LineLayout from \"./line/LineLayout.mjs\";\r\n\r\n/**\r\n * Distributes items over layout lines.\r\n */\r\nexport default class LineLayouter {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    get lines() {\r\n        return this._lines;\r\n    }\r\n\r\n    get mainAxisMinSize() {\r\n        if (this._mainAxisMinSize === -1) {\r\n            this._mainAxisMinSize = this._getMainAxisMinSize();\r\n        }\r\n        return this._mainAxisMinSize;\r\n    }\r\n\r\n    get crossAxisMinSize() {\r\n        if (this._crossAxisMinSize === -1) {\r\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\r\n        }\r\n        return this._crossAxisMinSize;\r\n    }\r\n\r\n    get mainAxisContentSize() {\r\n        return this._mainAxisContentSize;\r\n    }\r\n\r\n    layoutLines() {\r\n        this._setup();\r\n        const items = this._layout.items;\r\n        const wrap = this._layout.isWrapping();\r\n\r\n        let startIndex = 0;\r\n        let i;\r\n        const n = items.length;\r\n        for (i = 0; i < n; i++) {\r\n            const item = items[i];\r\n\r\n            this._layoutFlexItem(item);\r\n\r\n            // Get predicted main axis size.\r\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n\r\n            if (wrap && (i > startIndex)) {\r\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\r\n                if (isOverflowing) {\r\n                    this._layoutLine(startIndex, i - 1);\r\n                    this._curMainAxisPos = 0;\r\n                    startIndex = i;\r\n                }\r\n            }\r\n\r\n            this._addToMainAxisPos(itemMainAxisSize);\r\n        }\r\n\r\n        if (startIndex < i) {\r\n            this._layoutLine(startIndex, i - 1);\r\n        }\r\n    }\r\n\r\n    _layoutFlexItem(item) {\r\n        if (item.isFlexEnabled()) {\r\n            item.flexLayout.updateTreeLayout();\r\n        } else {\r\n            item.flexItem._resetLayoutSize();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n        this._mainAxisSize = this._layout.mainAxisSize;\r\n        this._curMainAxisPos = 0;\r\n        this._maxMainAxisPos = 0;\r\n        this._lines = [];\r\n\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    _addToMainAxisPos(itemMainAxisSize) {\r\n        this._curMainAxisPos += itemMainAxisSize;\r\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\r\n            this._maxMainAxisPos = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _layoutLine(startIndex, endIndex) {\r\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\r\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\r\n        line.performLayout();\r\n        this._lines.push(line);\r\n\r\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\r\n            this._mainAxisContentSize = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getAvailableMainAxisLayoutSpace() {\r\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\r\n            return 0;\r\n        } else {\r\n            return this._mainAxisSize - this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        let crossAxisMinSize = 0;\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\r\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\r\n        }\r\n        return crossAxisMinSize;\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        if (this._lines.length === 1) {\r\n            return this._lines[0].getMainAxisMinSize();\r\n        } else {\r\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\r\n            return this._layout.mainAxisSize;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\n\r\nexport default class ItemCoordinatesUpdater {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._isReverse = this._flexContainer._reverse;\r\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\r\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    finalize() {\r\n        const parentFlex = this._layout.getParentFlexContainer();\r\n        if (parentFlex) {\r\n            // We must update it from the parent to set padding offsets and reverse position.\r\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\r\n            updater._finalizeItemAndChildren(this._flexContainer.item);\r\n        } else {\r\n            this._finalizeRoot();\r\n            this._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _finalizeRoot() {\r\n        const item = this._flexContainer.item;\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        w += this._layout._getHorizontalPadding();\r\n        h += this._layout._getVerticalPadding();\r\n\r\n        item.clearRecalcFlag();\r\n\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItems() {\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const validCache = this._validateItemCache(item);\r\n\r\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\r\n            this._finalizeItem(item);\r\n\r\n            if (!validCache) {\r\n                this._finalizeItemChildren(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    _validateItemCache(item) {\r\n        if (item.recalc === 0) {\r\n            if (item.isFlexEnabled()) {\r\n                const layout = item._flex._layout;\r\n\r\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\r\n                if (dimensionsMatchPreviousResult) {\r\n                    // Cache is valid.\r\n                    return true;\r\n                } else {\r\n                    const crossAxisSize = layout.crossAxisSize;\r\n                    layout.performResizeMainAxis(layout.mainAxisSize);\r\n                    layout.performResizeCrossAxis(crossAxisSize);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _finalizeItemAndChildren(item) {\r\n        this._finalizeItem(item);\r\n        this._finalizeItemChildren(item);\r\n    }\r\n\r\n    _finalizeItem(item) {\r\n        if (this._isReverse) {\r\n            this._reverseMainAxisLayoutPos(item);\r\n        }\r\n\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        x += this._horizontalPaddingOffset;\r\n        y += this._verticalPaddingOffset;\r\n\r\n        const flex = item.flex;\r\n        if (flex) {\r\n            w += item._flex._layout._getHorizontalPadding();\r\n            h += item._flex._layout._getVerticalPadding();\r\n        }\r\n\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            x += flexItem._getHorizontalMarginOffset();\r\n            y += flexItem._getVerticalMarginOffset();\r\n        }\r\n\r\n        item.clearRecalcFlag();\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItemChildren(item) {\r\n        const flex = item._flex;\r\n        if (flex) {\r\n            const updater = new ItemCoordinatesUpdater(flex._layout);\r\n            updater._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _reverseMainAxisLayoutPos(item) {\r\n        if (item._reversed && item._recalc == 0) {\r\n            item._reversed = false;\r\n        }\r\n        if (!item._reversed) {\r\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\r\n            const reversedPos = this._layout.mainAxisSize - endPos;\r\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\r\n            if (item._recalc != 0) {\r\n                item._reversed = true;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport ContentAligner from \"./ContentAligner.mjs\";\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\nimport LineLayouter from \"./LineLayouter.mjs\";\r\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\r\n\r\n/**\r\n * Layouts a flex container (and descendants).\r\n */\r\nexport default class FlexLayout {\r\n\r\n    constructor(flexContainer) {\r\n        this._flexContainer = flexContainer;\r\n\r\n        this._lineLayouter = new LineLayouter(this);\r\n\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n\r\n        this._cachedMainAxisSizeAfterLayout = 0;\r\n        this._cachedCrossAxisSizeAfterLayout = 0;\r\n\r\n        this._shrunk = false;\r\n    }\r\n\r\n    get shrunk() {\r\n        return this._shrunk;\r\n    }\r\n\r\n    get recalc() {\r\n        return this.item.recalc;\r\n    }\r\n\r\n    layoutTree() {\r\n        const isSubTree = (this.item.flexParent !== null);\r\n        if (isSubTree) {\r\n            // Use the dimensions set by the parent flex tree.\r\n            this._updateSubTreeLayout();\r\n        } else {\r\n            this.updateTreeLayout();\r\n        }\r\n        this.updateItemCoords();\r\n    }\r\n\r\n    updateTreeLayout() {\r\n        if (this.recalc) {\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this._performUpdateLayoutTreeFromCache();\r\n        }\r\n    }\r\n\r\n    _performUpdateLayoutTree() {\r\n        this._setInitialAxisSizes();\r\n        this._layoutAxes();\r\n        this._refreshLayoutCache();\r\n    }\r\n\r\n    _refreshLayoutCache() {\r\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\r\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\r\n    }\r\n\r\n    _performUpdateLayoutTreeFromCache() {\r\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\r\n        if (sizeMightHaveChanged) {\r\n            // Update after all.\r\n            this.item.enableLocalRecalcFlag();\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\r\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\r\n        }\r\n    }\r\n\r\n    updateItemCoords() {\r\n        const updater = new ItemCoordinatesUpdater(this);\r\n        updater.finalize();\r\n    }\r\n\r\n    _updateSubTreeLayout() {\r\n        // The dimensions of this container are guaranteed not to have changed.\r\n        // That's why we can safely 'reuse' those and re-layout the contents.\r\n        const crossAxisSize = this.crossAxisSize;\r\n        this._layoutMainAxis();\r\n        this.performResizeCrossAxis(crossAxisSize);\r\n    }\r\n\r\n    _setInitialAxisSizes() {\r\n        if (this.item.isFlexItemEnabled()) {\r\n            this.item.flexItem._resetLayoutSize();\r\n        } else {\r\n            this.mainAxisSize = this._getMainAxisBasis();\r\n            this.crossAxisSize = this._getCrossAxisBasis();\r\n        }\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n        this._shrunk = false;\r\n    }\r\n\r\n    _layoutAxes() {\r\n        this._layoutMainAxis();\r\n        this._layoutCrossAxis();\r\n    }\r\n\r\n    /**\r\n     * @pre mainAxisSize should exclude padding.\r\n     */\r\n    _layoutMainAxis() {\r\n        this._layoutLines();\r\n        this._fitMainAxisSizeToContents();\r\n    }\r\n\r\n    _layoutLines() {\r\n        this._lineLayouter.layoutLines();\r\n    }\r\n\r\n    get _lines() {\r\n        return this._lineLayouter.lines;\r\n    }\r\n\r\n    _fitMainAxisSizeToContents() {\r\n        if (!this._resizingMainAxis) {\r\n            if (this.isMainAxisFitToContents()) {\r\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @pre crossAxisSize should exclude padding.\r\n     */\r\n    _layoutCrossAxis() {\r\n        const aligner = new ContentAligner(this);\r\n        aligner.init();\r\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\r\n        this._fitCrossAxisSizeToContents();\r\n        aligner.align();\r\n    }\r\n\r\n    _fitCrossAxisSizeToContents() {\r\n        if (!this._resizingCrossAxis) {\r\n            if (this.isCrossAxisFitToContents()) {\r\n                this.crossAxisSize = this._totalCrossAxisSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    isWrapping() {\r\n        return this._flexContainer.wrap;\r\n    }\r\n\r\n    isAxisFitToContents(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this.isMainAxisFitToContents();\r\n        } else {\r\n            return this.isCrossAxisFitToContents();\r\n        }\r\n    }\r\n\r\n    isMainAxisFitToContents() {\r\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\r\n    }\r\n\r\n    isCrossAxisFitToContents() {\r\n        return !this._hasFixedCrossAxisBasis();\r\n    }\r\n\r\n    _hasFixedMainAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _hasFixedCrossAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    getAxisMinSize(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this._getMainAxisMinSize();\r\n        } else {\r\n            return this._getCrossAxisMinSize();\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return this._lineLayouter.mainAxisMinSize;\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return this._lineLayouter.crossAxisMinSize;\r\n    }\r\n\r\n    resizeMainAxis(size) {\r\n        if (this.mainAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeMainAxis(size);\r\n            } else {\r\n                if (this._checkValidCacheMainAxisResize()) {\r\n                    this.mainAxisSize = size;\r\n                    this._fitCrossAxisSizeToContents();\r\n                } else {\r\n                    // Cache miss.\r\n                    this.item.enableLocalRecalcFlag();\r\n                    this.performResizeMainAxis(size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkValidCacheMainAxisResize(size) {\r\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\r\n        if (isFinalMainAxisSize) {\r\n            return true;\r\n        }\r\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\r\n        if (canIgnoreCacheMiss) {\r\n            // Allow other main axis resizes and check if final resize matches the target main axis size\r\n            //  (ItemCoordinatesUpdater).\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    performResizeMainAxis(size) {\r\n        const isShrinking = (size < this.mainAxisSize);\r\n        this._shrunk = isShrinking;\r\n\r\n        this.mainAxisSize = size;\r\n\r\n        this._resizingMainAxis = true;\r\n        this._layoutAxes();\r\n        this._resizingMainAxis = false;\r\n    }\r\n\r\n    resizeCrossAxis(size) {\r\n        if (this.crossAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeCrossAxis(size);\r\n            } else {\r\n                this.crossAxisSize = size;\r\n            }\r\n        }\r\n    }\r\n\r\n    performResizeCrossAxis(size) {\r\n        this.crossAxisSize = size;\r\n\r\n        this._resizingCrossAxis = true;\r\n        this._layoutCrossAxis();\r\n        this._resizingCrossAxis = false;\r\n    }\r\n\r\n    get targetMainAxisSize() {\r\n        return this._horizontal ? this.item.target.w : this.item.target.h;\r\n    }\r\n\r\n    get targetCrossAxisSize() {\r\n        return this._horizontal ? this.item.target.h : this.item.target.w;\r\n    }\r\n\r\n    getParentFlexContainer() {\r\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\r\n    }\r\n\r\n    _getHorizontalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, true);\r\n    }\r\n\r\n    _getVerticalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, false);\r\n    }\r\n\r\n    _getHorizontalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _getCrossAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    get _horizontal() {\r\n        return this._flexContainer._horizontal;\r\n    }\r\n\r\n    get _reverse() {\r\n        return this._flexContainer._reverse;\r\n    }\r\n\r\n    get item() {\r\n        return this._flexContainer.item;\r\n    }\r\n\r\n    get items() {\r\n        return this.item.items;\r\n    }\r\n\r\n    get resizingMainAxis() {\r\n        return this._resizingMainAxis;\r\n    }\r\n\r\n    get resizingCrossAxis() {\r\n        return this._resizingCrossAxis;\r\n    }\r\n\r\n    get numberOfItems() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get mainAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\r\n    }\r\n\r\n    get crossAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    set mainAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\r\n    }\r\n\r\n    set crossAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Layout from \"./layout/FlexLayout.mjs\";\r\n\r\nexport default class FlexContainer {\r\n\r\n\r\n    constructor(item) {\r\n        this._item = item;\r\n\r\n        this._layout = new Layout(this);\r\n        this._horizontal = true;\r\n        this._reverse = false;\r\n        this._wrap = false;\r\n        this._alignItems = 'stretch';\r\n        this._justifyContent = 'flex-start';\r\n        this._alignContent = 'flex-start';\r\n\r\n        this._paddingLeft = 0;\r\n        this._paddingTop = 0;\r\n        this._paddingRight = 0;\r\n        this._paddingBottom = 0;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    _changedDimensions() {\r\n        this._item.changedDimensions();\r\n    }\r\n\r\n    _changedContents() {\r\n        this._item.changedContents();\r\n    }\r\n\r\n    get direction() {\r\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\r\n    }\r\n\r\n    set direction(f) {\r\n        if (this.direction === f) return;\r\n\r\n        this._horizontal = (f === 'row' || f === 'row-reverse');\r\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set wrap(v) {\r\n        this._wrap = v;\r\n        this._changedContents();\r\n    }\r\n\r\n    get wrap() {\r\n        return this._wrap;\r\n    }\r\n\r\n    get alignItems() {\r\n        return this._alignItems;\r\n    }\r\n\r\n    set alignItems(v) {\r\n        if (this._alignItems === v) return;\r\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n        }\r\n        this._alignItems = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get alignContent() {\r\n        return this._alignContent;\r\n    }\r\n\r\n    set alignContent(v) {\r\n        if (this._alignContent === v) return;\r\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\r\n        }\r\n        this._alignContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get justifyContent() {\r\n        return this._justifyContent;\r\n    }\r\n\r\n    set justifyContent(v) {\r\n        if (this._justifyContent === v) return;\r\n\r\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\r\n        }\r\n        this._justifyContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set padding(v) {\r\n        this.paddingLeft = v;\r\n        this.paddingTop = v;\r\n        this.paddingRight = v;\r\n        this.paddingBottom = v;\r\n    }\r\n\r\n    get padding() {\r\n        return this.paddingLeft;\r\n    }\r\n    \r\n    set paddingLeft(v) {\r\n        this._paddingLeft = v;\r\n        this._changedDimensions();\r\n    }\r\n    \r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingTop(v) {\r\n        this._paddingTop = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingTop() {\r\n        return this._paddingTop;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        this._paddingRight = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingBottom(v) {\r\n        this._paddingBottom = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingBottom() {\r\n        return this._paddingBottom;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\r\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\r\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\n\r\nexport default class FlexItem {\r\n\r\n    constructor(item) {\r\n        this._ctr = null;\r\n        this._item = item;\r\n        this._grow = 0;\r\n        this._shrink = FlexItem.SHRINK_AUTO;\r\n        this._alignSelf = undefined;\r\n        this._minWidth = 0;\r\n        this._minHeight = 0;\r\n        this._maxWidth = 0;\r\n        this._maxHeight = 0;\r\n\r\n        this._marginLeft = 0;\r\n        this._marginTop = 0;\r\n        this._marginRight = 0;\r\n        this._marginBottom = 0;\r\n        this._reversed = false;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    get grow() {\r\n        return this._grow;\r\n    }\r\n\r\n    set grow(v) {\r\n        if (this._grow === v) return;\r\n\r\n        this._grow = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get shrink() {\r\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\r\n            return this._getDefaultShrink();\r\n        }\r\n        return this._shrink;\r\n    }\r\n\r\n    _getDefaultShrink() {\r\n        if (this.item.isFlexEnabled()) {\r\n            return 1;\r\n        } else {\r\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    set shrink(v) {\r\n        if (this._shrink === v) return;\r\n\r\n        this._shrink = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get alignSelf() {\r\n        return this._alignSelf;\r\n    }\r\n\r\n    set alignSelf(v) {\r\n        if (this._alignSelf === v) return;\r\n\r\n        if (v === undefined) {\r\n            this._alignSelf = undefined;\r\n        } else {\r\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n            }\r\n            this._alignSelf = v;\r\n        }\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get minWidth() {\r\n        return this._minWidth;\r\n    }\r\n\r\n    set minWidth(v) {\r\n        this._minWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get minHeight() {\r\n        return this._minHeight;\r\n    }\r\n\r\n    set minHeight(v) {\r\n        this._minHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    get maxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    set maxWidth(v) {\r\n        this._maxWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight;\r\n    }\r\n\r\n    set maxHeight(v) {\r\n        this._maxHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    /**\r\n     * @note margins behave slightly different than in HTML with regard to shrinking.\r\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\r\n     */\r\n    set margin(v) {\r\n        this.marginLeft = v;\r\n        this.marginTop = v;\r\n        this.marginRight = v;\r\n        this.marginBottom = v;\r\n    }\r\n\r\n    get margin() {\r\n        return this.marginLeft;\r\n    }\r\n\r\n    set marginLeft(v) {\r\n        this._marginLeft = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginLeft() {\r\n        return this._marginLeft;\r\n    }\r\n\r\n    set marginTop(v) {\r\n        this._marginTop = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginTop() {\r\n        return this._marginTop;\r\n    }\r\n\r\n    set marginRight(v) {\r\n        this._marginRight = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginRight() {\r\n        return this._marginRight;\r\n    }\r\n\r\n    set marginBottom(v) {\r\n        this._marginBottom = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginBottom() {\r\n        return this._marginBottom;\r\n    }\r\n    \r\n    _changed() {\r\n        if (this.ctr) this.ctr._changedContents();\r\n    }\r\n\r\n    set ctr(v) {\r\n        this._ctr = v;\r\n    }\r\n\r\n    get ctr() {\r\n        return this._ctr;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    _resetLayoutSize() {\r\n        this._resetHorizontalAxisLayoutSize();\r\n        this._resetVerticalAxisLayoutSize();\r\n    }\r\n\r\n    _resetCrossAxisLayoutSize() {\r\n        if (this.ctr._horizontal) {\r\n            this._resetVerticalAxisLayoutSize();\r\n        } else {\r\n            this._resetHorizontalAxisLayoutSize();\r\n        }\r\n    }\r\n\r\n    _resetHorizontalAxisLayoutSize() {\r\n        let w = FlexUtils.getRelAxisSize(this.item, true);\r\n        if (this._minWidth) {\r\n            w = Math.max(this._minWidth, w);\r\n        }\r\n        if (this._maxWidth) {\r\n            w = Math.min(this._maxWidth, w);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\r\n    }\r\n\r\n    _resetVerticalAxisLayoutSize() {\r\n        let h = FlexUtils.getRelAxisSize(this.item, false);\r\n        if (this._minHeight) {\r\n            h = Math.max(this._minHeight, h);\r\n        }\r\n        if (this._maxHeight) {\r\n            h = Math.min(this._maxHeight, h);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\r\n    }\r\n\r\n    _getCrossAxisMinSizeSetting() {\r\n        return this._getMinSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(this.ctr._horizontal);\r\n    }\r\n\r\n    _getMinSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._minWidth;\r\n        } else {\r\n            return this._minHeight;\r\n        }\r\n    }\r\n\r\n    _getMaxSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._maxWidth;\r\n        } else {\r\n            return this._maxHeight;\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutPos() {\r\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _setMainAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _setCrossAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _getCrossAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _resizeCrossAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\r\n    }\r\n\r\n    _resizeMainAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\r\n    }\r\n\r\n    _getMainAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getHorizontalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _hasFixedCrossAxisSize() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _hasRelCrossAxisSize() {\r\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\r\n    }\r\n\r\n}\r\n\r\n\r\nFlexItem.SHRINK_AUTO = -1;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\nimport FlexItem from \"./FlexItem.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\n\r\n/**\r\n * This is the connection between the render tree with the layout tree of this flex container/item.\r\n */\r\nexport default class FlexTarget {\r\n\r\n    constructor(target) {\r\n        this._target = target;\r\n\r\n        /**\r\n         * Possible values (only in case of container):\r\n         * bit 0: has changed or contains items with changes\r\n         * bit 1: width changed\r\n         * bit 2: height changed\r\n         */\r\n        this._recalc = 0;\r\n        \r\n        this._enabled = false;\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._originalX = 0;\r\n        this._originalY = 0;\r\n        this._originalWidth = 0;\r\n        this._originalHeight = 0;\r\n\r\n        this._flex = null;\r\n        this._flexItem = null;\r\n        this._flexItemDisabled = false;\r\n\r\n        this._items = null;\r\n    }\r\n\r\n    get flexLayout() {\r\n        return this.flex ? this.flex._layout : null;\r\n    }\r\n\r\n    layoutFlexTree() {\r\n        if (this.isFlexEnabled() && this.isChanged()) {\r\n            this.flexLayout.layoutTree();\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        return this._target;\r\n    }\r\n\r\n    get flex() {\r\n        return this._flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        if (!v) {\r\n            if (this.isFlexEnabled()) {\r\n                this._disableFlex();\r\n            }\r\n        } else {\r\n            if (!this.isFlexEnabled()) {\r\n                this._enableFlex();\r\n            }\r\n            this._flex.patch(v);\r\n        }\r\n    }\r\n\r\n    get flexItem() {\r\n        if (this._flexItemDisabled) {\r\n            return false;\r\n        }\r\n        this._ensureFlexItem();\r\n        return this._flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        if (v === false) {\r\n            if (!this._flexItemDisabled) {\r\n                const parent = this.flexParent;\r\n                this._flexItemDisabled = true;\r\n                this._checkEnabled();\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        } else {\r\n            this._ensureFlexItem();\r\n\r\n            this._flexItem.patch(v);\r\n\r\n            if (this._flexItemDisabled) {\r\n                this._flexItemDisabled = false;\r\n                this._checkEnabled();\r\n                const parent = this.flexParent;\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlex() {\r\n        this._flex = new FlexContainer(this);\r\n        this._checkEnabled();\r\n        this.changedDimensions();\r\n        this._enableChildrenAsFlexItems();\r\n    }\r\n\r\n    _disableFlex() {\r\n        this.changedDimensions();\r\n        this._flex = null;\r\n        this._checkEnabled();\r\n        this._disableChildrenAsFlexItems();\r\n    }\r\n\r\n    _enableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._enableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._disableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlexItem() {\r\n        this._ensureFlexItem();\r\n        const flexParent = this._target._parent._layout;\r\n        this._flexItem.ctr = flexParent._flex;\r\n        flexParent.changedContents();\r\n        this._checkEnabled();\r\n    }\r\n\r\n    _disableFlexItem() {\r\n        if (this._flexItem) {\r\n            this._flexItem.ctr = null;\r\n        }\r\n\r\n        // We keep the flexItem object because it may contain custom settings.\r\n        this._checkEnabled();\r\n\r\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\r\n        this._resetOffsets();\r\n    }\r\n\r\n    _resetOffsets() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n\r\n    _ensureFlexItem() {\r\n        if (!this._flexItem) {\r\n            this._flexItem = new FlexItem(this);\r\n        }\r\n    }\r\n\r\n    _checkEnabled() {\r\n        const enabled = this.isEnabled();\r\n        if (this._enabled !== enabled) {\r\n            if (enabled) {\r\n                this._enable();\r\n            } else {\r\n                this._disable();\r\n            }\r\n            this._enabled = enabled;\r\n        }\r\n    }\r\n    \r\n    _enable() {\r\n        this._setupTargetForFlex();\r\n        this._target.enableFlexLayout();\r\n    }\r\n\r\n    _disable() {\r\n        this._restoreTargetToNonFlex();\r\n        this._target.disableFlexLayout();\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexEnabled() {\r\n        return this._flex !== null;\r\n    }\r\n\r\n    isFlexItemEnabled() {\r\n        return this.flexParent !== null;\r\n    }\r\n\r\n    _restoreTargetToNonFlex() {\r\n        const target = this._target;\r\n        target.x = this._originalX;\r\n        target.y = this._originalY;\r\n        target.setDimensions(this._originalWidth, this._originalHeight);\r\n    }\r\n\r\n    _setupTargetForFlex() {\r\n        const target = this._target;\r\n        this._originalX = target._x;\r\n        this._originalY = target._y;\r\n        this._originalWidth = target._w;\r\n        this._originalHeight = target._h;\r\n    }\r\n    \r\n    setParent(from, to) {\r\n        if (from && from.isFlexContainer()) {\r\n            from._layout._changedChildren();\r\n        }\r\n\r\n        if (to && to.isFlexContainer()) {\r\n            this._enableFlexItem();\r\n            to._layout._changedChildren();\r\n        }\r\n        this._checkEnabled();\r\n    }\r\n\r\n    get flexParent() {\r\n        if (this._flexItemDisabled) {\r\n            return null;\r\n        }\r\n\r\n        const parent = this._target._parent;\r\n        if (parent && parent.isFlexContainer()) {\r\n            return parent._layout;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setVisible(v) {\r\n        const parent = this.flexParent;\r\n        if (parent) {\r\n            parent._changedChildren();\r\n        }\r\n    }\r\n\r\n    get items() {\r\n        if (!this._items) {\r\n            this._items = this._getFlexItems();\r\n        }\r\n        return this._items;\r\n    }\r\n\r\n    _getFlexItems() {\r\n        const items = [];\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const item = children[i];\r\n                if (item.visible) {\r\n                    if (item.isFlexItem()) {\r\n                        items.push(item.layout);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    _changedChildren() {\r\n        this._clearFlexItemsCache();\r\n        this.changedContents();\r\n    }\r\n\r\n    _clearFlexItemsCache() {\r\n        this._items = null;\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        let originalX = this._originalX;\r\n        let originalY = this._originalY;\r\n        if (this.funcX) {\r\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\r\n        }\r\n        if (this.funcY) {\r\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\r\n        }\r\n\r\n        if (this.isFlexItemEnabled()) {\r\n            this.target.setLayout(x + originalX, y + originalY, w, h);\r\n        } else {\r\n            // Reuse the x,y 'settings'.\r\n            this.target.setLayout(originalX, originalY, w, h);\r\n        }\r\n    }\r\n\r\n    changedDimensions(changeWidth = true, changeHeight = true) {\r\n        this._updateRecalc(changeWidth, changeHeight);\r\n    }\r\n\r\n    changedContents() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    forceLayout() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    isChanged() {\r\n        return this._recalc > 0;\r\n    }\r\n\r\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\r\n        if (this.isFlexEnabled()) {\r\n            const layout = this._flex._layout;\r\n\r\n            // When something internal changes, it can have effect on the external dimensions.\r\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\r\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\r\n        }\r\n\r\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\r\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\r\n        this._recalc |= recalc;\r\n        if (newRecalcFlags > 1) {\r\n            if (this.flexParent) {\r\n                this.flexParent._updateRecalcBottomUp(recalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    getNewRecalcFlags(flags) {\r\n        return (7 - this._recalc) & flags;\r\n    }\r\n\r\n    _updateRecalcBottomUp(childRecalc) {\r\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\r\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\r\n        this._recalc |= newRecalc;\r\n        if (newRecalcFlags > 1) {\r\n            const flexParent = this.flexParent;\r\n            if (flexParent) {\r\n                flexParent._updateRecalcBottomUp(newRecalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    _getRecalcFromChangedChildRecalc(childRecalc) {\r\n        const layout = this._flex._layout;\r\n\r\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\r\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\r\n\r\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\r\n        if (!crossAxisDimensionsChangedInChild) {\r\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\r\n            if (mainAxisDimensionsChangedInChild) {\r\n                const mainAxisIsWrapping = layout.isWrapping();\r\n                if (mainAxisIsWrapping) {\r\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\r\n                    if (crossAxisIsFitToContents) {\r\n                        // Special case: due to wrapping, the cross axis size may be changed.\r\n                        childRecalc += crossAxisRecalcFlag;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isWidthDynamic = layout.isAxisFitToContents(true);\r\n        let isHeightDynamic = layout.isAxisFitToContents(false);\r\n\r\n        if (layout.shrunk) {\r\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\r\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\r\n            if (layout._horizontal) {\r\n                isWidthDynamic = true;\r\n            } else {\r\n                isHeightDynamic = true;\r\n            }\r\n        }\r\n\r\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\r\n\r\n        const combinedRecalc = childRecalc & localRecalc;\r\n        return combinedRecalc;\r\n    }\r\n\r\n    get recalc() {\r\n        return this._recalc;\r\n    }\r\n\r\n    clearRecalcFlag() {\r\n        this._recalc = 0;\r\n    }\r\n\r\n    enableLocalRecalcFlag() {\r\n        this._recalc = 1;\r\n    }\r\n\r\n    get originalX() {\r\n        return this._originalX;\r\n    }\r\n\r\n    setOriginalXWithoutUpdatingLayout(v) {\r\n        this._originalX = v;\r\n    }\r\n\r\n    get originalY() {\r\n        return this._originalY;\r\n    }\r\n\r\n    setOriginalYWithoutUpdatingLayout(v) {\r\n        this._originalY = v;\r\n    }\r\n\r\n    get originalWidth() {\r\n        return this._originalWidth;\r\n    }\r\n\r\n    set originalWidth(v) {\r\n        if (this._originalWidth !== v) {\r\n            this._originalWidth = v;\r\n            this.changedDimensions(true, false);\r\n        }\r\n    }\r\n\r\n    get originalHeight() {\r\n        return this._originalHeight;\r\n    }\r\n\r\n    set originalHeight(v) {\r\n        if (this._originalHeight !== v) {\r\n            this._originalHeight = v;\r\n            this.changedDimensions(false, true);\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return this._target.funcX;\r\n    }\r\n\r\n    get funcY() {\r\n        return this._target.funcY;\r\n    }\r\n\r\n    get funcW() {\r\n        return this._target.funcW;\r\n    }\r\n\r\n    get funcH() {\r\n        return this._target.funcH;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TextureSource {\r\n\r\n    constructor(manager, loader = null) {\r\n        this.id = TextureSource.id++;\r\n\r\n        this.manager = manager;\r\n\r\n        this.stage = manager.stage;\r\n\r\n        /**\r\n         * All enabled textures (textures that are used by visible elements).\r\n         * @type {Set<Texture>}\r\n         */\r\n        this.textures = new Set();\r\n\r\n        /**\r\n         * The number of active textures (textures that have at least one active element).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._activeTextureCount = 0;\r\n\r\n        /**\r\n         * The factory for the source of this texture.\r\n         * @type {Function}\r\n         */\r\n        this.loader = loader;\r\n\r\n        /**\r\n         * Identifier for reuse.\r\n         * @type {String}\r\n         */\r\n        this.lookupId = null;\r\n\r\n        /**\r\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\r\n         * @type {Function}\r\n         */\r\n        this._cancelCb = null;\r\n\r\n        /**\r\n         * Loading since timestamp in millis.\r\n         * @type {number}\r\n         */\r\n        this.loadingSince = 0;\r\n\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._nativeTexture = null;\r\n\r\n        /**\r\n         * If true, then this.texture source is never freed from memory during garbage collection.\r\n         * @type {boolean}\r\n         */\r\n        this.permanent = false;\r\n\r\n        /**\r\n         * Sub-object with texture-specific rendering information.\r\n         * For images, contains the src property, for texts, contains handy rendering information.\r\n         * @type {Object}\r\n         */\r\n        this.renderInfo = null;\r\n\r\n        /**\r\n         * Generated for 'renderToTexture'.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._isResultTexture = !this.loader;\r\n\r\n        /**\r\n         * Contains the load error, if the texture source could previously not be loaded.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._loadError = null;\r\n\r\n        /**\r\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._imageRef = null;\r\n\r\n\r\n        /**\r\n         * Track whether or not there is an alpha channel in this source\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n         this._hasAlpha = false;\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    get loadError() {\r\n        return this._loadError;\r\n    }\r\n\r\n    addTexture(v) {\r\n        if (!this.textures.has(v)) {\r\n            this.textures.add(v);\r\n        }\r\n    }\r\n\r\n    removeTexture(v) {\r\n        this.textures.delete(v);\r\n    }\r\n\r\n    incActiveTextureCount() {\r\n        this._activeTextureCount++;\r\n        if (this._activeTextureCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveTextureCount() {\r\n        this._activeTextureCount--;\r\n        if (this._activeTextureCount === 0) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    get isResultTexture() {\r\n        return this._isResultTexture;\r\n    }\r\n\r\n    set isResultTexture(v) {\r\n        this._isResultTexture = v;\r\n    }\r\n\r\n    forEachEnabledElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(cb);\r\n        });\r\n    }\r\n\r\n    hasEnabledElements() {\r\n        return this.textures.size > 0;\r\n    }\r\n\r\n    forEachActiveElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(element => {\r\n                if (element.active) {\r\n                    cb(element);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getRenderWidth() {\r\n        return this.w;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        return this.h;\r\n    }\r\n\r\n    allowCleanup() {\r\n        return !this.permanent && !this.isUsed();\r\n    }\r\n\r\n    becomesUsed() {\r\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\r\n        this.load();\r\n    }\r\n\r\n    becomesUnused() {\r\n        this.cancel();\r\n    }\r\n\r\n    cancel() {\r\n        if (this.isLoading()) {\r\n            if (this._cancelCb) {\r\n                this._cancelCb(this);\r\n\r\n                // Clear callback to avoid memory leaks.\r\n                this._cancelCb = null;\r\n            }\r\n            this.loadingSince = 0;\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return !!this._nativeTexture;\r\n    }\r\n\r\n    isLoading() {\r\n        return (this.loadingSince > 0);\r\n    }\r\n\r\n    isError() {\r\n        return !!this._loadError;\r\n    }\r\n\r\n    reload() {\r\n        this.free();\r\n        if (this.isUsed()) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    load(forceSync = false) {\r\n        // From the moment of loading (when a texture source becomes used by active elements)\r\n        if (this.isResultTexture) {\r\n            // Element result texture source, for which the loading is managed by the core.\r\n            return;\r\n        }\r\n\r\n        if (!this._nativeTexture && !this.isLoading()) {\r\n            this.loadingSince = (new Date()).getTime();\r\n            this._cancelCb = this.loader((err, options) => {\r\n                // Ignore loads that come in after a cancel.\r\n                if (this.isLoading()) {\r\n                    // Clear callback to avoid memory leaks.\r\n                    this._cancelCb = null;\r\n\r\n                    if (this.manager.stage.destroyed) {\r\n                        // Ignore async load when stage is destroyed.\r\n                        return;\r\n                    }\r\n                    if (err) {\r\n                        // Emit txError.\r\n                        this.onError(err);\r\n                    } else if (options && options.source) {\r\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\r\n                            const textureThrottler = this.stage.textureThrottler;\r\n                            this._cancelCb = textureThrottler.genericCancelCb;\r\n                            textureThrottler.add(this, options);\r\n                        } else {\r\n                            this.processLoadedSource(options);\r\n                        }\r\n                    }\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    processLoadedSource(options) {\r\n        this.loadingSince = 0;\r\n        this.setSource(options);\r\n    }\r\n\r\n    setSource(options) {\r\n        const source = options.source;\r\n\r\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\r\n        this.w = source.width || (options && options.w) || 0;\r\n        this.h = source.height || (options && options.h) || 0;\r\n\r\n        if (options && options.renderInfo) {\r\n            // Assign to id in cache so that it can be reused.\r\n            this.renderInfo = options.renderInfo;\r\n        }\r\n\r\n        this.permanent = !!options.permanent;\r\n\r\n        if (options && options.imageRef)\r\n            this._imageRef = options.imageRef;\r\n        if (options && options.flipTextureY) {\r\n            this._flipTextureY = options.flipTextureY;\r\n        } else {\r\n            this._flipTextureY = false;\r\n        }\r\n\r\n        if (this._isNativeTexture(source)) {\r\n            // Texture managed by caller.\r\n            this._nativeTexture = source;\r\n\r\n            this.w = this.w || source.w;\r\n            this.h = this.h || source.h;\r\n\r\n            // WebGLTexture objects are by default;\r\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\r\n        } else {\r\n            this.manager.uploadTextureSource(this, options);\r\n        }\r\n\r\n        // Must be cleared when reload is succesful.\r\n        this._loadError = null;\r\n\r\n        this.onLoad();\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeTextureCount > 0;\r\n    }\r\n\r\n    onLoad() {\r\n        if (this.isUsed()) {\r\n            this.textures.forEach(texture => {\r\n                texture.onLoad();\r\n            });\r\n        }\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\r\n        //  (using tex[Sub]Image2d for example).\r\n\r\n        if (this._nativeTexture) {\r\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\r\n            this._nativeTexture.update = this.stage.frameCounter;\r\n        }\r\n\r\n        this.forEachActiveElement(function (element) {\r\n            element.forceRenderUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    forceUpdateRenderCoords() {\r\n        this.forEachActiveElement(function (element) {\r\n            element._updateTextureCoords();\r\n        });\r\n    }\r\n\r\n    get nativeTexture() {\r\n        return this._nativeTexture;\r\n    }\r\n\r\n    clearNativeTexture() {\r\n        this._nativeTexture = null;\r\n        //also clear the reference to the texture variable.\r\n        this._imageRef = null;\r\n    }\r\n\r\n    /**\r\n     * Used for result textures.\r\n     */\r\n    replaceNativeTexture(newNativeTexture, w, h) {\r\n        let prevNativeTexture = this._nativeTexture;\r\n        // Loaded by core.\r\n        this._nativeTexture = newNativeTexture;\r\n        this.w = w;\r\n        this.h = h;\r\n\r\n        if (!prevNativeTexture && this._nativeTexture) {\r\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\r\n        }\r\n\r\n        if (!this._nativeTexture) {\r\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\r\n        }\r\n\r\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\r\n        this.forEachEnabledElement(element => element._updateDimensions());\r\n\r\n        // Notice that the sprite map must never contain render textures.\r\n    }\r\n\r\n    onError(e) {\r\n        this._loadError = e;\r\n        this.loadingSince = 0;\r\n        console.error('[Lightning] texture load error', e, this.lookupId);\r\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\r\n    }\r\n\r\n    free() {\r\n        if (this.isLoaded()) {\r\n            this.manager.freeTextureSource(this);\r\n        }\r\n    }\r\n\r\n    _isNativeTexture(source) {\r\n        if (Utils.isNode) {\r\n            return source.constructor.name === \"WebGLTexture\";\r\n        }\r\n\r\n        if ('WebGLTexture' in window) {\r\n            return source instanceof WebGLTexture;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nTextureSource.prototype.isTextureSource = true;\r\n\r\nTextureSource.id = 1;\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from '../TextureSource.mjs';\r\n\r\nexport default class ElementTexturizer {\r\n\r\n    constructor(elementCore) {\r\n\r\n        this._element = elementCore.element;\r\n        this._core = elementCore;\r\n\r\n        this.ctx = this._core.ctx;\r\n\r\n        this._enabled = false;\r\n        this.lazy = false;\r\n        this._colorize = false;\r\n\r\n        this._renderTexture = null;\r\n\r\n        this._renderTextureReused = false;\r\n\r\n        this._resultTextureSource = null;\r\n\r\n        this._renderOffscreen = false;\r\n\r\n        this.empty = false;\r\n    }\r\n\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(v) {\r\n        this._enabled = v;\r\n        this._core.updateRenderToTextureEnabled();\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this._renderOffscreen = v;\r\n        this._core.setHasRenderUpdates(1);\r\n\r\n        // This enforces rechecking the 'within bounds'.\r\n        this._core._setRecalc(6);\r\n    }\r\n\r\n    get colorize() {\r\n        return this._colorize;\r\n    }\r\n\r\n    set colorize(v) {\r\n        if (this._colorize !== v) {\r\n            this._colorize = v;\r\n\r\n            // Only affects the finally drawn quad.\r\n            this._core.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        if (!this._resultTextureSource) {\r\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\r\n            this.updateResultTexture();\r\n        }\r\n        return this._resultTextureSource;\r\n    }\r\n\r\n    hasResultTexture() {\r\n        return !!this._resultTextureSource;\r\n    }\r\n\r\n    resultTextureInUse() {\r\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\r\n    }\r\n\r\n    updateResultTexture() {\r\n        let resultTexture = this.getResultTexture();\r\n        if (this._resultTextureSource) {\r\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\r\n                let w = resultTexture ? resultTexture.w : 0;\r\n                let h = resultTexture ? resultTexture.h : 0;\r\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\r\n            }\r\n\r\n            // Texture will be updated: all elements using the source need to be updated as well.\r\n            this._resultTextureSource.forEachEnabledElement(element => {\r\n                element._updateDimensions();\r\n                element.core.setHasRenderUpdates(3);\r\n            });\r\n        }\r\n    }\r\n\r\n    mustRenderToTexture() {\r\n        // Check if we must really render as texture.\r\n        if (this._enabled && !this.lazy) {\r\n            return true;\r\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\r\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deactivate() {\r\n        this.release();\r\n    }\r\n\r\n    get renderTextureReused() {\r\n        return this._renderTextureReused;\r\n    }\r\n\r\n    release() {\r\n        this.releaseRenderTexture();\r\n    }\r\n\r\n    releaseRenderTexture() {\r\n        if (this._renderTexture) {\r\n            if (!this._renderTextureReused) {\r\n                this.ctx.releaseRenderTexture(this._renderTexture);\r\n            }\r\n            this._renderTexture = null;\r\n            this._renderTextureReused = false;\r\n            this.updateResultTexture();\r\n        }\r\n    }\r\n\r\n    // Reuses the specified texture as the render texture (in ancestor).\r\n    reuseTextureAsRenderTexture(nativeTexture) {\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this.releaseRenderTexture();\r\n            this._renderTexture = nativeTexture;\r\n            this._renderTextureReused = true;\r\n        }\r\n    }\r\n\r\n    hasRenderTexture() {\r\n        return !!this._renderTexture;\r\n    }\r\n\r\n    getRenderTexture() {\r\n        if (!this._renderTexture) {\r\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\r\n            this._renderTextureReused = false;\r\n        }\r\n        return this._renderTexture;\r\n    }\r\n\r\n    getResultTexture() {\r\n        return this._renderTexture;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\r\n\r\nexport default class ElementCore {\r\n\r\n    constructor(element) {\r\n        this._element = element;\r\n\r\n        this.ctx = element.stage.ctx;\r\n\r\n        // The memory layout of the internal variables is affected by their position in the constructor.\r\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\r\n\r\n        this._recalc = 0;\r\n\r\n        this._parent = null;\r\n\r\n        this._onUpdate = null;\r\n\r\n        this._pRecalc = 0;\r\n\r\n        this._worldContext = new ElementCoreContext();\r\n\r\n        this._hasUpdates = false;\r\n\r\n        this._localAlpha = 1;\r\n\r\n        this._onAfterCalcs = null;\r\n\r\n        this._onAfterUpdate = null;\r\n\r\n        \r\n        this._localPx = 0;\r\n        this._localPy = 0;\r\n\r\n        this._localTa = 1;\r\n        this._localTb = 0;\r\n        this._localTc = 0;\r\n        this._localTd = 1;\r\n\r\n        this._isComplex = false;\r\n\r\n        this._dimsUnknown = false;\r\n\r\n        this._clipping = false;\r\n\r\n        // Used by both update and render.\r\n        this._zSort = false;\r\n\r\n        this._outOfBounds = 0;\r\n\r\n        /**\r\n         * The texture source to be displayed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._displayedTextureSource = null;\r\n\r\n        this._zContextUsage = 0;\r\n\r\n        this._children = null;\r\n\r\n        this._hasRenderUpdates = 0;\r\n\r\n        this._zIndexedChildren = null;\r\n\r\n        this._renderContext = this._worldContext;\r\n\r\n        this.renderState = this.ctx.renderState;\r\n\r\n        this._scissor = null;\r\n\r\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\r\n        this._shaderOwner = null;\r\n\r\n\r\n        this._updateTreeOrder = 0;\r\n\r\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\r\n\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n\r\n        this._optFlags = 0;\r\n        this._funcX = null;\r\n        this._funcY = null;\r\n        this._funcW = null;\r\n        this._funcH = null;\r\n\r\n        this._scaleX = 1;\r\n        this._scaleY = 1;\r\n        this._pivotX = 0.5;\r\n        this._pivotY = 0.5;\r\n        this._mountX = 0;\r\n        this._mountY = 0;\r\n        this._rotation = 0;\r\n\r\n        this._alpha = 1;\r\n        this._visible = true;\r\n\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n\r\n        this._zIndex = 0;\r\n        this._forceZIndexContext = false;\r\n        this._zParent = null;\r\n\r\n        this._isRoot = false;\r\n        \r\n        /**\r\n         * RTL will be ignore. LTR is applied\r\n         */\r\n        this._ignoreRTL = null;\r\n\r\n        /**\r\n         * Iff true, during zSort, this element should be 're-sorted' because either:\r\n         * - zIndex did chang\r\n         * - zParent did change\r\n         * - element was moved in the render tree\r\n         * @type {boolean}\r\n         */\r\n        this._zIndexResort = false;\r\n\r\n        this._shader = null;\r\n\r\n        // Element is rendered on another texture.\r\n        this._renderToTextureEnabled = false;\r\n\r\n        this._texturizer = null;\r\n\r\n        this._useRenderToTexture = false;\r\n\r\n        this._boundsMargin = null;\r\n\r\n        this._recBoundsMargin = null;\r\n\r\n        this._withinBoundsMargin = false;\r\n\r\n        this._viewport = null;\r\n\r\n        this._clipbox = true;\r\n\r\n        this.render = this._renderSimple;\r\n\r\n        this._layout = null;\r\n    }\r\n\r\n    get offsetX() {\r\n        if (this._funcX) {\r\n            return this._funcX;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalX;\r\n            } else {\r\n                return this._x;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetX(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcX = v;\r\n        } else {\r\n            this._disableFuncX();\r\n            if (this.hasFlexLayout()) {\r\n                this.x += (v - this._layout.originalX);\r\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.x = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        if (v !== this._x) {\r\n            this._updateLocalTranslateDelta(v - this._x, 0);\r\n            this._x = v;\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return (this._optFlags & 1 ? this._funcX : null);\r\n    }\r\n\r\n    set funcX(v) {\r\n        if (this._funcX !== v) {\r\n            this._optFlags |= 1;\r\n            this._funcX = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._x = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncX() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 1);\r\n        this._funcX = null;\r\n    }\r\n\r\n    get offsetY() {\r\n        if (this._funcY) {\r\n            return this._funcY;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalY;\r\n            } else {\r\n                return this._y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcY = v;\r\n        } else {\r\n            this._disableFuncY();\r\n            if (this.hasFlexLayout()) {\r\n                this.y += (v - this._layout.originalY);\r\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.y = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        if (v !== this._y) {\r\n            this._updateLocalTranslateDelta(0, v - this._y);\r\n            this._y = v;\r\n        }\r\n    }\r\n\r\n    get funcY() {\r\n        return (this._optFlags & 2 ? this._funcY : null);\r\n    }\r\n\r\n    set funcY(v) {\r\n        if (this._funcY !== v) {\r\n            this._optFlags |= 2;\r\n            this._funcY = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._y = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncY() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 2);\r\n        this._funcY = null;\r\n    }\r\n\r\n    get funcW() {\r\n        return (this._optFlags & 4 ? this._funcW : null);\r\n    }\r\n\r\n    set funcW(v) {\r\n        if (this._funcW !== v) {\r\n            this._optFlags |= 4;\r\n            this._funcW = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalWidth = 0;\r\n                this.layout.changedDimensions(true, false);\r\n            } else {\r\n                this._w = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncW() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 4);\r\n        this._funcW = null;\r\n    }\r\n\r\n    get funcH() {\r\n        return (this._optFlags & 8 ? this._funcH : null);\r\n    }\r\n\r\n    set funcH(v) {\r\n        if (this._funcH !== v) {\r\n            this._optFlags |= 8;\r\n            this._funcH = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalHeight = 0;\r\n                this.layout.changedDimensions(false, true);\r\n            } else {\r\n                this._h = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncH() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 8);\r\n        this._funcH = null;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalWidth;\r\n        } else {\r\n            return this._w;\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalHeight;\r\n        } else {\r\n            return this._h;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this._scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        if (this._scaleX !== v) {\r\n            this._scaleX = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scaleY() {\r\n        return this._scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        if (this._scaleY !== v) {\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scale() {\r\n        return this.scaleX;\r\n    }\r\n\r\n    set scale(v) {\r\n        if (this._scaleX !== v || this._scaleY !== v) {\r\n            this._scaleX = v;\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        if (this._pivotX !== v) {\r\n            this._pivotX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        if (this._pivotY !== v) {\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivot(v) {\r\n        if (this._pivotX !== v || this._pivotY !== v) {\r\n            this._pivotX = v;\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountX() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        if (this._mountX !== v) {\r\n            this._mountX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountY() {\r\n        return this._mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        if (this._mountY !== v) {\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mount() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mount(v) {\r\n        if (this._mountX !== v || this._mountY !== v) {\r\n            this._mountX = v;\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        if (this._rotation !== v) {\r\n            this._rotation = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        // Account for rounding errors.\r\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\r\n        if (this._alpha !== v) {\r\n            let prev = this._alpha;\r\n            this._alpha = v;\r\n            this._updateLocalAlpha();\r\n            if ((prev === 0) !== (v === 0)) {\r\n                this._element._updateEnabledFlag();\r\n            }\r\n        }\r\n    }\r\n\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        if (this._visible !== v) {\r\n            this._visible = v;\r\n            this._updateLocalAlpha();\r\n            this._element._updateEnabledFlag();\r\n\r\n            if (this.hasFlexLayout()) {\r\n                this.layout.setVisible(v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateLocalTransform() {\r\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\r\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\r\n            let _sr = Math.sin(this._rotation);\r\n            let _cr = Math.cos(this._rotation);\r\n\r\n            this._setLocalTransform(\r\n                _cr * this._scaleX,\r\n                -_sr * this._scaleY,\r\n                _sr * this._scaleX,\r\n                _cr * this._scaleY\r\n            );\r\n        } else {\r\n            this._setLocalTransform(\r\n                this._scaleX,\r\n                0,\r\n                0,\r\n                this._scaleY\r\n            );\r\n        }\r\n        this._updateLocalTranslate();\r\n    };\r\n\r\n    _updateLocalTranslate() {\r\n        this._recalcLocalTranslate();\r\n        this._triggerRecalcTranslate();\r\n    };\r\n\r\n    _recalcLocalTranslate() {\r\n        let pivotXMul = this._pivotX * this._w;\r\n        let pivotYMul = this._pivotY * this._h;\r\n        let px;\r\n        if (window.isRTL && !this._ignoreRTL) {\r\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\r\n        } else {\r\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\r\n        }\r\n\r\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\r\n        px -= this._mountX * this._w;\r\n        py -= this._mountY * this._h;\r\n        this._localPx = px;\r\n        this._localPy = py;\r\n    }\r\n\r\n    _updateLocalTranslateDelta(dx, dy) {\r\n        this._addLocalTranslate(dx, dy);\r\n    };\r\n\r\n    _updateLocalAlpha() {\r\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\r\n    };\r\n\r\n    /**\r\n     * @param {number} type\r\n     * 0: no updates\r\n     * 1: re-invoke shader\r\n     * 3: re-create render texture and re-invoke shader\r\n     */\r\n    setHasRenderUpdates(type) {\r\n        if (this._worldContext.alpha) {\r\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\r\n            let p = this;\r\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\r\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\r\n                p._hasRenderUpdates = 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Number} type\r\n     *   1: alpha\r\n     *   2: translate\r\n     *   4: transform\r\n     * 128: becomes visible\r\n     * 256: flex layout updated\r\n     */\r\n    _setRecalc(type) {\r\n        this._recalc |= type;\r\n\r\n        this._setHasUpdates();\r\n\r\n        // Any changes in descendants should trigger texture updates.\r\n        if (this._parent) {\r\n            this._parent.setHasRenderUpdates(3);\r\n        }\r\n    }\r\n\r\n    _setHasUpdates() {\r\n        let p = this;\r\n        while (p && !p._hasUpdates) {\r\n            p._hasUpdates = true;\r\n            p = p._parent;\r\n        }\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        if (parent !== this._parent) {\r\n            let prevIsZContext = this.isZContext();\r\n            let prevParent = this._parent;\r\n            this._parent = parent;\r\n\r\n            // Notify flex layout engine.\r\n            if (this._layout || (parent && parent.isFlexContainer())) {\r\n                this.layout.setParent(prevParent, parent);\r\n            }\r\n\r\n            if (prevParent) {\r\n                // When elements are deleted, the render texture must be re-rendered.\r\n                prevParent.setHasRenderUpdates(3);\r\n            }\r\n\r\n            this._setRecalc(1 + 2 + 4);\r\n\r\n            if (this._parent) {\r\n                // Force parent to propagate hasUpdates flag.\r\n                this._parent._setHasUpdates();\r\n            }\r\n\r\n            if (this._zIndex === 0) {\r\n                this.setZParent(parent);\r\n            } else {\r\n                this.setZParent(parent ? parent.findZContext() : null);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(prevParent.findZContext());\r\n                }\r\n            }\r\n\r\n            if (this._ignoreRTL != false) {\r\n                //Inherit ignoreRTL value from parent if it isn't setted\r\n                this._setIgnoreRTL(parent);\r\n            }\r\n\r\n            // Tree order did change: even if zParent stays the same, we must resort.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (!this._shader) {\r\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\r\n                if (newShaderOwner !== this._shaderOwner) {\r\n                    this.setHasRenderUpdates(1);\r\n                    this._setShaderOwnerRecursive(newShaderOwner);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setIgnoreRTL(parent) {\r\n        if (parent && parent.ignoreRTL && parent._children) {\r\n            for (let i = 0, n = parent._children.length; i < n; i++) {\r\n                let c = parent._children[i];\r\n                if (c && c.ignoreRTL != false) {\r\n                    c.ignoreRTL = parent.ignoreRTL;\r\n                    c._setIgnoreRTL(c);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    enableZSort(force = false) {\r\n        if (!this._zSort && this._zContextUsage > 0) {\r\n            this._zSort = true;\r\n            if (force) {\r\n                // ZSort must be done, even if this element is invisible.\r\n                // This is done to prevent memory leaks when removing element from inactive render branches.\r\n                this.ctx.forceZSort(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    addChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children.splice(index, 0, child);\r\n        child.setParent(this);\r\n    };\r\n\r\n    setChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children[index].setParent(null);\r\n        this._children[index] = child;\r\n        child.setParent(this);\r\n    }\r\n\r\n    removeChildAt(index) {\r\n        let child = this._children[index];\r\n        this._children.splice(index, 1);\r\n        child.setParent(null);\r\n    };\r\n\r\n    removeChildren() {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i].setParent(null);\r\n            }\r\n\r\n            this._children.splice(0);\r\n\r\n            if (this._zIndexedChildren) {\r\n                this._zIndexedChildren.splice(0);\r\n            }\r\n        }\r\n    };\r\n\r\n    syncChildren(removed, added, order) {\r\n        this._children = order;\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i].setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            added[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    moveChild(fromIndex, toIndex) {\r\n        let c = this._children[fromIndex];\r\n        this._children.splice(fromIndex, 1);\r\n        this._children.splice(toIndex, 0, c);\r\n\r\n        // Tree order changed: must resort!;\r\n        this._zIndexResort = true;\r\n        if (this._zParent) {\r\n            this._zParent.enableZSort();\r\n        }\r\n    }\r\n\r\n    _setLocalTransform(a, b, c, d) {\r\n        this._setRecalc(4);\r\n        this._localTa = a;\r\n        this._localTb = b;\r\n        this._localTc = c;\r\n        this._localTd = d;\r\n\r\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\r\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\r\n    };\r\n\r\n    _addLocalTranslate(dx, dy) {\r\n        this._localPx += dx;\r\n        this._localPy += dy;\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    _setLocalAlpha(a) {\r\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\r\n            // Element is becoming visible. We need to force update.\r\n            this._setRecalc(1 + 128);\r\n        } else {\r\n            this._setRecalc(1);\r\n        }\r\n\r\n        if (a < 1e-14) {\r\n            // Tiny rounding errors may cause failing visibility tests.\r\n            a = 0;\r\n        }\r\n\r\n        this._localAlpha = a;\r\n    };\r\n\r\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\r\n        // In case of an estimation, the update loop should perform different bound checks.\r\n        this._dimsUnknown = isEstimate;\r\n\r\n        if (this.hasFlexLayout()) {\r\n            this._layout.originalWidth = w;\r\n            this._layout.originalHeight = h;\r\n        } else {\r\n            if (this._w !== w || this._h !== h) {\r\n                this._updateDimensions(w, h);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    _updateDimensions(w, h) {\r\n        if (this._w !== w || this._h !== h) {\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._triggerRecalcTranslate();\r\n\r\n            if (this._texturizer) {\r\n                this._texturizer.releaseRenderTexture();\r\n                this._texturizer.updateResultTexture();\r\n            }\r\n            // Due to width/height change: update the translation vector.\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    setTextureCoords(ulx, uly, brx, bry) {\r\n        this.setHasRenderUpdates(3);\r\n\r\n        this._ulx = ulx;\r\n        this._uly = uly;\r\n        this._brx = brx;\r\n        this._bry = bry;\r\n    };\r\n\r\n    get displayedTextureSource() {\r\n        return this._displayedTextureSource;\r\n    }\r\n\r\n    setDisplayedTextureSource(textureSource) {\r\n        this.setHasRenderUpdates(3);\r\n        this._displayedTextureSource = textureSource;\r\n    };\r\n\r\n    get isRoot() {\r\n        return this._isRoot;\r\n    }\r\n\r\n    setAsRoot() {\r\n        // Use parent dummy.\r\n        this._parent = new ElementCore(this._element);\r\n\r\n        // After setting root, make sure it's updated.\r\n        this._parent._hasRenderUpdates = 3;\r\n        this._parent._hasUpdates = true;\r\n\r\n        // Root is, and will always be, the primary zContext.\r\n        this._isRoot = true;\r\n\r\n        this.ctx.root = this;\r\n\r\n        // Set scissor area of 'fake parent' to stage's viewport.\r\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\r\n        this._parent._scissor = this._parent._viewport;\r\n\r\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\r\n        this._parent._recBoundsMargin = null;\r\n\r\n        this._setRecalc(1 + 2 + 4);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while (p = p._parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    isZContext() {\r\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\r\n    };\r\n\r\n    findZContext() {\r\n        if (this.isZContext()) {\r\n            return this;\r\n        } else {\r\n            return this._parent.findZContext();\r\n        }\r\n    };\r\n\r\n    setZParent(newZParent) {\r\n        if (this._zParent !== newZParent) {\r\n            if (this._zParent !== null) {\r\n                if (this._zIndex !== 0) {\r\n                    this._zParent.decZContextUsage();\r\n                }\r\n\r\n                // We must filter out this item upon the next resort.\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (newZParent !== null) {\r\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\r\n\r\n                // @pre: new parent's children array has already been modified.\r\n                if (this._zIndex !== 0) {\r\n                    newZParent.incZContextUsage();\r\n                }\r\n\r\n                if (newZParent._zContextUsage > 0) {\r\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\r\n                        // This child was already in the children list.\r\n                        // Do not add double.\r\n                    } else {\r\n                        // Add new child to array.\r\n                        newZParent._zIndexedChildren.push(this);\r\n                    }\r\n\r\n                    // Order should be checked.\r\n                    newZParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            this._zParent = newZParent;\r\n\r\n            // Newly added element must be marked for resort.\r\n            this._zIndexResort = true;\r\n        }\r\n    };\r\n\r\n    incZContextUsage() {\r\n        this._zContextUsage++;\r\n        if (this._zContextUsage === 1) {\r\n            if (!this._zIndexedChildren) {\r\n                this._zIndexedChildren = [];\r\n            }\r\n            if (this._children) {\r\n                // Copy.\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._zIndexedChildren.push(this._children[i]);\r\n                }\r\n                // Initially, children are already sorted properly (tree order).\r\n                this._zSort = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    decZContextUsage() {\r\n        this._zContextUsage--;\r\n        if (this._zContextUsage === 0) {\r\n            this._zSort = false;\r\n            this._zIndexedChildren.splice(0);\r\n        }\r\n    };\r\n\r\n    get zIndex() {\r\n        return this._zIndex;\r\n    }\r\n\r\n    set zIndex(zIndex) {\r\n        if (this._zIndex !== zIndex) {\r\n            this.setHasRenderUpdates(1);\r\n\r\n            let newZParent = this._zParent;\r\n\r\n            let prevIsZContext = this.isZContext();\r\n            if (zIndex === 0 && this._zIndex !== 0) {\r\n                if (this._parent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.decZContextUsage();\r\n                    }\r\n                } else {\r\n                    newZParent = this._parent;\r\n                }\r\n            } else if (zIndex !== 0 && this._zIndex === 0) {\r\n                newZParent = this._parent ? this._parent.findZContext() : null;\r\n                if (newZParent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.incZContextUsage();\r\n                        this._zParent.enableZSort();\r\n                    }\r\n                }\r\n            } else if (zIndex !== this._zIndex) {\r\n                if (this._zParent && this._zParent._zContextUsage) {\r\n                    this._zParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(null);\r\n            }\r\n\r\n            this._zIndex = zIndex;\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(newZParent);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(this._parent.findZContext());\r\n                }\r\n            }\r\n\r\n            // Make sure that resort is done.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n        }\r\n    };\r\n\r\n    get forceZIndexContext() {\r\n        return this._forceZIndexContext;\r\n    }\r\n\r\n    set forceZIndexContext(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevIsZContext = this.isZContext();\r\n        this._forceZIndexContext = v;\r\n\r\n        if (prevIsZContext !== this.isZContext()) {\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            } else {\r\n                this.enableZContext(this._parent.findZContext());\r\n            }\r\n        }\r\n    };\r\n\r\n    enableZContext(prevZContext) {\r\n        if (prevZContext && prevZContext._zContextUsage > 0) {\r\n            // Transfer from upper z context to this z context.\r\n            const results = this._getZIndexedDescs();\r\n            results.forEach((c) => {\r\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\r\n                    c.setZParent(this);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getZIndexedDescs() {\r\n        const results = [];\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    _getZIndexedDescsRec(results) {\r\n        if (this._zIndex) {\r\n            results.push(this);\r\n        } else if (this._children && !this.isZContext()) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n    }\r\n\r\n    disableZContext() {\r\n        // Transfer from this z context to upper z context.\r\n        if (this._zContextUsage > 0) {\r\n            let newZParent = this._parent.findZContext();\r\n\r\n            // Make sure that z-indexed children are up to date (old ones removed).\r\n            if (this._zSort) {\r\n                this.sortZIndexedChildren();\r\n            }\r\n\r\n            this._zIndexedChildren.slice().forEach(function (c) {\r\n                if (c._zIndex !== 0) {\r\n                    c.setZParent(newZParent);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    get ignoreRTL() {\r\n        return this._ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this._ignoreRTL = v;\r\n    }\r\n\r\n    get colorUl() {\r\n        return this._colorUl;\r\n    }\r\n\r\n    set colorUl(color) {\r\n        if (this._colorUl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUl = color;\r\n        }\r\n    }\r\n\r\n    get colorUr() {\r\n        return this._colorUr;\r\n    }\r\n\r\n    set colorUr(color) {\r\n        if (this._colorUr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUr = color;\r\n        }\r\n    };\r\n\r\n    get colorBl() {\r\n        return this._colorBl;\r\n    }\r\n\r\n    set colorBl(color) {\r\n        if (this._colorBl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBl = color;\r\n        }\r\n    };\r\n\r\n    get colorBr() {\r\n        return this._colorBr;\r\n    }\r\n\r\n    set colorBr(color) {\r\n        if (this._colorBr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBr = color;\r\n        }\r\n    };\r\n\r\n\r\n    set onUpdate(f) {\r\n        this._onUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this._onAfterUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this._onAfterCalcs = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevShader = this._shader;\r\n        this._shader = v;\r\n        if (!v && prevShader) {\r\n            // Disabled shader.\r\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\r\n            this._setShaderOwnerRecursive(newShaderOwner);\r\n        } else if (v) {\r\n            // Enabled shader.\r\n            this._setShaderOwnerRecursive(this);\r\n        }\r\n    }\r\n\r\n    get activeShader() {\r\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\r\n    }\r\n\r\n    get activeShaderOwner() {\r\n        return this._shaderOwner;\r\n    }\r\n\r\n    get clipping() {\r\n        return this._clipping;\r\n    }\r\n\r\n    set clipping(v) {\r\n        if (this._clipping !== v) {\r\n            this._clipping = v;\r\n\r\n            // Force update of scissor by updating translate.\r\n            // Alpha must also be updated because the scissor area may have been empty.\r\n            this._setRecalc(1 + 2);\r\n        }\r\n    }\r\n\r\n    get clipbox() {\r\n        return this._clipbox;\r\n    }\r\n\r\n    set clipbox(v) {\r\n        // In case of out-of-bounds element, all children will also be ignored.\r\n        // It will save us from executing the update/render loops for those.\r\n        // The optimization will be used immediately during the next frame.\r\n        this._clipbox = v;\r\n    }\r\n\r\n    _setShaderOwnerRecursive(elementCore) {\r\n        this._shaderOwner = elementCore;\r\n\r\n        if (this._children && !this._renderToTextureEnabled) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setShaderOwnerChildrenRecursive(elementCore) {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _hasRenderContext() {\r\n        return this._renderContext !== this._worldContext;\r\n    }\r\n\r\n    get renderContext() {\r\n        return this._renderContext;\r\n    }\r\n\r\n    updateRenderToTextureEnabled() {\r\n        // Enforce texturizer initialisation.\r\n        let v = this.texturizer._enabled;\r\n\r\n        if (v) {\r\n            this._enableRenderToTexture();\r\n        } else {\r\n            this._disableRenderToTexture();\r\n            this._texturizer.releaseRenderTexture();\r\n        }\r\n    }\r\n\r\n    _enableRenderToTexture() {\r\n        if (!this._renderToTextureEnabled) {\r\n            let prevIsZContext = this.isZContext();\r\n\r\n            this._renderToTextureEnabled = true;\r\n\r\n            this._renderContext = new ElementCoreContext();\r\n\r\n            // If render to texture is active, a new shader context is started.\r\n            this._setShaderOwnerChildrenRecursive(null);\r\n\r\n            if (!prevIsZContext) {\r\n                // Render context forces z context.\r\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\r\n            }\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.render = this._renderAdvanced;\r\n        }\r\n    }\r\n\r\n    _disableRenderToTexture() {\r\n        if (this._renderToTextureEnabled) {\r\n            this._renderToTextureEnabled = false;\r\n\r\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\r\n\r\n            this._renderContext = this._worldContext;\r\n\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            }\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            this.render = this._renderSimple;\r\n        }\r\n    }\r\n\r\n    isWhite() {\r\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\r\n    }\r\n\r\n    hasSimpleTexCoords() {\r\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\r\n    }\r\n\r\n    _stashTexCoords() {\r\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n    }\r\n\r\n    _unstashTexCoords() {\r\n        this._ulx = this._stashedTexCoords[0];\r\n        this._uly = this._stashedTexCoords[1];\r\n        this._brx = this._stashedTexCoords[2];\r\n        this._bry = this._stashedTexCoords[3];\r\n        this._stashedTexCoords = null;\r\n    }\r\n\r\n    _stashColors() {\r\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\r\n        this._colorUl = 0xFFFFFFFF;\r\n        this._colorUr = 0xFFFFFFFF;\r\n        this._colorBr = 0xFFFFFFFF;\r\n        this._colorBl = 0xFFFFFFFF;\r\n    }\r\n\r\n    _unstashColors() {\r\n        this._colorUl = this._stashedColors[0];\r\n        this._colorUr = this._stashedColors[1];\r\n        this._colorBr = this._stashedColors[2];\r\n        this._colorBl = this._stashedColors[3];\r\n        this._stashedColors = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return (this._localAlpha > 1e-14);\r\n    };\r\n\r\n    get outOfBounds() {\r\n        return this._outOfBounds;\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n\r\n        /**\r\n         *  null: inherit from parent.\r\n         *  number[4]: specific margins: left, top, right, bottom.\r\n         */\r\n        this._boundsMargin = v ? v.slice() : null;\r\n\r\n        // We force recalc in order to set all boundsMargin recursively during the next update.\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this._boundsMargin;\r\n    }\r\n\r\n    update() {\r\n        this._recalc |= this._parent._pRecalc;\r\n\r\n        if (this._layout && this._layout.isEnabled()) {\r\n            if (this._recalc & 256) {\r\n                this._layout.layoutFlexTree();\r\n            }\r\n        } else if ((this._recalc & 2) && this._optFlags) {\r\n            this._applyRelativeDimFuncs();\r\n        }\r\n\r\n        if (this._onUpdate) {\r\n            // Block all 'upwards' updates when changing things in this branch.\r\n            this._hasUpdates = true;\r\n            this._onUpdate(this.element, this);\r\n        }\r\n\r\n        const pw = this._parent._worldContext;\r\n        let w = this._worldContext;\r\n        const visible = (pw.alpha && this._localAlpha);\r\n\r\n        /**\r\n         * We must update if:\r\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\r\n         * - there are (inherited) updates and this branch is visible\r\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\r\n         */\r\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\r\n            let recalc = this._recalc;\r\n\r\n            // Update world coords/alpha.\r\n            if (recalc & 1) {\r\n                if (!w.alpha && visible) {\r\n                    // Becomes visible.\r\n                    this._hasRenderUpdates = 3;\r\n                }\r\n                w.alpha = pw.alpha * this._localAlpha;\r\n\r\n                if (w.alpha < 1e-14) {\r\n                    // Tiny rounding errors may cause failing visibility tests.\r\n                    w.alpha = 0;\r\n                }\r\n            }\r\n\r\n            if (recalc & 6) {\r\n                let calculatedX = this._localPx;\r\n                if (window.isRTL && !this._ignoreRTL) {\r\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\r\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                }\r\n\r\n                w.px = pw.px + calculatedX * pw.ta;\r\n                w.py = pw.py + this._localPy * pw.td;\r\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\r\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\r\n            }\r\n\r\n            if (recalc & 4) {\r\n                w.ta = this._localTa * pw.ta;\r\n                w.tb = this._localTd * pw.tb;\r\n                w.tc = this._localTa * pw.tc;\r\n                w.td = this._localTd * pw.td;\r\n\r\n                if (this._isComplex) {\r\n                    w.ta += this._localTc * pw.tb;\r\n                    w.tb += this._localTb * pw.ta;\r\n                    w.tc += this._localTc * pw.td;\r\n                    w.td += this._localTb * pw.tc;\r\n                }\r\n            }\r\n\r\n            // Update render coords/alpha.\r\n            const pr = this._parent._renderContext;\r\n            if (this._parent._hasRenderContext()) {\r\n                const init = this._renderContext === this._worldContext;\r\n                if (init) {\r\n                    // First render context build: make sure that it is fully initialized correctly.\r\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\r\n                    this._renderContext = new ElementCoreContext();\r\n                }\r\n\r\n                const r = this._renderContext;\r\n\r\n                // Update world coords/alpha.\r\n                if (init || (recalc & 1)) {\r\n                    r.alpha = pr.alpha * this._localAlpha;\r\n\r\n                    if (r.alpha < 1e-14) {\r\n                        r.alpha = 0;\r\n                    }\r\n                }\r\n\r\n                if (init || (recalc & 6)) {\r\n                    let calculatedX = this._localPx;\r\n                    if (window.isRTL && !this._ignoreRTL) {\r\n                      const parentW = this._element.__parent\r\n                        ? this._parent.w || 0\r\n                        : this.ctx.stage.getOption(\"w\");\r\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                    }\r\n                    \r\n                    r.px = pr.px + calculatedX * pr.ta;\r\n                    r.py = pr.py + this._localPy * pr.td;\r\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\r\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\r\n                }\r\n\r\n                if (init) {\r\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\r\n                    recalc |= 2;\r\n                }\r\n\r\n                if (init || (recalc & 4)) {\r\n                    r.ta = this._localTa * pr.ta;\r\n                    r.tb = this._localTd * pr.tb;\r\n                    r.tc = this._localTa * pr.tc;\r\n                    r.td = this._localTd * pr.td;\r\n\r\n                    if (this._isComplex) {\r\n                        r.ta += this._localTc * pr.tb;\r\n                        r.tb += this._localTb * pr.ta;\r\n                        r.tc += this._localTc * pr.td;\r\n                        r.td += this._localTb * pr.tc;\r\n                    }\r\n                }\r\n            } else {\r\n                this._renderContext = this._worldContext;\r\n            }\r\n\r\n            if (this.ctx.updateTreeOrder === -1) {\r\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\r\n            } else {\r\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n            }\r\n\r\n            // Determine whether we must use a 'renderTexture'.\r\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\r\n            if (this._useRenderToTexture !== useRenderToTexture) {\r\n                // Coords must be changed.\r\n                this._recalc |= 2 + 4;\r\n\r\n                // Scissor may change: force update.\r\n                recalc |= 2;\r\n\r\n                if (!this._useRenderToTexture) {\r\n                    // We must release the texture.\r\n                    this._texturizer.release();\r\n                }\r\n            }\r\n            this._useRenderToTexture = useRenderToTexture;\r\n\r\n            const r = this._renderContext;\r\n\r\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\r\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\r\n\r\n            // Calculate a bbox for this element.\r\n            let sx, sy, ex, ey;\r\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\r\n            if (rComplex) {\r\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n            } else {\r\n                sx = r.px;\r\n                ex = r.px + r.ta * bboxW;\r\n                sy = r.py;\r\n                ey = r.py + r.td * bboxH;\r\n            }\r\n\r\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\r\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\r\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                if (nx < sx) sx = nx;\r\n                if (ny < sy) sy = ny;\r\n                if (nx > ex) ex = nx;\r\n                if (ny > ey) ey = ny;\r\n            }\r\n\r\n            if (recalc & 6 || !this._scissor /* initial */) {\r\n                // Determine whether we must 'clip'.\r\n                if (this._clipping && r.isSquare()) {\r\n                    // If the parent renders to a texture, it's scissor should be ignored;\r\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                    if (area) {\r\n                        // Merge scissor areas.\r\n                        const lx = Math.max(area[0], sx);\r\n                        const ly = Math.max(area[1], sy);\r\n                        this._scissor = [\r\n                            lx,\r\n                            ly,\r\n                            Math.min(area[2] + area[0], ex) - lx,\r\n                            Math.min(area[3] + area[1], ey) - ly\r\n                        ];\r\n                    } else {\r\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\r\n                    }\r\n                } else {\r\n                    // No clipping: reuse parent scissor.\r\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                }\r\n            }\r\n\r\n            // Calculate the outOfBounds margin.\r\n            if (this._boundsMargin) {\r\n                this._recBoundsMargin = this._boundsMargin;\r\n            } else {\r\n                this._recBoundsMargin = this._parent._recBoundsMargin;\r\n            }\r\n\r\n            if (this._onAfterCalcs) {\r\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\r\n                if (this._onAfterCalcs(this.element)) {\r\n                    // Recalculate bbox.\r\n                    if (rComplex) {\r\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                    } else {\r\n                        sx = r.px;\r\n                        ex = r.px + r.ta * bboxW;\r\n                        sy = r.py;\r\n                        ey = r.py + r.td * bboxH;\r\n                    }\r\n\r\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                        if (nx < sx) sx = nx;\r\n                        if (ny < sy) sy = ny;\r\n                        if (nx > ex) ex = nx;\r\n                        if (ny > ey) ey = ny;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._parent._outOfBounds === 2) {\r\n                // Inherit parent out of boundsness.\r\n                this._outOfBounds = 2;\r\n\r\n                if (this._withinBoundsMargin) {\r\n                    this._withinBoundsMargin = false;\r\n                    this.element._disableWithinBoundsMargin();\r\n                }\r\n            } else {\r\n                if (recalc & 6) {\r\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\r\n                    this._outOfBounds = 0;\r\n                    let withinMargin = true;\r\n\r\n                    // Offscreens are always rendered as long as the parent is within bounds.\r\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\r\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\r\n                            // Empty scissor area.\r\n                            this._outOfBounds = 2;\r\n                        } else {\r\n                            // Use bbox to check out-of-boundness.\r\n                            if ((this._scissor[0] > ex) ||\r\n                                (this._scissor[1] > ey) ||\r\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\r\n                                (sy > (this._scissor[1] + this._scissor[3]))\r\n                            ) {\r\n                                this._outOfBounds = 1;\r\n                            }\r\n\r\n                            if (this._outOfBounds) {\r\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\r\n                                    this._outOfBounds = 2;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        withinMargin = (this._outOfBounds === 0);\r\n                        if (!withinMargin) {\r\n                            // Re-test, now with margins.\r\n                            if (this._recBoundsMargin) {\r\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\r\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\r\n                            } else {\r\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\r\n                                    (ey < this._scissor[1] - 100) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\r\n                            }\r\n                            if (withinMargin && this._outOfBounds === 2) {\r\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\r\n                                this._outOfBounds = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this._withinBoundsMargin !== withinMargin) {\r\n                        this._withinBoundsMargin = withinMargin;\r\n\r\n                        if (this._withinBoundsMargin) {\r\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\r\n\r\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\r\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\r\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\r\n                            // _recalc directly.\r\n\r\n                            // Changes in descendants are automatically executed within the current update loop, though we must\r\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\r\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\r\n                            this._hasUpdates = true;\r\n\r\n                            const recalc = this._recalc;\r\n                            this._recalc = 0;\r\n                            this.element._enableWithinBoundsMargin();\r\n\r\n                            if (this._recalc) {\r\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\r\n                                return this.update();\r\n                            }\r\n\r\n                            this._recalc = recalc;\r\n                        } else {\r\n                            this.element._disableWithinBoundsMargin();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                // Set viewport necessary for children scissor calculation.\r\n                if (this._viewport) {\r\n                    this._viewport[2] = bboxW;\r\n                    this._viewport[3] = bboxH;\r\n                } else {\r\n                    this._viewport = [0, 0, bboxW, bboxH];\r\n                }\r\n            }\r\n\r\n            // Filter out bits that should not be copied to the children (currently all are).\r\n            this._pRecalc = (this._recalc & 135);\r\n\r\n            // Clear flags so that future updates are properly detected.\r\n            this._recalc = 0;\r\n            this._hasUpdates = false;\r\n\r\n            if (this._outOfBounds < 2) {\r\n                if (this._useRenderToTexture) {\r\n                    if (this._worldContext.isIdentity()) {\r\n                        // Optimization.\r\n                        // The world context is already identity: use the world context as render context to prevents the\r\n                        // ancestors from having to update the render context.\r\n                        this._renderContext = this._worldContext;\r\n                    } else {\r\n                        // Temporarily replace the render coord attribs by the identity matrix.\r\n                        // This allows the children to calculate the render context.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n                    }\r\n                }\r\n\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        this._children[i].update();\r\n                    }\r\n                }\r\n\r\n                if (this._useRenderToTexture) {\r\n                    this._renderContext = r;\r\n                }\r\n            } else {\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._hasUpdates) {\r\n                            this._children[i].update();\r\n                        } else {\r\n                            // Make sure we don't lose the 'inherited' updates.\r\n                            this._children[i]._recalc |= this._pRecalc;\r\n                            this._children[i].updateOutOfBounds();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._onAfterUpdate) {\r\n                this._onAfterUpdate(this.element);\r\n            }\r\n        } else {\r\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\r\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\r\n                this.ctx.updateTreeOrder = -1;\r\n            } else {\r\n                this.updateTreeOrder();\r\n            }\r\n        }\r\n    }\r\n\r\n    _applyRelativeDimFuncs() {\r\n        if (this._optFlags & 1) {\r\n            const x = this._funcX(this._parent.w);\r\n            if (x !== this._x) {\r\n                this._localPx += (x - this._x);\r\n                this._x = x;\r\n            }\r\n        }\r\n        if (this._optFlags & 2) {\r\n            const y = this._funcY(this._parent.h);\r\n            if (y !== this._y) {\r\n                this._localPy += (y - this._y);\r\n                this._y = y;\r\n            }\r\n        }\r\n\r\n        let changedDims = false;\r\n        if (this._optFlags & 4) {\r\n            const w = this._funcW(this._parent.w);\r\n            if (w !== this._w) {\r\n                this._w = w;\r\n                changedDims = true;\r\n            }\r\n        }\r\n        if (this._optFlags & 8) {\r\n            const h = this._funcH(this._parent.h);\r\n            if (h !== this._h) {\r\n                this._h = h;\r\n                changedDims = true;\r\n            }\r\n        }\r\n\r\n        if (changedDims) {\r\n            // Recalc mount, scale position.\r\n            this._recalcLocalTranslate();\r\n\r\n            this.element.onDimensionsChanged(this._w, this._h);\r\n        }\r\n    }\r\n\r\n    updateOutOfBounds() {\r\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\r\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\r\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\r\n\r\n            // Inherit parent out of boundsness.\r\n            this._outOfBounds = 2;\r\n\r\n            if (this._withinBoundsMargin) {\r\n                this._withinBoundsMargin = false;\r\n                this.element._disableWithinBoundsMargin();\r\n            }\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateOutOfBounds();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateTreeOrder() {\r\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\r\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateTreeOrder();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderSimple() {\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                renderState.setShader(this.activeShader, this._shaderOwner);\r\n                renderState.setScissor(this._scissor);\r\n                this.renderState.addQuad(this);\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderAdvanced() {\r\n        const hasRenderUpdates = this._hasRenderUpdates;\r\n\r\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\r\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\r\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            let mustRenderChildren = true;\r\n            let renderTextureInfo;\r\n            let prevRenderTextureInfo;\r\n            if (this._useRenderToTexture) {\r\n                if (this._w === 0 || this._h === 0) {\r\n                    // Ignore this branch and don't draw anything.\r\n                    return;\r\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\r\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\r\n                    this.ctx.renderToTextureCount++;\r\n                    // Switch to default shader for building up the render texture.\r\n                    renderState.setShader(renderState.defaultShader, this);\r\n\r\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\r\n\r\n                    renderTextureInfo = {\r\n                        nativeTexture: null,\r\n                        offset: 0,  // Set by CoreRenderState.\r\n                        w: this._w,\r\n                        h: this._h,\r\n                        empty: true,\r\n                        cleared: false,\r\n                        ignore: false,\r\n                        cache: false\r\n                    };\r\n\r\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\r\n                        /**\r\n                         * We don't always cache render textures.\r\n                         *\r\n                         * The rule is, that caching for a specific render texture is only enabled if:\r\n                         * - There is a result texture to be updated.\r\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\r\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\r\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\r\n                         *   change while a lower one is not, that lower level will be cached instead.\r\n                         *\r\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\r\n                         * of GPU memory!\r\n                         *\r\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\r\n                         * noticable effect on performance as less render textures need to be allocated.\r\n                         */\r\n                        renderTextureInfo.cache = true;\r\n                        renderState.isCachingTexturizer = true;\r\n                    }\r\n\r\n                    if (!this._texturizer.hasResultTexture()) {\r\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\r\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\r\n                        //  render-to-texture layer.\r\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\r\n                        //  that result texture being filled.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    }\r\n\r\n                    renderState.setRenderTextureInfo(renderTextureInfo);\r\n                    renderState.setScissor(null);\r\n\r\n                    if (this._displayedTextureSource) {\r\n                        let r = this._renderContext;\r\n\r\n                        // Use an identity context for drawing the displayed texture to the render texture.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n\r\n                        // Add displayed texture source in local coordinates.\r\n                        this.renderState.addQuad(this);\r\n\r\n                        this._renderContext = r;\r\n                    }\r\n                } else {\r\n                    mustRenderChildren = false;\r\n                }\r\n            } else {\r\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                    renderState.setShader(this.activeShader, this._shaderOwner);\r\n                    renderState.setScissor(this._scissor);\r\n                    this.renderState.addQuad(this);\r\n                }\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (mustRenderChildren && this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                let updateResultTexture = false;\r\n                if (mustRenderChildren) {\r\n                    // Finished refreshing renderTexture.\r\n                    renderState.finishedRenderTexture();\r\n\r\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\r\n                    //  render-to-texture and filtering.\r\n                    this._texturizer.empty = renderTextureInfo.empty;\r\n\r\n                    if (renderTextureInfo.empty) {\r\n                        // We ignore empty render textures and do not draw the final quad.\r\n\r\n                        // The following cleans up memory and enforces that the result texture is also cleared.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    } else if (renderTextureInfo.nativeTexture) {\r\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\r\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\r\n\r\n                        renderTextureInfo.ignore = true;\r\n                    } else {\r\n                        if (this._texturizer.renderTextureReused) {\r\n                            // Quad operations must be written to a render texture actually owned.\r\n                            this._texturizer.releaseRenderTexture();\r\n                        }\r\n                        // Just create the render texture.\r\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\r\n                    }\r\n\r\n                    // Restore the parent's render texture.\r\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\r\n\r\n                    updateResultTexture = true;\r\n                }\r\n\r\n                if (!this._texturizer.empty) {\r\n                    let resultTexture = this._texturizer.getResultTexture();\r\n                    if (updateResultTexture) {\r\n                        if (resultTexture) {\r\n                            // Logging the update frame can be handy for userland.\r\n                            resultTexture.update = renderState.stage.frameCounter;\r\n                        }\r\n                        this._texturizer.updateResultTexture();\r\n                    }\r\n\r\n                    if (!this._texturizer.renderOffscreen) {\r\n                        // Render result texture to the actual render target.\r\n                        renderState.setShader(this.activeShader, this._shaderOwner);\r\n                        renderState.setScissor(this._scissor);\r\n\r\n                        // If no render texture info is set, the cache can be reused.\r\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\r\n\r\n                        renderState.setTexturizer(this._texturizer, cache);\r\n                        this._stashTexCoords();\r\n                        if (!this._texturizer.colorize) this._stashColors();\r\n                        this.renderState.addQuad(this, true);\r\n                        if (!this._texturizer.colorize) this._unstashColors();\r\n                        this._unstashTexCoords();\r\n                        renderState.setTexturizer(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (renderTextureInfo && renderTextureInfo.cache) {\r\n                // Allow siblings to cache.\r\n                renderState.isCachingTexturizer = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    get zSort() {\r\n        return this._zSort;\r\n    }\r\n\r\n    sortZIndexedChildren() {\r\n        /**\r\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\r\n         * - filtering out elements with a different zParent than this (were removed)\r\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\r\n         * - then, finally, we merge-sort both the new array and the 'old' one\r\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\r\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\r\n         */\r\n\r\n        const n = this._zIndexedChildren.length;\r\n        let ptr = 0;\r\n        const a = this._zIndexedChildren;\r\n\r\n        // Notice that items may occur multiple times due to z-index changing.\r\n        const b = [];\r\n        for (let i = 0; i < n; i++) {\r\n            if (a[i]._zParent === this) {\r\n                if (a[i]._zIndexResort) {\r\n                    b.push(a[i]);\r\n                } else {\r\n                    if (ptr !== i) {\r\n                        a[ptr] = a[i];\r\n                    }\r\n                    ptr++;\r\n                }\r\n            }\r\n        }\r\n\r\n        const m = b.length;\r\n        if (m) {\r\n            for (let j = 0; j < m; j++) {\r\n                b[j]._zIndexResort = false;\r\n            }\r\n\r\n            b.sort(ElementCore.sortZIndexedChildren);\r\n            const n = ptr;\r\n            if (!n) {\r\n                ptr = 0;\r\n                let j = 0;\r\n                do {\r\n                    a[ptr++] = b[j++];\r\n                } while (j < m);\r\n\r\n                if (a.length > ptr) {\r\n                    // Slice old (unnecessary) part off array.\r\n                    a.splice(ptr);\r\n                }\r\n            } else {\r\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\r\n+               // Beware that the function passed here to Array.sort must be stable\r\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\r\n                // Merge-sort arrays;\r\n                ptr = 0;\r\n                let i = 0;\r\n                let j = 0;\r\n                const mergeResult = [];\r\n                do {\r\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\r\n\r\n                    const add = v > 0 ? b[j++] : a[i++];\r\n\r\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                        mergeResult[ptr++] = add;\r\n                    }\r\n\r\n                    if (i >= n) {\r\n                        do {\r\n                            const add = b[j++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (j < m);\r\n                        break;\r\n                    } else if (j >= m) {\r\n                        do {\r\n                            const add = a[i++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (i < n);\r\n                        break;\r\n                    }\r\n                } while (true);\r\n\r\n                this._zIndexedChildren = mergeResult;\r\n            }\r\n        } else {\r\n            if (a.length > ptr) {\r\n                // Slice old (unnecessary) part off array.\r\n                a.splice(ptr);\r\n            }\r\n        }\r\n\r\n        this._zSort = false;\r\n    };\r\n\r\n    get localTa() {\r\n        return this._localTa;\r\n    };\r\n\r\n    get localTb() {\r\n        return this._localTb;\r\n    };\r\n\r\n    get localTc() {\r\n        return this._localTc;\r\n    };\r\n\r\n    get localTd() {\r\n        return this._localTd;\r\n    };\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get renderUpdates() {\r\n        return this._hasRenderUpdates;\r\n    }\r\n\r\n    get texturizer() {\r\n        if (!this._texturizer) {\r\n            this._texturizer = new ElementTexturizer(this);\r\n        }\r\n        return this._texturizer;\r\n    }\r\n\r\n    getCornerPoints() {\r\n        let w = this._worldContext;\r\n\r\n        return [\r\n            w.px,\r\n            w.py,\r\n            w.px + this._w * w.ta,\r\n            w.py + this._w * w.tc,\r\n            w.px + this._w * w.ta + this._h * w.tb,\r\n            w.py + this._w * w.tc + this._h * w.td,\r\n            w.px + this._h * w.tb,\r\n            w.py + this._h * w.td\r\n        ];\r\n    };\r\n\r\n    getRenderTextureCoords(relX, relY) {\r\n        let r = this._renderContext;\r\n        return [\r\n            r.px + r.ta * relX + r.tb * relY,\r\n            r.py + r.tc * relX + r.td * relY\r\n        ];\r\n    }\r\n\r\n    getAbsoluteCoords(relX, relY) {\r\n        let w = this._renderContext;\r\n        return [\r\n            w.px + w.ta * relX + w.tb * relY,\r\n            w.py + w.tc * relX + w.td * relY\r\n        ];\r\n    }\r\n\r\n    collectAtCoord(x, y, children) {\r\n        // return when branch is hidden\r\n        if (this._renderContext.alpha === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.inBound(x, y)) {\r\n            if (this._scissor) {\r\n                if (this.inScissor()) {\r\n                    children.push(this);\r\n                }\r\n            } else {\r\n                children.push(this);\r\n            }\r\n        }\r\n\r\n        if (this._children) {\r\n            const j = this._children.length;\r\n            for (let i = 0; i < j; i++) {\r\n                this._children[i].collectAtCoord(x, y, children);\r\n            }\r\n        }\r\n\r\n        return children.sort(ElementCore.sortZIndexedChildren);\r\n    }\r\n\r\n    inBound(tx, ty) {\r\n        const c = this.getCornerPoints();\r\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\r\n    }\r\n\r\n    inScissor() {\r\n        const sc = this._scissor;\r\n        const c = this.getCornerPoints();\r\n\r\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\r\n    }\r\n\r\n    get layout() {\r\n        this._ensureLayout();\r\n        return this._layout;\r\n    }\r\n\r\n    get flex() {\r\n        return this._layout ? this._layout.flex : null;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.layout.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this._layout ? this._layout.flexItem : null;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.layout.flexItem = v;\r\n    }\r\n\r\n    isFlexItem() {\r\n        return !!this._layout && this._layout.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexContainer() {\r\n        return !!this._layout && this._layout.isFlexEnabled();\r\n    }\r\n\r\n    enableFlexLayout() {\r\n        this._ensureLayout();\r\n    }\r\n\r\n    _ensureLayout() {\r\n        if (!this._layout) {\r\n            this._layout = new FlexTarget(this);\r\n        }\r\n    }\r\n\r\n    disableFlexLayout() {\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    hasFlexLayout() {\r\n        return (this._layout && this._layout.isEnabled());\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this._updateDimensions(w, h);\r\n    }\r\n\r\n    triggerLayout() {\r\n        this._setRecalc(256);\r\n    }\r\n\r\n    _triggerRecalcTranslate() {\r\n        this._setRecalc(2);\r\n    }\r\n\r\n}\r\n\r\nclass ElementCoreContext {\r\n\r\n    constructor() {\r\n        this.alpha = 1;\r\n\r\n        this.px = 0;\r\n        this.py = 0;\r\n\r\n        this.ta = 1;\r\n        this.tb = 0;\r\n        this.tc = 0;\r\n        this.td = 1;\r\n    }\r\n\r\n    isIdentity() {\r\n        return this.alpha === 1 &&\r\n            this.px === 0 &&\r\n            this.py === 0 &&\r\n            this.ta === 1 &&\r\n            this.tb === 0 &&\r\n            this.tc === 0 &&\r\n            this.td === 1;\r\n    }\r\n\r\n    isSquare() {\r\n        return this.tb === 0 && this.tc === 0;\r\n    }\r\n\r\n}\r\n\r\nElementCoreContext.IDENTITY = new ElementCoreContext();\r\nElementCore.sortZIndexedChildren = function (a, b) {\r\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\r\n};\r\n\r\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\r\nimport Utils from \"../Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * This is a partial (and more efficient) implementation of the event emitter.\r\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\r\n * Only if there are multiple listeners, they are combined in an array.\r\n */\r\nexport default class EventEmitter {\r\n\r\n    constructor() {\r\n        // This is set (and kept) to true when events are used at all.\r\n        this._hasEventListeners = false;\r\n    }\r\n\r\n    on(name, listener) {\r\n        if (!this._hasEventListeners) {\r\n            this._eventFunction = {}\r\n            this._eventListeners = {}\r\n            this._hasEventListeners = true;\r\n        }\r\n\r\n        const current = this._eventFunction[name];\r\n        if (!current) {\r\n            this._eventFunction[name] = listener;\r\n        } else {\r\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\r\n                this._eventListeners[name] = [this._eventFunction[name], listener];\r\n                this._eventFunction[name] = EventEmitter.combiner;\r\n            } else {\r\n                this._eventListeners[name].push(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    once(name, listener) {\r\n        const wrapper = (arg1, arg2, arg3) => {\r\n            listener(arg1, arg2, arg3);\r\n            this.off(name, wrapper);\r\n        }\r\n        wrapper.__originalFunc = listener;\r\n        this.on(name, wrapper);\r\n    }\r\n\r\n    has(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    for (const l of listeners) {\r\n                        if (l === listener || l.__originalFunc == listener) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    off(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    let index = listeners.indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    if (listeners.length === 1) {\r\n                        this._eventFunction[name] = listeners[0];\r\n                        this._eventListeners[name] = undefined;\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    this._eventFunction[name] = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListener(name, listener) {\r\n        this.off(name, listener);\r\n    }\r\n\r\n    emit(name, arg1, arg2, arg3) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    func(this, name, arg1, arg2, arg3);\r\n                } else {\r\n                    func(arg1, arg2, arg3);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    listenerCount(name) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    return this._eventListeners[name].length;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    removeAllListeners(name) {\r\n        if (this._hasEventListeners) {\r\n            delete this._eventFunction[name];\r\n            delete this._eventListeners[name];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\r\n    const listeners = object._eventListeners[name];\r\n    if (listeners) {\r\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\r\n           we need to create a copy to loop over it */\r\n        for (const listener of [...listeners]) {\r\n            listener(arg1, arg2, arg3);\r\n        }\r\n    }\r\n}\r\n\r\nEventEmitter.addAsMixin = function(cls) {\r\n    cls.prototype.on = EventEmitter.prototype.on;\r\n    cls.prototype.once = EventEmitter.prototype.once;\r\n    cls.prototype.has = EventEmitter.prototype.has;\r\n    cls.prototype.off = EventEmitter.prototype.off;\r\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\r\n    cls.prototype.emit = EventEmitter.prototype.emit;\r\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\r\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nexport default class Shader {\r\n\r\n    constructor(coreContext) {\r\n        this._initialized = false;\r\n\r\n        this.ctx = coreContext;\r\n\r\n        /**\r\n         * The (enabled) elements that use this shader.\r\n         * @type {Set<ElementCore>}\r\n         */\r\n        this._elements = new Set();\r\n    }\r\n\r\n    static create(stage, v) {\r\n        let shader;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                shader = stage.renderer.createShader(stage.ctx, v);\r\n            } else {\r\n                shader = this.shader;\r\n            }\r\n\r\n            if (shader) {\r\n                Base.patchObject(shader, v);\r\n            }\r\n        } else if (v === null) {\r\n            shader = stage.ctx.renderState.defaultShader;\r\n        } else if (v === undefined) {\r\n            shader = null;\r\n        } else {\r\n            if (v.isShader) {\r\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\r\n                    console.error(\"[Lightning] Invalid shader type\");\r\n                    v = null;\r\n                }\r\n                shader = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a shader type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return undefined;\r\n    }\r\n\r\n    static getC2d() {\r\n        return undefined;\r\n    }\r\n\r\n    addElement(elementCore) {\r\n        this._elements.add(elementCore);\r\n    }\r\n\r\n    removeElement(elementCore) {\r\n        this._elements.delete(elementCore);\r\n        if (!this._elements) {\r\n            this.cleanup();\r\n        }\r\n    }\r\n\r\n    redraw() {\r\n        this._elements.forEach(elementCore => {\r\n            elementCore.setHasRenderUpdates(2);\r\n        });\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    useDefault() {\r\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\r\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\r\n        return false;\r\n    }\r\n\r\n    addEmpty() {\r\n        // Draws this shader even if there are no quads to be added.\r\n        // This is handy for custom shaders.\r\n        return false;\r\n    }\r\n\r\n    cleanup() {\r\n        // Called when no more enabled elements have this shader.\r\n    }\r\n\r\n    get isShader() {\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Texture {\r\n\r\n    /**\r\n     * @param {Stage} stage\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.manager = this.stage.textureManager;\r\n\r\n        this.id = Texture.id++;\r\n\r\n        /**\r\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\r\n         * @type {Set<Element>}\r\n         */\r\n        this.elements = new Set();\r\n\r\n        /**\r\n         * The number of enabled elements that are active.\r\n         * @type {number}\r\n         */\r\n        this._activeCount = 0;\r\n\r\n        /**\r\n         * The associated texture source.\r\n         * Should not be changed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._source = null;\r\n\r\n        /**\r\n         * A resize mode can be set to cover or contain a certain area.\r\n         * It will reset the texture clipping settings.\r\n         * When manual texture clipping is performed, the resizeMode is reset.\r\n         * @type {{type: string, width: number, height: number}}\r\n         * @private\r\n         */\r\n        this._resizeMode = null;\r\n\r\n        /**\r\n         * The texture clipping x-offset.\r\n         * @type {number}\r\n         */\r\n        this._x = 0;\r\n\r\n        /**\r\n         * The texture clipping y-offset.\r\n         * @type {number}\r\n         */\r\n        this._y = 0;\r\n\r\n        /**\r\n         * The texture clipping width. If 0 then full width.\r\n         * @type {number}\r\n         */\r\n        this._w = 0;\r\n\r\n        /**\r\n         * The texture clipping height. If 0 then full height.\r\n         * @type {number}\r\n         */\r\n        this._h = 0;\r\n\r\n        /**\r\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._precision = 1;\r\n\r\n        /**\r\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mw = 0;\r\n\r\n        /**\r\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mh = 0;\r\n\r\n        /**\r\n         * Indicates if Texture.prototype.texture uses clipping.\r\n         * @type {boolean}\r\n         */\r\n        this.clipping = false;\r\n\r\n        /**\r\n         * Indicates whether this texture must update (when it becomes used again).\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._mustUpdate = true;\r\n\r\n    }\r\n\r\n    get source() {\r\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\r\n            this._performUpdateSource(true);\r\n            this.stage.removeUpdateSourceTexture(this);\r\n        }\r\n        return this._source;\r\n    }\r\n\r\n    addElement(v) {\r\n        if (!this.elements.has(v)) {\r\n            this.elements.add(v);\r\n\r\n            if (this.elements.size === 1) {\r\n                if (this._source) {\r\n                    this._source.addTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.incActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeElement(v) {\r\n        if (this.elements.delete(v)) {\r\n            if (this.elements.size === 0) {\r\n                if (this._source) {\r\n                    this._source.removeTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.decActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    incActiveCount() {\r\n        // Ensure that texture source's activeCount has transferred ownership.\r\n        const source = this.source;\r\n\r\n        if (source) {\r\n            this._checkForNewerReusableTextureSource();\r\n        }\r\n\r\n        this._activeCount++;\r\n        if (this._activeCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveCount() {\r\n        const source = this.source; // Force updating the source.\r\n        this._activeCount--;\r\n        if (!this._activeCount) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    becomesUsed() {\r\n        if (this.source) {\r\n            this.source.incActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        if (this._resizeMode) {\r\n            this._applyResizeMode();\r\n        }\r\n\r\n        this.elements.forEach(element => {\r\n            if (element.active) {\r\n                element.onTextureSourceLoaded();\r\n            }\r\n        });\r\n    }\r\n\r\n    _checkForNewerReusableTextureSource() {\r\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\r\n        // In the meantime another texture may have been generated loaded with the same lookup id.\r\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\r\n        const source = this.source;\r\n        if (!source.isLoaded()) {\r\n            const reusable = this._getReusableTextureSource();\r\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\r\n                this._replaceTextureSource(reusable);\r\n            }\r\n        } else {\r\n            if (this._resizeMode) {\r\n                this._applyResizeMode();\r\n            }\r\n        }\r\n    }\r\n\r\n    becomesUnused() {\r\n        if (this.source) {\r\n            this.source.decActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeCount > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\r\n     * @returns {string|null}\r\n     */\r\n    _getLookupId() {\r\n        // Default: do not reuse texture.\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\r\n     * It should return a function that receives a single callback argument.\r\n     * That callback should be called with the following arguments:\r\n     *   - err\r\n     *   - options: object\r\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\r\n     *     - w: Number\r\n     *     - h: Number\r\n     *     - permanent: Boolean\r\n     *     - hasAlpha: boolean\r\n     *     - permultiplyAlpha: boolean\r\n     *     - flipBlueRed: boolean\r\n     *     - renderInfo: object\r\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\r\n     * to stop fetching an image when it is no longer in element, for example.\r\n     */\r\n    _getSourceLoader() {\r\n        throw new Error(\"Texture.generate must be implemented.\");\r\n    }\r\n\r\n    get isValid() {\r\n        return this._getIsValid();\r\n    }\r\n\r\n    /**\r\n     * If texture is not 'valid', no source can be created for it.\r\n     * @returns {boolean}\r\n     */\r\n    _getIsValid() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This must be called when the texture source must be re-generated.\r\n     */\r\n    _changed() {\r\n        // If no element is actively using this texture, ignore it altogether.\r\n        if (this.isUsed()) {\r\n            this._updateSource();\r\n        } else {\r\n            this._mustUpdate = true;\r\n        }\r\n    }\r\n\r\n    _updateSource() {\r\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\r\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\r\n        // properties.\r\n        this.stage.addUpdateSourceTexture(this);\r\n    }\r\n\r\n    _performUpdateSource(force = false) {\r\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\r\n        // again.\r\n        if (force || this.isUsed()) {\r\n            this._mustUpdate = false;\r\n            let source = this._getTextureSource();\r\n            this._replaceTextureSource(source);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        let source = null;\r\n        if (this._getIsValid()) {\r\n            const lookupId = this._getLookupId();\r\n            source = this._getReusableTextureSource(lookupId);\r\n            if (!source) {\r\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n\r\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\r\n        if (this._getIsValid()) {\r\n            if (lookupId) {\r\n                return this.manager.getReusableTextureSource(lookupId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _replaceTextureSource(newSource = null) {\r\n        let oldSource = this._source;\r\n\r\n        this._source = newSource;\r\n\r\n        if (this.elements.size) {\r\n            if (oldSource) {\r\n                if (this._activeCount) {\r\n                    oldSource.decActiveTextureCount();\r\n                }\r\n\r\n                oldSource.removeTexture(this);\r\n\r\n                // free up unused TextTextures immediately as they are not reused anyway\r\n                if(this['text'] && !oldSource.isUsed()) {\r\n                    this.manager.freeTextureSource(oldSource);\r\n                }\r\n            }\r\n\r\n            if (newSource) {\r\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\r\n                newSource.addTexture(this);\r\n                if (this._activeCount) {\r\n                    newSource.incActiveTextureCount();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isUsed()) {\r\n            if (newSource) {\r\n                if (newSource.isLoaded()) {\r\n\r\n                    // Apply resizeMode\r\n                    if (this._resizeMode) {\r\n                        this._applyResizeMode();\r\n                    }\r\n\r\n                    this.elements.forEach(element => {\r\n                        if (element.active) {\r\n                            element._setDisplayedTexture(this);\r\n                        }\r\n                    });\r\n                } else {\r\n                    const loadError = newSource.loadError;\r\n                    if (loadError) {\r\n                        this.elements.forEach(element => {\r\n                            if (element.active) {\r\n                                element.onTextureSourceLoadError(loadError);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this.elements.forEach(element => {\r\n                    if (element.active) {\r\n                        element._setDisplayedTexture(null);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    load() {\r\n        // Make sure that source is up to date.\r\n        if (this.source) {\r\n            if (!this.isLoaded()) {\r\n                this.source.load(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._source && this._source.isLoaded();\r\n    }\r\n\r\n    get loadError() {\r\n        return this._source && this._source.loadError;\r\n    }\r\n\r\n    free() {\r\n        if (this._source) {\r\n            this._source.free();\r\n        }\r\n    }\r\n\r\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\r\n        this._resizeMode = {type, w, h, clipX, clipY};\r\n        if (this.isLoaded()) {\r\n            this._applyResizeMode();\r\n        }\r\n    }\r\n\r\n    get resizeMode() {\r\n        return this._resizeMode;\r\n    }\r\n\r\n    _clearResizeMode() {\r\n        this._resizeMode = null;\r\n    }\r\n\r\n    _applyResizeMode() {\r\n        if (this._resizeMode.type === \"cover\") {\r\n            this._applyResizeCover();\r\n        } else if (this._resizeMode.type === \"contain\") {\r\n            this._applyResizeContain();\r\n        }\r\n        this._updatePrecision();\r\n        this._updateClipping();\r\n    }\r\n\r\n    _applyResizeCover() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = Math.max(scaleX, scaleY);\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n        if (scaleX && scaleX < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.w;\r\n            const choppedOffPixels = this._source.w - desiredSize;\r\n            this._x = choppedOffPixels * this._resizeMode.clipX;\r\n            this._w = this._source.w - choppedOffPixels;\r\n        }\r\n        if (scaleY && scaleY < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.h;\r\n            const choppedOffPixels = this._source.h - desiredSize;\r\n            this._y = choppedOffPixels * this._resizeMode.clipY;\r\n            this._h = this._source.h - choppedOffPixels;\r\n        }\r\n    }\r\n\r\n    _applyResizeContain() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = scaleX;\r\n        if (!scale || scaleY < scale) {\r\n            scale = scaleY;\r\n        }\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n    }\r\n\r\n    enableClipping(x, y, w, h) {\r\n        this._clearResizeMode();\r\n\r\n        x *= this._precision;\r\n        y *= this._precision;\r\n        w *= this._precision;\r\n        h *= this._precision;\r\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\r\n            this._x = x;\r\n            this._y = y;\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._updateClipping(true);\r\n        }\r\n    }\r\n\r\n    disableClipping() {\r\n        this._clearResizeMode();\r\n\r\n        if (this._x || this._y || this._w || this._h) {\r\n            this._x = 0;\r\n            this._y = 0;\r\n            this._w = 0;\r\n            this._h = 0;\r\n\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    _updateClipping() {\r\n        this.clipping = !!(this._x || this._y || this._w || this._h);\r\n\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onDisplayedTextureClippingChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    _updatePrecision() {\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onPrecisionChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let nonDefaults = {};\r\n        nonDefaults['type'] = this.constructor.name;\r\n        if (this.x !== 0) nonDefaults['x'] = this.x;\r\n        if (this.y !== 0) nonDefaults['y'] = this.y;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\r\n        return nonDefaults;\r\n    }\r\n\r\n    get px() {\r\n        return this._x;\r\n    }\r\n\r\n    get py() {\r\n        return this._y;\r\n    }\r\n\r\n    get pw() {\r\n        return this._w;\r\n    }\r\n\r\n    get ph() {\r\n        return this._h;\r\n    }\r\n\r\n    get x() {\r\n        return this._x / this._precision;\r\n    }\r\n    set x(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._x !== v) {\r\n            this._x = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y / this._precision;\r\n    }\r\n    set y(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._y !== v) {\r\n            this._y = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w / this._precision;\r\n    }\r\n\r\n    set w(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h / this._precision;\r\n    }\r\n\r\n    set h(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get precision() {\r\n        return this._precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        this._clearResizeMode();\r\n        if (this._precision !== v) {\r\n            this._precision = v;\r\n            this._updatePrecision();\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return true;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\r\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nTexture.prototype.isTexture = true;\r\n\r\nTexture.id = 0;\r\n\r\nimport Base from \"./Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class ImageTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._src = undefined;\r\n        this._hasAlpha = false;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set src(v) {\r\n        if (this._src !== v) {\r\n            this._src = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    set hasAlpha(v) {\r\n        if (this._hasAlpha !== v) {\r\n            this._hasAlpha = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._src;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._src;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        let src = this._src;\r\n        let hasAlpha = this._hasAlpha;\r\n        if (this.stage.getOption('srcBasePath')) {\r\n            var fc = src.charCodeAt(0);\r\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\r\n                // Alphabetical or dot: prepend base path.\r\n                src = this.stage.getOption('srcBasePath') + src;\r\n            }\r\n        }\r\n\r\n        return (cb) => {\r\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\r\n        }\r\n    }\r\n\r\n    getNonDefaults() {\r\n        const obj = super.getNonDefaults();\r\n        if (this._src) {\r\n            obj.src = this._src;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Returns CSS font setting string for use in canvas context.\r\n *\r\n * @param fontFace\r\n * @param fontStyle\r\n * @param fontSize\r\n * @param precision\r\n * @param defaultFontFace\r\n * @returns\r\n */\r\nexport function getFontSetting(\r\n    fontFace: string | string[],\r\n    fontStyle: string,\r\n    fontSize: number,\r\n    precision: number,\r\n    defaultFontFace: string\r\n): string {\r\n    let ff = fontFace;\r\n\r\n    if (!Array.isArray(ff)) {\r\n        ff = [ff];\r\n    }\r\n\r\n    let ffs = [];\r\n    for (let i = 0, n = ff.length; i < n; i++) {\r\n        let curFf = ff[i];\r\n        // Replace the default font face `null` with the actual default font face set\r\n        // on the stage.\r\n        if (curFf === null) {\r\n            curFf = defaultFontFace;\r\n        }\r\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\r\n            ffs.push(curFf);\r\n        } else {\r\n            ffs.push(`\"${curFf}\"`);\r\n        }\r\n    }\r\n\r\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space.\r\n *\r\n * @param space\r\n */\r\nexport function isZeroWidthSpace(space: string): boolean {\r\n    return space === '' || space === '\\u200B';\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space or a regular space.\r\n *\r\n * @param space\r\n */\r\nexport function isSpace(space: string): boolean {\r\n    return isZeroWidthSpace(space) || space === ' ';\r\n}\r\n\r\n/**\r\n * Converts a string into an array of tokens and the words between them.\r\n *\r\n * @param tokenRegex\r\n * @param text\r\n */\r\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\r\n    const delimeters = text.match(tokenRegex) || [];\r\n    const words = text.split(tokenRegex) || [];\r\n\r\n    let final: string[] = [];\r\n    for (let i = 0; i < words.length; i++) {\r\n        final.push(words[i]!, delimeters[i]!)\r\n    }\r\n    final.pop()\r\n    return final.filter((word) => word != '');\r\n}\r\n\r\n/**\r\n * Measure the width of a string accounting for letter spacing.\r\n *\r\n * @param context\r\n * @param word\r\n * @param space\r\n */\r\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\r\n    if (!space) {\r\n        return context.measureText(word).width;\r\n    }\r\n    return word.split('').reduce((acc, char) => {\r\n        // Zero-width spaces should not include letter spacing.\r\n        // And since we know the width of a zero-width space is 0, we can skip\r\n        // measuring it.\r\n        if (isZeroWidthSpace(char)) {\r\n            return acc;\r\n        }\r\n        return acc + context.measureText(char).width + space;\r\n    }, 0);\r\n}\r\n\r\nexport interface WrapTextResult {\r\n    l: string[];\r\n    n: number[];\r\n}\r\n\r\n/**\r\n * Applies newlines to a string to have it optimally fit into the horizontal\r\n * bounds set by the Text object's wordWrapWidth property.\r\n *\r\n * @param context\r\n * @param text\r\n * @param wordWrapWidth\r\n * @param letterSpacing\r\n * @param indent\r\n */\r\nexport function wrapText(\r\n    context: CanvasRenderingContext2D,\r\n    text: string,\r\n    wordWrapWidth: number,\r\n    letterSpacing: number,\r\n    indent: number\r\n): WrapTextResult {\r\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\r\n    // than its horizontal bounds.\r\n    const spaceRegex = / |\\u200B/g;\r\n    let lines = text.split(/\\r?\\n/g);\r\n    let allLines: string[] = [];\r\n    let realNewlines: number[] = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        let resultLines: string[] = [];\r\n        let result = '';\r\n        let spaceLeft = wordWrapWidth - indent;\r\n        let words = lines[i]!.split(spaceRegex);\r\n        let spaces = lines[i]!.match(spaceRegex) || [];\r\n        for (let j = 0; j < words.length; j++) {\r\n            const space = spaces[j - 1] || '';\r\n            const word = words[j]!;\r\n            const wordWidth = measureText(context, word, letterSpacing);\r\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\r\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\r\n                // Skip printing the newline if it's the first word of the line that is.\r\n                // greater than the word wrap width.\r\n                if (j > 0) {\r\n                    resultLines.push(result);\r\n                    result = '';\r\n                }\r\n                result += word;\r\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\r\n            }\r\n            else {\r\n                spaceLeft -= wordWidthWithSpace;\r\n                result += space + word;\r\n            }\r\n        }\r\n\r\n        resultLines.push(result);\r\n        result = '';\r\n\r\n        allLines = allLines.concat(resultLines);\r\n\r\n        if (i < lines.length - 1) {\r\n            realNewlines.push(allLines.length);\r\n        }\r\n    }\r\n\r\n    return {l: allLines, n: realNewlines};\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRenderer {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        this._context.font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('[Lightning] Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('[Lightning] Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        let lineHeight = this._settings.lineHeight * precision;\r\n        const w = this._settings.w * precision;\r\n        const h = this._settings.h * precision;\r\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\r\n        const textIndent = this._settings.textIndent * precision;\r\n\r\n        // Set font properties.\r\n        this.setFontProperties();\r\n\r\n        // Total width.\r\n        let width = w || this._stage.getOption('w');\r\n\r\n        // Inner width.\r\n        let innerWidth = width - (paddingLeft);\r\n        if (innerWidth < 10) {\r\n            width += (10 - innerWidth);\r\n            innerWidth = 10;\r\n        }\r\n\r\n        if (!wordWrapWidth) {\r\n            wordWrapWidth = innerWidth;\r\n        }\r\n\r\n        // Text overflow\r\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\r\n        }\r\n\r\n        // word wrap\r\n        // preserve original text\r\n        let linesInfo;\r\n        if (this._settings.wordWrap) {\r\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\r\n        } else {\r\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\r\n            let i, n = linesInfo.l.length;\r\n            for (let i = 0; i < n - 1; i++) {\r\n                linesInfo.n.push(i);\r\n            }\r\n        }\r\n        let lines = linesInfo.l;\r\n\r\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\r\n            let usedLines = lines.slice(0, this._settings.maxLines);\r\n\r\n            let otherLines = null;\r\n            if (this._settings.maxLinesSuffix) {\r\n                // Wrap again with max lines suffix enabled.\r\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\r\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\r\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\r\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\r\n            } else {\r\n                otherLines = [''];\r\n            }\r\n\r\n            // Re-assemble the remaining text.\r\n            let i, n = lines.length;\r\n            let j = 0;\r\n            let m = linesInfo.n.length;\r\n            for (i = this._settings.maxLines; i < n; i++) {\r\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\r\n                if (i + 1 < m && linesInfo.n[i + 1]) {\r\n                    j++;\r\n                }\r\n            }\r\n\r\n            renderInfo.remainingText = otherLines.join(\"\\n\");\r\n\r\n            renderInfo.moreTextLines = true;\r\n\r\n            lines = usedLines;\r\n        } else {\r\n            renderInfo.moreTextLines = false;\r\n            renderInfo.remainingText = \"\";\r\n        }\r\n\r\n        // calculate text width\r\n        let maxLineWidth = 0;\r\n        let lineWidths = [];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\r\n        }\r\n\r\n        renderInfo.lineWidths = lineWidths;\r\n\r\n        if (!w) {\r\n            // Auto-set width to max text length.\r\n            width = maxLineWidth + paddingLeft + paddingRight;\r\n            innerWidth = maxLineWidth;\r\n        }\r\n\r\n        // calculate text height\r\n        lineHeight = lineHeight || fontSize;\r\n\r\n        let height;\r\n        if (h) {\r\n            height = h;\r\n        } else {\r\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\r\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\r\n        }\r\n\r\n        if (offsetY === null) {\r\n            offsetY = fontSize;\r\n        }\r\n\r\n        renderInfo.w = width;\r\n        renderInfo.h = height;\r\n        renderInfo.lines = lines;\r\n        renderInfo.precision = precision;\r\n\r\n        if (!width) {\r\n            // To prevent canvas errors.\r\n            width = 1;\r\n        }\r\n\r\n        if (!height) {\r\n            // To prevent canvas errors.\r\n            height = 1;\r\n        }\r\n\r\n        if (cutSx || cutEx) {\r\n            width = Math.min(width, cutEx - cutSx);\r\n        }\r\n\r\n        if (cutSy || cutEy) {\r\n            height = Math.min(height, cutEy - cutSy);\r\n        }\r\n\r\n        renderInfo.width = width;\r\n        renderInfo.innerWidth = innerWidth;\r\n        renderInfo.height = height;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.lineWidths = lineWidths;\r\n        renderInfo.offsetY = offsetY;\r\n        renderInfo.paddingLeft = paddingLeft;\r\n        renderInfo.paddingRight = paddingRight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textIndent = textIndent;\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n\r\n        // Add extra margin to prevent issue with clipped text when scaling.\r\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(renderInfo.height);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n        if (window.isRTL) {\r\n            this._context.direction = 'rtl';\r\n            this._context.textAlign = 'left';\r\n        }\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        let linePositionX;\r\n        let linePositionY;\r\n\r\n        let drawLines = [];\r\n\r\n        // Draw lines line by line.\r\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\r\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\r\n\r\n            // By default, text is aligned to top\r\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\r\n\r\n            if (this._settings.verticalAlign == 'middle') {\r\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\r\n            } else if (this._settings.verticalAlign == 'bottom') {\r\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\r\n            }\r\n\r\n            if (this._settings.textAlign === 'right') {\r\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\r\n            } else if (this._settings.textAlign === 'center') {\r\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\r\n            }\r\n            linePositionX += renderInfo.paddingLeft;\r\n\r\n            drawLines.push({ text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i] });\r\n        }\r\n\r\n        // Highlight.\r\n        if (this._settings.highlight) {\r\n            let color = this._settings.highlightColor || 0x00000000;\r\n\r\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\r\n            const offset = this._settings.highlightOffset * precision;\r\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(color);\r\n            for (let i = 0; i < drawLines.length; i++) {\r\n                let drawLine = drawLines[i];\r\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n\r\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor[0], this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur[0]];\r\n\r\n            for (let i in this._settings.shadowColor) {\r\n                this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor[i]);\r\n                this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n                this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n                this._context.shadowBlur = this._settings.shadowBlur[i] * precision;\r\n                this.renderText(drawLines, renderInfo);\r\n            }\r\n        } else {\r\n            this.renderText(drawLines, renderInfo);\r\n        }\r\n\r\n\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        this.renderInfo = renderInfo;\r\n    };\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -= 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\r\n    }\r\n\r\n    /**\r\n     * See {@link wrapText}\r\n     *\r\n     * @param {string} text\r\n     * @param {number} wordWrapWidth\r\n     * @param {number} letterSpacing\r\n     * @param {number} indent\r\n     * @returns\r\n     */\r\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\r\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    renderText(drawLines, renderInfo) {\r\n        for (let i = 0, n = drawLines.length; i < n; i++) {\r\n            let drawLine = drawLines[i];\r\n\r\n            if (renderInfo.letterSpacing === 0) {\r\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y + 5);\r\n            } else {\r\n                const textSplit = drawLine.text.split('');\r\n                let x = drawLine.x;\r\n                for (let i = 0, j = textSplit.length; i < j; i++) {\r\n                    this._context.fillText(textSplit[i], x, drawLine.y);\r\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRendererAdvanced {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        const font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.font = font;\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n        return font;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch(e) {\r\n                console.warn(\"Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\r\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\r\n        // const h = this._settings.h * precision;\r\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = this._settings.letterSpacing || 0;\r\n\r\n        // Set font properties.\r\n        renderInfo.baseFont = this.setFontProperties();\r\n\r\n        renderInfo.w = w;\r\n        renderInfo.width = w;\r\n        renderInfo.text = this._settings.text;\r\n        renderInfo.precision = precision;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textAlign = this._settings.textAlign;\r\n        renderInfo.textColor = this._settings.textColor;\r\n        renderInfo.verticalAlign = this._settings.verticalAlign;\r\n        renderInfo.highlight = this._settings.highlight;\r\n        renderInfo.highlightColor = this._settings.highlightColor;\r\n        renderInfo.highlightHeight = this._settings.highlightHeight;\r\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\r\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\r\n        renderInfo.highlightOffset = this._settings.highlightOffset;\r\n        renderInfo.paddingLeft = this._settings.paddingLeft;\r\n        renderInfo.paddingRight = this._settings.paddingRight;\r\n        renderInfo.maxLines = this._settings.maxLines;\r\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\r\n        renderInfo.textOverflow = this._settings.textOverflow;\r\n        renderInfo.wordWrap = this._settings.wordWrap;\r\n        renderInfo.wordWrapWidth = wordWrapWidth;\r\n        renderInfo.shadow = this._settings.shadow;\r\n        renderInfo.shadowColor = this._settings.shadowColor;\r\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\r\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\r\n        renderInfo.shadowBlur = this._settings.shadowBlur;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.textIndent = this._settings.textIndent * precision;\r\n        renderInfo.wordBreak = this._settings.wordBreak;\r\n\r\n        let text = renderInfo.text;\r\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\r\n\r\n        // Text overflow\r\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\r\n        }\r\n\r\n        text = this.tokenize(text);\r\n        text = this.parse(text);\r\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\r\n\r\n        if (renderInfo.textIndent) {\r\n            text = this.indent(text, renderInfo.textIndent);\r\n        }\r\n\r\n        if (renderInfo.wordBreak) {\r\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\r\n            this.resetFontStyle()\r\n        }\r\n\r\n        // Calculate detailed drawing information\r\n        let x = paddingLeft;\r\n        let lineNo = 0;\r\n\r\n        for (const t of text) {\r\n            // Wrap text\r\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\r\n                x = paddingLeft;\r\n                lineNo += 1;\r\n            }\r\n            t.lineNo = lineNo;\r\n\r\n            if (t.text == '\\n') {\r\n                continue;\r\n            }\r\n\r\n            t.x = x;\r\n            x += t.width;\r\n        }\r\n        renderInfo.lineNum = lineNo + 1;\r\n\r\n        if (this._settings.h) {\r\n            renderInfo.h = this._settings.h;\r\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\r\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\r\n        } else {\r\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\r\n        }\r\n\r\n        // This calculates the baseline offset in pixels from the font size.\r\n        // To retrieve this ratio, you would do this calculation:\r\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\r\n        //\r\n        // This give you the ratio for the baseline, which is then used to figure out\r\n        // where the baseline is relative to the bottom of the text bounding box.\r\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\r\n\r\n        // Vertical align\r\n        let vaOffset = 0;\r\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\r\n            vaOffset = -baselineOffsetInPx;\r\n        } else if (renderInfo.verticalAlign == 'middle') {\r\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\r\n        } else if (this._settings.verticalAlign == 'bottom') {\r\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\r\n        }\r\n\r\n        // Calculate lines information\r\n        renderInfo.lines = []\r\n        for (let i = 0; i < renderInfo.lineNum; i++) {\r\n            renderInfo.lines[i] = {\r\n                width: 0,\r\n                x: 0,\r\n                y: renderInfo.lineHeight * i + vaOffset,\r\n                text: [],\r\n            }\r\n        }\r\n\r\n        for (let t of text) {\r\n            renderInfo.lines[t.lineNo].text.push(t);\r\n        }\r\n\r\n        // Filter out white spaces at beginning and end of each line\r\n        for (const l of renderInfo.lines) {\r\n            if (l.text.length == 0) {\r\n                continue;\r\n            }\r\n\r\n            const firstWord = l.text[0].text;\r\n            const lastWord = l.text[l.text.length - 1].text;\r\n\r\n            if (firstWord == '\\n') {\r\n                l.text.shift();\r\n            }\r\n            if (isSpace(lastWord) || lastWord == '\\n') {\r\n                l.text.pop();\r\n            }\r\n        }\r\n\r\n\r\n        // Calculate line width\r\n        for (let l of renderInfo.lines) {\r\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\r\n        }\r\n\r\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\r\n        renderInfo.w = renderInfo.width;\r\n\r\n        // Apply maxLinesSuffix\r\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\r\n            const index = renderInfo.maxLines - 1;\r\n            let lastLineText = text.filter((t) => t.lineNo == index)\r\n            let suffix = renderInfo.maxLinesSuffix;\r\n            suffix = this.tokenize(suffix);\r\n            suffix = this.parse(suffix);\r\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\r\n            for (const s of suffix) {\r\n                s.lineNo = index;\r\n                s.x = 0;\r\n                lastLineText.push(s)\r\n            }\r\n\r\n            const spl = suffix.length + 1\r\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\r\n                lastLineText.splice(lastLineText.length - spl, 1);\r\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n                if (lastLineText.length < spl) {\r\n                    break;\r\n                }\r\n            }\r\n            this.alignLine(lastLineText, lastLineText[0].x)\r\n\r\n            renderInfo.lines[index].text = lastLineText;\r\n            renderInfo.lines[index].width = _w;\r\n        }\r\n\r\n        // Horizontal alignment offset\r\n        if (renderInfo.textAlign == 'center') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\r\n            }\r\n        } else if (renderInfo.textAlign == 'right') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = renderInfo.width - l.width - paddingLeft;\r\n            }\r\n        }\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n        const paddingLeft = renderInfo.paddingLeft * precision;\r\n\r\n        // Set canvas dimensions\r\n        let canvasWidth = renderInfo.w || renderInfo.width;\r\n        if (renderInfo.cutSx || renderInfo.cutEx) {\r\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\r\n        }\r\n\r\n        let canvasHeight = renderInfo.h;\r\n        if (renderInfo.cutSy || renderInfo.cutEy) {\r\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\r\n        }\r\n\r\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(canvasHeight);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        // Cut\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        // Highlight\r\n        if (renderInfo.highlight) {\r\n            const hlColor = renderInfo.highlightColor || 0x00000000;\r\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\r\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\r\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\r\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\r\n            for (let i = 0; i < lineNum; i++) {\r\n                const l = renderInfo.lines[i];\r\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\r\n\r\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\r\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\r\n        }\r\n\r\n        // Draw text\r\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\r\n        let currentColor = defaultColor;\r\n        this._context.fillStyle = defaultColor;\r\n        for (const line of renderInfo.lines) {\r\n            for (const t of line.text) {\r\n                let lx = 0;\r\n\r\n                if (t.text == '\\n') {\r\n                    continue;\r\n                }\r\n\r\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\r\n                    continue;\r\n                }\r\n\r\n                if (t.color != currentColor) {\r\n                    currentColor = t.color;\r\n                    this._context.fillStyle = currentColor;\r\n                }\r\n\r\n                this._context.font = t.fontStyle;\r\n\r\n                // Draw with letter spacing\r\n                if (t.letters) {\r\n                    for (let l of t.letters) {\r\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\r\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                        lx += l.width;\r\n                    }\r\n                // Standard drawing\r\n                } else {\r\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\r\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Reset text shadow\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        // Reset cut translation\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        // Postprocess renderInfo.lines to be compatible with standard version\r\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\r\n        if (renderInfo.maxLines) {\r\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\r\n        }\r\n\r\n\r\n        this.renderInfo = renderInfo;\r\n\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    tokenize(text) {\r\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\r\n    }\r\n\r\n    parse(tokens) {\r\n        let italic = 0;\r\n        let bold = 0;\r\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\r\n        let color = 0;\r\n\r\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\r\n\r\n        return tokens.map((t) => {\r\n            if (t == '<i>') {\r\n                italic += 1;\r\n                t = '';\r\n            } else if (t == '</i>' && italic > 0) {\r\n                italic -= 1;\r\n                t = '';\r\n            } else if (t == '<b>') {\r\n                bold += 1;\r\n                t = '';\r\n            } else if (t == '</b>' && bold > 0) {\r\n                bold -= 1;\r\n                t = '';\r\n            } else if (t == '</color>') {\r\n                if (colorStack.length > 1) {\r\n                    color -= 1;\r\n                    colorStack.pop();\r\n                }\r\n                t = '';\r\n            } else if (colorRegexp.test(t)) {\r\n                const matched = colorRegexp.exec(t);\r\n                colorStack.push(\r\n                    StageUtils.getRgbaString(parseInt(matched[1]))\r\n                );\r\n                color += 1;\r\n                t = '';\r\n\r\n            }\r\n\r\n            return {\r\n                text: t,\r\n                italic: italic,\r\n                bold: bold,\r\n                color: colorStack[color],\r\n            }\r\n        })\r\n        .filter((o) => o.text != '');\r\n    }\r\n\r\n    applyFontStyle(word, baseFont) {\r\n        let font = baseFont;\r\n        if (word.bold) {\r\n            font = 'bold ' + font;\r\n        }\r\n        if (word.italic) {\r\n            font = 'italic ' + font;\r\n        }\r\n        this._context.font = font\r\n        word.fontStyle = font;\r\n    }\r\n\r\n    resetFontStyle(baseFont) {\r\n        this._context.font = baseFont;\r\n    }\r\n\r\n    measure(parsed, letterSpacing = 0, baseFont) {\r\n        for (const p of parsed) {\r\n            this.applyFontStyle(p, baseFont);\r\n            p.width = this.measureText(p.text, letterSpacing);\r\n\r\n            // Letter by letter detail for letter spacing\r\n            if (letterSpacing > 0) {\r\n                p.letters = p.text.split('').map((l) => {return {text: l}});\r\n                for (let l of p.letters) {\r\n                    l.width = this.measureText(l.text, letterSpacing);\r\n                }\r\n            }\r\n\r\n        }\r\n        this.resetFontStyle(baseFont);\r\n        return parsed;\r\n    }\r\n\r\n    indent(parsed, textIndent) {\r\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\r\n        return parsed;\r\n    }\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\r\n    }\r\n\r\n    _getBreakIndex(word, width) {\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        if (wordWidth <= width) {\r\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\r\n        }\r\n\r\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > width) {\r\n            while (breakIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth > width) {\r\n                    breakIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (breakIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth < width) {\r\n                    breakIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    breakIndex -=1;\r\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return {breakIndex, truncWordWidth};\r\n\r\n    }\r\n\r\n    wordBreak(word, width, baseFont) {\r\n        if (!word.text) {\r\n            return word\r\n        }\r\n        this.applyFontStyle(word, baseFont)\r\n        const parts = [];\r\n        let text = word.text;\r\n        if (!word.letters) {\r\n            while (true) {\r\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = truncWordWidth;\r\n\r\n                if (breakIndex === text.length) {\r\n                    break;\r\n                }\r\n\r\n                text = text.slice(breakIndex);\r\n            }\r\n        } else {\r\n            let totalWidth = 0;\r\n            let letters = [];\r\n            let breakIndex = 0;\r\n            for (const l of word.letters) {\r\n                if (totalWidth + l.width >= width) {\r\n                    parts.push({...word});\r\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                    parts[parts.length - 1].width = totalWidth;\r\n                    parts[parts.length - 1].letters = letters;\r\n                    text = text.slice(breakIndex);\r\n                    totalWidth = 0;\r\n                    letters = [];\r\n                    breakIndex = 0;\r\n\r\n                } else {\r\n                    breakIndex += 1;\r\n                    letters.push(l);\r\n                    totalWidth += l.width;\r\n                }\r\n            }\r\n\r\n            if (totalWidth > 0) {\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = totalWidth;\r\n                parts[parts.length - 1].letters = letters;\r\n            }\r\n        }\r\n\r\n        return parts;\r\n    }\r\n\r\n    alignLine(parsed, initialX = 0) {\r\n        let prevWidth = 0;\r\n        let prevX = initialX;\r\n        for (const word of parsed) {\r\n            if (word.text == '\\n') {\r\n                continue;\r\n            }\r\n            word.x = prevX + prevWidth;\r\n            prevX = word.x;\r\n            prevWidth = word.width;\r\n        }\r\n\r\n    }\r\n}","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class TextTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        // We use the stage precision as the default precision in case of a text texture.\r\n        this._precision = this.stage.getOption('precision');\r\n    }\r\n\r\n    static renderer(stage, canvas, settings) {\r\n        if (this.advancedRenderer) {\r\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\r\n        } else {\r\n            return new TextTextureRenderer(stage, canvas, settings);\r\n        }\r\n    }\r\n\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(v) {\r\n        if (this._text !== v) {\r\n            this._text = \"\" + v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontStyle() {\r\n        return this._fontStyle;\r\n    }\r\n\r\n    set fontStyle(v) {\r\n        if (this._fontStyle !== v) {\r\n            this._fontStyle = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontBaselineRatio() {\r\n        return this._fontBaselineRatio;\r\n    }\r\n    \r\n    set fontBaselineRatio(v) {\r\n        if (this._fontBaselineRatio !== v) {\r\n            this._fontBaselineRatio = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n\r\n    set fontSize(v) {\r\n        if (this._fontSize !== v) {\r\n            this._fontSize = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontWeight() {\r\n        return this._fontWeight;\r\n    }\r\n\r\n    set fontWeight(v) {\r\n        if (this._fontWeight !== v) {\r\n            this._fontWeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontFace() {\r\n        return this._fontFace;\r\n    }\r\n\r\n    set fontFace(v) {\r\n        if (this._fontFace !== v) {\r\n            this._fontFace = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrap() {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(v) {\r\n        if (this._wordWrap !== v) {\r\n            this._wordWrap = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrapWidth() {\r\n        return this._wordWrapWidth;\r\n    }\r\n\r\n    set wordWrapWidth(v) {\r\n        if (this._wordWrapWidth !== v) {\r\n            this._wordWrapWidth = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordBreak() {\r\n        return this._wordBreak;\r\n    }\r\n\r\n    set wordBreak(v) {\r\n        if (this._wordBreak !== v) {\r\n            this._wordBreak = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textOverflow() {\r\n        return this._textOverflow;\r\n    }\r\n\r\n    set textOverflow(v) {\r\n        if (v != this._textOverflow) {\r\n            this._textOverflow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this._lineHeight;\r\n    }\r\n\r\n    set lineHeight(v) {\r\n        if (this._lineHeight !== v) {\r\n            this._lineHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textBaseline() {\r\n        return this._textBaseline;\r\n    }\r\n\r\n    set textBaseline(v) {\r\n        if (this._textBaseline !== v) {\r\n            this._textBaseline = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textAlign() {\r\n        return this._textAlign;\r\n    }\r\n\r\n    set textAlign(v) {\r\n        if (v != 'center' && window.isRTL) {\r\n            v = v == \"right\" ? \"left\" : \"right\";\r\n        }\r\n        if (this._textAlign !== v) {\r\n            this._textAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get verticalAlign() {\r\n        return this._verticalAlign;\r\n    }\r\n\r\n    set verticalAlign(v) {\r\n        if (this._verticalAlign !== v) {\r\n            this._verticalAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (this._offsetY !== v) {\r\n            this._offsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLines() {\r\n        return this._maxLines;\r\n    }\r\n\r\n    set maxLines(v) {\r\n        if (this._maxLines !== v) {\r\n            this._maxLines = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLinesSuffix() {\r\n        return this._maxLinesSuffix;\r\n    }\r\n\r\n    set maxLinesSuffix(v) {\r\n        if (this._maxLinesSuffix !== v) {\r\n            this._maxLinesSuffix = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textColor() {\r\n        return this._textColor;\r\n    }\r\n\r\n    set textColor(v) {\r\n        if (this._textColor !== v) {\r\n            this._textColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingLeft(v) {\r\n        if (this._paddingLeft !== v) {\r\n            this._paddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        if (this._paddingRight !== v) {\r\n            this._paddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadow() {\r\n        return this._shadow;\r\n    }\r\n\r\n    set shadow(v) {\r\n        if (this._shadow !== v) {\r\n            this._shadow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowColor() {\r\n        return this._shadowColor;\r\n    }\r\n\r\n    set shadowColor(v) {\r\n        if (this._shadowColor !== v) {\r\n            this._shadowColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetX() {\r\n        return this._shadowOffsetX;\r\n    }\r\n\r\n    set shadowOffsetX(v) {\r\n        if (this._shadowOffsetX !== v) {\r\n            this._shadowOffsetX = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetY() {\r\n        return this._shadowOffsetY;\r\n    }\r\n\r\n    set shadowOffsetY(v) {\r\n        if (this._shadowOffsetY !== v) {\r\n            this._shadowOffsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowBlur() {\r\n        return this._shadowBlur;\r\n    }\r\n\r\n    set shadowBlur(v) {\r\n        if (this._shadowBlur !== v) {\r\n            this._shadowBlur = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlight() {\r\n        return this._highlight;\r\n    }\r\n\r\n    set highlight(v) {\r\n        if (this._highlight !== v) {\r\n            this._highlight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightHeight() {\r\n        return this._highlightHeight;\r\n    }\r\n\r\n    set highlightHeight(v) {\r\n        if (this._highlightHeight !== v) {\r\n            this._highlightHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightColor() {\r\n        return this._highlightColor;\r\n    }\r\n\r\n    set highlightColor(v) {\r\n        if (this._highlightColor !== v) {\r\n            this._highlightColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightOffset() {\r\n        return this._highlightOffset;\r\n    }\r\n\r\n    set highlightOffset(v) {\r\n        if (this._highlightOffset !== v) {\r\n            this._highlightOffset = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingLeft() {\r\n        return this._highlightPaddingLeft;\r\n    }\r\n\r\n    set highlightPaddingLeft(v) {\r\n        if (this._highlightPaddingLeft !== v) {\r\n            this._highlightPaddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingRight() {\r\n        return this._highlightPaddingRight;\r\n    }\r\n\r\n    set highlightPaddingRight(v) {\r\n        if (this._highlightPaddingRight !== v) {\r\n            this._highlightPaddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSx() {\r\n        return this._cutSx;\r\n    }\r\n\r\n    set cutSx(v) {\r\n        if (this._cutSx !== v) {\r\n            this._cutSx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEx() {\r\n        return this._cutEx;\r\n    }\r\n\r\n    set cutEx(v) {\r\n        if (this._cutEx !== v) {\r\n            this._cutEx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSy() {\r\n        return this._cutSy;\r\n    }\r\n\r\n    set cutSy(v) {\r\n        if (this._cutSy !== v) {\r\n            this._cutSy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEy() {\r\n        return this._cutEy;\r\n    }\r\n\r\n    set cutEy(v) {\r\n        if (this._cutEy !== v) {\r\n            this._cutEy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get advancedRenderer() {\r\n        return this._advancedRenderer;\r\n    }\r\n\r\n    set advancedRenderer(v) {\r\n        if (this._advancedRenderer !== v) {\r\n            this._advancedRenderer = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    set letterSpacing(v) {\r\n        if (this._letterSpacing !== v) {\r\n            this._letterSpacing = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get letterSpacing() {\r\n        return this._letterSpacing;\r\n    }\r\n\r\n    set textIndent(v) {\r\n        if (this._textIndent !== v) {\r\n            this._textIndent = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textIndent() {\r\n        return this._textIndent;\r\n    }\r\n\r\n    get precision() {\r\n        return super.precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        // We actually draw differently when the precision changes.\r\n        if (this.precision !== v) {\r\n            super.precision = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this.text;\r\n    }\r\n\r\n    _getLookupId() {\r\n        let parts = [];\r\n\r\n        if (this.w !== 0) parts.push(\"w \" + this.w);\r\n        if (this.h !== 0) parts.push(\"h \" + this.h);\r\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\r\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\r\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\r\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\r\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\r\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\r\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\r\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\r\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\r\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\r\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\r\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\r\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\r\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\r\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\r\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\r\n        parts.push(\"pc\" + this.precision);\r\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\r\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\r\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\r\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\r\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\r\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\r\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\r\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\r\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\r\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\r\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\r\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\r\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\r\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\r\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\r\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\r\n\r\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\r\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\r\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\r\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\r\n\r\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\r\n\r\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\r\n        return id;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const args = this.cloneArgs();\r\n\r\n        const gl = this.stage.gl;\r\n\r\n        return function (cb) {\r\n            const canvas = this.stage.platform.getDrawingCanvas();\r\n            const renderer = (args.advancedRenderer)\r\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\r\n              : new TextTextureRenderer(this.stage, canvas, args);\r\n            \r\n            const p = renderer.draw();\r\n\r\n            const texParams = {};\r\n\r\n            const sharpCfg = this.stage.getOption('fontSharp');\r\n            let sharpen = false;\r\n\r\n            // Prevent text blur when text texture is downscaled\r\n            if (Utils.isBoolean(sharpCfg)) {\r\n                sharpen = sharpCfg;\r\n            } else if (Utils.isObject(sharpCfg)) {\r\n                const precision = this.stage.getRenderPrecision();\r\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\r\n            }\r\n\r\n            if (gl && sharpen) {\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            if (p) {\r\n                p.then(() => {\r\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\r\n                    cb(null, Object.assign({\r\n                        renderInfo: renderer.renderInfo,\r\n                        throttle: false,\r\n                        texParams: texParams,\r\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n                }).catch((err) => {\r\n                    cb(err);\r\n                });\r\n            } else {\r\n                cb(null, Object.assign({\r\n                    renderInfo: renderer.renderInfo,\r\n                    throttle: false,\r\n                    texParams: texParams,\r\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    getNonDefaults() {\r\n        const nonDefaults = super.getNonDefaults();\r\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\r\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\r\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\r\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\r\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\r\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\r\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\r\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\r\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\r\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\r\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\r\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\r\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\r\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\r\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\r\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\r\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\r\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\r\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\r\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\r\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\r\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\r\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\r\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\r\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\r\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\r\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\r\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\r\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\r\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\r\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\r\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\r\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\r\n\r\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\r\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\r\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\r\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\r\n\r\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\r\n        return nonDefaults;\r\n    }\r\n\r\n    cloneArgs() {\r\n        let obj = {};\r\n        obj.text = this._text;\r\n        obj.w = this._w;\r\n        obj.h = this._h;\r\n        obj.fontStyle = this._fontStyle;\r\n        obj.fontSize = this._fontSize;\r\n        obj.fontWeight = this._fontWeight;\r\n        obj.fontBaselineRatio = this._fontBaselineRatio;\r\n        obj.fontFace = this._fontFace;\r\n        obj.wordWrap = this._wordWrap;\r\n        obj.wordWrapWidth = this._wordWrapWidth;\r\n        obj.wordBreak = this._wordBreak;\r\n        obj.textOverflow = this._textOverflow;\r\n        obj.lineHeight = this._lineHeight;\r\n        obj.textBaseline = this._textBaseline;\r\n        obj.textAlign = this._textAlign;\r\n        obj.verticalAlign = this._verticalAlign;\r\n        obj.offsetY = this._offsetY;\r\n        obj.maxLines = this._maxLines;\r\n        obj.maxLinesSuffix = this._maxLinesSuffix;\r\n        obj.precision = this._precision;\r\n        obj.textColor = this._textColor;\r\n        obj.paddingLeft = this._paddingLeft;\r\n        obj.paddingRight = this._paddingRight;\r\n        obj.shadow = this._shadow;\r\n        obj.shadowColor = this._shadowColor;\r\n        obj.shadowOffsetX = this._shadowOffsetX;\r\n        obj.shadowOffsetY = this._shadowOffsetY;\r\n        obj.shadowBlur = this._shadowBlur;\r\n        obj.highlight = this._highlight;\r\n        obj.highlightHeight = this._highlightHeight;\r\n        obj.highlightColor = this._highlightColor;\r\n        obj.highlightOffset = this._highlightOffset;\r\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\r\n        obj.highlightPaddingRight = this._highlightPaddingRight;\r\n        obj.letterSpacing = this._letterSpacing;\r\n        obj.textIndent = this._textIndent;\r\n        obj.cutSx = this._cutSx;\r\n        obj.cutEx = this._cutEx;\r\n        obj.cutSy = this._cutSy;\r\n        obj.cutEy = this._cutEy;\r\n        obj.advancedRenderer = this._advancedRenderer;\r\n        return obj;\r\n    }\r\n\r\n\r\n}\r\n\r\n// Because there are so many properties, we prefer to use the prototype for default values.\r\n// This causes a decrease in performance, but also a decrease in memory usage.\r\nlet proto = TextTexture.prototype;\r\nproto._text = \"\";\r\nproto._w = 0;\r\nproto._h = 0;\r\nproto._fontStyle = \"normal\";\r\nproto._fontSize = 40;\r\nproto._fontWeight = \"normal\";\r\nproto._fontFace = null;\r\nproto._wordWrap = true;\r\nproto._wordWrapWidth = 0;\r\nproto._wordBreak = false;\r\nproto._textOverflow = \"\";\r\nproto._lineHeight = null;\r\nproto._textBaseline = \"alphabetic\";\r\nproto._textAlign = \"left\";\r\nproto._verticalAlign = \"top\";\r\nproto._offsetY = null;\r\nproto._maxLines = 0;\r\nproto._maxLinesSuffix = \"..\";\r\nproto._textColor = 0xFFFFFFFF;\r\nproto._paddingLeft = 0;\r\nproto._paddingRight = 0;\r\nproto._shadow = false;\r\nproto._shadowColor = 0xFF000000;\r\nproto._shadowOffsetX = 0;\r\nproto._shadowOffsetY = 0;\r\nproto._shadowBlur = 5;\r\nproto._highlight = false;\r\nproto._highlightHeight = 0;\r\nproto._highlightColor = 0xFF000000;\r\nproto._highlightOffset = 0;\r\nproto._highlightPaddingLeft = 0;\r\nproto._highlightPaddingRight = 0;\r\nproto._letterSpacing = 0;\r\nproto._textIndent = 0;\r\nproto._cutSx = 0;\r\nproto._cutEx = 0;\r\nproto._cutSy = 0;\r\nproto._cutEy = 0;\r\nproto._advancedRenderer = false;\r\nproto._fontBaselineRatio = 0;\r\n\r\n\r\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\r\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class SourceTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._textureSource = undefined;\r\n    }\r\n\r\n    get textureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n    set textureSource(v) {\r\n        if (v !== this._textureSource) {\r\n            if (v.isResultTexture) {\r\n                // In case of a result texture, automatically inherit the precision.\r\n                this._precision = this.stage.getRenderPrecision();\r\n            }\r\n            this._textureSource = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\n\r\nexport default class Transition extends EventEmitter {\r\n\r\n    constructor(manager, settings, element, property) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._getter = element.constructor.getGetter(property);\r\n        this._setter = element.constructor.getSetter(property);\r\n\r\n        this._merger = settings.merger;\r\n\r\n        if (!this._merger) {\r\n            this._merger = element.constructor.getMerger(property);\r\n        }\r\n\r\n        this._startValue = this._getter(this._element);\r\n        this._targetValue = this._startValue;\r\n\r\n        this._p = 1;\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    start(targetValue) {\r\n        this._startValue = this._getter(this._element);\r\n\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            if (targetValue === this._startValue) {\r\n                this.reset(targetValue, 1);\r\n            } else {\r\n                this._targetValue = targetValue;\r\n                this._p = 0;\r\n                this._delayLeft = this._settings.delay;\r\n                this.emit('start');\r\n                this.add();\r\n            }\r\n        }\r\n    }\r\n\r\n    finish() {\r\n        if (this._p < 1) {\r\n            // Value setting and will must be invoked (async) upon next transition cycle.\r\n            this._p = 1;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        // Just stop where the transition is at.\r\n        this.emit('stop');\r\n        this.manager.removeActive(this);\r\n    }\r\n\r\n    pause() {\r\n        this.stop();\r\n    }\r\n\r\n    play() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    reset(targetValue, p) {\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = p;\r\n            this.add();\r\n        }\r\n    }\r\n\r\n    _updateDrawValue() {\r\n        this._setter(this._element, this.getDrawValue());\r\n    }\r\n\r\n    add() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    isAttached() {\r\n        return this._element.attached;\r\n    }\r\n\r\n    isRunning() {\r\n        return (this._p < 1.0);\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this.isAttached()) {\r\n            // Skip to end of transition so that it is removed.\r\n            this._p = 1;\r\n        }\r\n\r\n        if (this.p < 1) {\r\n            if (this.delayLeft > 0) {\r\n                this._delayLeft -= dt;\r\n\r\n                if (this.delayLeft < 0) {\r\n                    dt = -this.delayLeft;\r\n                    this._delayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this._settings.duration == 0) {\r\n                this._p = 1;\r\n            } else {\r\n                this._p += dt / this._settings.duration;\r\n            }\r\n            if (this._p >= 1) {\r\n                // Finished!;\r\n                this._p = 1;\r\n            }\r\n        }\r\n\r\n        this._updateDrawValue();\r\n\r\n        this.invokeListeners();\r\n    }\r\n\r\n    invokeListeners() {\r\n        this.emit('progress', this.p);\r\n        if (this.p === 1) {\r\n            this.emit('finish');\r\n        }\r\n    }\r\n\r\n    updateTargetValue(targetValue) {\r\n        let t = this._settings.timingFunctionImpl(this.p);\r\n        if (t === 1) {\r\n            this._targetValue = targetValue;\r\n        } else if (t === 0) {\r\n            this._startValue = this._targetValue;\r\n            this._targetValue = targetValue;\r\n        } else {\r\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\r\n            this._targetValue = targetValue;\r\n        }\r\n    }\r\n\r\n    getDrawValue() {\r\n        if (this.p >= 1) {\r\n            return this.targetValue;\r\n        } else {\r\n            let v = this._settings._timingFunctionImpl(this.p);\r\n            return this._merger(this.targetValue, this.startValue, v);\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    get startValue() {\r\n        return this._startValue;\r\n    }\r\n\r\n    get targetValue() {\r\n        return this._targetValue;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n    set settings(v) {\r\n        this._settings = v;\r\n    }\r\n\r\n}\r\n\r\nTransition.prototype.isTransition = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages a list of objects.\r\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\r\n */\r\nexport default class ObjectList {\r\n\r\n    constructor() {\r\n        this._items = [];\r\n        this._refs = {}\r\n    }\r\n\r\n    get() {\r\n        return this._items;\r\n    }\r\n\r\n    get first() {\r\n        return this._items[0];\r\n    }\r\n\r\n    get last() {\r\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\r\n    }\r\n\r\n    add(item) {\r\n        this.addAt(item, this._items.length);\r\n    }\r\n\r\n    addAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex === index) {\r\n                return item;\r\n            }\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            if (currentIndex != -1) {\r\n                this.setAt(item, index);\r\n            } else {\r\n                if (item.ref) {\r\n                    this._refs[item.ref] = item;\r\n                }\r\n                this._items.splice(index, 0, item);\r\n                this.onAdd(item, index);\r\n            }\r\n        } else {\r\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    replaceByRef(item) {\r\n        if (item.ref) {\r\n            const existingItem = this.getByRef(item.ref);\r\n            if (!existingItem) {\r\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\r\n            }\r\n            this.replace(item, existingItem);\r\n        } else {\r\n            throw new Error('replaceByRef: no ref specified in item');\r\n        }\r\n        this.addAt(item, this._items.length);\r\n\r\n    }\r\n\r\n    replace(item, prevItem) {\r\n        const index = this.getIndex(prevItem);\r\n        if (index === -1) {\r\n            throw new Error('replace: The previous item does not exist');\r\n        }\r\n        this.setAt(item, index);\r\n    }\r\n\r\n    setAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex != -1) {\r\n                if (currentIndex !== index) {\r\n                    const fromIndex = currentIndex;\r\n                    if (fromIndex !== index) {\r\n                        this._items.splice(fromIndex, 1);\r\n                        this._items.splice(index, 0, item);\r\n                        this.onMove(item, fromIndex, index);\r\n                    }\r\n                }\r\n            } else {\r\n                if( index < this._items.length){\r\n\r\n                    if (this._items[index].ref) {\r\n                        this._refs[this._items[index].ref] = undefined;\r\n                    }\r\n\r\n                    const prevItem = this._items[index];\r\n\r\n                    // Doesn't exist yet: overwrite current.\r\n                    this._items[index] = item;\r\n\r\n                    if (item.ref) {\r\n                        this._refs[item.ref] = item;\r\n                    }\r\n\r\n                    this.onSet(item, index, prevItem);\r\n                } else {\r\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    getAt(index) {\r\n        return this._items[index];\r\n    }\r\n\r\n    getIndex(item) {\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    remove(item) {\r\n        let index = this._items.indexOf(item);\r\n\r\n        if (index !== -1) {\r\n            this.removeAt(index);\r\n        }\r\n    };\r\n\r\n    removeAt(index) {\r\n        if (index >= 0 && index < this._items.length) {\r\n            const item = this._items[index];\r\n\r\n            if (item.ref) {\r\n                this._refs[item.ref] = undefined;\r\n            }\r\n\r\n            this._items.splice(index, 1);\r\n\r\n            this.onRemove(item, index);\r\n\r\n            return item;\r\n        } else {\r\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        let n = this._items.length;\r\n        if (n) {\r\n            let prev = this._items;\r\n            this._items = [];\r\n            this._refs = {}\r\n            this.onSync(prev, [], []);\r\n        }\r\n    };\r\n\r\n    a(o) {\r\n        if (Utils.isObjectLiteral(o)) {\r\n            let c = this.createItem(o);\r\n            c.patch(o);\r\n            this.add(c);\r\n            return c;\r\n        } else if (Array.isArray(o)) {\r\n            for (let i = 0, n = o.length; i < n; i++) {\r\n                this.a(o[i]);\r\n            }\r\n            return null;\r\n        } else if (this.isItem(o)) {\r\n            this.add(o);\r\n            return o;\r\n        }\r\n    };\r\n\r\n    get length() {\r\n        return this._items.length;\r\n    }\r\n\r\n    _getRefs() {\r\n        return this._refs;\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this._refs[ref];\r\n    }\r\n\r\n    clearRef(ref) {\r\n        delete this._refs[ref];\r\n    }\r\n\r\n    setRef(ref, child) {\r\n        this._refs[ref] = child;\r\n    }\r\n\r\n    patch(settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            this._setByObject(settings);\r\n        } else if (Array.isArray(settings)) {\r\n            this._setByArray(settings);\r\n        }\r\n    }\r\n\r\n    _setByObject(settings) {\r\n        // Overrule settings of known referenced items.\r\n        let refs = this._getRefs();\r\n        let crefs = Object.keys(settings);\r\n        for (let i = 0, n = crefs.length; i < n; i++) {\r\n            let cref = crefs[i];\r\n            let s = settings[cref];\r\n\r\n            let c = refs[cref];\r\n            if (!c) {\r\n                if (this.isItem(s)) {\r\n                    // Replace previous item;\r\n                    s.ref = cref;\r\n                    this.add(s);\r\n                } else {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                    c.ref = cref;\r\n                    c.patch(s);\r\n                    this.add(c);\r\n                }\r\n            } else {\r\n                if (this.isItem(s)) {\r\n                    if (c !== s) {\r\n                        // Replace previous item;\r\n                        let idx = this.getIndex(c);\r\n                        s.ref = cref;\r\n                        this.setAt(s, idx);\r\n                    }\r\n                } else {\r\n                    c.patch(s);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _equalsArray(array) {\r\n        let same = true;\r\n        if (array.length === this._items.length) {\r\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\r\n                same = same && (this._items[i] === array[i]);\r\n            }\r\n        } else {\r\n            same = false;\r\n        }\r\n        return same;\r\n    }\r\n\r\n    _setByArray(array) {\r\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\r\n        if (this._equalsArray(array)) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0, n = this._items.length; i < n; i++) {\r\n            this._items[i].marker = true;\r\n        }\r\n\r\n        let refs;\r\n        let newItems = [];\r\n        for (let i = 0, n = array.length; i < n; i++) {\r\n            let s = array[i];\r\n            if (this.isItem(s)) {\r\n                s.marker = false;\r\n                newItems.push(s);\r\n            } else {\r\n                let cref = s.ref;\r\n                let c;\r\n                if (cref) {\r\n                    if (!refs) refs = this._getRefs();\r\n                    c = refs[cref];\r\n                }\r\n\r\n                if (!c) {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                } else {\r\n                    c.marker = false;\r\n                }\r\n\r\n                if (Utils.isObjectLiteral(s)) {\r\n                    c.patch(s);\r\n                }\r\n\r\n                newItems.push(c);\r\n            }\r\n        }\r\n\r\n        this._setItems(newItems);\r\n    }\r\n\r\n    _setItems(newItems) {\r\n        let prevItems = this._items;\r\n        this._items = newItems;\r\n\r\n        // Remove the items.\r\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\r\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\r\n\r\n        if (removed.length || added.length) {\r\n            // Recalculate refs.\r\n            this._refs = {}\r\n            for (let i = 0, n = this._items.length; i < n; i++) {\r\n                let ref = this._items[i].ref;\r\n                if (ref) {\r\n                    this._refs[ref] = this._items[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSync(removed, added, newItems);\r\n    }\r\n\r\n    sort(f) {\r\n        const items = this._items.slice();\r\n        items.sort(f);\r\n        this._setByArray(items);\r\n    }\r\n\r\n    onAdd(item, index) {\r\n    }\r\n\r\n    onRemove(item, index) {\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n    }\r\n\r\n    createItem(object) {\r\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\r\n    }\r\n\r\n    isItem(object) {\r\n        return false;\r\n    }\r\n\r\n    forEach(f) {\r\n        this.get().forEach(f);\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"./ObjectList.mjs\";\r\n\r\nexport default class ElementChildList extends ObjectList {\r\n\r\n    constructor(element) {\r\n        super();\r\n        this._element = element;\r\n    }\r\n\r\n    _connectParent(item) {\r\n        const prevParent = item.parent;\r\n        if (prevParent && prevParent !== this._element) {\r\n            // Cleanup in previous child list, without\r\n            const prevChildList = item.parent.childList;\r\n            const index = prevChildList.getIndex(item);\r\n\r\n            if (item.ref) {\r\n                prevChildList._refs[item.ref] = undefined;\r\n            }\r\n            prevChildList._items.splice(index, 1);\r\n\r\n            // Also clean up element core.\r\n            prevParent.core.removeChildAt(index);\r\n\r\n        }\r\n\r\n        item._setParent(this._element);\r\n\r\n        // We are expecting the caller to sync it to the core.\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._connectParent(item);\r\n        this._element.core.addChildAt(index, item.core);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        item._setParent(null);\r\n        this._element.core.removeChildAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i]._setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            this._connectParent(added[i]);\r\n        }\r\n        let gc = i => i.core;\r\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n        prevItem._setParent(null);\r\n\r\n        this._connectParent(item);\r\n        this._element.core.setChildAt(index, item.core);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._element.core.moveChild(fromIndex, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        if (object.type) {\r\n            return new object.type(this._element.stage);\r\n        } else {\r\n            return this._element.stage.createElement();\r\n        }\r\n    }\r\n\r\n    isItem(object) {\r\n        return object.isElement;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Render tree node.\r\n */\r\n\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport ElementCore from \"./core/ElementCore.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Element {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.__id = Element.id++;\r\n\r\n        this.__start();\r\n\r\n        // EventEmitter constructor.\r\n        this._hasEventListeners = false;\r\n\r\n        this.__core = new ElementCore(this);\r\n\r\n        /**\r\n         * A reference that can be used while merging trees.\r\n         * @type {string}\r\n         */\r\n        this.__ref = null;\r\n\r\n        /**\r\n         * An element is attached if it is a descendant of the stage root.\r\n         * @type {boolean}\r\n         */\r\n        this.__attached = false;\r\n\r\n        /**\r\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\r\n         * @type {boolean}\r\n         */\r\n        this.__enabled = false;\r\n\r\n        /**\r\n         * An element is active when it is enabled and it is within bounds.\r\n         * @type {boolean}\r\n         */\r\n        this.__active = false;\r\n\r\n        /**\r\n         * @type {Element}\r\n         */\r\n        this.__parent = null;\r\n\r\n        /**\r\n         * The texture that is currently set.\r\n         * @type {Texture}\r\n         */\r\n        this.__texture = null;\r\n\r\n        /**\r\n         * The currently displayed texture. While this.texture is loading, this one may be different.\r\n         * @type {Texture}\r\n         */\r\n        this.__displayedTexture = null;\r\n\r\n        /**\r\n         * Tags that can be used to identify/search for a specific element.\r\n         * @type {String[]}\r\n         */\r\n        this.__tags = null;\r\n\r\n        /**\r\n         * The tree's tags mapping.\r\n         * This contains all elements for all known tags, at all times.\r\n         * @type {Map}\r\n         */\r\n        this.__treeTags = null;\r\n\r\n        /**\r\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\r\n         * @type {boolean}\r\n         */\r\n        this.__tagRoot = false;\r\n\r\n        /**\r\n         * (Lazy-initialised) list of children owned by this elements.\r\n         * @type {ElementChildList}\r\n         */\r\n        this.__childList = null;\r\n\r\n        this._w = 0;\r\n\r\n        this._h = 0;\r\n    }\r\n\r\n    __start() {\r\n    }\r\n\r\n    get id() {\r\n        return this.__id;\r\n    }\r\n\r\n    set ref(ref) {\r\n        if (this.__ref !== ref) {\r\n            const charcode = ref.charCodeAt(0);\r\n            if (!Utils.isUcChar(charcode)) {\r\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\r\n            }\r\n            if (this.__ref !== null) {\r\n                this.removeTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.clearRef(this.__ref);\r\n                }\r\n            }\r\n\r\n            this.__ref = ref;\r\n\r\n            if (this.__ref) {\r\n                this._addTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.setRef(this.__ref, this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get ref() {\r\n        return this.__ref;\r\n    }\r\n\r\n    get core() {\r\n        return this.__core;\r\n    }\r\n\r\n    setAsRoot() {\r\n        this.__core.setAsRoot();\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n    }\r\n\r\n    get isRoot() {\r\n        return this.__core.isRoot;\r\n    }\r\n\r\n    _setParent(parent) {\r\n        if (this.__parent === parent) return;\r\n\r\n        if (this.__parent) {\r\n            this._unsetTagsParent();\r\n        }\r\n\r\n        this.__parent = parent;\r\n\r\n        if (parent) {\r\n            this._setTagsParent();\r\n        }\r\n\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n        this._updateCollision();\r\n\r\n        if (this.isRoot && parent) {\r\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\r\n        }\r\n    };\r\n\r\n    getDepth() {\r\n        let depth = 0;\r\n\r\n        let p = this.__parent;\r\n        while(p) {\r\n            depth++;\r\n            p = p.__parent;\r\n        }\r\n\r\n        return depth;\r\n    };\r\n\r\n    getAncestor(l) {\r\n        let p = this;\r\n        while (l > 0 && p.__parent) {\r\n            p = p.__parent;\r\n            l--;\r\n        }\r\n        return p;\r\n    };\r\n\r\n    getAncestors() {\r\n        const a = [];\r\n        let p = this;\r\n        while (p) {\r\n            a.push(p);\r\n            p = p.__parent;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getAncestorAtDepth(depth) {\r\n        let levels = this.getDepth() - depth;\r\n        if (levels < 0) {\r\n            return null;\r\n        }\r\n        return this.getAncestor(levels);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while(p = p.parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    getSharedAncestor(c) {\r\n        let o1 = this;\r\n        let o2 = c;\r\n        let l1 = o1.getDepth();\r\n        let l2 = o2.getDepth();\r\n        if (l1 > l2) {\r\n            o1 = o1.getAncestor(l1 - l2);\r\n        } else if (l2 > l1) {\r\n            o2 = o2.getAncestor(l2 - l1);\r\n        }\r\n\r\n        do {\r\n            if (o1 === o2) {\r\n                return o1;\r\n            }\r\n\r\n            o1 = o1.__parent;\r\n            o2 = o2.__parent;\r\n        } while (o1 && o2);\r\n\r\n        return null;\r\n    };\r\n\r\n    get attached() {\r\n        return this.__attached;\r\n    }\r\n\r\n    get enabled() {\r\n        return this.__enabled;\r\n    }\r\n\r\n    get active() {\r\n        return this.__active;\r\n    }\r\n\r\n    _isAttached() {\r\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\r\n    };\r\n\r\n    _isEnabled() {\r\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\r\n    };\r\n\r\n    _isActive() {\r\n        return this._isEnabled() && this.withinBoundsMargin;\r\n    };\r\n\r\n    /**\r\n     * Updates the 'attached' flag for this branch.\r\n     */\r\n    _updateAttachedFlag() {\r\n        let newAttached = this._isAttached();\r\n        if (this.__attached !== newAttached) {\r\n            this.__attached = newAttached;\r\n\r\n            if (newAttached) {\r\n                this._onSetup();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateAttachedFlag();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newAttached) {\r\n                this._onAttach();\r\n            } else {\r\n                this._onDetach();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Updates the 'enabled' flag for this branch.\r\n     */\r\n    _updateEnabledFlag() {\r\n        let newEnabled = this._isEnabled();\r\n        if (this.__enabled !== newEnabled) {\r\n            if (newEnabled) {\r\n                this._onEnabled();\r\n                this._setEnabledFlag();\r\n            } else {\r\n                this._onDisabled();\r\n                this._unsetEnabledFlag();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateEnabledFlag();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setEnabledFlag() {\r\n        this.__enabled = true;\r\n\r\n        // Force re-check of texture because dimensions might have changed (cutting).\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n\r\n        if (this.__texture) {\r\n            this.__texture.addElement(this);\r\n        }\r\n\r\n        if (this.withinBoundsMargin) {\r\n            this._setActiveFlag();\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.addElement(this.__core);\r\n        }\r\n\r\n    }\r\n\r\n    _unsetEnabledFlag() {\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this.__texture.removeElement(this);\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.removeElement(this.__core);\r\n        }\r\n\r\n        if (this._texturizer) {\r\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\r\n        }\r\n\r\n        this.__enabled = false;\r\n    }\r\n\r\n    _setActiveFlag() {\r\n        this.__active = true;\r\n\r\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\r\n        if (this.__texture) {\r\n            this.__texture.incActiveCount();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this._enableTexture();\r\n        }\r\n        this._onActive();\r\n    }\r\n\r\n    _unsetActiveFlag() {\r\n        if (this.__texture) {\r\n            this.__texture.decActiveCount();\r\n        }\r\n\r\n        this.__active = false;\r\n        if (this.__texture) {\r\n            this._disableTexture();\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            this.texturizer.deactivate();\r\n        }\r\n\r\n        this._onInactive();\r\n    }\r\n\r\n    _onSetup() {\r\n    }\r\n\r\n    _onAttach() {\r\n    }\r\n\r\n    _onDetach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n    }\r\n\r\n    _onDisabled() {\r\n    }\r\n\r\n    _onActive() {\r\n    }\r\n\r\n    _onInactive() {\r\n    }\r\n\r\n    _onResize() {\r\n    }\r\n\r\n    _getRenderWidth() {\r\n        if (this._w) {\r\n            return this._w;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderWidth();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderWidth();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    _getRenderHeight() {\r\n        if (this._h) {\r\n            return this._h;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderHeight();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderHeight();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    get renderWidth() {\r\n        if (this.__enabled) {\r\n            // Render width is only maintained if this element is enabled.\r\n            return this.__core.getRenderWidth();\r\n        } else {\r\n            return this._getRenderWidth();\r\n        }\r\n    }\r\n\r\n    get renderHeight() {\r\n        if (this.__enabled) {\r\n            return this.__core.getRenderHeight();\r\n        } else {\r\n            return this._getRenderHeight();\r\n        }\r\n    }\r\n\r\n    get finalX() {\r\n        return this.__core.x;\r\n    }\r\n\r\n    get finalY() {\r\n        return this.__core.y;\r\n    }\r\n\r\n    get finalW() {\r\n        return this.__core.w;\r\n    }\r\n\r\n    get finalH() {\r\n        return this.__core.h;\r\n    }\r\n\r\n    textureIsLoaded() {\r\n        return this.__texture && this.__texture.isLoaded();\r\n    }\r\n\r\n    loadTexture() {\r\n        if (this.__texture) {\r\n            this.__texture.load();\r\n\r\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\r\n                // Loading the texture will have no effect on the dimensions of this element.\r\n                // Manually update them, so that calcs can be performed immediately in userland.\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableTextureError() {\r\n        // txError event should automatically be re-triggered when a element becomes active.\r\n        const loadError = this.__texture.loadError;\r\n        if (loadError) {\r\n            this.emit('txError', loadError, this.__texture._source);\r\n        }\r\n    }\r\n\r\n    _enableTexture() {\r\n        if (this.__texture.isLoaded()) {\r\n            this._setDisplayedTexture(this.__texture);\r\n        } else {\r\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\r\n            this._setDisplayedTexture(null);\r\n\r\n            this._enableTextureError();\r\n        }\r\n    }\r\n\r\n    _disableTexture() {\r\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\r\n        // mw, mh for checking within bounds.\r\n        this._setDisplayedTexture(null);\r\n    }\r\n\r\n    get texture() {\r\n        return this.__texture;\r\n    }\r\n\r\n    set texture(v) {\r\n        let texture;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                texture = new v.type(this.stage);\r\n            } else {\r\n                texture = this.texture;\r\n            }\r\n\r\n            if (texture) {\r\n                Base.patchObject(texture, v);\r\n            }\r\n        } else if (!v) {\r\n            texture = null;\r\n        } else {\r\n            if (v.isTexture) {\r\n                texture = v;\r\n            } else if (v.isTextureSource) {\r\n                texture = new SourceTexture(this.stage);\r\n                texture.textureSource = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a texture type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        const prevTexture = this.__texture;\r\n        if (texture !== prevTexture) {\r\n            this.__texture = texture;\r\n\r\n            if (this.__texture) {\r\n                if (this.__enabled) {\r\n                    this.__texture.addElement(this);\r\n\r\n                    if (this.withinBoundsMargin) {\r\n                        if (this.__texture.isLoaded()) {\r\n                            this._setDisplayedTexture(this.__texture);\r\n                        } else {\r\n                            this._enableTextureError();\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\r\n                this._setDisplayedTexture(null);\r\n            }\r\n\r\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\r\n                prevTexture.removeElement(this);\r\n            }\r\n\r\n            this._updateDimensions();\r\n        }\r\n    }\r\n\r\n    get displayedTexture() {\r\n        return this.__displayedTexture;\r\n    }\r\n\r\n    _setDisplayedTexture(v) {\r\n        let prevTexture = this.__displayedTexture;\r\n\r\n        if (prevTexture && (v !== prevTexture)) {\r\n            if (this.__texture !== prevTexture) {\r\n                // The old displayed texture is deprecated.\r\n                prevTexture.removeElement(this);\r\n            }\r\n        }\r\n\r\n        const prevSource = this.__core.displayedTextureSource;\r\n        const sourceChanged = (v ? v._source : null) !== prevSource;\r\n\r\n        this.__displayedTexture = v;\r\n        this._updateDimensions();\r\n\r\n        if (this.__displayedTexture) {\r\n            if (sourceChanged) {\r\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\r\n                this._updateTextureCoords();\r\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\r\n            }\r\n        } else {\r\n            this.__core.setDisplayedTextureSource(null);\r\n        }\r\n\r\n        if (sourceChanged) {\r\n            if (this.__displayedTexture) {\r\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\r\n                this.emit('txLoaded', this.__displayedTexture);\r\n            } else {\r\n                this.emit('txUnloaded', this.__displayedTexture);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextureSourceLoaded() {\r\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\r\n        if (this.active) {\r\n            // We may be dealing with a texture reloading, so we must force update.\r\n            this._setDisplayedTexture(this.__texture);\r\n        }\r\n    };\r\n\r\n    onTextureSourceLoadError(e) {\r\n        this.emit('txError', e, this.__texture._source);\r\n    };\r\n\r\n    forceRenderUpdate() {\r\n        this.__core.setHasRenderUpdates(3);\r\n    }\r\n\r\n    onDisplayedTextureClippingChanged() {\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n    };\r\n\r\n    onPrecisionChanged() {\r\n        this._updateDimensions();\r\n    };\r\n\r\n    onDimensionsChanged(w, h) {\r\n        if (this.texture instanceof TextTexture) {\r\n            this.texture.w = w;\r\n            this.texture.h = h;\r\n            this.w = w;\r\n            this.h = h;\r\n        }\r\n    }\r\n\r\n    _updateDimensions() {\r\n        let w = this._getRenderWidth();\r\n        let h = this._getRenderHeight();\r\n\r\n        let unknownSize = false;\r\n        if (!w || !h) {\r\n            if (!this.__displayedTexture && this.__texture) {\r\n                // We use a 'max width' replacement instead in the ElementCore calcs.\r\n                // This makes sure that it is able to determine withinBounds.\r\n                w = w || this.__texture.mw;\r\n                h = h || this.__texture.mh;\r\n\r\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\r\n                    unknownSize = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.__core.setDimensions(w, h, unknownSize)) {\r\n            this._onResize();\r\n        }\r\n    }\r\n\r\n    _updateTextureCoords() {\r\n        if (this.displayedTexture && this.displayedTexture._source) {\r\n            let displayedTexture = this.displayedTexture;\r\n            let displayedTextureSource = this.displayedTexture._source;\r\n\r\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\r\n            if (displayedTexture.clipping) {\r\n                // Apply texture clipping.\r\n                let w = displayedTextureSource.getRenderWidth();\r\n                let h = displayedTextureSource.getRenderHeight();\r\n                let iw, ih, rw, rh;\r\n                iw = 1 / w;\r\n                ih = 1 / h;\r\n\r\n                if (displayedTexture.pw) {\r\n                    rw = (displayedTexture.pw) * iw;\r\n                } else {\r\n                    rw = (w - displayedTexture.px) * iw;\r\n                }\r\n\r\n                if (displayedTexture.ph) {\r\n                    rh = displayedTexture.ph * ih;\r\n                } else {\r\n                    rh = (h - displayedTexture.py) * ih;\r\n                }\r\n\r\n                iw *= (displayedTexture.px);\r\n                ih *= (displayedTexture.py);\r\n\r\n                tx1 = iw;\r\n                ty1 = ih;\r\n                tx2 = tx2 * rw + iw;\r\n                ty2 = ty2 * rh + ih;\r\n\r\n                tx1 = Math.max(0, tx1);\r\n                ty1 = Math.max(0, ty1);\r\n                tx2 = Math.min(1, tx2);\r\n                ty2 = Math.min(1, ty2);\r\n            }\r\n\r\n            if (displayedTextureSource._flipTextureY) {\r\n                let tempty = ty2;\r\n                ty2 = ty1;\r\n                ty1 = tempty;\r\n            }\r\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\r\n        }\r\n    }\r\n\r\n    getCornerPoints() {\r\n        return this.__core.getCornerPoints();\r\n    }\r\n\r\n    _unsetTagsParent() {\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                // Remove from treeTags.\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    let parentTreeTags = p.__treeTags.get(tag);\r\n                    parentTreeTags.delete(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        let tags = null;\r\n        let n = 0;\r\n        if (this.__treeTags) {\r\n            if (!this.__tagRoot) {\r\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\r\n                n = tags.length;\r\n\r\n                if (n > 0) {\r\n                    for (let i = 0; i < n; i++) {\r\n                        let tagSet = this.__treeTags.get(tags[i]);\r\n\r\n                        // Remove from treeTags.\r\n                        let p = this;\r\n                        while ((p = p.__parent)) {\r\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\r\n\r\n                            tagSet.forEach(function (comp) {\r\n                                parentTreeTags.delete(comp);\r\n                            });\r\n\r\n                            if (p.__tagRoot) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setTagsParent() {\r\n        // Just copy over the 'local' tags.\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.__treeTags && this.__treeTags.size) {\r\n            if (!this.__tagRoot) {\r\n                this.__treeTags.forEach((tagSet, tag) => {\r\n                    let p = this;\r\n                    while (!p.__tagRoot && (p = p.__parent)) {\r\n                        if (p.__tagRoot) {\r\n                            // Do not copy all subs.\r\n                        }\r\n                        if (!p.__treeTags) {\r\n                            p.__treeTags = new Map();\r\n                        }\r\n\r\n                        let s = p.__treeTags.get(tag);\r\n                        if (!s) {\r\n                            s = new Set();\r\n                            p.__treeTags.set(tag, s);\r\n                        }\r\n\r\n                        tagSet.forEach(function (comp) {\r\n                            s.add(comp);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    _getByTag(tag) {\r\n        if (!this.__treeTags) {\r\n            return [];\r\n        }\r\n        let t = this.__treeTags.get(tag);\r\n        return t ? Utils.setToArray(t) : [];\r\n    };\r\n\r\n    getTags() {\r\n        return this.__tags ? this.__tags : [];\r\n    };\r\n\r\n    setTags(tags) {\r\n        tags = tags.reduce((acc, tag) => {\r\n            return acc.concat(tag.split(' '));\r\n        }, []);\r\n\r\n        if (this.__ref) {\r\n            tags.push(this.__ref);\r\n        }\r\n\r\n        let i, n = tags.length;\r\n        let removes = [];\r\n        let adds = [];\r\n        for (i = 0; i < n; i++) {\r\n            if (!this.hasTag(tags[i])) {\r\n                adds.push(tags[i]);\r\n            }\r\n        }\r\n\r\n        let currentTags = this.tags || [];\r\n        n = currentTags.length;\r\n        for (i = 0; i < n; i++) {\r\n            if (tags.indexOf(currentTags[i]) == -1) {\r\n                removes.push(currentTags[i]);\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < removes.length; i++) {\r\n            this.removeTag(removes[i]);\r\n        }\r\n\r\n        for (i = 0; i < adds.length; i++) {\r\n            this.addTag(adds[i]);\r\n        }\r\n    }\r\n\r\n    addTag(tag) {\r\n        if (tag.indexOf(' ') === -1) {\r\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                this._throwError(\"Tag may not start with an upper case character.\");\r\n            }\r\n\r\n            this._addTag(tag);\r\n        } else {\r\n            const tags = tag.split(' ');\r\n            for (let i = 0, m = tags.length; i < m; i++) {\r\n                const tag = tags[i];\r\n\r\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                    this._throwError(\"Tag may not start with an upper case character.\");\r\n                }\r\n\r\n                this._addTag(tag);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addTag(tag) {\r\n        if (!this.__tags) {\r\n            this.__tags = [];\r\n        }\r\n        if (this.__tags.indexOf(tag) === -1) {\r\n            this.__tags.push(tag);\r\n\r\n            // Add to treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    removeTag(tag) {\r\n        let i = this.__tags.indexOf(tag);\r\n        if (i !== -1) {\r\n            this.__tags.splice(i, 1);\r\n\r\n            // Remove from treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    let list = p.__treeTags.get(tag);\r\n                    if (list) {\r\n                        list.delete(this);\r\n                    }\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    hasTag(tag) {\r\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\r\n    }\r\n\r\n    /**\r\n     * Returns one of the elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element}\r\n     */\r\n    _tag(tag) {\r\n        if (tag.indexOf(\".\") !== -1) {\r\n            return this.mtag(tag)[0];\r\n        } else {\r\n            if (this.__treeTags) {\r\n                let t = this.__treeTags.get(tag);\r\n                if (t) {\r\n                    const item = t.values().next();\r\n                    return item ? item.value : undefined;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    get tag() {\r\n        return this._tag;\r\n    }\r\n\r\n    set tag(t) {\r\n        this.tags = t;\r\n    }\r\n\r\n    /**\r\n     * Returns all elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element[]}\r\n     */\r\n    mtag(tag) {\r\n        let idx = tag.indexOf(\".\");\r\n        if (idx >= 0) {\r\n            let parts = tag.split('.');\r\n            let res = this._getByTag(parts[0]);\r\n            let level = 1;\r\n            let c = parts.length;\r\n            while (res.length && level < c) {\r\n                let resn = [];\r\n                for (let j = 0, n = res.length; j < n; j++) {\r\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\r\n                }\r\n\r\n                res = resn;\r\n                level++;\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._getByTag(tag);\r\n        }\r\n    };\r\n\r\n    stag(tag, settings) {\r\n        let t = this.mtag(tag);\r\n        let n = t.length;\r\n        for (let i = 0; i < n; i++) {\r\n            Base.patchObject(t[i], settings);\r\n        }\r\n    }\r\n\r\n    get tagRoot() {\r\n        return this.__tagRoot;\r\n    }\r\n\r\n    set tagRoot(v) {\r\n        if (this.__tagRoot !== v) {\r\n            if (!v) {\r\n                this._setTagsParent();\r\n            } else {\r\n                this._unsetTagsParent();\r\n            }\r\n\r\n            this.__tagRoot = v;\r\n        }\r\n    }\r\n\r\n    sel(path) {\r\n        const results = this.select(path);\r\n        if (results.length) {\r\n            return results[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    select(path) {\r\n        if (path.indexOf(\",\") !== -1) {\r\n            let selectors = path.split(',');\r\n            let res = [];\r\n            for (let i = 0; i < selectors.length; i++) {\r\n                res = res.concat(this._select(selectors[i]));\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._select(path);\r\n        }\r\n    }\r\n\r\n    _select(path) {\r\n        if (path === \"\") return [this];\r\n\r\n\r\n        let pointIdx = path.indexOf(\".\");\r\n        let arrowIdx = path.indexOf(\">\");\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            // Quick case.\r\n            return this.mtag(path);\r\n        }\r\n\r\n        // Detect by first char.\r\n        let isRef;\r\n        if (arrowIdx === 0) {\r\n            isRef = true;\r\n            path = path.substr(1);\r\n        } else if (pointIdx === 0) {\r\n            isRef = false;\r\n            path = path.substr(1);\r\n        } else {\r\n            isRef = false;\r\n        }\r\n\r\n        return this._selectChilds(path, isRef);\r\n    }\r\n\r\n    _selectChilds(path, isRef) {\r\n        const pointIdx = path.indexOf(\".\");\r\n        const arrowIdx = path.indexOf(\">\");\r\n\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            if (isRef) {\r\n                const ref = this.getByRef(path);\r\n                return ref ? [ref] : [];\r\n            } else {\r\n                return this.mtag(path);\r\n            }\r\n        }\r\n\r\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\r\n            let next;\r\n            const str = path.substr(0, pointIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(pointIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, false));\r\n            }\r\n            return total;\r\n        } else {\r\n            let next;\r\n            const str = path.substr(0, arrowIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(arrowIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, true));\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this.childList.getByRef(ref);\r\n    }\r\n\r\n    getLocationString() {\r\n        let i;\r\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\r\n        let localTags = this.getTags();\r\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\r\n        if (this.ref) {\r\n            str += \":[\" + i + \"]\" + this.ref;\r\n        } else if (localTags.length) {\r\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\r\n        } else {\r\n            str += \":[\" + i + \"]#\" + this.id;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    toString() {\r\n        let obj = this.getSettings();\r\n        return Element.getPrettyString(obj, \"\");\r\n    };\r\n\r\n    static getPrettyString(obj, indent) {\r\n        let children = obj.children;\r\n        delete obj.children;\r\n\r\n\r\n        // Convert singular json settings object.\r\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\r\n        let str = JSON.stringify(obj, function (k, v) {\r\n            if (colorKeys.indexOf(k) !== -1) {\r\n                return \"COLOR[\" + v.toString(16) + \"]\";\r\n            }\r\n            return v;\r\n        });\r\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\r\n\r\n        if (children) {\r\n            let childStr = \"\";\r\n            if (Utils.isObjectLiteral(children)) {\r\n                let refs = Object.keys(children);\r\n                childStr = \"\";\r\n                for (let i = 0, n = refs.length; i < n; i++) {\r\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\r\n                    delete children[refs[i]].ref;\r\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\r\n                }\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\r\n            } else {\r\n                let n = children.length;\r\n                childStr = \"[\";\r\n                for (let i = 0; i < n; i++) {\r\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\r\n                }\r\n                childStr += indent + \"]}\";\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\r\n            }\r\n\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    getSettings() {\r\n        let settings = this.getNonDefaults();\r\n\r\n        let children = this._children.get();\r\n        if (children) {\r\n            let n = children.length;\r\n            if (n) {\r\n                const childArray = [];\r\n                let missing = false;\r\n                for (let i = 0; i < n; i++) {\r\n                    childArray.push(children[i].getSettings());\r\n                    missing = missing || !children[i].ref;\r\n                }\r\n\r\n                if (!missing) {\r\n                    settings.children = {}\r\n                    childArray.forEach(child => {\r\n                        settings.children[child.ref] = child;\r\n                    });\r\n                } else {\r\n                    settings.children = childArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        settings.id = this.id;\r\n\r\n        return settings;\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let settings = {};\r\n\r\n        if (this.constructor !== Element) {\r\n            settings.type = this.constructor.name;\r\n        }\r\n\r\n        if (this.__ref) {\r\n            settings.ref = this.__ref;\r\n        }\r\n\r\n        if (this.__tags && this.__tags.length) {\r\n            settings.tags = this.__tags;\r\n        }\r\n\r\n        if (this.x !== 0) settings.x = this.x;\r\n        if (this.y !== 0) settings.y = this.y;\r\n        if (this.w !== 0) settings.w = this.w;\r\n        if (this.h !== 0) settings.h = this.h;\r\n\r\n        if (this.scaleX === this.scaleY) {\r\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\r\n        } else {\r\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\r\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\r\n        }\r\n\r\n        if (this.pivotX === this.pivotY) {\r\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\r\n        } else {\r\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\r\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\r\n        }\r\n\r\n        if (this.mountX === this.mountY) {\r\n            if (this.mountX !== 0) settings.mount = this.mountX;\r\n        } else {\r\n            if (this.mountX !== 0) settings.mountX = this.mountX;\r\n            if (this.mountY !== 0) settings.mountY = this.mountY;\r\n        }\r\n\r\n        if (this.alpha !== 1) settings.alpha = this.alpha;\r\n\r\n        if (!this.visible) settings.visible = false;\r\n\r\n        if (this.rotation !== 0) settings.rotation = this.rotation;\r\n\r\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\r\n        } else {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\r\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\r\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\r\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\r\n        }\r\n\r\n        if (this.zIndex) settings.zIndex = this.zIndex;\r\n\r\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\r\n\r\n        if (this.clipping) settings.clipping = this.clipping;\r\n\r\n        if (!this.clipbox) settings.clipbox = this.clipbox;\r\n\r\n        if (this.__texture) {\r\n            let tnd = this.__texture.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.texture = tnd;\r\n            }\r\n        }\r\n\r\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\r\n            let tnd = this.shader.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.shader = tnd;\r\n            }\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            if (this.texturizer.enabled) {\r\n                settings.renderToTexture = this.texturizer.enabled;\r\n            }\r\n            if (this.texturizer.lazy) {\r\n                settings.renderToTextureLazy = this.texturizer.lazy;\r\n            }\r\n            if (this.texturizer.colorize) {\r\n                settings.colorizeResultTexture = this.texturizer.colorize;\r\n            }\r\n            if (this.texturizer.renderOffscreen) {\r\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\r\n            }\r\n        }\r\n\r\n        return settings;\r\n    };\r\n\r\n    static getGetter(propertyPath) {\r\n        let getter = Element.PROP_GETTERS.get(propertyPath);\r\n        if (!getter) {\r\n            getter = new Function('obj', 'return obj.' + propertyPath);\r\n            Element.PROP_GETTERS.set(propertyPath, getter);\r\n        }\r\n        return getter;\r\n    }\r\n\r\n    static getSetter(propertyPath) {\r\n        let setter = Element.PROP_SETTERS.get(propertyPath);\r\n        if (!setter) {\r\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\r\n            Element.PROP_SETTERS.set(propertyPath, setter);\r\n        }\r\n        return setter;\r\n    }\r\n\r\n    get withinBoundsMargin() {\r\n        return this.__core._withinBoundsMargin;\r\n    }\r\n\r\n    _enableWithinBoundsMargin() {\r\n        // Iff enabled, this toggles the active flag.\r\n        if (this.__enabled) {\r\n            this._setActiveFlag();\r\n        }\r\n    }\r\n\r\n    _disableWithinBoundsMargin() {\r\n        // Iff active, this toggles the active flag.\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n        if (!Array.isArray(v) && v !== null) {\r\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\r\n        }\r\n        this.__core.boundsMargin = v;\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this.__core.boundsMargin;\r\n    }\r\n\r\n    get x() {\r\n        return this.__core.offsetX;\r\n    }\r\n\r\n    set x(v) {\r\n        this.__core.offsetX = v;\r\n    }\r\n\r\n    get y() {\r\n        return this.__core.offsetY;\r\n    }\r\n\r\n    set y(v) {\r\n        this.__core.offsetY = v;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._w = 0;\r\n            this.__core.funcW = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._w !== v) {\r\n                this.__core.disableFuncW();\r\n                this._w = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._h = 0;\r\n            this.__core.funcH = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._h !== v) {\r\n                this.__core.disableFuncH();\r\n                this._h = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get collision() {\r\n        return this._collision;\r\n    }\r\n\r\n    set collision(v) {\r\n        this._collision = v;\r\n    }\r\n\r\n    _updateCollision() {\r\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\r\n            /**\r\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\r\n             * This narrows down the search for elements with active collision.\r\n            */\r\n            this.__parent.collision = 2;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this.__core.scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        this.__core.scaleX = v;\r\n    }\r\n\r\n    get scaleY() {\r\n        return this.__core.scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        this.__core.scaleY = v;\r\n    }\r\n\r\n    get scale() {\r\n        return this.__core.scale;\r\n    }\r\n\r\n    set scale(v) {\r\n        this.__core.scale = v;\r\n    }\r\n\r\n    get pivotX() {\r\n        return this.__core.pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this.__core.pivotX = v;\r\n    }\r\n\r\n    get pivotY() {\r\n        return this.__core.pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this.__core.pivotY = v;\r\n    }\r\n\r\n    get pivot() {\r\n        return this.__core.pivot;\r\n    }\r\n\r\n    set pivot(v) {\r\n        this.__core.pivot = v;\r\n    }\r\n\r\n    get mountX() {\r\n        return this.__core.mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        this.__core.mountX = v;\r\n    }\r\n\r\n    get mountY() {\r\n        return this.__core.mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        this.__core.mountY = v;\r\n    }\r\n\r\n    get mount() {\r\n        return this.__core.mount;\r\n    }\r\n\r\n    set mount(v) {\r\n        this.__core.mount = v;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.__core.rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        this.__core.rotation = v;\r\n    }\r\n\r\n    get alpha() {\r\n        return this.__core.alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        this.__core.alpha = v;\r\n    }\r\n\r\n    get visible() {\r\n        return this.__core.visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        this.__core.visible = v;\r\n    }\r\n    \r\n    get colorUl() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set colorUl(v) {\r\n        this.__core.colorUl = v;\r\n    }\r\n\r\n    get colorUr() {\r\n        return this.__core.colorUr;\r\n    }\r\n\r\n    set colorUr(v) {\r\n        this.__core.colorUr = v;\r\n    }\r\n\r\n    get colorBl() {\r\n        return this.__core.colorBl;\r\n    }\r\n\r\n    set colorBl(v) {\r\n        this.__core.colorBl = v;\r\n    }\r\n\r\n    get colorBr() {\r\n        return this.__core.colorBr;\r\n    }\r\n\r\n    set colorBr(v) {\r\n        this.__core.colorBr = v;\r\n    }\r\n\r\n    get color() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorTop() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorTop(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n        }\r\n    }\r\n\r\n    get colorBottom() {\r\n        return this.colorBl;\r\n    }\r\n\r\n    set colorBottom(v) {\r\n        if (this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorLeft() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorLeft(v) {\r\n        if (this.colorUl !== v || this.colorBl !== v) {\r\n            this.colorUl = v;\r\n            this.colorBl = v;\r\n        }\r\n    }\r\n\r\n    get colorRight() {\r\n        return this.colorUr;\r\n    }\r\n\r\n    set colorRight(v) {\r\n        if (this.colorUr !== v || this.colorBr !== v) {\r\n            this.colorUr = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get zIndex() {return this.__core.zIndex}\r\n    set zIndex(v) {\r\n        this.__core.zIndex = v;\r\n    }\r\n\r\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\r\n    set forceZIndexContext(v) {\r\n        this.__core.forceZIndexContext = v;\r\n    }\r\n\r\n    get clipping() {return this.__core.clipping}\r\n    set clipping(v) {\r\n        this.__core.clipping = v;\r\n    }\r\n\r\n    get clipbox() {return this.__core.clipbox}\r\n    set clipbox(v) {\r\n        this.__core.clipbox = v;\r\n    }\r\n\r\n    get tags() {\r\n        return this.getTags();\r\n    }\r\n\r\n    set tags(v) {\r\n        if (!Array.isArray(v)) v = [v];\r\n        this.setTags(v);\r\n    }\r\n\r\n    set t(v) {\r\n        this.tags = v;\r\n    }\r\n\r\n    get _children() {\r\n        if (!this.__childList) {\r\n            this.__childList = new ElementChildList(this, false);\r\n        }\r\n        return this.__childList;\r\n    }\r\n\r\n    get childList() {\r\n        if (!this._allowChildrenAccess()) {\r\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\r\n        }\r\n        return this._children;\r\n    }\r\n\r\n    hasChildren() {\r\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return true;\r\n    }\r\n\r\n    get children() {\r\n        return this.childList.get();\r\n    }\r\n\r\n    set children(children) {\r\n        this.childList.patch(children);\r\n    }\r\n\r\n    add(o) {\r\n        return this.childList.a(o);\r\n    }\r\n\r\n    get p() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get parent() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get src() {\r\n        if (this.texture && this.texture instanceof ImageTexture) {\r\n            return this.texture._src;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    set src(v) {\r\n        const texture = new ImageTexture(this.stage);\r\n        texture.src = v;\r\n        this.texture = texture;\r\n    }\r\n\r\n    set mw(v) {\r\n        if (this.texture) {\r\n            this.texture.mw = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mw after setting a texture.');\r\n        }\r\n    }\r\n\r\n    set mh(v) {\r\n        if (this.texture) {\r\n            this.texture.mh = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mh after setting a texture.');\r\n        }\r\n    }\r\n\r\n    get rect() {\r\n        return (this.texture === this.stage.rectangleTexture);\r\n    }\r\n\r\n    set rect(v) {\r\n        if (v) {\r\n            this.texture = this.stage.rectangleTexture;\r\n        } else {\r\n            this.texture = null;\r\n        }\r\n    }\r\n\r\n    enableTextTexture() {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.texture = new TextTexture(this.stage);\r\n\r\n            if (!this.texture.w && !this.texture.h) {\r\n                // Inherit dimensions from element.\r\n                // This allows userland to set dimensions of the Element and then later specify the text.\r\n                this.texture.w = this.w;\r\n                this.texture.h = this.h;\r\n            }\r\n        }\r\n        return this.texture;\r\n    }\r\n\r\n    get text() {\r\n        if (this.texture && (this.texture instanceof TextTexture)) {\r\n            return this.texture;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set text(v) {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.enableTextTexture();\r\n        }\r\n        if (Utils.isString(v)) {\r\n            this.texture.text = v;\r\n        } else {\r\n            this.texture.patch(v);\r\n        }\r\n    }\r\n\r\n    set onUpdate(f) {\r\n        this.__core.onUpdate = f;\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this.__core.onAfterCalcs = f;\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this.__core.onAfterUpdate = f;\r\n    }\r\n\r\n    forceUpdate() {\r\n        // Make sure that the update loop is run.\r\n        this.__core._setHasUpdates();\r\n    }\r\n\r\n    get shader() {\r\n        return this.__core.shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        if (Utils.isObjectLiteral(v) && !v.type) {\r\n            // Setting properties on an existing shader.\r\n            if (this.shader) {\r\n                this.shader.patch(v);\r\n            }\r\n        } else {\r\n            const shader = Shader.create(this.stage, v);\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.removeElement(this.__core);\r\n            }\r\n\r\n            this.__core.shader = shader;\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.addElement(this.__core);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hasTexturizer() {\r\n        return !!this.__core._texturizer;\r\n    }\r\n\r\n    get renderToTexture() {\r\n        return this.rtt\r\n    }\r\n\r\n    set renderToTexture(v) {\r\n        this.rtt = v\r\n    }\r\n\r\n    get rtt() {\r\n        return this._hasTexturizer() && this.texturizer.enabled;\r\n    }\r\n\r\n    set rtt(v) {\r\n        this.texturizer.enabled = v;\r\n    }\r\n\r\n    get rttLazy() {\r\n        return this._hasTexturizer() && this.texturizer.lazy;\r\n    }\r\n\r\n    set rttLazy(v) {\r\n        this.texturizer.lazy = v;\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this.texturizer.renderOffscreen = v;\r\n    }\r\n\r\n    get colorizeResultTexture() {\r\n        return this._hasTexturizer() && this.texturizer.colorize;\r\n    }\r\n\r\n    set colorizeResultTexture(v) {\r\n        this.texturizer.colorize = v;\r\n    }\r\n\r\n    getTexture() {\r\n        return this.texturizer._getTextureSource();\r\n    }\r\n\r\n    get texturizer() {\r\n        return this.__core.texturizer;\r\n    }\r\n\r\n    patch(settings) {\r\n        let paths = Object.keys(settings);\r\n\r\n        for (let i = 0, n = paths.length; i < n; i++) {\r\n            let path = paths[i];\r\n            const v = settings[path];\r\n\r\n            const firstCharCode = path.charCodeAt(0);\r\n            if (Utils.isUcChar(firstCharCode)) {\r\n                // Ref.\r\n                const child = this.getByRef(path);\r\n                if (!child) {\r\n                    if (v !== undefined) {\r\n                        // Add to list immediately.\r\n                        let c;\r\n                        if (Utils.isObjectLiteral(v)) {\r\n                            // Catch this case to capture createMode flag.\r\n                            c = this.childList.createItem(v);\r\n                            c.patch(v);\r\n                        } else if (Utils.isObject(v)) {\r\n                            c = v;\r\n                        }\r\n                        if (c.isElement) {\r\n                            c.ref = path;\r\n                        }\r\n\r\n                        this.childList.a(c);\r\n                    }\r\n                } else {\r\n                    if (v === undefined) {\r\n                        if (child.parent) {\r\n                            child.parent.childList.remove(child);\r\n                        }\r\n                    } else if (Utils.isObjectLiteral(v)) {\r\n                        child.patch(v);\r\n                    } else if (v.isElement) {\r\n                        // Replace element by new element.\r\n                        v.ref = path;\r\n                        this.childList.replace(v, child);\r\n                    } else {\r\n                        this._throwError(\"Unexpected value for path: \" + path);\r\n                    }\r\n                }\r\n            } else {\r\n                // Property.\r\n                Base.patchObjectProperty(this, path, v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _throwError(message) {\r\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\r\n    }\r\n\r\n    animation(settings) {\r\n        return this.stage.animations.createAnimation(this, settings);\r\n    }\r\n\r\n    transition(property, settings = null) {\r\n        if (settings === null) {\r\n            return this._getTransition(property);\r\n        } else {\r\n            this._setTransition(property, settings);\r\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set transitions(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            this.transition(property, object[property]);\r\n        });\r\n    }\r\n\r\n    set smooth(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            let value = object[property];\r\n            if (Array.isArray(value)) {\r\n                this.setSmooth(property, value[0], value[1]);\r\n            } else {\r\n                this.setSmooth(property, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    fastForward(property) {\r\n        if (this._transitions) {\r\n            let t = this._transitions[property];\r\n            if (t && t.isTransition) {\r\n                t.finish();\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTransition(property) {\r\n        if (!this._transitions) {\r\n            this._transitions = {};\r\n        }\r\n        let t = this._transitions[property];\r\n        if (!t) {\r\n            // Create default transition.\r\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\r\n        } else if (t.isTransitionSettings) {\r\n            // Upgrade to 'real' transition.\r\n            t = new Transition(\r\n                this.stage.transitions,\r\n                t,\r\n                this,\r\n                property\r\n            );\r\n        }\r\n        this._transitions[property] = t;\r\n        return t;\r\n    }\r\n\r\n    _setTransition(property, settings) {\r\n        if (!settings) {\r\n            this._removeTransition(property);\r\n        } else {\r\n            if (Utils.isObjectLiteral(settings)) {\r\n                // Convert plain object to proper settings object.\r\n                settings = this.stage.transitions.createSettings(settings);\r\n            }\r\n\r\n            if (!this._transitions) {\r\n                this._transitions = {};\r\n            }\r\n\r\n            let current = this._transitions[property];\r\n            if (current && current.isTransition) {\r\n                // Runtime settings change.\r\n                current.settings = settings;\r\n                return current;\r\n            } else {\r\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\r\n                this._transitions[property] = settings;\r\n            }\r\n        }\r\n    }\r\n\r\n    _removeTransition(property) {\r\n        if (this._transitions) {\r\n            delete this._transitions[property];\r\n        }\r\n    }\r\n\r\n    getSmooth(property, v) {\r\n        let t = this._getTransition(property);\r\n        if (t && t.isAttached()) {\r\n            return t.targetValue;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setSmooth(property, v, settings) {\r\n        if (settings) {\r\n            this._setTransition(property, settings);\r\n        }\r\n        let t = this._getTransition(property);\r\n        t.start(v);\r\n        return t;\r\n    }\r\n\r\n    get flex() {\r\n        return this.__core.flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.__core.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this.__core.flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.__core.flexItem = v;\r\n    }\r\n\r\n    get ignoreRTL() {\r\n        return this.__core.ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this.__core.ignoreRTL = v;\r\n    }\r\n\r\n    static isColorProperty(property) {\r\n        return property.toLowerCase().indexOf(\"color\") >= 0;\r\n    }\r\n\r\n    static getMerger(property) {\r\n        if (Element.isColorProperty(property)) {\r\n            return StageUtils.mergeColors;\r\n        } else {\r\n            return StageUtils.mergeNumbers;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        const ref = [`${this.constructor.name}`];\r\n        const tree = {};\r\n        tree[ref] = {};\r\n\r\n        if (this.hasChildren()) {\r\n            Element.collectChildren(tree[ref], this.__childList);\r\n        } else {\r\n            tree[ref] = {...Element.getProperties(this)};\r\n        }\r\n        return tree;\r\n    }\r\n\r\n    static collectChildren(tree, children) {\r\n        const childList = children;\r\n        for (let i = 0, j = childList.length; i < j; i++) {\r\n            const element = childList.getAt(i);\r\n            const ref = `${element.__ref || `Element-${element.id}`}`;\r\n            const properties = this.getProperties(element);\r\n\r\n            tree[ref] = {...properties};\r\n\r\n            if (element.hasChildren()) {\r\n                tree[ref].children = {};\r\n                this.collectChildren(\r\n                    tree[ref].children, element.__childList\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    static getProperties(element) {\r\n        const props = {};\r\n        const list = [\r\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\r\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\r\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\r\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\r\n        ];\r\n        let n = list.length;\r\n\r\n        while (n--) {\r\n            let key = list[n];\r\n            const getBoolean = /^!{2}/;\r\n            const isFunction = /\\(\\)$/;\r\n\r\n            if (getBoolean.test(key)) {\r\n                key = key.substring(2, key.length);\r\n                props[key] = !!element[key];\r\n            } else if (isFunction.test(key)) {\r\n                key = key.substring(0, key.length - 2);\r\n                if (typeof element[key] === \"function\") {\r\n                    props[key] = element[key]();\r\n                }\r\n            } else {\r\n                props[key] = element[key];\r\n            }\r\n        }\r\n        return {...props, ...element.getNonDefaults()};\r\n    }\r\n}\r\n\r\n// This gives a slight performance benefit compared to extending EventEmitter.\r\nEventEmitter.addAsMixin(Element);\r\n\r\nElement.prototype.isElement = 1;\r\n\r\nElement.id = 1;\r\n\r\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_GETTERS = new Map();\r\n\r\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_SETTERS = new Map();\r\n\r\nimport Texture from \"./Texture.mjs\";\r\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\r\nimport TextTexture from \"../textures/TextTexture.mjs\";\r\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\r\nimport Transition from \"../animation/Transition.mjs\";\r\nimport ElementChildList from \"./ElementChildList.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StateMachine {\r\n\r\n    constructor() {\r\n        StateMachine.setupStateMachine(this);\r\n    }\r\n\r\n    static setupStateMachine(target) {\r\n        const targetConstructor = target.constructor;\r\n        const router = StateMachine.create(targetConstructor);\r\n        Object.setPrototypeOf(target, router.prototype);\r\n        target.constructor = targetConstructor;\r\n        target._initStateMachine();\r\n    }\r\n\r\n    /**\r\n     * Creates a state machine implementation.\r\n     * It extends the original type and should be used when creating new instances.\r\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\r\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\r\n     * @param {Class} type\r\n     * @returns {StateMachine}\r\n     */\r\n    static create(type) {\r\n        if (!type.hasOwnProperty('_sm')) {\r\n            // Only need to run once.\r\n            const stateMachineType = new StateMachineType(type);\r\n            type._sm = stateMachineType;\r\n        }\r\n\r\n        return type._sm.router;\r\n    }\r\n\r\n    /**\r\n     * Calls the specified method if it exists.\r\n     * @param {string} event\r\n     * @param {*...} args\r\n     */\r\n    fire(event, ...args) {\r\n        if (this._hasMethod(event)) {\r\n            return this[event](...args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current state path (for example \"Initialized.Loading\").\r\n     * @returns {string}\r\n     * @protected\r\n     */\r\n    _getState() {\r\n        return this._state.__path;\r\n    }\r\n\r\n    /**\r\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\r\n     * @param {string} statePath\r\n     * @param {string} currentStatePath\r\n     * @returns {Boolean}\r\n     * @protected\r\n     */\r\n    _inState(statePath, currentStatePath = this._state.__path) {\r\n        const state = this._sm.getStateByPath(statePath);\r\n        const currentState = this._sm.getStateByPath(currentStatePath);\r\n        const level = state.__level;\r\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\r\n        return (stateAtLevel === state);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is defined for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMember(name) {\r\n        return !!this.constructor.prototype[name];\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is a method for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMethod(name) {\r\n        const member = this.constructor.prototype[name];\r\n        return !!member && (typeof member === \"function\")\r\n    }\r\n\r\n    /**\r\n     * Switches to the specified state.\r\n     * @param {string} statePath\r\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\r\n     * @param {*[]} [args]\r\n     *   Args that are supplied in $enter and $exit events.\r\n     * @protected\r\n     */\r\n    _setState(statePath, args) {\r\n        const setStateId = ++this._setStateCounter;\r\n        this._setStateId = setStateId;\r\n\r\n        if (this._state.__path !== statePath) {\r\n            // Performance optimization.\r\n            let newState = this._sm._stateMap[statePath];\r\n            if (!newState) {\r\n                // Check for super state.\r\n                newState = this._sm.getStateByPath(statePath);\r\n            }\r\n\r\n            const prevState = this._state;\r\n\r\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\r\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\r\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\r\n                const sharedState = StateMachine._getSharedState(this._state, newState);\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path,\r\n                    sharedState: sharedState.__path\r\n                };\r\n                const sharedLevel = sharedState.__level;\r\n\r\n                if (hasDifferentExitMethod) {\r\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\r\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\r\n                        this.__setState(exitStates[i]);\r\n                        this._callExit(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasDifferentEnterMethod) {\r\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\r\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\r\n                        this.__setState(enterStates[i]);\r\n                        this._callEnter(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            this.__setState(newState);\r\n\r\n            if (this._changedState) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n\r\n                if (args) {\r\n                    this._changedState(context, ...args);\r\n                } else {\r\n                    this._changedState(context);\r\n                }\r\n            }\r\n\r\n            if (this._onStateChange) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n                this._onStateChange(context);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    _callEnter(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$enter) {\r\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\r\n                state.prototype.$enter.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _callExit(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$exit) {\r\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\r\n                state.prototype.$exit.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    __setState(state) {\r\n        this._state = state;\r\n        this._stateIndex = state.__index;\r\n        this.constructor = state;\r\n    }\r\n\r\n    _initStateMachine() {\r\n        this._state = null;\r\n        this._stateIndex = 0;\r\n        this._setStateCounter = 0;\r\n        this._sm = this._routedType._sm;\r\n        this.__setState(this._sm.getStateByPath(\"\"));\r\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\r\n        this._callEnter(this._state, [], context);\r\n        this._onStateChange = undefined;\r\n    }\r\n\r\n    /**\r\n     * Between multiple member names, select the one specified in the deepest state.\r\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\r\n     * @param {string[]} memberNames\r\n     * @returns {string|undefined}\r\n     * @protected\r\n     */\r\n    _getMostSpecificHandledMember(memberNames) {\r\n        let cur = this._state;\r\n        do {\r\n            for (let i = 0, n = memberNames.length; i < n; i++) {\r\n                const memberName = memberNames[i];\r\n                if (!cur.__parent) {\r\n                    if (cur.prototype[memberName]) {\r\n                        return memberName;\r\n                    }\r\n                } else {\r\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\r\n                    if (this[alias]) {\r\n                        return memberName;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.__parent;\r\n        } while (cur);\r\n    }\r\n\r\n    static _getStatesUntilLevel(state, level) {\r\n        const states = [];\r\n        while (state.__level > level) {\r\n            states.push(state);\r\n            state = state.__parent;\r\n        }\r\n        return states;\r\n    }\r\n\r\n    static _getSharedState(state1, state2) {\r\n        const state1Array = StateMachine._getAncestorStates(state1);\r\n        const state2Array = StateMachine._getAncestorStates(state2);\r\n        const n = Math.min(state1Array.length, state2Array.length);\r\n        for (let i = 0; i < n; i++) {\r\n            if (state1Array[i] !== state2Array[i]) {\r\n                return state1Array[i - 1];\r\n            }\r\n        }\r\n        return state1Array[n - 1];\r\n    }\r\n\r\n    static _getAncestorStates(state) {\r\n        const result = [];\r\n        do {\r\n            result.push(state);\r\n        } while(state = state.__parent);\r\n        return result.reverse();\r\n    }\r\n\r\n    static _getStateAtLevel(state, level) {\r\n        if (level > state.__level) {\r\n            return undefined;\r\n        }\r\n\r\n        while(level < state.__level) {\r\n            state = state.__parent;\r\n        }\r\n        return state;\r\n    }\r\n}\r\n\r\nclass StateMachineType {\r\n\r\n    constructor(type) {\r\n        this._type = type;\r\n        this._router = null;\r\n\r\n        this.init();\r\n    }\r\n\r\n    get router() {\r\n        return this._router;\r\n    }\r\n\r\n    init() {\r\n        this._router = this._createRouter();\r\n\r\n        this._stateMap = this._getStateMap();\r\n\r\n        this._addStateMemberDelegatorsToRouter();\r\n\r\n    }\r\n\r\n    _createRouter() {\r\n        const type = this._type;\r\n\r\n        const router = class StateMachineRouter extends type {\r\n            constructor() {\r\n                super(...arguments);\r\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\r\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\r\n                }\r\n            }\r\n        };\r\n        router._isRouter = true;\r\n        router.prototype._routedType = type;\r\n        router.original = type;\r\n\r\n        this._mixinStateMachineMethods(router);\r\n\r\n        return router;\r\n    }\r\n\r\n    _mixinStateMachineMethods(router) {\r\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\r\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\r\n        for (let i = 0, n = names.length; i < n; i++) {\r\n            const name = names[i];\r\n            if (name !== \"constructor\") {\r\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\r\n                Object.defineProperty(router.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addStateMemberDelegatorsToRouter() {\r\n        const members = this._getAllMemberNames();\r\n\r\n        members.forEach(member => {\r\n            this._addMemberRouter(member);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @note We are generating code because it yields much better performance.\r\n     */\r\n    _addMemberRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member);\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        let type = undefined;\r\n        descriptors.forEach(descriptor => {\r\n            if (descriptor) {\r\n                const descType = this._getDescriptorType(descriptor);\r\n                if (type && (type !== descType)) {\r\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\r\n                    return;\r\n                }\r\n                type = descType;\r\n            }\r\n        });\r\n\r\n        switch(type) {\r\n            case \"method\":\r\n                this._addMethodRouter(member, descriptors, aliases);\r\n                break;\r\n            case \"getter\":\r\n                this._addGetterSetterRouters(member);\r\n                break;\r\n            case \"property\":\r\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\r\n                break;\r\n        }\r\n    }\r\n\r\n    _getDescriptor(state, member, isValid = () => true) {\r\n        let type = state;\r\n        let curState = state;\r\n\r\n        do {\r\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\r\n            if (descriptor) {\r\n                if (isValid(descriptor)) {\r\n                    descriptor._source = curState;\r\n                    return descriptor;\r\n                }\r\n            }\r\n            type = Object.getPrototypeOf(type);\r\n            if (type && type.hasOwnProperty('__state')) {\r\n                curState = type;\r\n            }\r\n        } while(type && type.prototype);\r\n        return undefined;\r\n    }\r\n\r\n    _getDescriptorType(descriptor) {\r\n        if (descriptor.get || descriptor.set) {\r\n            return 'getter';\r\n        } else {\r\n            if (typeof descriptor.value === \"function\") {\r\n                return 'method';\r\n            } else {\r\n                return 'property';\r\n            }\r\n        }\r\n    }\r\n\r\n    static _supportsSpread() {\r\n        if (this.__supportsSpread === undefined) {\r\n            this.__supportsSpread = false;\r\n            try {\r\n                const func = new Function(\"return [].concat(...arguments);\");\r\n                func();\r\n                this.__supportsSpread = true;\r\n            } catch(e) {}\r\n        }\r\n        return this.__supportsSpread;\r\n    }\r\n\r\n    _addMethodRouter(member, descriptors, aliases) {\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        const supportsSpread = StateMachineType._supportsSpread();\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    if (supportsSpread) {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\r\n                    } else {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\r\n                    }\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            if (supportsSpread) {\r\n                code.push(`return this[\"${cur}\"](...arguments);`);\r\n            } else {\r\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\r\n            }\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n\r\n        const descriptor = {value: router};\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _addGetterSetterRouters(member) {\r\n        const getter = this._getGetterRouter(member);\r\n        const setter = this._getSetterRouter(member);\r\n        const descriptor = {\r\n            get: getter,\r\n            set: setter\r\n        };\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _getGetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`return this[\"${cur}\"];`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n        return router;\r\n    }\r\n\r\n    _getSetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`this[\"${cur}\"] = arg;`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([\"arg\"], functionBody);\r\n        return router;\r\n    }\r\n\r\n    static getStateMemberAlias(path, member) {\r\n        return \"$\" + (path ? path + \".\" : \"\") + member;\r\n    }\r\n\r\n    _getAllMemberNames() {\r\n        const stateMap = this._stateMap;\r\n        const map = Object.keys(stateMap);\r\n        let members = new Set();\r\n        map.forEach(statePath => {\r\n            if (statePath === \"\") {\r\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\r\n                return;\r\n            }\r\n            const state = stateMap[statePath];\r\n            const names = this._getStateMemberNames(state);\r\n            names.forEach(name => {\r\n                members.add(name);\r\n            })\r\n        });\r\n        return [...members];\r\n    }\r\n\r\n    _getStateMemberNames(state) {\r\n        let type = state;\r\n        let members = new Set();\r\n        const isRoot = this._type === state;\r\n        do {\r\n            const names = this._getStateMemberNamesForType(type);\r\n            names.forEach(name => {\r\n                members.add(name)\r\n            });\r\n\r\n            type = Object.getPrototypeOf(type);\r\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\r\n\r\n        return members;\r\n    }\r\n\r\n    _getStateMemberNamesForType(type) {\r\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\r\n        return memberNames.filter(memberName => {\r\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\r\n        });\r\n    }\r\n\r\n    static _isStateLocalMember(memberName) {\r\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\r\n    }\r\n\r\n    getStateByPath(statePath) {\r\n        if (this._stateMap[statePath]) {\r\n            return this._stateMap[statePath];\r\n        }\r\n\r\n        // Search for closest match.\r\n        const parts = statePath.split(\".\");\r\n        while(parts.pop()) {\r\n            const statePath = parts.join(\".\");\r\n            if (this._stateMap[statePath]) {\r\n                return this._stateMap[statePath];\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStateMap() {\r\n        if (!this._stateMap) {\r\n            this._stateMap = this._createStateMap();\r\n        }\r\n        return this._stateMap;\r\n    }\r\n\r\n    _createStateMap() {\r\n        const stateMap = {};\r\n        this._addState(this._type, null, \"\", stateMap);\r\n        return stateMap;\r\n    }\r\n\r\n    _addState(state, parentState, name, stateMap) {\r\n        state.__state = true;\r\n        state.__name = name;\r\n\r\n        this._addStaticStateProperty(state, parentState);\r\n\r\n        const parentPath = (parentState ? parentState.__path : \"\");\r\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\r\n        state.__path = path;\r\n        state.__level = parentState ? parentState.__level + 1 : 0;\r\n        state.__parent = parentState;\r\n        state.__index = Object.keys(stateMap).length;\r\n        stateMap[path] = state;\r\n\r\n        const states = state._states;\r\n        if (states) {\r\n            const isInheritedFromParent = (parentState && parentState._states === states);\r\n            if (!isInheritedFromParent) {\r\n                const subStates = state._states();\r\n                subStates.forEach(subState => {\r\n                    const stateName = StateMachineType._getStateName(subState);\r\n                    this._addState(subState, state, stateName, stateMap);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    static _getStateName(state) {\r\n        const name = state.name;\r\n\r\n        const index = name.indexOf('$');\r\n        if (index > 0) {\r\n            // Strip off rollup name suffix.\r\n            return name.substr(0, index);\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    _addStaticStateProperty(state, parentState) {\r\n        if (parentState) {\r\n            const isClassStateLevel = parentState && !parentState.__parent;\r\n            if (isClassStateLevel) {\r\n                this._router[state.__name] = state;\r\n            } else {\r\n                parentState[state.__name] = state;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Element from \"../tree/Element.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StateMachine from \"./StateMachine.mjs\";\r\n\r\n/**\r\n * @extends StateMachine\r\n */\r\nexport default class Component extends Element {\r\n\r\n    constructor(stage, properties) {\r\n        super(stage);\r\n\r\n        // Encapsulate tags to prevent leaking.\r\n        this.tagRoot = true;\r\n\r\n        if (Utils.isObjectLiteral(properties)) {\r\n            Object.assign(this, properties);\r\n        }\r\n\r\n        this.__initialized = false;\r\n        this.__firstActive = false;\r\n        this.__firstEnable = false;\r\n\r\n        this.__signals = undefined;\r\n\r\n        this.__passSignals = undefined;\r\n\r\n        this.__construct();\r\n\r\n        // Quick-apply template.\r\n        const func = this.constructor.getTemplateFunc(this);\r\n        func.f(this, func.a);\r\n\r\n        this._build();\r\n    }\r\n\r\n    __start() {\r\n        StateMachine.setupStateMachine(this);\r\n        this._onStateChange = Component.prototype.__onStateChange;\r\n    }\r\n\r\n    get state() {\r\n        return this._getState();\r\n    }\r\n\r\n    __onStateChange() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    _refocus() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    static bindProp(name, func = null) {\r\n        return {__propertyBinding: true, __name: name, __func: func};\r\n    }\r\n\r\n    __bindProperty(propObj, targetObj, targetProp) {\r\n        // 1. find binding position: find object and property name to be bound\r\n        const obj = targetObj;\r\n        const prop = targetProp;\r\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\r\n\r\n        // 2. create setters for every given dependency\r\n        for (let i = 0; i < propDependencies.length; i++) {\r\n            const propName = propDependencies[i];\r\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\r\n\r\n            if (!this.hasOwnProperty(propName)) {\r\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\r\n                Object.defineProperty(this, propName, {\r\n                    set: (value) => {\r\n                        this[`__prop_${propName}`] = value;\r\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\r\n                            __obj[__prop] = __func(this);\r\n                        }\r\n                    },\r\n                    get: () => this[`__prop_${propName}`]\r\n                });\r\n            } else {\r\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a high-performance template patcher.\r\n     */\r\n    static getTemplateFunc(ctx) {\r\n        // We need a different template function per patch id.\r\n        const name = \"_templateFunc\";\r\n\r\n        // Be careful with class-based static inheritance.\r\n        const hasName = '__has' + name;\r\n        if (this[hasName] !== this) {\r\n            this[hasName] = this;\r\n            this[name] = this.parseTemplate(this._template(ctx));\r\n        }\r\n        return this[name];\r\n    }\r\n\r\n    static parseTemplate(obj) {\r\n        const context = {\r\n            loc: [],\r\n            store: [],\r\n            rid: 0\r\n        };\r\n\r\n        this.parseTemplateRec(obj, context, \"element\");\r\n\r\n        const code = context.loc.join(\";\\n\");\r\n        const f = new Function(\"element\", \"store\", code);\r\n        return {f: f, a: context.store};\r\n    }\r\n\r\n    static parseTemplateRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            let value = obj[key];\r\n            if (Utils.isUcChar(key.charCodeAt(0))) {\r\n                // Value must be expanded as well.\r\n                if (Utils.isObjectLiteral(value)) {\r\n                    // Ref.\r\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\r\n                    let type = value.type ? value.type : Element;\r\n                    if (type === Element) {\r\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\r\n                    } else {\r\n                        store.push(type);\r\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                    }\r\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\r\n                    context.rid++;\r\n\r\n                    // Enter sub.\r\n                    this.parseTemplateRec(value, context, childCursor);\r\n\r\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\r\n                } else if (Utils.isObject(value)) {\r\n                    // Dynamic assignment.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\r\n                }\r\n            } else {\r\n                if (key === \"text\") {\r\n                    const propKey = cursor + \"__text\";\r\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\r\n                    if (value.__propertyBinding === true) {\r\n                        // Allow binding entire objects to text property\r\n                        store.push(value);\r\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                    } else {\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\r\n                    const shaderCursor = `${cursor}[\"shader\"]`\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    this.parsePropertyBindings(value, context, shaderCursor);\r\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\r\n                    const propKey = cursor + \"__texture\";\r\n                    const type = value.type;\r\n                    if (type) {\r\n                        store.push(type);\r\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\r\n                    } else {\r\n                        loc.push(`${propKey} = ${cursor}.texture`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else {\r\n                    // Property;\r\n                    if (Utils.isNumber(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                    } else if (Utils.isBoolean(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                        // Dynamic assignment.\r\n                        // Because literal objects may contain dynamics, we store the full object.\r\n                        store.push(value);\r\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    } else {\r\n                        // String etc.\r\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parseTemplatePropRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isNumber(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                } else if (Utils.isBoolean(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                    // Dynamic assignment.\r\n                    // Because literal objects may contain dynamics, we store the full object.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                } else {\r\n                    // String etc.\r\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parsePropertyBindings(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _onSetup() {\r\n        if (!this.__initialized) {\r\n            this._setup();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n    }\r\n\r\n    _onAttach() {\r\n        if (!this.__initialized) {\r\n            this.__init();\r\n            this.__initialized = true;\r\n        }\r\n\r\n        this._attach();\r\n    }\r\n\r\n    _attach() {\r\n    }\r\n\r\n    _onDetach() {\r\n        this._detach();\r\n    }\r\n\r\n    _detach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n        if (!this.__firstEnable) {\r\n            this._firstEnable();\r\n            this.__firstEnable = true;\r\n        }\r\n\r\n        this._enable();\r\n    }\r\n\r\n    _firstEnable() {\r\n    }\r\n\r\n    _enable() {\r\n    }\r\n\r\n    _onDisabled() {\r\n        this._disable();\r\n    }\r\n\r\n    _disable() {\r\n    }\r\n\r\n    _onActive() {\r\n        if (!this.__firstActive) {\r\n            this._firstActive();\r\n            this.__firstActive = true;\r\n        }\r\n\r\n        this._active();\r\n    }\r\n\r\n    _firstActive() {\r\n    }\r\n\r\n    _active() {\r\n    }\r\n\r\n    _onInactive() {\r\n        this._inactive();\r\n    }\r\n\r\n    _inactive() {\r\n    }\r\n\r\n    get application() {\r\n        return this.stage.application;\r\n    }\r\n\r\n    __construct() {\r\n        this._construct();\r\n    }\r\n\r\n    _construct() {\r\n    }\r\n\r\n    _build() {\r\n    }\r\n\r\n    __init() {\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n    }\r\n\r\n    _focus(newTarget, prevTarget) {\r\n    }\r\n\r\n    _unfocus(newTarget) {\r\n    }\r\n\r\n    _focusChange(target, newTarget) {\r\n    }\r\n\r\n    _getFocused() {\r\n        // Override to delegate focus to child components.\r\n        return this;\r\n    }\r\n\r\n    _setFocusSettings(settings) {\r\n        // Override to add custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    _handleFocusSettings(settings) {\r\n        // Override to react on custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    static _template() {\r\n        return {};\r\n    }\r\n\r\n    hasFinalFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && path.length && path[path.length - 1] === this;\r\n    }\r\n\r\n    hasFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && (path.indexOf(this) >= 0);\r\n    }\r\n\r\n    get cparent() {\r\n        return Component.getParent(this);\r\n    }\r\n\r\n    seekAncestorByType(type) {\r\n        let c = this.cparent;\r\n        while (c) {\r\n            if (c.constructor === type) {\r\n                return c;\r\n            }\r\n            c = c.cparent;\r\n        }\r\n    }\r\n\r\n    getSharedAncestorComponent(element) {\r\n        let ancestor = this.getSharedAncestor(element);\r\n        while (ancestor && !ancestor.isComponent) {\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return ancestor;\r\n    }\r\n\r\n    get signals() {\r\n        return this.__signals;\r\n    }\r\n\r\n    set signals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        this.__signals = v;\r\n    }\r\n\r\n    set alterSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__signals) {\r\n            this.__signals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__signals[key];\r\n            } else {\r\n                this.__signals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get passSignals() {\r\n        return this.__passSignals || {};\r\n    }\r\n\r\n    set passSignals(v) {\r\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\r\n    }\r\n\r\n    set alterPassSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__passSignals) {\r\n            this.__passSignals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__passSignals[key];\r\n            } else {\r\n                this.__passSignals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signals the parent of the specified event.\r\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\r\n     * @param {string} event\r\n     * @param {...*} args\r\n     */\r\n    signal(event, ...args) {\r\n        return this._signal(event, args);\r\n    }\r\n\r\n    _signal(event, args) {\r\n        const signalParent = this._getParentSignalHandler();\r\n        if (signalParent) {\r\n            if (this.__signals) {\r\n                let fireEvent = this.__signals[event];\r\n                if (fireEvent === false) {\r\n                    // Ignore event.\r\n                    return;\r\n                }\r\n                if (fireEvent) {\r\n                    if (fireEvent === true) {\r\n                        fireEvent = event;\r\n                    }\r\n \r\n                    if (Utils.isFunction(fireEvent)) {\r\n                        return fireEvent(...args);\r\n                    }\r\n\r\n                    if (signalParent._hasMethod(fireEvent)) {\r\n                        return signalParent[fireEvent](...args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\r\n            if (passSignal) {\r\n                // Bubble up.\r\n                if (passSignal && passSignal !== true) {\r\n                    // Replace signal name.\r\n                    event = passSignal;\r\n                }\r\n\r\n                return signalParent._signal(event, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getParentSignalHandler() {\r\n        return this.cparent ? this.cparent._getSignalHandler() : null;\r\n    }\r\n\r\n    _getSignalHandler() {\r\n        if (this._signalProxy) {\r\n            return this.cparent ? this.cparent._getSignalHandler() : null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return false;\r\n    }\r\n\r\n    fireAncestors(name, ...args) {\r\n        if (!name.startsWith('$')) {\r\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\r\n        }\r\n\r\n        const parent = this._getParentSignalHandler();\r\n        if (parent) {\r\n            return parent._doFireAncestors(name, args);\r\n        }\r\n    }\r\n\r\n    _doFireAncestors(name, args) {\r\n        if (this._hasMethod(name)) {\r\n            return this.fire(name, ...args);\r\n        } else {\r\n            const signalParent = this._getParentSignalHandler();\r\n            if (signalParent) {\r\n                return signalParent._doFireAncestors(name, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    static collectSubComponents(subs, element) {\r\n        if (element.hasChildren()) {\r\n            const childList = element.__childList;\r\n            for (let i = 0, n = childList.length; i < n; i++) {\r\n                const child = childList.getAt(i);\r\n                if (child.isComponent) {\r\n                    subs.push(child);\r\n                } else {\r\n                    Component.collectSubComponents(subs, child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getComponent(element) {\r\n        let parent = element;\r\n        while (parent && !parent.isComponent) {\r\n            parent = parent.parent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    static getParent(element) {\r\n        return Component.getComponent(element.parent);\r\n    }\r\n}\r\n\r\nComponent.prototype.isComponent = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n\r\n        this.ctx = ctx;\r\n\r\n        this.quadTextures = [];\r\n\r\n        this.quadElements = [];\r\n    }\r\n\r\n    get length() {\r\n        return this.quadTextures.length;\r\n    }\r\n\r\n    reset() {\r\n        this.quadTextures = [];\r\n        this.quadElements = [];\r\n        this.dataLength = 0;\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quadElements[index]._element;\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quadElements[index];\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quadTextures[index];\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.w) {\r\n            // Render texture;\r\n            return nativeTexture.w;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.w;\r\n        }\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.h) {\r\n            // Render texture;\r\n            return nativeTexture.h;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class WebGLCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\r\n        // We do not (want to) handle memory overflow.\r\n        const byteSize = ctx.stage.getOption('bufferMemory');\r\n\r\n        this.dataLength = 0;\r\n\r\n        this.data = new ArrayBuffer(byteSize);\r\n        this.floats = new Float32Array(this.data);\r\n        this.uints = new Uint32Array(this.data);\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return index * 80;\r\n    }\r\n\r\n    getQuadContents() {\r\n        // Debug: log contents of quad buffer.\r\n        let floats = this.floats;\r\n        let uints = this.uints;\r\n        let lines = [];\r\n        for (let i = 1; i <= this.length; i++) {\r\n            let str = 'entry ' + i + ': ';\r\n            for (let j = 0; j < 4; j++) {\r\n                let b = i * 20 + j * 4;\r\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\r\n            }\r\n            lines.push(str);\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n\r\n        this.ctx = ctx;\r\n        this.shader = shader;\r\n        this.shaderOwner = shaderOwner;\r\n        this.renderTextureInfo = renderTextureInfo;\r\n        this.scissor = scissor;\r\n        this.index = index;\r\n        this.length = 0;\r\n\r\n    }\r\n\r\n    get quads() {\r\n        return this.ctx.renderState.quads;\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quads.getTexture(this.index + index);\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quads.getElementCore(this.index + index);\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quads.getElement(this.index + index);\r\n    }\r\n\r\n    getElementWidth(index) {\r\n        return this.getElement(index).renderWidth;\r\n    }\r\n\r\n    getElementHeight(index) {\r\n        return this.getElement(index).renderHeight;\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        return this.quads.getTextureWidth(this.index + index);\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        return this.quads.getTextureHeight(this.index + index);\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.w;\r\n        } else {\r\n            return this.ctx.stage.w;\r\n        }\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.h;\r\n        } else {\r\n            return this.ctx.stage.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n\r\n        this.extraAttribsDataByteOffset = 0;\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return this.quads.getAttribsDataByteOffset(this.index + index);\r\n    }\r\n\r\n    /**\r\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\r\n     * @param x\r\n     * @param y\r\n     * @return {number[]}\r\n     */\r\n    getNormalRenderTextureCoords(x, y) {\r\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\r\n        coords[0] /= this.getRenderWidth();\r\n        coords[1] /= this.getRenderHeight();\r\n        coords[0] = coords[0] * 2 - 1;\r\n        coords[1] = 1 - coords[1] * 2;\r\n        return coords;\r\n    }\r\n\r\n    getProjection() {\r\n        if (this.renderTextureInfo === null) {\r\n            return this.ctx.renderExec._projection;\r\n        } else {\r\n            return this.renderTextureInfo.nativeTexture.projection;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.renderState = ctx.renderState;\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n    }\r\n\r\n    destroy() {\r\n        this.ctx = null;\r\n        this.renderState = null;\r\n        this.gl = null;\r\n\r\n        delete this.ctx;\r\n        delete this.renderState;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        this._bindRenderTexture(null);\r\n        this._setScissor(null);\r\n        this._clearRenderTexture();\r\n    }\r\n\r\n    execute() {\r\n        this._reset();\r\n\r\n        let qops = this.renderState.quadOperations;\r\n\r\n        let i = 0, j = 0, n = qops.length;\r\n        while (i < n) {\r\n            this._processQuadOperation(qops[i]);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    _processQuadOperation(quadOperation) {\r\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\r\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\r\n            return;\r\n        }\r\n\r\n        this._setupQuadOperation(quadOperation);\r\n        this._execQuadOperation(quadOperation);\r\n\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n    }\r\n\r\n    _execQuadOperation(op) {\r\n        // Set render texture.\r\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\r\n\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this._bindRenderTexture(nativeTexture);\r\n        }\r\n\r\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\r\n            this._setScissor(null);\r\n            this._clearRenderTexture();\r\n            op.renderTextureInfo.cleared = true;\r\n            this._setScissor(op.scissor);\r\n        } else {\r\n            this._setScissor(op.scissor);\r\n        }\r\n\r\n        this._renderQuadOperation(op);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        this._renderTexture = renderTexture;\r\n    }\r\n\r\n    _clearRenderTexture(renderTexture) {\r\n    }\r\n\r\n    _setScissor(area) {\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\n\r\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        super(ctx)\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let gl = this.gl;\r\n\r\n        // Create new sharable buffer for params.\r\n        this._attribsBuffer = gl.createBuffer();\r\n\r\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\r\n\r\n        // Init webgl arrays.\r\n        let allIndices = new Uint16Array(maxQuads * 6);\r\n\r\n        // fill the indices with the quads to draw.\r\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\r\n            allIndices[i] = j;\r\n            allIndices[i + 1] = j + 1;\r\n            allIndices[i + 2] = j + 2;\r\n            allIndices[i + 3] = j;\r\n            allIndices[i + 4] = j + 2;\r\n            allIndices[i + 5] = j + 3;\r\n        }\r\n\r\n        // The quads buffer can be (re)used to draw a range of quads.\r\n        this._quadsBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\r\n\r\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\r\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\r\n\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.gl.deleteBuffer(this._attribsBuffer);\r\n        this.gl.deleteBuffer(this._quadsBuffer);\r\n\r\n        this.gl = null;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        super._reset();\r\n\r\n        let gl = this.gl;\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.enable(gl.BLEND);\r\n        gl.disable(gl.DEPTH_TEST);\r\n\r\n        this._stopShaderProgram();\r\n        this._setupBuffers();\r\n    }\r\n\r\n    _setupBuffers() {\r\n        let gl = this.gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n        super._setupQuadOperation(quadOperation);\r\n        this._useShaderProgram(quadOperation.shader, quadOperation);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            shader.beforeDraw(op);\r\n            shader.draw(op);\r\n            shader.afterDraw(op);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {WebGLShader} shader;\r\n     * @param {CoreQuadOperation} operation;\r\n     */\r\n    _useShaderProgram(shader, operation) {\r\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\r\n            if (this._currentShaderProgram) {\r\n                this._currentShaderProgram.stopProgram();\r\n            }\r\n            shader.useProgram();\r\n            this._currentShaderProgram = shader;\r\n        }\r\n        shader.setupUniforms(operation);\r\n    }\r\n\r\n    _stopShaderProgram() {\r\n        if (this._currentShaderProgram) {\r\n            // The currently used shader program should be stopped gracefully.\r\n            this._currentShaderProgram.stopProgram();\r\n            this._currentShaderProgram = null;\r\n        }\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        super._bindRenderTexture(renderTexture);\r\n\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\r\n        } else {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\r\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        super._clearRenderTexture();\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            let glClearColor = this.ctx.stage.getClearColor();\r\n            if (glClearColor) {\r\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\r\n                gl.clear(gl.COLOR_BUFFER_BIT);\r\n            }\r\n        } else {\r\n            // Clear texture.\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n    }\r\n\r\n    _setScissor(area) {\r\n        super._setScissor(area);\r\n\r\n        if (this._scissor === area) {\r\n            return;\r\n        }\r\n        this._scissor = area;\r\n\r\n        let gl = this.gl;\r\n        if (!area) {\r\n            gl.disable(gl.SCISSOR_TEST);\r\n        } else {\r\n            gl.enable(gl.SCISSOR_TEST);\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            let y = area[1];\r\n            if (this._renderTexture === null) {\r\n                // Flip.\r\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\r\n            }\r\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreRenderState {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.stage = ctx.stage;\r\n\r\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\r\n\r\n        this.renderer = ctx.stage.renderer;\r\n\r\n        this.quads = this.renderer.createCoreQuadList(ctx);\r\n\r\n    }\r\n\r\n    reset() {\r\n        this._renderTextureInfo = null;\r\n\r\n        this._scissor = null;\r\n\r\n        this._shader = null;\r\n\r\n        this._shaderOwner = null;\r\n\r\n        this._realShader = null;\r\n\r\n        this._check = false;\r\n\r\n        this.quadOperations = [];\r\n\r\n        this._texturizer = null;\r\n\r\n        this._texturizerTemporary = false;\r\n\r\n        this._quadOperation = null;\r\n\r\n        this.quads.reset();\r\n\r\n        this._temporaryTexturizers = [];\r\n        \r\n        this._isCachingTexturizer = false;\r\n\r\n    }\r\n\r\n    get length() {\r\n        return this.quads.quadTextures.length;\r\n    }\r\n\r\n    setShader(shader, owner) {\r\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\r\n            // Same shader owner: active shader is also the same.\r\n            // Prevent any shader usage to save performance.\r\n\r\n            this._realShader = shader;\r\n\r\n            if (shader.useDefault()) {\r\n                // Use the default shader when possible to prevent unnecessary program changes.\r\n                shader = this.defaultShader;\r\n            }\r\n            if (this._shader !== shader || this._shaderOwner !== owner) {\r\n                this._shader = shader;\r\n                this._shaderOwner = owner;\r\n                this._check = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderTextureInfo() {\r\n        return this._renderTextureInfo;\r\n    }\r\n\r\n    setScissor(area) {\r\n        if (this._scissor !== area) {\r\n            if (area) {\r\n                this._scissor = area;\r\n            } else {\r\n                this._scissor = null;\r\n            }\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    getScissor() {\r\n        return this._scissor;\r\n    }\r\n\r\n    setRenderTextureInfo(renderTextureInfo) {\r\n        if (this._renderTextureInfo !== renderTextureInfo) {\r\n            this._renderTextureInfo = renderTextureInfo;\r\n            this._scissor = null;\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texturizer to be drawn during subsequent addQuads.\r\n     * @param {ElementTexturizer} texturizer\r\n     */\r\n    setTexturizer(texturizer, cache = false) {\r\n        this._texturizer = texturizer;\r\n        this._cacheTexturizer = cache;\r\n    }\r\n\r\n    set isCachingTexturizer(v) {\r\n        this._isCachingTexturizer = v;\r\n    }\r\n\r\n    get isCachingTexturizer() {\r\n        return this._isCachingTexturizer;\r\n    }\r\n\r\n    addQuad(elementCore) {\r\n        if (!this._quadOperation) {\r\n            this._createQuadOperation();\r\n        } else if (this._check && this._hasChanges()) {\r\n            this._finishQuadOperation();\r\n            this._check = false;\r\n        }\r\n\r\n        let nativeTexture = null;\r\n        if (this._texturizer) {\r\n            nativeTexture = this._texturizer.getResultTexture();\r\n\r\n            if (!this._cacheTexturizer) {\r\n                // We can release the temporary texture immediately after finalizing this quad operation.\r\n                this._temporaryTexturizers.push(this._texturizer);\r\n            }\r\n        }\r\n\r\n        if (!nativeTexture) {\r\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\r\n        }\r\n\r\n        if (this._renderTextureInfo) {\r\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\r\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\r\n                this._renderTextureInfo.nativeTexture = nativeTexture;\r\n                this._renderTextureInfo.offset = this.length;\r\n            } else {\r\n                // It is not possible to reuse another texture when there is more than one quad.\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n            this._renderTextureInfo.empty = false;\r\n        }\r\n\r\n        this.quads.quadTextures.push(nativeTexture);\r\n        this.quads.quadElements.push(elementCore);\r\n\r\n        this._quadOperation.length++;\r\n\r\n        this.renderer.addQuad(this, this.quads, this.length - 1)\r\n    }\r\n\r\n    finishedRenderTexture() {\r\n        if (this._renderTextureInfo.nativeTexture) {\r\n            // There was only one texture drawn in this render texture.\r\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\r\n            // (it should exactly span this render texture).\r\n            if (!this._isRenderTextureReusable()) {\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isRenderTextureReusable() {\r\n        const offset = this._renderTextureInfo.offset;\r\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\r\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\r\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\r\n    }\r\n\r\n    _hasChanges() {\r\n        let q = this._quadOperation;\r\n        if (this._shader !== q.shader) return true;\r\n        if (this._shaderOwner !== q.shaderOwner) return true;\r\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\r\n        if (this._scissor !== q.scissor) {\r\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _finishQuadOperation(create = true) {\r\n        if (this._quadOperation) {\r\n            if (this._quadOperation.length || this._shader.addEmpty()) {\r\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\r\n                    // Ignore empty clipping regions.\r\n                    this.quadOperations.push(this._quadOperation);\r\n                }\r\n            }\r\n\r\n            if (this._temporaryTexturizers.length) {\r\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\r\n                    // We can now reuse these render-to-textures in subsequent stages.\r\n                    // Huge performance benefit when filtering (fast blur).\r\n                    this._temporaryTexturizers[i].releaseRenderTexture();\r\n                }\r\n                this._temporaryTexturizers = [];\r\n            }\r\n\r\n            this._quadOperation = null;\r\n        }\r\n\r\n        if (create) {\r\n            this._createQuadOperation();\r\n        }\r\n    }\r\n\r\n    _createQuadOperation() {\r\n        this._quadOperation = this.renderer.createCoreQuadOperation(\r\n            this.ctx,\r\n            this._shader,\r\n            this._shaderOwner,\r\n            this._renderTextureInfo,\r\n            this._scissor,\r\n            this.length\r\n        );\r\n        this._check = false;\r\n    }\r\n\r\n    finish() {\r\n        if (this._quadOperation) {\r\n            // Add remaining.\r\n            this._finishQuadOperation(false);\r\n        }\r\n\r\n        this.renderer.finishRenderState(this);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Base functionality for shader setup/destroy.\r\n */\r\nexport default class WebGLShaderProgram {\r\n\r\n    constructor(vertexShaderSource, fragmentShaderSource) {\r\n\r\n        this.vertexShaderSource = vertexShaderSource;\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n\r\n        this._program = null;\r\n        this.gl = null;\r\n\r\n        this._uniformLocations = new Map();\r\n        this._attributeLocations = new Map();\r\n\r\n        this._currentUniformValues = {};\r\n    }\r\n\r\n    compile(gl) {\r\n        if (this._program) return;\r\n\r\n        this.gl = gl;\r\n\r\n        this._program = gl.createProgram();\r\n\r\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\r\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\r\n\r\n        gl.attachShader(this._program, glVertShader);\r\n        gl.attachShader(this._program, glFragShader);\r\n        gl.linkProgram(this._program);\r\n\r\n        // if linking fails, then log and cleanup\r\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\r\n            console.error('[Lightning] Error: Could not initialize shader.');\r\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\r\n            console.error('[Lightning] gl.getError()', gl.getError());\r\n\r\n            // if there is a program info log, log it\r\n            if (gl.getProgramInfoLog(this._program) !== '') {\r\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\r\n            }\r\n\r\n            gl.deleteProgram(this._program);\r\n            this._program = null;\r\n        }\r\n\r\n        // clean up some shaders\r\n        gl.deleteShader(glVertShader);\r\n        gl.deleteShader(glFragShader);\r\n    }\r\n\r\n    _glCompile(type, src) {\r\n        let shader = this.gl.createShader(type);\r\n\r\n        this.gl.shaderSource(shader, src);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\r\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\r\n            let idx = 0;\r\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    getUniformLocation(name) {\r\n        let location = this._uniformLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getUniformLocation(this._program, name);\r\n            this._uniformLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    getAttribLocation(name) {\r\n        let location = this._attributeLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getAttribLocation(this._program, name);\r\n            this._attributeLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._program) {\r\n            this.gl.deleteProgram(this._program);\r\n        }\r\n\r\n        this._attributeLocations = null;\r\n        this._currentUniformValues = null;\r\n        this.fragmentShaderSource = null;\r\n        this._program = null;\r\n        this.gl = null;\r\n        this._uniformLocations = null;\r\n        this.vertexShaderSource = null;  \r\n\r\n        delete this.vertexShaderSource;\r\n        delete this._program;        \r\n        delete this._currentUniformValues;\r\n        delete this.fragmentShaderSource;\r\n        delete this.gl;\r\n        delete this._uniformLocations;\r\n        delete this._attributeLocations;\r\n\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program;\r\n    }\r\n\r\n    get compiled() {\r\n        return !!this._program;\r\n    }\r\n\r\n    _valueEquals(v1, v2) {\r\n        // Uniform value is either a typed array or a numeric value.\r\n        if (v1.length && v2.length) {\r\n            for (let i = 0, n = v1.length; i < n; i++) {\r\n                if (v1[i] !== v2[i]) return false;\r\n            }\r\n            return true;\r\n        } else {\r\n            return (v1 === v2);\r\n        }\r\n    }\r\n\r\n    _valueClone(v) {\r\n        if (v.length) {\r\n            return v.slice(0);\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setUniformValue(name, value, glFunction) {\r\n        let v = this._currentUniformValues[name];\r\n        if (v === undefined || !this._valueEquals(v, value)) {\r\n            let clonedValue = this._valueClone(value);\r\n            this._currentUniformValues[name] = clonedValue;\r\n\r\n            let loc = this.getUniformLocation(name);\r\n            if (loc) {\r\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\r\n                if (isMatrix) {\r\n                    glFunction.call(this.gl, loc, false, clonedValue);\r\n                } else {\r\n                    glFunction.call(this.gl, loc, clonedValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class WebGLShader extends Shader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        const stage = ctx.stage;\r\n\r\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\r\n        if (!this._program) {\r\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\r\n\r\n            // Let the vbo context perform garbage collection.\r\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\r\n        }\r\n\r\n        this.gl = stage.gl;\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program.glProgram;\r\n    }\r\n\r\n    _init() {\r\n        if (!this._initialized) {\r\n            this.initialize();\r\n            this._initialized = true;\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this._program.compile(this.gl);\r\n    }\r\n\r\n    get initialized() {\r\n        return this._initialized;\r\n    }\r\n\r\n    _uniform(name) {\r\n        return this._program.getUniformLocation(name);\r\n    }\r\n\r\n    _attrib(name) {\r\n        return this._program.getAttribLocation(name);\r\n    }\r\n\r\n    _setUniform(name, value, glFunction) {\r\n        this._program.setUniformValue(name, value, glFunction);\r\n    }\r\n\r\n    useProgram() {\r\n        this._init();\r\n        this.gl.useProgram(this.glProgram);\r\n        this.beforeUsage();\r\n        this.enableAttribs();\r\n    }\r\n\r\n    stopProgram() {\r\n        this.afterUsage();\r\n        this.disableAttribs();\r\n    }\r\n\r\n    hasSameProgram(other) {\r\n        // For performance reasons, we first check for identical references.\r\n        return (other && ((other === this) || (other._program === this._program)));\r\n    }\r\n\r\n    beforeUsage() {\r\n        // Override to set settings other than the default settings (blend mode etc).\r\n    }\r\n\r\n    afterUsage() {\r\n        // All settings changed in beforeUsage should be reset here.\r\n    }\r\n\r\n    enableAttribs() {\r\n\r\n    }\r\n\r\n    disableAttribs() {\r\n\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 0;\r\n    }\r\n\r\n    getVertexAttribPointerOffset(operation) {\r\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\r\n        // operation.extraAttribsBufferByteOffset.\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        // Set all shader-specific uniforms.\r\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\r\n        // The uniforms are shared by all shaders that have the same type (and shader program).\r\n    }\r\n\r\n    _getProjection(operation) {\r\n        return operation.getProjection();\r\n    }\r\n\r\n    getFlipY(operation) {\r\n        return this._getProjection(operation)[1] < 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n    cleanup() {\r\n        this._initialized = false;\r\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../WebGLShader.mjs\";\r\n\r\nexport default class DefaultShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            \r\n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDefaultShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDefaultShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Renderer {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._defaultShader = undefined;\r\n    }\r\n\r\n    gc(aggressive) {\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    getDefaultShader(ctx = this.stage.ctx) {\r\n        if (!this._defaultShader) {\r\n            this._defaultShader = this._createDefaultShader(ctx);\r\n        }\r\n        return this._defaultShader;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n    }\r\n\r\n    isValidShaderType(shaderType) {\r\n        return (shaderType.prototype instanceof this._getShaderBaseType());\r\n    }\r\n\r\n    createShader(ctx, settings) {\r\n        const shaderType = settings.type;\r\n        // If shader type is not correct, use a different platform.\r\n        if (!this.isValidShaderType(shaderType)) {\r\n            const convertedShaderType = this._getShaderAlternative(shaderType);\r\n            if (!convertedShaderType) {\r\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\r\n                return this._createDefaultShader(ctx);\r\n            }\r\n            return new convertedShaderType(ctx);\r\n        } else {\r\n            const shader = new shaderType(ctx);\r\n            Base.patchObject(this, settings);\r\n            return shader;\r\n        }\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return this.getDefaultShader();\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\r\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\r\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport WebGLShader from \"./WebGLShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\n\r\nexport default class WebGLRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this.shaderPrograms = new Map();\r\n        this._compressedTextureExtensions = {\r\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\r\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\r\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\r\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\r\n        }\r\n    }\r\n\r\n    getCompressedTextureExtensions() {\r\n        return this._compressedTextureExtensions\r\n    }\r\n\r\n    destroy() {\r\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\r\n\r\n        this.shaderPrograms = null;\r\n        this._compressedTextureExtensions = null;\r\n\r\n        delete this.shaderPrograms;\r\n        delete this._compressedTextureExtensions;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return WebGLShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getWebGL && shaderType.getWebGL();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new WebGLCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new WebGLCoreRenderExecutor(ctx);\r\n    }\r\n\r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const gl = this.stage.gl;\r\n        const glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        glTexture.params = {};\r\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\r\n\r\n        // We need a specific framebuffer for every render texture.\r\n        glTexture.framebuffer = gl.createFramebuffer();\r\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeRenderTexture(glTexture) {\r\n        let gl = this.stage.gl;\r\n        gl.deleteFramebuffer(glTexture.framebuffer);\r\n        gl.deleteTexture(glTexture);\r\n    }\r\n\r\n    _getBytesPerPixel(fmt, type) {\r\n        const gl = this.stage.gl;\r\n\r\n        if (fmt === gl.RGBA) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 4;\r\n\r\n                case gl.UNSIGNED_SHORT_4_4_4_4:\r\n                    return 2;\r\n\r\n                case gl.UNSIGNED_SHORT_5_5_5_1:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGBA format');\r\n            }\r\n        }\r\n        else if (fmt === gl.RGB) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 3;\r\n\r\n                case gl.UNSIGNED_BYTE_5_6_5:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGB format');\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\r\n        }\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        const gl = this.stage.gl;\r\n\r\n        const source = options.source;\r\n        let compressed = false;\r\n        if (options.renderInfo) {\r\n            compressed = options.renderInfo.compressed || false\r\n        }\r\n\r\n        const format = {\r\n            premultiplyAlpha: true,\r\n            hasAlpha: true\r\n        };\r\n\r\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\r\n            format.premultiplyAlpha = options.premultiplyAlpha;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('flipBlueRed')) {\r\n            format.flipBlueRed = options.flipBlueRed;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('hasAlpha')) {\r\n            format.hasAlpha = options.hasAlpha;\r\n        }\r\n\r\n        if (!format.hasAlpha) {\r\n            format.premultiplyAlpha = false;\r\n        }\r\n\r\n        format.texParams = options.texParams || {}\r\n        format.texOptions = options.texOptions || {}\r\n\r\n        let glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\r\n\r\n        if (Utils.isNode) {\r\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\r\n        }\r\n\r\n        const texParams = format.texParams;\r\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n\r\n        Object.keys(texParams).forEach(key => {\r\n            const value = texParams[key];\r\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\r\n        });\r\n\r\n        if (compressed) {\r\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\r\n            return glTexture;\r\n        }\r\n         \r\n        const texOptions = format.texOptions;\r\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\r\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\r\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\r\n        if (options && options.imageRef) {\r\n            texOptions.imageRef = options.imageRef;\r\n        }\r\n        \r\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\r\n        \r\n        glTexture.params = Utils.cloneObjShallow(texParams);\r\n        glTexture.options = Utils.cloneObjShallow(texOptions);\r\n\r\n        // calculate bytes per pixel for vram usage tracking\r\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        let offset = (index * 20);\r\n        const elementCore = quads.quadElements[index];\r\n\r\n        let r = elementCore._renderContext;\r\n\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        const mca = StageUtils.mergeColorAlpha;\r\n\r\n        if (r.tb !== 0 || r.tc !== 0) {\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta;\r\n            floats[offset++] = r.py + elementCore._w * r.tc;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        } else {\r\n            // Simple.\r\n            let cx = r.px + elementCore._w * r.ta;\r\n            let cy = r.py + elementCore._h * r.td;\r\n\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        }\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        return ((floats[offset] === 0) &&\r\n            (floats[offset + 1] === 0) &&\r\n            (floats[offset + 2] === 0) &&\r\n            (floats[offset + 3] === 0) &&\r\n            (uints[offset + 4] === 0xFFFFFFFF) &&\r\n            (floats[offset + 5] === renderTextureInfo.w) &&\r\n            (floats[offset + 6] === 0) &&\r\n            (floats[offset + 7] === 1) &&\r\n            (floats[offset + 8] === 0) &&\r\n            (uints[offset + 9] === 0xFFFFFFFF) &&\r\n            (floats[offset + 10] === renderTextureInfo.w) &&\r\n            (floats[offset + 11] === renderTextureInfo.h) &&\r\n            (floats[offset + 12] === 1) &&\r\n            (floats[offset + 13] === 1) &&\r\n            (uints[offset + 14] === 0xFFFFFFFF) &&\r\n            (floats[offset + 15] === 0) &&\r\n            (floats[offset + 16] === renderTextureInfo.h) &&\r\n            (floats[offset + 17] === 0) &&\r\n            (floats[offset + 18] === 1) &&\r\n            (uints[offset + 19] === 0xFFFFFFFF));\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n        // Set extra shader attribute data.\r\n        let offset = renderState.length * 80;\r\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\r\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\r\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\r\n            offset += extra;\r\n            if (extra) {\r\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\r\n            }\r\n        }\r\n        renderState.quads.dataLength = offset;\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        const gl = this.stage.gl;\r\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\r\n        const precision = renderTexture.precision;\r\n        gl.copyTexSubImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            precision * (options.sx || 0),\r\n            precision * (options.sy || 0),\r\n            precision * (options.x || 0),\r\n            precision * (options.y || 0),\r\n            precision * (options.w || renderTexture.ow),\r\n            precision * (options.h || renderTexture.oh));\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class C2dCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this.renderContexts = [];\r\n        this.modes = [];\r\n    }\r\n\r\n    setRenderContext(index, v) {\r\n        this.renderContexts[index] = v;\r\n    }\r\n\r\n    setSimpleTc(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 1;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 1);\r\n        }\r\n    }\r\n\r\n    setWhite(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 2;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 2);\r\n        }\r\n    }\r\n\r\n    getRenderContext(index) {\r\n        return this.renderContexts[index];\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return (this.modes[index] & 1);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return (this.modes[index] & 2);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    getRenderContext(index) {\r\n        return this.quads.getRenderContext(this.index + index);\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return this.quads.getSimpleTc(this.index + index);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return this.quads.getWhite(this.index + index);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport Utils from \"../../tree/Utils.mjs\";\r\n\r\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    init() {\r\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            const target = this._renderTexture || this._mainRenderTexture;\r\n            shader.beforeDraw(op, target);\r\n            shader.draw(op, target);\r\n            shader.afterDraw(op, target);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        const ctx = this._getContext();\r\n\r\n        let clearColor = [0, 0, 0, 0];\r\n        if (this._mainRenderTexture.ctx === ctx) {\r\n            clearColor = this.ctx.stage.getClearColor();\r\n        }\r\n\r\n        const renderTexture = ctx.canvas;\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\r\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\r\n        } else {\r\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\r\n            // Do not use fillRect because it produces artifacts.\r\n            ctx.globalCompositeOperation = 'copy';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.globalCompositeOperation = 'source-over';\r\n        }\r\n    }\r\n    \r\n    _getContext() {\r\n        if (this._renderTexture) {\r\n            return this._renderTexture.ctx;\r\n        } else {\r\n            return this._mainRenderTexture.ctx;\r\n        } \r\n    }\r\n\r\n    _restoreContext() {\r\n        const ctx = this._getContext();\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx._scissor = null;\r\n    }\r\n\r\n    _setScissor(area) {\r\n        const ctx = this._getContext();\r\n\r\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\r\n            // Clipping is stored in the canvas context state.\r\n            // We can't reset clipping alone so we need to restore the full context.\r\n            this._restoreContext();\r\n\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            if (area) {\r\n                ctx.beginPath();\r\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n                ctx.closePath();\r\n                ctx.clip();\r\n            }\r\n            ctx._scissor = area;\r\n        }\r\n    }\r\n\r\n    static _equalScissorAreas(canvas, area, current) {\r\n        if (!area) {\r\n            area = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        if (!current) {\r\n            current = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        return Utils.equalValues(area, current)\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class C2dShader extends Shader {\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dShader from \"../C2dShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class DefaultShader extends C2dShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\r\n        this._tintManager = this.ctx.stage.renderer.tintManager;\r\n    }\r\n\r\n    draw(operation, target) {\r\n        const ctx = target.ctx;\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const tx = operation.getTexture(i);\r\n            const vc = operation.getElementCore(i);\r\n            const rc = operation.getRenderContext(i);\r\n            const white = operation.getWhite(i);\r\n            const stc = operation.getSimpleTc(i);\r\n\r\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\r\n            const precision = this.ctx.stage.getRenderPrecision();\r\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\r\n\r\n            const rect = (tx === this._rectangleTexture);\r\n            const info = {operation, target, index: i, rect};\r\n\r\n            if (rect) {\r\n                // Check for gradient.\r\n                if (white) {\r\n                    ctx.fillStyle = 'white';\r\n                } else {\r\n                    this._setColorGradient(ctx, vc);\r\n                }\r\n\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n                ctx.fillRect(0, 0, vc.w, vc.h);\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            } else {\r\n                // @todo: set image smoothing based on the texture.\r\n\r\n                // @todo: optimize by registering whether identity texcoords are used.\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n\r\n                // @todo: test if rounding yields better performance.\r\n\r\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\r\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\r\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\r\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\r\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\r\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\r\n\r\n                let colorize = !white;\r\n                if (colorize) {\r\n                    // @todo: cache the tint texture for better performance.\r\n\r\n                    // Draw to intermediate texture with background color/gradient.\r\n                    // This prevents us from having to create a lot of render texture canvases.\r\n\r\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\r\n                    let color = vc._colorUl;\r\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\r\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\r\n                    }\r\n\r\n                    const alpha = ((color / 16777216) | 0) / 255.0;\r\n                    ctx.globalAlpha *= alpha;\r\n\r\n                    const rgb = color & 0x00FFFFFF;\r\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\r\n\r\n                    // Actually draw result.\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                } else {\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                }\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\r\n        let color = vc._colorUl;\r\n        let gradient;\r\n        //@todo: quick single color check.\r\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\r\n\r\n        if (vc._colorUl === vc._colorUr) {\r\n            if (vc._colorBl === vc._colorBr) {\r\n                if (vc._colorUl === vc.colorBl) {\r\n                    // Single color.\r\n                } else {\r\n                    // Vertical gradient.\r\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\r\n                    if (transparency) {\r\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\r\n                    } else {\r\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                // Not supported gradient.\r\n            }\r\n        } else {\r\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\r\n                // Horizontal gradient.\r\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\r\n                if (transparency) {\r\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\r\n                } else {\r\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (gradient) {\r\n            ctx.fillStyle = gradient;\r\n        } else {\r\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\r\n        }\r\n    }\r\n\r\n    _beforeDrawEl(info) {\r\n    }\r\n\r\n    _afterDrawEl(info) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class C2dTextureTintManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._usedMemory = 0;\r\n        this._cachedNativeTextures = new Set();\r\n    }\r\n\r\n    destroy() {\r\n        this.gc(true);\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    delete(nativeTexture) {\r\n        // Should be called when native texture is cleaned up.\r\n        if (this._hasCache(nativeTexture)) {\r\n            const cache = this._getCache(nativeTexture);\r\n            const prevMemUsage = cache.memoryUsage;\r\n            cache.clear();\r\n            this._cachedNativeTextures.delete(nativeTexture);\r\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\r\n        }\r\n    }\r\n\r\n    getTintTexture(nativeTexture, color) {\r\n        const frame = this.stage.frameCounter;\r\n\r\n        this._cachedNativeTextures.add(nativeTexture);\r\n\r\n        const cache = this._getCache(nativeTexture);\r\n\r\n        const item = cache.get(color);\r\n        item.lf = frame;\r\n\r\n        if (item.tx) {\r\n            if (nativeTexture.update > item.u) {\r\n                // Native texture was updated in the mean time: renew.\r\n                this._tintTexture(item.tx, nativeTexture, color)\r\n            }\r\n\r\n            return item.tx;\r\n        } else {\r\n            const before = cache.memoryUsage;\r\n\r\n            // Find blanco tint texture.\r\n            let target = cache.reuseTexture(frame);\r\n            if (target) {\r\n                target.ctx.clearRect(0, 0, target.width, target.height);\r\n            } else {\r\n                // Allocate new.\r\n                target = document.createElement('canvas');\r\n                target.width = nativeTexture.w;\r\n                target.height = nativeTexture.h;\r\n                target.ctx = target.getContext('2d');\r\n            }\r\n\r\n            this._tintTexture(target, nativeTexture, color);\r\n            cache.set(color, target, frame);\r\n\r\n            const after = cache.memoryUsage;\r\n\r\n            if (after !== before) {\r\n                this._addMemoryUsage(after - before);\r\n            }\r\n\r\n            return target;\r\n        }\r\n    }\r\n\r\n    _tintTexture(target, source, color) {\r\n        let col = color.toString(16);\r\n        while (col.length < 6) {\r\n            col = \"0\" + col;\r\n        }\r\n        target.ctx.fillStyle = '#' + col;\r\n        target.ctx.globalCompositeOperation = 'copy';\r\n        target.ctx.fillRect(0, 0, source.w, source.h);\r\n        target.ctx.globalCompositeOperation = 'multiply';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n\r\n        // Alpha-mix the texture.\r\n        target.ctx.globalCompositeOperation = 'destination-in';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n    }\r\n\r\n    _hasCache(nativeTexture) {\r\n        return !!nativeTexture._tintCache;\r\n    }\r\n\r\n    _getCache(nativeTexture) {\r\n        if (!nativeTexture._tintCache) {\r\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\r\n        }\r\n        return nativeTexture._tintCache;\r\n    }\r\n\r\n    gc(aggressive = false) {\r\n        const frame = this.stage.frameCounter;\r\n        let delta = 0;\r\n        this._cachedNativeTextures.forEach(texture => {\r\n            const cache = this._getCache(texture);\r\n            if (aggressive) {\r\n                delta += cache.memoryUsage;\r\n                cache.clear();\r\n            } else {\r\n                const before = cache.memoryUsage;\r\n                cache.cleanup(frame);\r\n                cache.releaseBlancoTextures();\r\n                delta += (cache.memoryUsage - before);\r\n            }\r\n        });\r\n\r\n        if (aggressive) {\r\n            this._cachedNativeTextures.clear();\r\n        }\r\n\r\n        if (delta) {\r\n            this._addMemoryUsage(delta);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass C2dTintCache {\r\n\r\n    constructor(nativeTexture) {\r\n        this._tx = nativeTexture;\r\n        this._colors = new Map();\r\n        this._blancoTextures = null;\r\n        this._lastCleanupFrame = 0;\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get memoryUsage() {\r\n        return this._memTextures * this._tx.w * this._tx.h;\r\n    }\r\n\r\n    releaseBlancoTextures() {\r\n        this._memTextures -= this._blancoTextures.length;\r\n        this._blancoTextures = [];\r\n    }\r\n\r\n    clear() {\r\n        // Dereference the textures.\r\n        this._blancoTextures = null;\r\n        this._colors.clear();\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get(color) {\r\n        let item = this._colors.get(color);\r\n        if (!item) {\r\n            item = {lf: -1, tx: undefined, u: -1};\r\n            this._colors.set(color, item);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    set(color, texture, frame) {\r\n        const item = this.get(color);\r\n        item.lf = frame;\r\n        item.tx = texture;\r\n        item.u = frame;\r\n        this._memTextures++;\r\n    }\r\n\r\n    cleanup(frame) {\r\n        // We only need to clean up once per frame.\r\n        if (this._lastCleanupFrame !== frame) {\r\n\r\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\r\n            this._blancoTextures = [];\r\n\r\n            this._colors.forEach((item, color) => {\r\n                // Clean up entries that were not used last frame.\r\n                if (item.lf < frame - 1) {\r\n                    if (item.tx) {\r\n                        // Keep as reusable blanco texture.\r\n                        this._blancoTextures.push(item.tx);\r\n                    }\r\n                    this._colors.delete(color);\r\n                }\r\n            });\r\n\r\n            this._lastCleanupFrame = frame;\r\n        }\r\n    }\r\n\r\n    reuseTexture(frame) {\r\n        // Try to reuse textures, because creating them every frame is expensive.\r\n        this.cleanup(frame);\r\n        if (this._blancoTextures && this._blancoTextures.length) {\r\n            this._memTextures--;\r\n            return this._blancoTextures.pop();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\r\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\r\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport C2dShader from \"./C2dShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\r\n\r\nexport default class C2dRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this.tintManager = new TextureTintManager(stage);\r\n\r\n        this.setupC2d(this.stage.c2d.canvas);\r\n    }\r\n\r\n    destroy() {\r\n        this.tintManager.destroy();\r\n\r\n        this.tintManager = null;\r\n        delete this.tintManager;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return C2dShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getC2d && shaderType.getC2d();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new C2dCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new C2dCoreRenderExecutor(ctx);\r\n    }\r\n    \r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = pw;\r\n        canvas.height = ph;\r\n        this.setupC2d(canvas);\r\n        return canvas;\r\n    }\r\n    \r\n    freeRenderTexture(nativeTexture) {\r\n        this.tintManager.delete(nativeTexture);\r\n    }\r\n\r\n    gc(aggressive) {\r\n        this.tintManager.gc(aggressive);\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        // For canvas, we do not need to upload.\r\n        if (options.source.buffer) {\r\n            // Convert RGBA buffer to canvas.\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = options.w;\r\n            canvas.height = options.h;\r\n\r\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\r\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\r\n            return canvas;\r\n        }\r\n\r\n        return options.source;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.tintManager.delete(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        // Render context changes while traversing so we save it by ref.\r\n        const elementCore = quads.quadElements[index];\r\n        quads.setRenderContext(index, elementCore._renderContext);\r\n        quads.setWhite(index, elementCore.isWhite());\r\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        // @todo: check render coords/matrix, maybe move this to core?\r\n        return false;\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n    }\r\n\r\n    setupC2d(canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.ctx = ctx;\r\n\r\n        ctx._scissor = null;\r\n\r\n        // Save base state so we can restore the defaults later.\r\n        canvas.ctx.save();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\r\n\r\nexport default class SparkShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    if (glTexture.options && glTexture.options.imageRef) {\r\n                        let elementPostion = (i > 0) ? (i - 1) : i;\r\n                        const precision = this.ctx.stage.getOption('precision');\r\n                        let vc = operation.getElementCore(elementPostion);\r\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                    } else {\r\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    }\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            if (pos < length) {\r\n                if (glTexture.options && glTexture.options.imageRef) {\r\n                    const precision = this.ctx.stage.getOption('precision');\r\n                    let vc = operation.getElementCore(pos);\r\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                } else {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nSparkShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nSparkShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\r\nimport SparkShader from \"./shaders/SparkShader.mjs\";\r\n\r\nexport default class SparkRenderer extends WebGLRenderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new SparkShader(ctx);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        global.beginDrawing();\r\n        let ret = super.createCoreRenderExecutor(ctx);\r\n        global.endDrawing();\r\n        return ret;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ImageWorker {\r\n\r\n    constructor(options = {}) {\r\n        this._items = new Map();\r\n        this._id = 0;\r\n\r\n        this._initWorker();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._worker) {\r\n            this._worker.terminate();\r\n        }\r\n\r\n        this._items = null;\r\n        this._worker = null;\r\n\r\n        delete this._items;\r\n        delete this._worker;        \r\n    }\r\n\r\n    _initWorker() {\r\n        const code = `(${createWorker.toString()})()`;\r\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\r\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\r\n            type: 'application/javascript; charset=utf-8'\r\n        });\r\n        this._worker = new Worker(blobURL);\r\n\r\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\r\n\r\n        this._worker.onmessage = (e) => {\r\n            if (e.data && e.data.id) {\r\n                const id = e.data.id;\r\n                const item = this._items.get(id);\r\n                if (item) {\r\n                    if (e.data.type == 'data') {\r\n                        this.finish(item, e.data.info);\r\n                    } else {\r\n                        this.error(item, e.data.info);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    create(src) {\r\n        const id = ++this._id;\r\n        const item = new ImageWorkerImage(this, id, src);\r\n        this._items.set(id, item);\r\n        this._worker.postMessage({type: \"add\", id: id, src: src});\r\n        return item;\r\n    }\r\n\r\n    cancel(image) {\r\n        this._worker.postMessage({type: \"cancel\", id: image.id});\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    error(image, info) {\r\n        image.error(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    finish(image, info) {\r\n        image.load(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n}\r\n\r\nclass ImageWorkerImage {\r\n\r\n    constructor(manager, id, src) {\r\n        this._manager = manager;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._onError = null;\r\n        this._onLoad = null;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set onError(f) {\r\n        this._onError = f;\r\n    }\r\n\r\n    set onLoad(f) {\r\n        this._onLoad = f;\r\n    }\r\n\r\n    cancel() {\r\n        this._manager.cancel(this);\r\n    }\r\n\r\n    load(info) {\r\n        if (this._onLoad) {\r\n            this._onLoad(info);\r\n        }\r\n    }\r\n\r\n    error(info) {\r\n        if (this._onError) {\r\n            this._onError(info);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\r\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\r\n */\r\nconst createWorker = function() {\r\n\r\n    function ImageWorkerServer() {\r\n\r\n        this.items = new Map();\r\n\r\n        var t = this;\r\n        onmessage = function(e) {\r\n            t._receiveMessage(e);\r\n        }\r\n\r\n    }\r\n\r\n    ImageWorkerServer.isPathAbsolute = function(path) {\r\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\r\n    };\r\n\r\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\r\n        if (e.data.type === 'config') {\r\n            this.config = e.data.config;\r\n\r\n            var base = this.config.path;\r\n            // the constructing of the basepath fails\r\n            // if location.hash contains a slash\r\n            var hasHashPath = /#.*?\\//;\r\n            if(hasHashPath.test(base)){\r\n                base = base.replace(/#.*$/,'');\r\n            }\r\n\r\n            var parts = base.split(\"/\");\r\n            parts.pop();\r\n            this._relativeBase = parts.join(\"/\") + \"/\";\r\n\r\n        } else if (e.data.type === 'add') {\r\n            this.add(e.data.id, e.data.src);\r\n        } else if (e.data.type === 'cancel') {\r\n            this.cancel(e.data.id);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServer.prototype.add = function(id, src) {\r\n        // Convert relative URLs.\r\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\r\n            src = this._relativeBase + src;\r\n        }\r\n\r\n        if (src.substr(0,2) === \"//\") {\r\n            // This doesn't work for image workers.\r\n            src = this.config.protocol + src;\r\n        }\r\n\r\n        var item = new ImageWorkerServerItem(id, src);\r\n        var t = this;\r\n        item.onFinish = function(result) {\r\n            t.finish(item, result);\r\n        };\r\n        item.onError = function(info) {\r\n            t.error(item, info);\r\n        };\r\n        this.items.set(id, item);\r\n        item.start();\r\n    };\r\n\r\n    ImageWorkerServer.prototype.cancel = function(id) {\r\n        var item = this.items.get(id);\r\n        if (item) {\r\n            item.cancel();\r\n            this.items.delete(id);\r\n        }\r\n    }\r\n\r\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\r\n        postMessage({\r\n            type: \"data\",\r\n            id: item.id,\r\n            info: {\r\n                imageBitmap,\r\n                hasAlphaChannel\r\n            }\r\n        }, [imageBitmap]);\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\r\n        postMessage({\r\n            type: \"error\",\r\n            id: item.id,\r\n            info: {\r\n                type,\r\n                message\r\n            }\r\n        });\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.isWPEBrowser = function() {\r\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\n    };\r\n\r\n    function ImageWorkerServerItem(id, src) {\r\n\r\n        this._onError = undefined;\r\n        this._onFinish = undefined;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._xhr = undefined;\r\n        this._mimeType = undefined;\r\n        this._canceled = false;\r\n\r\n    }\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\r\n        get: function() {\r\n            return this._id;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\r\n        get: function() {\r\n            return this._onFinish;\r\n        },\r\n        set: function(f) {\r\n            this._onFinish = f;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\r\n        get: function() {\r\n            return this._onError;\r\n        },\r\n        set: function(f) {\r\n            this._onError = f;\r\n        }\r\n    });\r\n\r\n    ImageWorkerServerItem.prototype.start = function() {\r\n        this._xhr = new XMLHttpRequest();\r\n        this._xhr.open(\"GET\", this._src, true);\r\n        this._xhr.responseType = \"blob\";\r\n\r\n        var t = this;\r\n        this._xhr.onerror = function(oEvent) {\r\n            t.error({type: \"connection\", message: \"Connection error\"});\r\n        };\r\n\r\n        this._xhr.onload = function(oEvent) {\r\n            var blob = t._xhr.response;\r\n            t._mimeType = blob.type;\r\n\r\n            t._createImageBitmap(blob);\r\n        };\r\n\r\n        this._xhr.send();\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\r\n        var t = this;\r\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\r\n            t.finish({\r\n                imageBitmap,\r\n                hasAlphaChannel: t._hasAlphaChannel()\r\n            });\r\n        }).catch(function(e) {\r\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\r\n        });\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\r\n        if (ImageWorkerServer.isWPEBrowser()) {\r\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\r\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\r\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\r\n            return true;\r\n        } else {\r\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.cancel = function() {\r\n        if (this._canceled) return;\r\n        if (this._xhr) {\r\n            this._xhr.abort();\r\n        }\r\n        this._canceled = true;\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.error = function(type, message) {\r\n        if (!this._canceled && this._onError) {\r\n            this._onError({type, message});\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.finish = function(info) {\r\n        if (!this._canceled && this._onFinish) {\r\n            this._onFinish(info);\r\n        }\r\n    };\r\n\r\n    var worker = new ImageWorkerServer();\r\n};\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport ImageWorker from \"./ImageWorker.mjs\";\r\n\r\n/**\r\n * Platform-specific functionality.\r\n */\r\nexport default class WebPlatform {\r\n\r\n    init(stage) {\r\n        this.stage = stage;\r\n        this._looping = false;\r\n        this._awaitingLoop = false;\r\n\r\n        // Alternative handler to avoid RAF when idle\r\n        this._loopHandler = null;\r\n        this._idleLoopCounter = 0;\r\n        this._idleLoopDelay = 60;\r\n\r\n        if (this.stage.getOption(\"useImageWorker\")) {\r\n            if (!window.createImageBitmap || !window.Worker) {\r\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\r\n            } else {\r\n                this._imageWorker = new ImageWorker();\r\n            }\r\n        }\r\n\r\n        this._registerVisibilityChangeHandler();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._imageWorker) {\r\n            this._imageWorker.destroy();\r\n        }\r\n\r\n        clearInterval(this._loopHandler);\r\n\r\n        this._removeKeyHandler();\r\n        this._removeClickHandler();\r\n        this._removeHoverHandler();\r\n        this._removeScrollWheelHandler();\r\n        this._removeVisibilityChangeHandler();\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    startLoop() {\r\n        this._looping = true;\r\n        if (!this._awaitingLoop) {\r\n            this.loop();\r\n        }\r\n    }\r\n\r\n    stopLoop() {\r\n        this._looping = false;\r\n    }\r\n\r\n    switchLoop() {\r\n        if (this._idleLoopCounter < this._idleLoopDelay) {\r\n            this._idleLoopCounter++;\r\n            return;\r\n        }\r\n        if (!this.stage.ctx.hasRenderUpdates()) {\r\n            this.stopLoop();\r\n            this._loopHandler = setInterval(() => {\r\n                this.stage.updateFrame();\r\n                this.stage.idleFrame();\r\n                if (this.stage.ctx.hasRenderUpdates()) {\r\n                    clearInterval(this._loopHandler);\r\n                    this.startLoop();\r\n                };\r\n            }, 1000 / 60);\r\n        } else {\r\n            this._idleLoopCounter = 0;\r\n        }\r\n    }\r\n\r\n    loop() {\r\n        let self = this;\r\n        let lp = function () {\r\n            self._awaitingLoop = false;\r\n            if (self._looping) {\r\n                self.stage.updateFrame();\r\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\r\n                    self.switchLoop();\r\n                }\r\n                self.stage.renderFrame();\r\n                requestAnimationFrame(lp);\r\n                self._awaitingLoop = true;\r\n            }\r\n        }\r\n        requestAnimationFrame(lp);\r\n    }\r\n\r\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\r\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\r\n        gl.compressedTexImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            source.glInternalFormat,\r\n            source.pixelWidth,\r\n            source.pixelHeight,\r\n            0,\r\n            view,\r\n        )\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    uploadGlTexture(gl, textureSource, source, options) {\r\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\r\n            // Web-specific data types.\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n        } else if (source instanceof HTMLCanvasElement) {\r\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\r\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n            } else if (source.width > 0 && source.height > 0) {\r\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\r\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\r\n                const ctx = source.getContext('2d');\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\r\n            }\r\n        } else {\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * KTX File format specification\r\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n     **/\r\n    handleKtxLoad(cb, src) {\r\n        var self = this;\r\n        return function () {\r\n            var arraybuffer = this.response;\r\n            var view = new DataView(arraybuffer);\r\n\r\n            // identifier, big endian\r\n            var targetIdentifier = 3632701469\r\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\r\n                cb('Parsing failed: identifier ktx mismatch:', src)\r\n            }\r\n\r\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\r\n            var data = {\r\n                glType: view.getUint32(16, littleEndian),\r\n                glTypeSize: view.getUint32(20, littleEndian),\r\n                glFormat: view.getUint32(24, littleEndian),\r\n                glInternalFormat: view.getUint32(28, littleEndian),\r\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\r\n                pixelWidth: view.getUint32(36, littleEndian),\r\n                pixelHeight: view.getUint32(40, littleEndian),\r\n                pixelDepth: view.getUint32(44, littleEndian),\r\n                numberOfArrayElements: view.getUint32(48, littleEndian),\r\n                numberOfFaces: view.getUint32(52, littleEndian),\r\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\r\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\r\n                kvps: [],\r\n                mipmaps: [],\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            const props = (obj) => {\r\n                const p = [];\r\n                for (let v in obj) {\r\n                    p.push(obj[v]);\r\n                }\r\n                return p;\r\n            }\r\n\r\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\r\n                .filter((obj) => obj != null)\r\n                .map((obj) => props(obj))\r\n                .reduce((prev, current) => prev.concat(current));\r\n\r\n            if (!formats.includes(data.glInternalFormat)) {\r\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\r\n            }\r\n\r\n            var offset = 64\r\n            // Key Value Pairs of data start at byte offset 64\r\n            // But the only known kvp is the API version, so skipping parsing.\r\n            offset += data.bytesOfKeyValueData;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                var imageSize = view.getUint32(offset);\r\n                offset += 4;\r\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\r\n                offset += imageSize\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePvrLoad(cb, src) {\r\n        return function () {\r\n            // pvr header length in 32 bits\r\n            const pvrHeaderLength = 13;\r\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\r\n            const pvrFormatEtc1 = 0x8D64;\r\n            const pvrWidth = 7;\r\n            const pvrHeight = 6;\r\n            const pvrMipmapCount = 11;\r\n            const pvrMetadata = 12;\r\n            const arrayBuffer = this.response;\r\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\r\n            const dataOffset = header[pvrMetadata] + 52;\r\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\r\n\r\n            var data = {\r\n                glInternalFormat: pvrFormatEtc1,\r\n                pixelWidth: header[pvrWidth],\r\n                pixelHeight: header[pvrHeight],\r\n                numberOfMipmapLevels: header[pvrMipmapCount],\r\n                mipmaps: [],\r\n                pvr: true,\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            let offset = 0\r\n            let width = data.pixelWidth;\r\n            let height = data.pixelHeight;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\r\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\r\n                data.mipmaps.push(view);\r\n                offset += level;\r\n                width = width >> 1;\r\n                height = height >> 1;\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    loadSrcTexture({ src, hasAlpha }, cb) {\r\n        let cancelCb = undefined;\r\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\r\n        // shahid splash service uses the type query param to determine the format.\r\n        let isKtx = src.indexOf('.ktx') >= 0 || src.indexOf('type=etc') >= 0;\r\n        let isPvr = src.indexOf('.pvr') >= 0;\r\n        if (isKtx || isPvr) {\r\n            let request = new XMLHttpRequest();\r\n            request.addEventListener(\r\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\r\n            );\r\n            request.open(\"GET\", src);\r\n            request.responseType = \"arraybuffer\";\r\n            request.send();\r\n            cancelCb = function () {\r\n                request.abort();\r\n            }\r\n        } else if (this._imageWorker) {\r\n            // WPE-specific image parser.\r\n            const image = this._imageWorker.create(src);\r\n            image.onError = function (err) {\r\n                return cb(\"Image load error\");\r\n            };\r\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\r\n                cb(null, {\r\n                    source: imageBitmap,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: hasAlphaChannel,\r\n                    premultiplyAlpha: true\r\n                });\r\n            };\r\n            cancelCb = function () {\r\n                image.cancel();\r\n            }\r\n        } else {\r\n            let image = new Image();\r\n\r\n            // On the PS4 platform setting the `crossOrigin` attribute on\r\n            // images can cause CORS failures.\r\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\r\n                // Base64.\r\n                image.crossOrigin = \"Anonymous\";\r\n            }\r\n            image.onerror = function (err) {\r\n                // Ignore error message when cancelled.\r\n                if (image.src) {\r\n                    return cb(\"Image load error\");\r\n                }\r\n            };\r\n            image.onload = function () {\r\n                cb(null, {\r\n                    source: image,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: isPng || hasAlpha\r\n                });\r\n            };\r\n            image.src = src;\r\n\r\n            cancelCb = function () {\r\n                image.onerror = null;\r\n                image.onload = null;\r\n                image.removeAttribute('src');\r\n            }\r\n        }\r\n\r\n        return cancelCb;\r\n    }\r\n\r\n    createWebGLContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let opts = {\r\n            alpha: true,\r\n            antialias: false,\r\n            premultipliedAlpha: true,\r\n            stencil: true,\r\n            preserveDrawingBuffer: false\r\n        };\r\n\r\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\r\n\r\n        if (!gl) {\r\n            throw new Error('This browser does not support webGL.');\r\n        }\r\n\r\n        return gl;\r\n    }\r\n\r\n    createCanvasContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let c2d = canvas.getContext('2d');\r\n        if (!c2d) {\r\n            throw new Error('This browser does not support 2d canvas.');\r\n        }\r\n\r\n        return c2d;\r\n    }\r\n\r\n    getHrTime() {\r\n        return window.performance ? window.performance.now() : (new Date()).getTime();\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        // We can't reuse this canvas because textures may load async.\r\n        return document.createElement('canvas');\r\n    }\r\n\r\n    getTextureOptionsForDrawingCanvas(canvas) {\r\n        let options = {};\r\n        options.source = canvas;\r\n        return options;\r\n    }\r\n\r\n    nextFrame(changes) {\r\n        /* WebGL blits automatically */\r\n    }\r\n\r\n    registerKeydownHandler(keyhandler) {\r\n        this._keydownListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keydown', this._keydownListener);\r\n    }\r\n\r\n    registerKeyupHandler(keyhandler) {\r\n        this._keyupListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keyup', this._keyupListener);\r\n    }\r\n\r\n    _removeKeyHandler() {\r\n        if (this._keydownListener) {\r\n            window.removeEventListener('keydown', this._keydownListener);\r\n        }\r\n\r\n        if (this._keyupListener) {\r\n            window.removeEventListener('keyup', this._keyupListener);\r\n        }\r\n    }\r\n\r\n    registerClickHandler(clickHandler) {\r\n        this._clickListener = e => {\r\n            clickHandler(e);\r\n        };\r\n        window.addEventListener('mousedown', this._clickListener);\r\n    }\r\n\r\n    _removeClickHandler() {\r\n        if (this._clickListener) {\r\n            window.removeEventListener('mousedown', this._clickListener);\r\n        }\r\n    }\r\n\r\n    registerHoverHandler(hoverHandler) {\r\n        this._hoverListener = e => {\r\n            hoverHandler(e);\r\n        };\r\n        window.addEventListener('mousemove', this._hoverListener);\r\n    }\r\n\r\n    _removeHoverHandler() {\r\n        if (this._hoverListener) {\r\n            window.removeEventListener('mousemove', this._hoverListener);\r\n        }\r\n    }\r\n\r\n    registerScrollWheelHandler(registerScrollWheelHandler) {\r\n        this._scrollWheelListener = e => {\r\n            registerScrollWheelHandler(e);\r\n        }\r\n        window.addEventListener('wheel', this._scrollWheelListener);\r\n    }\r\n\r\n    _removeScrollWheelHandler() {\r\n        if (this._scrollWheelListener) {\r\n            window.removeEventListener('wheel', this._scrollWheelListener);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\r\n     */\r\n    _registerVisibilityChangeHandler() {\r\n        this._visibilityChangeHandler = () => {\r\n            if (document.visibilityState === 'visible') {\r\n                this.stage.root.core.setHasRenderUpdates(2);\r\n                this.stage.renderFrame();\r\n            }\r\n        }\r\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\r\n    }\r\n\r\n    _removeVisibilityChangeHandler() {\r\n        if (this._visibilityChangeHandler) {\r\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\r\n\r\nexport default class PlatformLoader {\r\n    static load(options) {\r\n        if (options.platform) {\r\n            return options.platform;\r\n        } else {\r\n            return WebPlatform;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value == 'string';\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object' || type == 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\r\n        } else {\r\n            return v1 === v2\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Maintains the state of a WebGLRenderingContext.\r\n */\r\nclass WebGLState {\r\n\r\n    constructor(id, gl) {\r\n        this._id = id;\r\n        this._gl = gl;\r\n        this._program = undefined;\r\n        this._buffers = new Map();\r\n        this._framebuffers = new Map();\r\n        this._renderbuffers = new Map();\r\n\r\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\r\n        this._vertexAttribs = new Array(16);\r\n        this._nonDefaultFlags = new Set();\r\n        this._settings = new Map();\r\n        this._textures = new Array(8);\r\n        this._maxTexture = 0;\r\n        this._activeTexture = gl.TEXTURE0;\r\n        this._pixelStorei = new Array(5);\r\n    }\r\n\r\n    _getDefaultFlag(cap) {\r\n        return (cap === this._gl.DITHER);\r\n    }\r\n\r\n    setFlag(cap, v) {\r\n        const def = this._getDefaultFlag(cap);\r\n        if (v === def) {\r\n            return this._nonDefaultFlags.delete(cap);\r\n        } else {\r\n            if (!this._nonDefaultFlags.has(cap)) {\r\n                this._nonDefaultFlags.add(cap);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setBuffer(target, buffer) {\r\n        const change = this._buffers.get(target) !== buffer;\r\n        this._buffers.set(target, buffer);\r\n\r\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\r\n            // When the array buffer is changed all attributes are cleared.\r\n            this._vertexAttribs = [];\r\n        }\r\n\r\n        return change;\r\n    }\r\n\r\n    setFramebuffer(target, buffer) {\r\n        const change = this._framebuffers.get(target) !== buffer;\r\n        this._framebuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setRenderbuffer(target, buffer) {\r\n        const change = this._renderbuffers.get(target) !== buffer;\r\n        this._renderbuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setProgram(program) {\r\n        const change = this._program !== program;\r\n        this._program = program;\r\n        return change\r\n    }\r\n\r\n    setSetting(func, v) {\r\n        const s = this._settings.get(func);\r\n        const change = !s || !Utils.equalValues(s, v);\r\n        this._settings.set(func, v);\r\n        return change\r\n    }\r\n\r\n    disableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va && va[5]) {\r\n            va[5] = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    enableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va) {\r\n            if (!va[0]) {\r\n                va[0] = true;\r\n                return true;\r\n            }\r\n        } else {\r\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    vertexAttribPointer(index, props) {\r\n        let va = this._vertexAttribs[index];\r\n        let equal = false;\r\n        if (va) {\r\n            equal = va[0] === props[0] &&\r\n                va[1] === props[1] &&\r\n                va[2] === props[2] &&\r\n                va[3] === props[3] &&\r\n                va[4] === props[4];\r\n        }\r\n\r\n        if (equal) {\r\n            return false;\r\n        } else {\r\n            props[5] = va ? va[5] : false;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setActiveTexture(texture) {\r\n        const changed = this._activeTexture !== texture;\r\n        this._activeTexture = texture;\r\n        return changed;\r\n    }\r\n\r\n    bindTexture(target, texture) {\r\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\r\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\r\n        const current = this._textures[activeIndex];\r\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\r\n        if (current) {\r\n            if (current[targetIndex] === texture) {\r\n                return false;\r\n            }\r\n            current[targetIndex] = texture;\r\n            return true;\r\n        } else {\r\n            if (texture) {\r\n                this._textures[activeIndex] = [];\r\n                this._textures[activeIndex][targetIndex] = texture;\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    setPixelStorei(pname, param) {\r\n        const i = WebGLState._getPixelStoreiIndex(pname);\r\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\r\n        this._pixelStorei[i] = param;\r\n        return change;\r\n    }\r\n\r\n    migrate(s) {\r\n        const t = this;\r\n\r\n        // Warning: migrate should call the original prototype methods directly.\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        // useProgram\r\n        if (s._program !== t._program) {\r\n            this._gl._useProgram(s._program);\r\n        }\r\n\r\n        this._migrateFramebuffers(t, s);\r\n        this._migrateRenderbuffers(t, s);\r\n\r\n        const buffersChanged = this._migrateBuffers(t, s);\r\n        this._migrateAttributes(t, s, buffersChanged);\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        this._migrateSettings(t, s);\r\n\r\n        this._migratePixelStorei(t, s);\r\n        \r\n        this._migrateTextures(t, s);\r\n        \r\n    }\r\n\r\n    _migratePixelStorei(t, s) {\r\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\r\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\r\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\r\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\r\n            }\r\n        }\r\n    }\r\n\r\n    _migrateTextures(t, s) {\r\n        const max = Math.max(t._maxTexture, s._maxTexture);\r\n\r\n        let activeTexture = t._activeTexture;\r\n\r\n        for (let i = 0; i < max; i++) {\r\n            const sTargets = s._textures[i];\r\n            const tTargets = t._textures[i];\r\n            const textureNumb = WebGLState._getTextureByIndex(i);\r\n\r\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\r\n            for (let j = 0, n = targetMax; j < n; j++) {\r\n                const target = WebGLState._getTextureTargetByIndex(j);\r\n                if (activeTexture !== textureNumb) {\r\n                    this._gl._activeTexture(textureNumb);\r\n                    activeTexture = textureNumb;\r\n                }\r\n\r\n                const texture = (sTargets && sTargets[j]) || null;\r\n                this._gl._bindTexture(target, texture);\r\n            }\r\n        }\r\n\r\n        if (s._activeTexture !== activeTexture) {\r\n            this._gl._activeTexture(s._activeTexture);\r\n        }\r\n    }\r\n\r\n    _migrateBuffers(t, s) {\r\n        s._buffers.forEach((framebuffer, target) => {\r\n            if (t._buffers.get(target) !== framebuffer) {\r\n                this._gl._bindBuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._buffers.forEach((buffer, target) => {\r\n            const b = s._buffers.get(target);\r\n            if (b === undefined) {\r\n                this._gl._bindBuffer(target, null);\r\n            }\r\n        });\r\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\r\n    }\r\n\r\n    _migrateFramebuffers(t, s) {\r\n        s._framebuffers.forEach((framebuffer, target) => {\r\n            if (t._framebuffers.get(target) !== framebuffer) {\r\n                this._gl._bindFramebuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._framebuffers.forEach((framebuffer, target) => {\r\n            const fb = s._framebuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindFramebuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateRenderbuffers(t, s) {\r\n        s._renderbuffers.forEach((renderbuffer, target) => {\r\n            if (t._renderbuffers.get(target) !== renderbuffer) {\r\n                this._gl._bindRenderbuffer(target, renderbuffer);\r\n            }\r\n        });\r\n\r\n        t._renderbuffers.forEach((renderbuffer, target) => {\r\n            const fb = s._renderbuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindRenderbuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateAttributes(t, s, buffersChanged) {\r\n\r\n        if (!buffersChanged) {\r\n            t._vertexAttribs.forEach((attrib, index) => {\r\n                if (!s._vertexAttribs[index]) {\r\n                    // We can't 'delete' a vertex attrib so we'll disable it.\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                } else {\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n        } else {\r\n            // When buffers are changed, previous attributes were reset automatically.\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                if (attrib[0]) {\r\n                    // Do not set vertex attrib pointer when it was just the default value.\r\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\r\n                }\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _migrateSettings(t, s) {\r\n        const defaults = this.constructor.getDefaultSettings();\r\n        t._settings.forEach((value, func) => {\r\n            const name = func.name || func.xname;\r\n            if (!s._settings.has(func)) {\r\n                let args = defaults.get(name);\r\n                if (Utils.isFunction(args)) {\r\n                    args = args(this._gl);\r\n                }\r\n                // We are actually setting the setting for optimization purposes.\r\n                s._settings.set(func, args);\r\n                func.apply(this._gl, args);\r\n            }\r\n        });\r\n        s._settings.forEach((value, func) => {\r\n            const tValue = t._settings.get(func);\r\n            if (!tValue || !Utils.equalValues(tValue, value)) {\r\n                func.apply(this._gl, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateFlags(t, s) {\r\n        t._nonDefaultFlags.forEach(setting => {\r\n            if (!s._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._enable(setting);\r\n                } else {\r\n                    this._gl._disable(setting);\r\n                }\r\n            }\r\n        });\r\n        s._nonDefaultFlags.forEach(setting => {\r\n            if (!t._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._disable(setting);\r\n                } else {\r\n                    this._gl._enable(setting);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static getDefaultSettings() {\r\n        if (!this._defaultSettings) {\r\n            this._defaultSettings = new Map();\r\n            const d = this._defaultSettings;\r\n            const g = WebGLRenderingContext.prototype;\r\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"blendColor\", [0, 0, 0, 0]);\r\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\r\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\r\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\r\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\r\n            d.set(\"clearColor\", [0, 0, 0, 0]);\r\n            d.set(\"clearDepth\", [1]);\r\n            d.set(\"clearStencil\", [0]);\r\n            d.set(\"colorMask\", [true, true, true, true]);\r\n            d.set(\"cullFace\", [g.BACK]);\r\n            d.set(\"depthFunc\", [g.LESS]);\r\n            d.set(\"depthMask\", [true]);\r\n            d.set(\"depthRange\", [0, 1]);\r\n            d.set(\"frontFace\", [g.CCW]);\r\n            d.set(\"lineWidth\", [1]);\r\n            d.set(\"polygonOffset\", [0, 0]);\r\n            d.set(\"sampleCoverage\", [1, false]);\r\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"stencilMask\", [1]);\r\n            d.set(\"_stencilMaskSeparateFront\", [1]);\r\n            d.set(\"_stencilMaskSeparateBack\", [1]);\r\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\r\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"vertexAttrib1f\", []);\r\n            d.set(\"vertexAttrib1fv\", []);\r\n            d.set(\"vertexAttrib2f\", []);\r\n            d.set(\"vertexAttrib2fv\", []);\r\n            d.set(\"vertexAttrib3f\", []);\r\n            d.set(\"vertexAttrib3fv\", []);\r\n            d.set(\"vertexAttrib4f\", []);\r\n            d.set(\"vertexAttrib4fv\", []);\r\n        }\r\n        return this._defaultSettings\r\n    }\r\n\r\n    static _getTextureTargetIndex(target) {\r\n        switch(target) {\r\n            case 0x0DE1:\r\n                /* TEXTURE_2D */\r\n                return 0;\r\n            case 0x8513:\r\n                /* TEXTURE_CUBE_MAP */\r\n                return 1;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown texture target: ' + target);\r\n        }\r\n    }\r\n\r\n    static _getTextureTargetByIndex(index) {\r\n        if (!this._textureTargetIndices) {\r\n            this._textureTargetIndices = [0x0DE1, 0x8513];\r\n        }\r\n        return this._textureTargetIndices[index]\r\n    }\r\n\r\n    static _getTextureIndex(index) {\r\n        return index - 0x84C0 /* GL_TEXTURE0 */;\r\n    }\r\n\r\n    static _getTextureByIndex(index) {\r\n        return index + 0x84C0;\r\n    }\r\n\r\n    static _getPixelStoreiIndex(pname) {\r\n        switch(pname) {\r\n            case 0x0D05:\r\n                /* PACK_ALIGNMENT */\r\n                return 0;\r\n            case 0x0CF5:\r\n                /* UNPACK_ALIGNMENT */\r\n                return 1;\r\n            case 0x9240:\r\n                /* UNPACK_FLIP_Y_WEBGL */\r\n                return 2;\r\n            case 0x9241:\r\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\r\n                return 3;\r\n            case 0x9243:\r\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\r\n                return 4;\r\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\r\n            case 0x9245:\r\n                /* UNPACK_FLIP_BLUE_RED */\r\n                return 5;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown pixelstorei: ' + pname);\r\n        }\r\n    }\r\n\r\n    static _getPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiIndices) {\r\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\r\n        }\r\n        return this._pixelStoreiIndices[index]\r\n    }\r\n\r\n    static _getDefaultPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiDefaults) {\r\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\r\n        }\r\n        return this._pixelStoreiDefaults[index]\r\n    }\r\n}\r\n\r\nclass WebGLStateManager {\r\n\r\n    _initStateManager(id = \"default\") {\r\n        this._states = {};\r\n        this._state = this._getState(id);\r\n    }\r\n\r\n    _getState(id) {\r\n        if (!this._states[id]) {\r\n            this._states[id] = new WebGLState(id, this);\r\n        }\r\n        return this._states[id];\r\n    }\r\n\r\n    switchState(id = \"default\") {\r\n        if (this._state._id !== id) {\r\n            const newState = this._getState(id);\r\n            this._state.migrate(newState);\r\n            this._state = newState;\r\n        }\r\n    }\r\n\r\n    $useProgram(program) {\r\n        if (this._state.setProgram(program))\r\n            this._useProgram(program);\r\n    }\r\n\r\n    $bindBuffer(target, fb) {\r\n        if (this._state.setBuffer(target, fb))\r\n            this._bindBuffer(target, fb);\r\n    }\r\n\r\n    $bindFramebuffer(target, fb) {\r\n        if (this._state.setFramebuffer(target, fb))\r\n            this._bindFramebuffer(target, fb);\r\n    }\r\n\r\n    $bindRenderbuffer(target, fb) {\r\n        if (this._state.setRenderbuffer(target, fb))\r\n            this._bindRenderbuffer(target, fb);\r\n    }\r\n\r\n    $enable(cap) {\r\n        if (this._state.setFlag(cap, true))\r\n            this._enable(cap);\r\n    }\r\n\r\n    $disable(cap) {\r\n        if (this._state.setFlag(cap, false))\r\n            this._disable(cap);\r\n    }\r\n\r\n    $viewport(x, y, w, h) {\r\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\r\n            this._viewport(x, y, w, h);\r\n    }\r\n\r\n    $scissor(x, y, w, h) {\r\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\r\n            this._scissor(x, y, w, h);\r\n    }\r\n\r\n    $disableVertexAttribArray(index) {\r\n        if (this._state.disableVertexAttribArray(index))\r\n            this._disableVertexAttribArray(index);\r\n    }\r\n\r\n    $enableVertexAttribArray(index) {\r\n        if (this._state.enableVertexAttribArray(index))\r\n            this._enableVertexAttribArray(index);\r\n    }\r\n\r\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\r\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n    }\r\n\r\n    $activeTexture(texture) {\r\n        if (this._state.setActiveTexture(texture))\r\n            this._activeTexture(texture);\r\n    }\r\n\r\n    $bindTexture(target, texture) {\r\n        if (this._state.bindTexture(target, texture))\r\n            this._bindTexture(target, texture);\r\n    }\r\n\r\n    $pixelStorei(pname, param) {\r\n        if (this._state.setPixelStorei(pname, param)) {\r\n            this._pixelStorei(pname, param);\r\n        }\r\n    }\r\n\r\n    $stencilFuncSeparate(face, func, ref, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilFuncSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilFuncSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilFuncSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [func, ref, mask]))\r\n            f.apply(this, [func, ref, mask]);\r\n    }\r\n\r\n    _stencilFuncSeparateFront(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\r\n    }\r\n\r\n    $stencilMaskSeparate(face, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilMaskSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilMaskSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilMaskSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [mask]))\r\n            f.apply(this, [mask]);\r\n    }\r\n\r\n    _stencilMaskSeparateFront(mask) {\r\n        this._stencilMaskSeparate(this.FRONT, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateBack(mask) {\r\n        this._stencilMaskSeparate(this.BACK, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateFrontAndBack(mask) {\r\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\r\n    }\r\n\r\n    $stencilOpSeparate(face, fail, zfail, zpass) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilOpSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilOpSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilOpSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\r\n            f.apply(this, [fail, zfail, zpass]);\r\n    }\r\n\r\n    _stencilOpSeparateFront(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    $blendColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\r\n            this._blendColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $blendEquation(mode) {\r\n        if (this._state.setSetting(this._blendEquation, [mode]))\r\n            this._blendEquation(mode);\r\n    }\r\n\r\n    $blendEquationSeparate(modeRGB, modeAlpha) {\r\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\r\n            this._blendEquationSeparate(modeRGB, modeAlpha);\r\n    }\r\n\r\n    $blendFunc(sfactor, dfactor) {\r\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\r\n            this._blendFunc(sfactor, dfactor);\r\n    }\r\n\r\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\r\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\r\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    $clearColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\r\n            this._clearColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $clearDepth(depth) {\r\n        if (this._state.setSetting(this._clearDepth, [depth]))\r\n            this._clearDepth(depth);\r\n    }\r\n\r\n    $clearStencil(s) {\r\n        if (this._state.setSetting(this._clearStencil, [s]))\r\n            this._clearStencil(s);\r\n    }\r\n\r\n    $colorMask(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\r\n            this._colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    $cullFace(mode) {\r\n        if (this._state.setSetting(this._cullFace, [mode]))\r\n            this._cullFace(mode);\r\n    }\r\n\r\n    $depthFunc(func) {\r\n        if (this._state.setSetting(this._depthFunc, [func]))\r\n            this._depthFunc(func);\r\n    }\r\n\r\n    $depthMask(flag) {\r\n        if (this._state.setSetting(this._depthMask, [flag]))\r\n            this._depthMask(flag);\r\n    }\r\n\r\n    $depthRange(zNear, zFar) {\r\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\r\n            this._depthRange(zNear, zFar);\r\n    }\r\n\r\n    $frontFace(mode) {\r\n        if (this._state.setSetting(this._frontFace, [mode]))\r\n            this._frontFace(mode);\r\n    }\r\n\r\n    $lineWidth(width) {\r\n        if (this._state.setSetting(this._lineWidth, [width]))\r\n            this._lineWidth(width);\r\n    }\r\n\r\n    $polygonOffset(factor, units) {\r\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\r\n            this._polygonOffset(factor, units);\r\n    }\r\n\r\n    $sampleCoverage(value, invert) {\r\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\r\n            this._sampleCoverage(value, invert);\r\n    }\r\n\r\n    $stencilFunc(func, ref, mask) {\r\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\r\n            this._stencilFunc(func, ref, mask);\r\n    }\r\n\r\n    $stencilMask(mask) {\r\n        if (this._state.setSetting(this._stencilMask, [mask]))\r\n            this._stencilMask(mask);\r\n    }\r\n\r\n    $stencilOp(fail, zfail, zpass) {\r\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\r\n            this._stencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n    $vertexAttrib1f(indx, x) {\r\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\r\n            this._vertexAttrib1f(indx, x);\r\n    }\r\n\r\n    $vertexAttrib1fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\r\n            this._vertexAttrib1fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib2f(indx, x, y) {\r\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\r\n            this._vertexAttrib2f(indx, x, y);\r\n    }\r\n\r\n    $vertexAttrib2fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\r\n            this._vertexAttrib2fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib3f(indx, x, y, z) {\r\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\r\n            this._vertexAttrib3f(indx, x, y, z);\r\n    }\r\n\r\n    $vertexAttrib3fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\r\n            this._vertexAttrib3fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib4f(indx, x, y, z, w) {\r\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\r\n            this._vertexAttrib4f(indx, x, y, z, w);\r\n    }\r\n\r\n    $vertexAttrib4fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\r\n            this._vertexAttrib4fv(indx, values);\r\n    }\r\n\r\n    /**\r\n     * Sets up the rendering context for context sharing.\r\n     * @param {WebGLRenderingContext} gl\r\n     * @param {string} id\r\n     */\r\n    static enable(gl, id = \"default\") {\r\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\r\n        const WebGLRenderingContextProto = gl.__proto__;\r\n        names.forEach(name => {\r\n            if (name !== \"constructor\") {\r\n                const method = WebGLStateManager.prototype[name];\r\n                if (name.charAt(0) === \"$\") {\r\n                    name = name.substr(1);\r\n                }\r\n                if (gl[name] !== method) {\r\n                    if (gl[name]) {\r\n                        if (!gl[name].name) {\r\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\r\n                            gl[name].xname = name;\r\n                        }\r\n                        gl['_' + name] = gl[name];\r\n                    }\r\n                    gl[name] = method;\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\r\n\r\n        return gl;\r\n    }\r\n\r\n}\r\n\r\nexport default WebGLStateManager;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from \"./TextureSource.mjs\";\r\nimport Stage from './Stage.mjs';\r\n\r\nexport default class TextureManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        /**\r\n         * The currently used amount of texture memory.\r\n         * @type {number}\r\n         */\r\n        this._usedMemory = 0;\r\n\r\n        /**\r\n         * All uploaded texture sources.\r\n         * @type {TextureSource[]}\r\n         */\r\n        this._uploadedTextureSources = [];\r\n\r\n        /**\r\n         * The texture source lookup id to texture source hashmap.\r\n         * @type {Map<String, TextureSource>}\r\n         */\r\n        this.textureSourceHashmap = new Map();\r\n\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\r\n        }\r\n        \r\n        this.textureSourceHashmap.clear();\r\n        this._usedMemory = 0;\r\n    }\r\n\r\n    getReusableTextureSource(id) {\r\n        return this.textureSourceHashmap.get(id);\r\n    }\r\n\r\n    getTextureSource(func, id) {\r\n        // Check if texture source is already known.\r\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\r\n        if (!textureSource) {\r\n            // Create new texture source.\r\n            textureSource = new TextureSource(this, func);\r\n\r\n            if (id) {\r\n                textureSource.lookupId = id;\r\n                this.textureSourceHashmap.set(id, textureSource);\r\n            }\r\n        }\r\n\r\n        return textureSource;\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        if (textureSource.isLoaded()) return;\r\n\r\n        this._addMemoryUsage(textureSource.w * textureSource.h);\r\n\r\n        // Load texture.\r\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\r\n\r\n        textureSource._nativeTexture = nativeTexture;\r\n\r\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\r\n        nativeTexture.w = textureSource.w;\r\n        nativeTexture.h = textureSource.h;\r\n\r\n        nativeTexture.update = this.stage.frameCounter;\r\n\r\n        this._uploadedTextureSources.push(textureSource);\r\n        \r\n        this.addToLookupMap(textureSource);\r\n\r\n        // add VRAM tracking if using the webgl renderer\r\n        this._updateVramUsage(textureSource, 1);\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    _updateVramUsage(textureSource, sign) {\r\n        const nativeTexture = textureSource.nativeTexture;\r\n        var usage;\r\n\r\n        // do nothing if webgl isn't even supported\r\n        if (!Stage.isWebglSupported())\r\n            return;\r\n\r\n        // or if there is no native texture\r\n        if (!textureSource.isLoaded())\r\n            return;\r\n\r\n        // or, finally, if there is no bytes per pixel specified\r\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\r\n            return;\r\n\r\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\r\n\r\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\r\n    }\r\n\r\n    addToLookupMap(textureSource) {\r\n        const lookupId = textureSource.lookupId;\r\n        if (lookupId) {\r\n            if (!this.textureSourceHashmap.has(lookupId)) {\r\n                this.textureSourceHashmap.set(lookupId, textureSource);\r\n            }\r\n        }\r\n    }\r\n\r\n    gc() {\r\n        this.freeUnusedTextureSources();\r\n        this._cleanupLookupMap();\r\n    }\r\n    \r\n    freeUnusedTextureSources() {\r\n        let remainingTextureSources = [];\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            let ts = this._uploadedTextureSources[i];\r\n            if (ts.allowCleanup()) {\r\n                this._freeManagedTextureSource(ts);\r\n            } else {\r\n                remainingTextureSources.push(ts);\r\n            }\r\n        }\r\n\r\n        this._uploadedTextureSources = remainingTextureSources;\r\n\r\n        this._cleanupLookupMap();\r\n    }\r\n\r\n    _freeManagedTextureSource(textureSource) {\r\n        if (textureSource.isLoaded()) {\r\n            this._nativeFreeTextureSource(textureSource);\r\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n\r\n            // add VRAM tracking if using the webgl renderer\r\n            this._updateVramUsage(textureSource, -1);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _cleanupLookupMap() {\r\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\r\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\r\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\r\n                this.textureSourceHashmap.delete(lookupId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Externally free texture source.\r\n     * @param textureSource\r\n     */\r\n    freeTextureSource(textureSource) {\r\n        const index = this._uploadedTextureSources.indexOf(textureSource);\r\n        const managed = (index !== -1);\r\n\r\n        if (textureSource.isLoaded()) {\r\n            if (managed) {\r\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n                this._uploadedTextureSources.splice(index, 1);\r\n            }\r\n            this._nativeFreeTextureSource(textureSource);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _nativeUploadTextureSource(textureSource, options) {\r\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\r\n    }\r\n\r\n    _nativeFreeTextureSource(textureSource) {\r\n        this.stage.renderer.freeTextureSource(textureSource);\r\n        textureSource.clearNativeTexture();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Allows throttling of loading texture sources, keeping the app responsive.\r\n */\r\nexport default class TextureThrottler {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.genericCancelCb = (textureSource) => {\r\n            this._remove(textureSource);\r\n        };\r\n\r\n        this._sources = [];\r\n        this._data = [];\r\n    }\r\n\r\n    destroy() {\r\n        this._sources = [];\r\n        this._data = [];\r\n        this.stage = null;\r\n\r\n        delete this._sources;\r\n        delete this._data;\r\n        delete this.stage;\r\n    }\r\n\r\n    processSome() {\r\n        if (this._sources.length) {\r\n            const start = Date.now();\r\n            do {\r\n                this._processItem();\r\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\r\n        }\r\n    }\r\n\r\n    _processItem() {\r\n        const source = this._sources.pop();\r\n        const data = this._data.pop();\r\n        if (source.isLoading()) {\r\n            source.processLoadedSource(data);\r\n        }\r\n    }\r\n\r\n    add(textureSource, data) {\r\n        this._sources.push(textureSource);\r\n        this._data.push(data);\r\n    }\r\n\r\n    _remove(textureSource) {\r\n        const index = this._sources.indexOf(textureSource);\r\n        if (index >= 0) {\r\n            this._sources.splice(index, 1);\r\n            this._data.splice(index, 1);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreContext {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.root = null;\r\n\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\r\n\r\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\r\n        this.renderExec.init();\r\n\r\n        this._usedMemory = 0;\r\n        this._renderTexturePool = [];\r\n\r\n        this._renderTextureId = 1;\r\n\r\n        this._zSorts = [];\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\r\n        this._usedMemory = 0;\r\n\r\n        this.stage = null;\r\n        this.root = null;\r\n\r\n        this.renderState = null;\r\n        this.renderExec = null;\r\n        this._renderTexturePool = null;\r\n        this._zSorts = null;\r\n\r\n        delete this.stage;\r\n        delete this.root;\r\n        delete this.renderState;\r\n        delete this.renderExec;\r\n        delete this._renderTexturePool;\r\n        delete this._zSorts;\r\n    }\r\n\r\n    hasRenderUpdates() {\r\n        return !!this.root._parent._hasRenderUpdates;\r\n    }\r\n\r\n    render() {\r\n        // Clear flag to identify if anything changes before the next frame.\r\n        this.root._parent._hasRenderUpdates = 0;\r\n\r\n        this._render();\r\n    }\r\n\r\n    update() {\r\n        this._update();\r\n\r\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\r\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\r\n        // (but not recursively to prevent infinite loops).\r\n        if (this.root._hasUpdates) {\r\n            this._update();\r\n        }\r\n\r\n        this._performForcedZSorts();\r\n    }\r\n\r\n    /**\r\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\r\n     */\r\n    _performForcedZSorts() {\r\n        const n = this._zSorts.length;\r\n        if (n) {\r\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\r\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\r\n                if (this._zSorts[i].zSort) {\r\n                    this._zSorts[i].sortZIndexedChildren();\r\n                }\r\n            }\r\n            this._zSorts = [];\r\n        }\r\n    }\r\n\r\n    _update() {\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.root.update();\r\n    }\r\n\r\n    _render() {\r\n        const debugFrame = this.stage.getOption('debugFrame');\r\n        // Obtain a sequence of the quad operations.\r\n        this._fillRenderState();\r\n\r\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\r\n            this._readPixels();\r\n        }\r\n\r\n        // Now run them with the render executor.\r\n        this._performRender();\r\n\r\n        if (debugFrame) {\r\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\r\n        }\r\n\r\n        // Block OpenGL pipeline to prevent framebuffer flickering\r\n        // on certain devices\r\n        if (this.stage.getOption('readPixelsAfterDraw') &&\r\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\r\n        ) {\r\n            if (debugFrame) {\r\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\r\n            }\r\n            this._readPixels();\r\n        }\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    _readPixels() {\r\n        const pixels = new Uint8Array(4);\r\n        const gl = this.stage.gl;\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    }\r\n\r\n    _fillRenderState() {\r\n        this.renderState.reset();\r\n        this.root.render();\r\n        this.renderState.finish();\r\n    }\r\n\r\n    _performRender() {\r\n        this.renderExec.execute();\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    allocateRenderTexture(w, h) {\r\n        let prec = this.stage.getRenderPrecision();\r\n        let pw = Math.max(1, Math.round(w * prec));\r\n        let ph = Math.max(1, Math.round(h * prec));\r\n\r\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\r\n        const n = this._renderTexturePool.length;\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const texture = this._renderTexturePool[i];\r\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\r\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\r\n                texture.f = this.stage.frameCounter;\r\n                this._renderTexturePool.splice(i, 1);\r\n                return texture;\r\n            }\r\n        }\r\n\r\n        const texture = this._createRenderTexture(w, h, pw, ph);\r\n        texture.precision = prec;\r\n        return texture;\r\n    }\r\n\r\n    releaseRenderTexture(texture) {\r\n        this._renderTexturePool.push(texture);\r\n    }\r\n\r\n    freeUnusedRenderTextures(maxAge = 60) {\r\n        // Clean up all textures that are no longer used.\r\n        // This cache is short-lived because it is really just meant to supply running shaders that are\r\n        // updated during a number of frames.\r\n        let limit = this.stage.frameCounter - maxAge;\r\n\r\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\r\n            if (texture.f <= limit) {\r\n                this._freeRenderTexture(texture);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    _createRenderTexture(w, h, pw, ph) {\r\n        this._addMemoryUsage(pw * ph);\r\n\r\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\r\n        texture.id = this._renderTextureId++;\r\n        texture.f = this.stage.frameCounter;\r\n        texture.ow = w;\r\n        texture.oh = h;\r\n        texture.w = pw;\r\n        texture.h = ph;\r\n\r\n        return texture;\r\n    }\r\n\r\n    _freeRenderTexture(nativeTexture) {\r\n        this.stage.renderer.freeRenderTexture(nativeTexture);\r\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\r\n    }\r\n\r\n    forceZSort(elementCore) {\r\n        this._zSorts.push(elementCore);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class TransitionSettings {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._timingFunction = 'ease';\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\r\n        this.delay = 0;\r\n        this.duration = 0.2;\r\n        this.merger = null;\r\n    }\r\n\r\n    get timingFunction() {\r\n        return this._timingFunction;\r\n    }\r\n\r\n    set timingFunction(v) {\r\n        this._timingFunction = v;\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get timingFunctionImpl() {\r\n        return this._timingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n}\r\n\r\nTransitionSettings.prototype.isTransitionSettings = true;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TransitionManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All transitions that are running and attached.\r\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\r\n         * @type {Set<Transition>}\r\n         */\r\n        this.active = new Set();\r\n\r\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                a.progress(dt);\r\n                if (!a.isRunning()) {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\r\n            }\r\n        }\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const transitionSettings = new TransitionSettings();\r\n        Base.patchObject(transitionSettings, settings);\r\n        return transitionSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n\r\n    removeActive(transition) {\r\n        this.active.delete(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport TransitionSettings from \"./TransitionSettings.mjs\";\r\nimport Transition from \"./Transition.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class MultiSpline {\r\n\r\n    constructor() {\r\n        this._clear();\r\n    }\r\n\r\n    _clear() {\r\n        this._p = [];\r\n        this._pe = [];\r\n        this._idp = [];\r\n        this._f = [];\r\n        this._v = [];\r\n        this._lv = [];\r\n        this._sm = [];\r\n        this._s = [];\r\n        this._ve = [];\r\n        this._sme = [];\r\n        this._se = [];\r\n\r\n        this._length = 0;\r\n    }\r\n\r\n    parse(rgba, def) {\r\n        let i, n;\r\n        if (!Utils.isObjectLiteral(def)) {\r\n            def = {0: def}\r\n        }\r\n\r\n        let defaultSmoothness = 0.5;\r\n\r\n        let items = [];\r\n        for (let key in def) {\r\n            if (def.hasOwnProperty(key)) {\r\n                let obj = def[key];\r\n                if (!Utils.isObjectLiteral(obj)) {\r\n                    obj = {v: obj}\r\n                }\r\n\r\n                let p = parseFloat(key);\r\n\r\n                if (key === \"sm\") {\r\n                    defaultSmoothness = obj.v;\r\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\r\n                    obj.p = p;\r\n\r\n                    obj.f = Utils.isFunction(obj.v);\r\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\r\n\r\n                    items.push(obj);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Sort by progress value.\r\n        items = items.sort(function(a, b) {return a.p - b.p});\r\n\r\n        n = items.length;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            let last = (i === n - 1);\r\n            if (!items[i].hasOwnProperty('pe')) {\r\n                // Progress.\r\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\r\n            } else {\r\n                // Prevent multiple items at the same time.\r\n                const max = i < n - 1 ? items[i + 1].p : 1;\r\n                if (items[i].pe > max) {\r\n                    items[i].pe = max;\r\n                }\r\n            }\r\n            if (items[i].pe === items[i].p) {\r\n                items[i].idp = 0;\r\n            } else {\r\n                items[i].idp = 1 / (items[i].pe - items[i].p);\r\n            }\r\n        }\r\n\r\n        // Color merger: we need to split/combine RGBA components.\r\n\r\n        // Calculate bezier helper values.;\r\n        for (i = 0; i < n; i++) {\r\n            if (!items[i].hasOwnProperty('sm')) {\r\n                // Smoothness.;\r\n                items[i].sm = defaultSmoothness;\r\n            }\r\n            if (!items[i].hasOwnProperty('s')) {\r\n                // Slope.;\r\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\r\n                    // Horizontal slope at start and end.;\r\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                } else {\r\n                    const pi = items[i - 1];\r\n                    const ni = items[i + 1];\r\n                    if (pi.p === ni.p) {\r\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                    } else {\r\n                        if (rgba) {\r\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\r\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\r\n                            const d = 1 / (ni.p - pi.p);\r\n                            items[i].s = [\r\n                                d * (nc[0] - pc[0]),\r\n                                d * (nc[1] - pc[1]),\r\n                                d * (nc[2] - pc[2]),\r\n                                d * (nc[3] - pc[3])\r\n                            ];\r\n                        } else {\r\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < n - 1; i++) {\r\n            // Calculate value function.;\r\n            if (!items[i].f) {\r\n\r\n                let last = (i === n - 1);\r\n                if (!items[i].hasOwnProperty('ve')) {\r\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\r\n                }\r\n\r\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\r\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\r\n                    if (!items[i].hasOwnProperty('sme')) {\r\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\r\n                    }\r\n                    if (!items[i].hasOwnProperty('se')) {\r\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\r\n                    }\r\n\r\n                    // Generate spline.;\r\n                    if (rgba) {\r\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    } else {\r\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    }\r\n\r\n                    items[i].f = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.length) {\r\n            this._clear();\r\n        }\r\n\r\n        for (i = 0, n = items.length; i < n; i++) {\r\n            this._add(items[i]);\r\n        }\r\n    }\r\n\r\n    _add(item) {\r\n        this._p.push(item.p || 0);\r\n        this._pe.push(item.pe || 0);\r\n        this._idp.push(item.idp || 0);\r\n        this._f.push(item.f || false);\r\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\r\n        this._lv.push(item.lv || 0);\r\n        this._sm.push(item.sm || 0);\r\n        this._s.push(item.s || 0);\r\n        this._ve.push(item.ve || 0);\r\n        this._sme.push(item.sme || 0);\r\n        this._se.push(item.se || 0);\r\n        this._length++;\r\n    }\r\n\r\n    _getItem(p) {\r\n        const n = this._length;\r\n        if (!n) {\r\n            return -1;\r\n        }\r\n\r\n        if (p < this._p[0]) {\r\n            return 0;\r\n        }\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (this._p[i] <= p && p < this._pe[i]) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return n - 1;\r\n    }\r\n\r\n    getValue(p) {\r\n        const i = this._getItem(p);\r\n        if (i === -1) {\r\n            return undefined;\r\n        } else {\r\n            if (this._f[i]) {\r\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\r\n                return this._v[i](o);\r\n            } else {\r\n                return this._v[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    get length() {\r\n        return this._length;\r\n    }\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1 *= dp;\r\n        s2 *= dp;\r\n\r\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\r\n        if (!helpers) {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return v2 * p + v1 * (1 - p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n                return MultiSpline.calculateSpline(helpers, p);\r\n            };\r\n        }\r\n    };\r\n\r\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1[0] *= dp;\r\n        s1[1] *= dp;\r\n        s1[2] *= dp;\r\n        s1[3] *= dp;\r\n        s2[0] *= dp;\r\n        s2[1] *= dp;\r\n        s2[2] *= dp;\r\n        s2[3] *= dp;\r\n\r\n        let cv1 = MultiSpline.getRgbaComponents(v1);\r\n        let cv2 = MultiSpline.getRgbaComponents(v2);\r\n\r\n        let helpers = [\r\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\r\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\r\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\r\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\r\n        ];\r\n\r\n        if (!helpers[0]) {\r\n            return function (p) {\r\n                // Linear.\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.mergeColors(v2, v1, p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.getArgbNumber([\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\r\n                ]);\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates helpers to be used in the spline function.\r\n     * @param {number} v1\r\n     *   From value.\r\n     * @param {number} v2\r\n     *   To value.\r\n     * @param {number} o1\r\n     *   From smoothness (0 = linear, 1 = smooth).\r\n     * @param {number} s1\r\n     *   From slope (0 = horizontal, infinite = vertical).\r\n     * @param {number} i2\r\n     *   To smoothness.\r\n     * @param {number} s2\r\n     *   To slope.\r\n     * @returns {Number[]}\r\n     *   The helper values to be supplied to the spline function.\r\n     *   If the configuration is actually linear, null is returned.\r\n     */\r\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\r\n        if (!o1 && !i2) {\r\n            // Linear.\r\n            return null;\r\n        }\r\n\r\n        // Cubic bezier points.\r\n        // http://cubic-bezier.com/\r\n        let csx = o1;\r\n        let csy = v1 + s1 * o1;\r\n        let cex = 1 - i2;\r\n        let cey = v2 - s2 * i2;\r\n\r\n        let xa = 3 * csx - 3 * cex + 1;\r\n        let xb = -6 * csx + 3 * cex;\r\n        let xc = 3 * csx;\r\n\r\n        let ya = 3 * csy - 3 * cey + v2 - v1;\r\n        let yb = 3 * (cey + v1) - 6 * csy;\r\n        let yc = 3 * (csy - v1);\r\n        let yd = v1;\r\n\r\n        return [xa, xb, xc, ya, yb, yc, yd];\r\n    };\r\n\r\n    /**\r\n     * Calculates the intermediate spline value based on the specified helpers.\r\n     * @param {number[]} helpers\r\n     *   Obtained from getSplineHelpers.\r\n     * @param {number} p\r\n     * @return {number}\r\n     */\r\n    static calculateSpline(helpers, p) {\r\n        let xa = helpers[0];\r\n        let xb = helpers[1];\r\n        let xc = helpers[2];\r\n        let ya = helpers[3];\r\n        let yb = helpers[4];\r\n        let yc = helpers[5];\r\n        let yd = helpers[6];\r\n\r\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\r\n            // Linear.\r\n            return p;\r\n        }\r\n\r\n        // Find t for p.\r\n        let t = 0.5, cbx, dx;\r\n\r\n        for (let it = 0; it < 20; it++) {\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\r\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                // Problematic. Fall back to binary search method.\r\n                break;\r\n            }\r\n\r\n            t += dx / cbxd;\r\n        }\r\n\r\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n        let minT = 0;\r\n        let maxT = 1;\r\n        for (let it = 0; it < 20; it++) {\r\n            t = 0.5 * (minT + maxT);\r\n\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            if (dx < 0) {\r\n                maxT = t;\r\n            } else {\r\n                minT = t;\r\n            }\r\n        }\r\n\r\n        return t;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationActionSettings {\r\n\r\n    constructor(animationSettings) {\r\n\r\n        this.animationSettings = animationSettings;\r\n\r\n        /**\r\n         * The selector that selects the elements.\r\n         * @type {string}\r\n         */\r\n        this._selector = \"\";\r\n\r\n        /**\r\n         * The value items, ordered by progress offset.\r\n         * @type {MultiSpline}\r\n         * @private;\r\n         */\r\n        this._items = new MultiSpline();\r\n\r\n        /**\r\n         * The affected properties (paths).\r\n         * @private;\r\n         */\r\n        this._props = [];\r\n\r\n        /**\r\n         * Property setters, indexed according to props.\r\n         * @private;\r\n         */\r\n        this._propSetters = [];\r\n\r\n        this._resetValue = undefined;\r\n        this._hasResetValue = false;\r\n\r\n        this._hasColorProperty = undefined;\r\n    }\r\n\r\n    getResetValue() {\r\n        if (this._hasResetValue) {\r\n            return this._resetValue;\r\n        } else {\r\n            return this._items.getValue(0);\r\n        }\r\n    }\r\n\r\n    apply(element, p, factor) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this._items.getValue(p);\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        if (factor !== 1) {\r\n            // Stop factor.;\r\n            let sv = this.getResetValue();\r\n\r\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\r\n                if (this.hasColorProperty()) {\r\n                    v = StageUtils.mergeColors(v, sv, factor);\r\n                } else {\r\n                    v = StageUtils.mergeNumbers(v, sv, factor);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Apply transformation to all components.;\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    getAnimatedElements(element) {\r\n        return element.select(this._selector);\r\n    }\r\n\r\n    reset(element) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this.getResetValue();\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        // Apply transformation to all components.\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    set selector(v) {\r\n        this._selector = v;\r\n    }\r\n\r\n    set t(v) {\r\n        this.selector = v;\r\n    }\r\n\r\n    get resetValue() {\r\n        return this._resetValue;\r\n    }\r\n    \r\n    set resetValue(v) {\r\n        this._resetValue = v;\r\n        this._hasResetValue = (v !== undefined);\r\n    }\r\n\r\n    set rv(v) {\r\n        this.resetValue = v;\r\n    }\r\n\r\n    set value(v) {\r\n        this._items.parse(this.hasColorProperty(), v);\r\n    }\r\n\r\n    set v(v) {\r\n        this.value = v;\r\n    }\r\n\r\n    set properties(v) {\r\n        if (!Array.isArray(v)) {\r\n            v = [v];\r\n        }\r\n\r\n        this._props = [];\r\n\r\n        v.forEach((prop) => {\r\n            this._props.push(prop);\r\n            this._propSetters.push(Element.getSetter(prop));\r\n        });\r\n    }\r\n\r\n    set property(v) {\r\n        this._hasColorProperty = undefined;\r\n        this.properties = v;\r\n    }\r\n\r\n    set p(v) {\r\n        this.properties = v;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    hasColorProperty() {\r\n        if (this._hasColorProperty === undefined) {\r\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\r\n        }\r\n        return this._hasColorProperty;\r\n    }\r\n}\r\n\r\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\r\n\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\nimport Element from \"../tree/Element.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class AnimationSettings {\r\n    constructor() {\r\n        /**\r\n         * @type {AnimationActionSettings[]}\r\n         */\r\n        this._actions = [];\r\n\r\n        this.delay = 0;\r\n        this.duration = 1;\r\n\r\n        this.repeat = 0;\r\n        this.repeatOffset = 0;\r\n        this.repeatDelay = 0;\r\n\r\n        this.autostop = false;\r\n\r\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\r\n        this._stopTimingFunction = 'ease';\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\r\n        this.stopDuration = 0;\r\n        this.stopDelay = 0;\r\n    }\r\n\r\n    get actions() {\r\n        return this._actions;\r\n    }\r\n\r\n    set actions(v) {\r\n        this._actions = [];\r\n        for (let i = 0, n = v.length; i < n; i++) {\r\n            const e = v[i];\r\n            if (!e.isAnimationActionSettings) {\r\n                const aas = new AnimationActionSettings(this);\r\n                aas.patch(e);\r\n                this._actions.push(aas);\r\n            } else {\r\n                this._actions.push(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\r\n     * @param {Element} element;\r\n     * @param {number} p;\r\n     * @param {number} factor;\r\n     */\r\n    apply(element, p, factor = 1) {\r\n        this._actions.forEach(function(action) {\r\n            action.apply(element, p, factor);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets the animation to the reset values.\r\n     * @param {Element} element;\r\n     */\r\n    reset(element) {\r\n        this._actions.forEach(function(action) {\r\n            action.reset(element);\r\n        });\r\n    }\r\n\r\n    get stopTimingFunction() {\r\n        return this._stopTimingFunction;\r\n    }\r\n\r\n    set stopTimingFunction(v) {\r\n        this._stopTimingFunction = v;\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get stopTimingFunctionImpl() {\r\n        return this._stopTimingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nAnimationSettings.STOP_METHODS = {\r\n    FADE: 'fade',\r\n    REVERSE: 'reverse',\r\n    FORWARD: 'forward',\r\n    IMMEDIATE: 'immediate',\r\n    ONETOTWO: 'onetotwo'\r\n};\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\n\r\nexport default class Animation extends EventEmitter {\r\n\r\n    constructor(manager, settings, element) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._state = Animation.STATES.IDLE;\r\n\r\n        this._p = 0;\r\n        this._delayLeft = 0;\r\n        this._repeatsLeft = 0;\r\n\r\n        this._stopDelayLeft = 0;\r\n        this._stopP = 0;\r\n    }\r\n\r\n    start() {\r\n        if (this._element && this._element.attached) {\r\n            this._p = 0;\r\n            this._delayLeft = this.settings.delay;\r\n            this._repeatsLeft = this.settings.repeat;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('start');\r\n            this.checkActive();\r\n        } else {\r\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\r\n        }\r\n    }\r\n\r\n    play() {\r\n        if (this._state === Animation.STATES.PAUSED) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.checkActive();\r\n            this.emit('resume');\r\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('stopContinue');\r\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\r\n            // Restart.;\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._state = Animation.STATES.PAUSED;\r\n            this.emit('pause');\r\n        }\r\n    }\r\n\r\n    replay() {\r\n        if (this._state == Animation.STATES.FINISHED) {\r\n            this.start();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n        this._stopDelayLeft = 0;\r\n    }\r\n\r\n    finish() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._delayLeft = 0;\r\n            this._p = 1;\r\n        } else if (this._state === Animation.STATES.STOPPING) {\r\n            this._stopDelayLeft = 0;\r\n            this._p = 0;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\r\n\r\n        this._stopDelayLeft = this.settings.stopDelay || 0;\r\n\r\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\r\n            // Stop upon next progress.;\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        } else {\r\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                this._stopP = 0;\r\n            }\r\n\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        }\r\n\r\n        this.checkActive();\r\n    }\r\n\r\n    stopNow() {\r\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\r\n            this._state = Animation.STATES.STOPPING;\r\n            this._p = 0;\r\n            this.emit('stop');\r\n            this.reset();\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        }\r\n    }\r\n\r\n    isPaused() {\r\n        return this._state === Animation.STATES.PAUSED;\r\n    }\r\n\r\n    isPlaying() {\r\n        return this._state === Animation.STATES.PLAYING;\r\n    }\r\n\r\n    isStopping() {\r\n        return this._state === Animation.STATES.STOPPING;\r\n    }\r\n\r\n    isFinished() {\r\n        return this._state === Animation.STATES.FINISHED;\r\n    }\r\n\r\n    checkActive() {\r\n        if (this.isActive()) {\r\n            this.manager.addActive(this);\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this._element) return;\r\n        this._progress(dt);\r\n        this.apply();\r\n    }\r\n\r\n    _progress(dt) {\r\n        if (this._state == Animation.STATES.STOPPING) {\r\n            this._stopProgress(dt);\r\n            return;\r\n        }\r\n\r\n        if (this._state != Animation.STATES.PLAYING) {\r\n            return;\r\n        }\r\n\r\n        if (this._delayLeft > 0) {\r\n            this._delayLeft -= dt;\r\n\r\n            if (this._delayLeft < 0) {\r\n                dt = -this._delayLeft;\r\n                this._delayLeft = 0;\r\n\r\n                this.emit('delayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.settings.duration === 0) {\r\n            this._p = 1;\r\n        } else if (this.settings.duration > 0) {\r\n            this._p += dt / this.settings.duration;\r\n        }\r\n        if (this._p >= 1) {\r\n            // Finished!;\r\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\r\n                if (this._repeatsLeft > 0) {\r\n                    this._repeatsLeft--;\r\n                }\r\n                this._p = this.settings.repeatOffset;\r\n                this.emit('progress', this._p);\r\n                \r\n                if (this.settings.repeatDelay) {\r\n                    this._delayLeft = this.settings.repeatDelay;\r\n                }\r\n\r\n                this.emit('repeat', this._repeatsLeft);\r\n            } else {\r\n                this._p = 1;\r\n                this.emit('progress', this._p);\r\n                \r\n                this._state = Animation.STATES.FINISHED;\r\n                this.emit('finish');\r\n                if (this.settings.autostop) {\r\n                    this.stop();\r\n                }\r\n            }\r\n        } else {\r\n            this.emit('progress', this._p);\r\n        }\r\n    }\r\n    \r\n    _stopProgress(dt) {\r\n        let duration = this._getStopDuration();\r\n\r\n        if (this._stopDelayLeft > 0) {\r\n            this._stopDelayLeft -= dt;\r\n\r\n            if (this._stopDelayLeft < 0) {\r\n                dt = -this._stopDelayLeft;\r\n                this._stopDelayLeft = 0;\r\n\r\n                this.emit('stopDelayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            if (duration === 0) {\r\n                this._p = 0;\r\n            } else if (duration > 0) {\r\n                this._p -= dt / duration;\r\n            }\r\n\r\n            if (this._p <= 0) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\r\n            this._progressStopTransition(dt);\r\n            if (this._stopP >= 1) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\r\n            if (this._p < 2) {\r\n                if (duration === 0) {\r\n                    this._p = 2;\r\n                } else if (duration > 0) {\r\n                    if (this._p < 1) {\r\n                        this._p += dt / this.settings.duration;\r\n                    } else {\r\n                        this._p += dt / duration;\r\n                    }\r\n                }\r\n                if (this._p >= 2) {\r\n                    this._p = 2;\r\n                    this._state = Animation.STATES.STOPPED;\r\n                    this.emit('stopFinish');\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n            if (this._p < 1) {\r\n                if (this.settings.duration == 0) {\r\n                    this._p = 1;\r\n                } else {\r\n                    this._p += dt / this.settings.duration;\r\n                }\r\n                if (this._p >= 1) {\r\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n                        this._p = 1;\r\n                        this._state = Animation.STATES.STOPPED;\r\n                        this.emit('stopFinish');\r\n                    } else {\r\n                        if (this._repeatsLeft > 0) {\r\n                            this._repeatsLeft--;\r\n                            this._p = 0;\r\n                            this.emit('repeat', this._repeatsLeft);\r\n                        } else {\r\n                            this._p = 1;\r\n                            this._state = Animation.STATES.STOPPED;\r\n                            this.emit('stopFinish');\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    _progressStopTransition(dt) {\r\n        if (this._stopP < 1) {\r\n            if (this._stopDelayLeft > 0) {\r\n                this._stopDelayLeft -= dt;\r\n\r\n                if (this._stopDelayLeft < 0) {\r\n                    dt = -this._stopDelayLeft;\r\n                    this._stopDelayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            const duration = this._getStopDuration();\r\n\r\n            if (duration == 0) {\r\n                this._stopP = 1;\r\n            } else {\r\n                this._stopP += dt / duration;\r\n            }\r\n            if (this._stopP >= 1) {\r\n                // Finished!;\r\n                this._stopP = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStopDuration() {\r\n        return this.settings.stopDuration || this.settings.duration;\r\n    }\r\n\r\n    apply() {\r\n        if (this._state === Animation.STATES.STOPPED) {\r\n            this.reset();\r\n        } else {\r\n            let factor = 1;\r\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\r\n            }\r\n            this._settings.apply(this._element, this._p, factor);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this._settings.reset(this._element);\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get frame() {\r\n        return Math.round(this._p * this._settings.duration * 60);\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n}\r\n\r\nAnimation.STATES = {\r\n    IDLE: 0,\r\n    PLAYING: 1,\r\n    STOPPING: 2,\r\n    STOPPED: 3,\r\n    FINISHED: 4,\r\n    PAUSED: 5\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All running animations on attached subjects.\r\n         * @type {Set<Animation>}\r\n         */\r\n        this.active = new Set();\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                if (a.isActive()) {\r\n                    a.progress(dt);\r\n                } else {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => t.isActive()));\r\n            }\r\n        }\r\n    }\r\n\r\n    createAnimation(element, settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            // Convert plain object to proper settings object.\r\n            settings = this.createSettings(settings);\r\n        }\r\n\r\n        return new Animation(\r\n            this,\r\n            settings,\r\n            element\r\n        );\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const animationSettings = new AnimationSettings();\r\n        Base.patchObject(animationSettings, settings);\r\n        return animationSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\nimport Animation from \"./Animation.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class RectangleTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__whitepix';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return function(cb) {\r\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\r\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Application render tree.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Utils from \"./Utils.mjs\";\r\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\r\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\r\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\r\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\r\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Stage extends EventEmitter {\r\n\r\n    constructor(options = {}) {\r\n        super();\r\n        this._setOptions(options);\r\n\r\n        this._usedMemory = 0;\r\n        this._lastGcFrame = 0;\r\n\r\n        // attempt to track VRAM usage more accurately by accounting for different color channels\r\n        this._usedVramAlpha = 0;\r\n        this._usedVramNonAlpha = 0;\r\n\r\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\r\n        this.platform = new platformType();\r\n\r\n        if (this.platform.init) {\r\n            this.platform.init(this);\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n\r\n        const context = this.getOption('context');\r\n        if (context) {\r\n            if (context.useProgram) {\r\n                this.gl = context;\r\n            } else {\r\n                this.c2d = context;\r\n            }\r\n        } else {\r\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\r\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\r\n            } else {\r\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\r\n            }\r\n        }\r\n\r\n        if (this.gl) {\r\n            // Wrap in WebGLStateManager.\r\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\r\n            // Context switching is necessary when reusing the same context for Three.js.\r\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\r\n            //  when manually passing over a canvas or context in the options.\r\n            WebGLStateManager.enable(this.gl, \"lightning\")\r\n        }\r\n\r\n        this._mode = this.gl ? 0 : 1;\r\n\r\n        // Override width and height.\r\n        if (this.getCanvas()) {\r\n            if (this.getOption('devicePixelRatio') !== 1) {\r\n                const ratio = this.getOption('devicePixelRatio');\r\n                // set correct display sie\r\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\r\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\r\n            }\r\n\r\n            // set display buffer size\r\n            this._options.w = this.getCanvas().width;\r\n            this._options.h = this.getCanvas().height;\r\n        }\r\n\r\n        if (this._mode === 0) {\r\n            if (Utils.isSpark) {\r\n                this._renderer = new SparkRenderer(this);\r\n            } else {\r\n                this._renderer = new WebGLRenderer(this);\r\n            }\r\n        } else {\r\n            this._renderer = new C2dRenderer(this);\r\n        }\r\n\r\n        this.setClearColor(this.getOption('clearColor'));\r\n\r\n        this.frameCounter = 0;\r\n\r\n        this.transitions = new TransitionManager(this);\r\n        this.animations = new AnimationManager(this);\r\n\r\n        this.textureManager = new TextureManager(this);\r\n        this.textureThrottler = new TextureThrottler(this);\r\n\r\n        this.startTime = 0;\r\n        this.currentTime = 0;\r\n        this.dt = 0;\r\n\r\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\r\n        this.rectangleTexture = new RectangleTexture(this);\r\n        this.rectangleTexture.load();\r\n\r\n        // Never clean up because we use it all the time.\r\n        this.rectangleTexture.source.permanent = true;\r\n\r\n        this.ctx = new CoreContext(this);\r\n\r\n        this._updateSourceTextures = new Set();\r\n    }\r\n\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    static isWebglSupported() {\r\n        if (Utils.isNode) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            return !!window.WebGLRenderingContext;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the rendering mode.\r\n     * @returns {number}\r\n     *  0: WebGL\r\n     *  1: Canvas2d\r\n     */\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n\r\n    isWebgl() {\r\n        return this.mode === 0;\r\n    }\r\n\r\n    isC2d() {\r\n        return this.mode === 1;\r\n    }\r\n\r\n    getOption(name) {\r\n        return this._options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this._options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this._options[name] = def;\r\n            } else {\r\n                this._options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('canvas', null);\r\n        opt('context', null);\r\n        opt('w', 1920);\r\n        opt('h', 1080);\r\n        opt('srcBasePath', null);\r\n        opt('memoryPressure', 24e6);\r\n        opt('bufferMemory', 2e6);\r\n        opt('textRenderIssueMargin', 0);\r\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\r\n        opt('clearColor', [0, 0, 0, 0]);\r\n        opt('defaultFontFace', 'sans-serif');\r\n        opt('fixedDt', 0);\r\n        opt('useImageWorker', true);\r\n        opt('autostart', true);\r\n        opt('precision', 1);\r\n        opt('canvas2d', false);\r\n        opt('platform', null);\r\n        opt('readPixelsBeforeDraw', false);\r\n        opt('devicePixelRatio', 1)       \r\n        opt('readPixelsAfterDraw', false);\r\n        opt('readPixelsAfterDrawThreshold', 0);\r\n        opt('debugFrame', false);\r\n        opt('forceTxCanvasSource', false);\r\n        opt('pauseRafLoopOnIdle', false);\r\n        opt('RTL', false);\r\n\r\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\r\n            this._options['precision'] *= o['devicePixelRatio']\r\n            this._options['w'] *= o['devicePixelRatio']\r\n            this._options['h'] *= o['devicePixelRatio']\r\n        }\r\n    }\r\n\r\n    setApplication(app) {\r\n        this.application = app;\r\n    }\r\n\r\n    init() {\r\n\r\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\r\n            console.log('[Lightning] Using image worker!');\r\n        }\r\n\r\n        if (this.application.getOption('debug') && this.c2d) {\r\n            console.log('[Lightning] Using canvas2d renderer');\r\n        }\r\n\r\n        this.application.setAsRoot();\r\n        if (this.getOption('autostart')) {\r\n            this.platform.startLoop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.platform.stopLoop();\r\n        this.platform.destroy();\r\n        this.ctx.destroy();\r\n        this.textureManager.destroy();\r\n        this._renderer.destroy();\r\n\r\n        // clear last rendered frame\r\n        if (this.gl) {\r\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n        } else if (this.c2d) {\r\n            this.c2d.clearRect(\r\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\r\n            );\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n        this.ctx = null;\r\n        this._options = null;\r\n        this.platform = null;\r\n        this.textureManager = null;\r\n        this._renderer = null;\r\n\r\n        delete this.gl;\r\n        delete this.c2d;\r\n        delete this.ctx;\r\n        delete this._options;\r\n        delete this.platform;\r\n        delete this.textureManager;\r\n        delete this._renderer;\r\n    }\r\n\r\n    stop() {\r\n        this.platform.stopLoop();\r\n    }\r\n\r\n    resume() {\r\n        this.platform.startLoop();\r\n    }\r\n\r\n    get root() {\r\n        return this.application;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\r\n    }\r\n\r\n    getRenderPrecision() {\r\n        return this._options.precision;\r\n    }\r\n\r\n    /**\r\n     * Marks a texture for updating it's source upon the next drawFrame.\r\n     * @param texture\r\n     */\r\n    addUpdateSourceTexture(texture) {\r\n        if (this._updatingFrame) {\r\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\r\n            texture._performUpdateSource();\r\n        } else {\r\n            this._updateSourceTextures.add(texture);\r\n        }\r\n    }\r\n\r\n    removeUpdateSourceTexture(texture) {\r\n        if (this._updateSourceTextures) {\r\n            this._updateSourceTextures.delete(texture);\r\n        }\r\n    }\r\n\r\n    hasUpdateSourceTexture(texture) {\r\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\r\n    }\r\n\r\n\r\n    _performUpdateSource() {\r\n        if (this._updateSourceTextures.size) {\r\n            this._updateSourceTextures.forEach(texture => {\r\n                texture._performUpdateSource();\r\n            });\r\n            this._updateSourceTextures = new Set();\r\n        }\r\n    }\r\n\r\n    _calculateDt() {\r\n        this.startTime = this.currentTime;\r\n        this.currentTime = this.platform.getHrTime();\r\n\r\n        if (this._options.fixedDt) {\r\n            this.dt = this._options.fixedDt;\r\n        } else {\r\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\r\n        }\r\n    }\r\n\r\n    updateFrame() {\r\n        this._calculateDt();\r\n        this.emit('frameStart');\r\n        this._performUpdateSource();\r\n        this.emit('update');\r\n    }\r\n\r\n    idleFrame() {\r\n        this.textureThrottler.processSome();\r\n        this.emit('frameEnd');\r\n        this.frameCounter++;\r\n    }\r\n\r\n    renderFrame() {\r\n        const changes = this.ctx.hasRenderUpdates();\r\n\r\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\r\n        // during the current frame already.\r\n        this.textureThrottler.processSome();\r\n\r\n        if (changes) {\r\n            this._updatingFrame = true;\r\n            this.ctx.update();\r\n            this.ctx.render();\r\n            this._updatingFrame = false;\r\n        }\r\n\r\n        this.platform.nextFrame(changes);\r\n\r\n        this.emit('frameEnd');\r\n\r\n        this.frameCounter++;\r\n    }\r\n\r\n    isUpdatingFrame() {\r\n        return this._updatingFrame;\r\n    }\r\n\r\n    drawFrame() {\r\n        // Maintain original functionality of `drawFrame()` while retaining the\r\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\r\n        // The full functionality of this method is relied directly by our own unit tests and\r\n        // the unit tests of third party users\r\n        this.updateFrame();\r\n        this.renderFrame();\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Enforce re-rendering.\r\n        if (this.root) {\r\n            this.root.core._parent.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    setClearColor(clearColor) {\r\n        this.forceRenderUpdate();\r\n        if (clearColor === null) {\r\n            // Do not clear.\r\n            this._clearColor = null;\r\n        } else if (Array.isArray(clearColor)) {\r\n            this._clearColor = clearColor;\r\n        } else {\r\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\r\n        }\r\n    }\r\n\r\n    getClearColor() {\r\n        return this._clearColor;\r\n    }\r\n\r\n    createElement(settings) {\r\n        if (settings) {\r\n            return this.element(settings);\r\n        } else {\r\n            return new Element(this);\r\n        }\r\n    }\r\n\r\n    createShader(settings) {\r\n        return Shader.create(this, settings);\r\n    }\r\n\r\n    element(settings) {\r\n        if (settings.isElement) return settings;\r\n\r\n        let element;\r\n        if (settings.type) {\r\n            element = new settings.type(this);\r\n        } else {\r\n            element = new Element(this);\r\n        }\r\n\r\n        element.patch(settings);\r\n\r\n        return element;\r\n    }\r\n\r\n    c(settings) {\r\n        return this.element(settings);\r\n    }\r\n\r\n    get w() {\r\n        return this._options.w;\r\n    }\r\n\r\n    get h() {\r\n        return this._options.h;\r\n    }\r\n\r\n    get coordsWidth() {\r\n        return this.w / this._options.precision;\r\n    }\r\n\r\n    get coordsHeight() {\r\n        return this.h / this._options.precision;\r\n    }\r\n\r\n    addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            if (this._usedMemory > this.getOption('memoryPressure')) {\r\n                this.gc(false);\r\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\r\n                    // Too few released. Aggressive cleanup.\r\n                    this.gc(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    addVramUsage(delta, alpha) {\r\n        if (alpha) {\r\n            this._usedVramAlpha += delta;\r\n        }\r\n        else {\r\n            this._usedVramNonAlpha += delta;\r\n        }\r\n    }\r\n\r\n    get usedVramAlpha() {\r\n        return this._usedVramAlpha;\r\n    }\r\n\r\n    get usedVramNonAlpha() {\r\n        return this._usedVramNonAlpha;\r\n    }\r\n\r\n    get usedVram() {\r\n        return this._usedVramAlpha + this._usedVramNonAlpha;\r\n    }\r\n\r\n    gc(aggressive) {\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            this._lastGcFrame = this.frameCounter;\r\n            const memoryUsageBefore = this._usedMemory;\r\n            this.gcTextureMemory(aggressive);\r\n            this.gcRenderTextureMemory(aggressive);\r\n            this.renderer.gc(aggressive);\r\n\r\n            if (this.application.getOption('debug')) {\r\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\r\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\r\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\r\n            }\r\n        }\r\n    }\r\n\r\n    gcTextureMemory(aggressive = false) {\r\n        if (aggressive && this.ctx.root.visible) {\r\n            // Make sure that ALL textures are cleaned;\r\n            this.ctx.root.visible = false;\r\n            this.textureManager.gc();\r\n            this.ctx.root.visible = true;\r\n        } else {\r\n            this.textureManager.gc();\r\n        }\r\n    }\r\n\r\n    gcRenderTextureMemory(aggressive = false) {\r\n        if (aggressive && this.root.visible) {\r\n            // Make sure that ALL render textures are cleaned;\r\n            this.root.visible = false;\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n            this.root.visible = true;\r\n        } else {\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n        }\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        return this.platform.getDrawingCanvas();\r\n    }\r\n\r\n    update() {\r\n        this.ctx.update()\r\n    }\r\n\r\n    addServiceProvider(serviceprovider) {\r\n        if (Utils.isSpark) {\r\n            this.platform.addServiceProvider(serviceprovider);\r\n        }\r\n    }\r\n\r\n    getChildrenByPosition(x, y) {\r\n        const children = [];\r\n        this.root.core.update();\r\n        this.root.core.collectAtCoord(x, y, children);\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nimport Element from \"./Element.mjs\";\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport TextureManager from \"./TextureManager.mjs\";\r\nimport TextureThrottler from \"./TextureThrottler.mjs\";\r\nimport CoreContext from \"./core/CoreContext.mjs\";\r\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\r\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\r\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"./Component.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class Application extends Component {\r\n\r\n    constructor(options = {}, properties) {\r\n        // Save options temporarily to avoid having to pass it through the constructor.\r\n        Application._temp_options = options;\r\n\r\n        // Booting flag is used to postpone updateFocusSettings;\r\n        Application.booting = true;\r\n        const stage = new Stage(options.stage);\r\n        super(stage, properties);\r\n        Application.booting = false;\r\n\r\n        this.__updateFocusCounter = 0;\r\n        this.__keypressTimers = new Map();\r\n        this.__hoveredChild = null;\r\n\r\n        // We must construct while the application is not yet attached.\r\n        // That's why we 'init' the stage later (which actually emits the attach event).\r\n        this.stage.init();\r\n\r\n        // Initially, the focus settings are updated after both the stage and application are constructed.\r\n        this.updateFocusSettings();\r\n\r\n        this.__keymap = this.getOption('keys');\r\n\r\n        if (this.__keymap) {\r\n            this.stage.platform.registerKeydownHandler((e) => {\r\n                this._receiveKeydown(e);\r\n            });\r\n\r\n            this.stage.platform.registerKeyupHandler((e) => {\r\n                this._receiveKeyup(e);\r\n            });\r\n        }\r\n\r\n        if (this.getOption(\"enablePointer\")) {\r\n            this.stage.platform.registerClickHandler((e) => {\r\n                this._receiveClick(e);\r\n            });\r\n\r\n            this.stage.platform.registerHoverHandler((e) => {\r\n                this._receiveHover(e);\r\n            });\r\n\r\n            this.stage.platform.registerScrollWheelHandler((e) => {\r\n                this._recieveScrollWheel(e);\r\n            });\r\n\r\n            this.cursor = 'default';\r\n        }\r\n    }\r\n\r\n    getOption(name) {\r\n        return this.__options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this.__options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this.__options[name] = def;\r\n            } else {\r\n                this.__options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('debug', false);\r\n        opt('keys', {\r\n            38: \"Up\",\r\n            40: \"Down\",\r\n            37: \"Left\",\r\n            39: \"Right\",\r\n            13: \"Enter\",\r\n            8: \"Back\",\r\n            27: \"Exit\"\r\n        });\r\n        opt('enablePointer', false);\r\n    }\r\n\r\n    __construct() {\r\n        this.stage.setApplication(this);\r\n\r\n        this._setOptions(Application._temp_options);\r\n        delete Application._temp_options;\r\n\r\n        super.__construct();\r\n    }\r\n\r\n    __init() {\r\n        super.__init();\r\n        this.__updateFocus();\r\n    }\r\n\r\n    updateFocusPath() {\r\n        this.__updateFocus();\r\n    }\r\n\r\n    __updateFocus() {\r\n        const notOverridden = this.__updateFocusRec();\r\n\r\n        if (!Application.booting && notOverridden) {\r\n            this.updateFocusSettings();\r\n        }\r\n    }\r\n\r\n    __updateFocusRec() {\r\n        const updateFocusId = ++this.__updateFocusCounter;\r\n        this.__updateFocusId = updateFocusId;\r\n\r\n        const newFocusPath = this.__getFocusPath();\r\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\r\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\r\n\r\n        if (!prevFocusedComponent) {\r\n            // Focus events.\r\n            this._focusPath = [];\r\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\r\n                this._focusPath.push(newFocusPath[i]);\r\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\r\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                if (focusOverridden) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\r\n            let index;\r\n            for (index = 0; index < m; index++) {\r\n                if (this._focusPath[index] !== newFocusPath[index]) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\r\n\r\n                if (this.getOption('debug')) {\r\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\r\n                }\r\n\r\n                // Unfocus events.\r\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\r\n                    const unfocusedElement = this._focusPath.pop();\r\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus events.\r\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\r\n                    this._focusPath.push(newFocusPath[i]);\r\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus changed events.\r\n                for (let i = 0; i < index; i++) {\r\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    updateFocusSettings() {\r\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\r\n\r\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\r\n        // focus directly (such as the application background).\r\n        const focusSettings = {};\r\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\r\n                this._focusPath[i]._setFocusSettings(focusSettings);\r\n            }\r\n        }\r\n\r\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\r\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\r\n            }\r\n        }\r\n\r\n        this.__prevFocusSettings = focusSettings;\r\n    }\r\n\r\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\r\n        // Override to handle focus-based settings.\r\n    }\r\n\r\n    __getFocusPath() {\r\n        const path = [this];\r\n        let current = this;\r\n        do {\r\n            const nextFocus = current._getFocused();\r\n            if (!nextFocus || (nextFocus === current)) {\r\n                // Found!;\r\n                break;\r\n            }\r\n\r\n\r\n            let ptr = nextFocus.cparent;\r\n            if (ptr === current) {\r\n                path.push(nextFocus);\r\n            } else {\r\n                // Not an immediate child: include full path to descendant.\r\n                const newParts = [nextFocus];\r\n                do {\r\n                    if (!ptr) {\r\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\r\n                    }\r\n                    newParts.push(ptr);\r\n                    ptr = ptr.cparent;\r\n                } while (ptr !== current);\r\n\r\n                // Add them reversed.\r\n                for (let i = 0, n = newParts.length; i < n; i++) {\r\n                    path.push(newParts[n - i - 1]);\r\n                }\r\n            }\r\n\r\n            current = nextFocus;\r\n        } while (true);\r\n\r\n        return path;\r\n    }\r\n\r\n    get focusPath() {\r\n        return this._focusPath;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, top-down from application to focused component.\r\n     */\r\n    focusTopDownEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = 0; i < n; i++) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, bottom-up from focused component to application.\r\n     */\r\n    focusBottomUpEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _receiveKeydown(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n        const path = this.focusPath;\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                const hasTimer = this.__keypressTimers.has(keys[i]);\r\n                // prevent event from getting fired when the timeout is still active\r\n                if (path[path.length - 1].longpress && hasTimer) {\r\n                    return;\r\n                }\r\n\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        const consumer = path[path.length - 1];\r\n\r\n        if (keys && consumer.longpress) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                this._startLongpressTimer(keys[i], consumer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Keyup listener\r\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\r\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\r\n     *\r\n     * @param e\r\n     * @private\r\n     */\r\n    _receiveKeyup(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (this.__keypressTimers.has(keys[i])) {\r\n                    // keyup has fired before end of timeout so we clear it\r\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\r\n                    // delete so we can register it again\r\n                    this.__keypressTimers.delete(keys[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\r\n     * before the timer goes off.\r\n     *\r\n     * If key is not release (keyup) the longpress handler will be fired.\r\n     * Configuration can be via the Components template:\r\n     *\r\n     * static _template() {\r\n     *     return {\r\n     *         w:100, h:100,\r\n     *         longpress:{up:700, down:500}\r\n     *     }\r\n     * }     *\r\n     * // this will get called when up has been pressed for 700ms\r\n     * _handleUpLong() {\r\n     *\r\n     * }\r\n     *\r\n     * @param key\r\n     * @param element\r\n     * @private\r\n     */\r\n    _startLongpressTimer(key, element) {\r\n        const config = element.longpress;\r\n        const lookup = key.toLowerCase();\r\n\r\n        if (config[lookup]) {\r\n            const timeout = config[lookup];\r\n            if (!Utils.isNumber(timeout)) {\r\n                element._throwError(\"config value for longpress must be a number\");\r\n            } else {\r\n                this.__keypressTimers.set(key, setTimeout(() => {\r\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\r\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\r\n                    }\r\n\r\n                    this.__keypressTimers.delete(key);\r\n                }, timeout || 500 /* prevent 0ms */));\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    _recieveScrollWheel(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\r\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    fireTopDownScrollWheelHandler(event, obj) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children).reverse();\r\n        let n = affected.length;\r\n\r\n        while (n--) {\r\n            const child = affected[n];\r\n            if (child && child[event]) {\r\n                child._captureScroll(obj);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    fireBottomUpScrollWheelHandler(event, obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[event]) {\r\n                child._handleScroll(obj);\r\n                return true;\r\n            }\r\n            child = child.parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _receiveClick(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpClickHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpClickHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[\"_handleClick\"]) {\r\n                const { px, py } = child.core._worldContext;\r\n                const cx = px * precision;\r\n                const cy = py * precision;\r\n\r\n                const localCoords = {\r\n                    x: clientX - cx,\r\n                    y: clientY - cy\r\n                }\r\n\r\n                const returnValue = child._handleClick(target, localCoords);\r\n                if (returnValue !== false) {\r\n                    break;\r\n                }\r\n            }\r\n            child = child.parent;\r\n        }\r\n    }\r\n\r\n    _receiveHover(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpHoverHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpHoverHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n\r\n        // Only fire handlers when pointer target changes\r\n        if (target !== this.__hoveredChild) {\r\n\r\n            let hoveredBranch = new Set();\r\n            let newHoveredBranch = new Set();\r\n\r\n            if (target) {\r\n                newHoveredBranch = new Set(target.getAncestors());\r\n            }\r\n\r\n            if (this.__hoveredChild) {\r\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\r\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\r\n                    const c = Component.getComponent(elem);\r\n                    if (c[\"_handleUnhover\"]) {\r\n                        c._handleUnhover(elem);\r\n                    }\r\n                    if (elem.parent && elem.parent.cursor) {\r\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.__hoveredChild = target;\r\n\r\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\r\n            for (const elem of diffBranch) {\r\n                const c = Component.getComponent(elem);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(elem);\r\n                }\r\n            }\r\n\r\n            // New element hover cursor\r\n            const lastElement = diffBranch[0];\r\n            if (lastElement && lastElement.cursor) {\r\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\r\n            }\r\n\r\n            // Rerun _handleHover for target element in case it's been hovered\r\n            // back from its child\r\n            if (diffBranch.length === 0 && target) {\r\n                const c = Component.getComponent(target);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(target);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTargetChild(clientX, clientY) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children);\r\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\r\n\r\n        hoverableChildren.sort((a, b) => {\r\n            // Sort by zIndex and then id\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex < b.zIndex) {\r\n                return -1;\r\n            } else {\r\n                return a.id > b.id ? 1 : -1;\r\n            }\r\n        });\r\n\r\n        if (hoverableChildren.length) {\r\n            // Assume target has highest zIndex (id when zIndex equal)\r\n            return hoverableChildren.slice(-1)[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    _findChildren(bucket, children) {\r\n        let n = children.length;\r\n        while (n--) {\r\n            const child = children[n];\r\n            // only add active children\r\n            if (child.__active && child.collision) {\r\n                if (child.collision === true) {\r\n                    bucket.push(child);\r\n                }\r\n                if (child.hasChildren()) {\r\n                    this._findChildren(bucket, child.children);\r\n                }\r\n            }\r\n        }\r\n        return bucket;\r\n    }\r\n\r\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\r\n        let n = affectedChildren.length;\r\n        const candidates = [];\r\n\r\n        // loop through affected children\r\n        // and perform collision detection\r\n        while (n--) {\r\n            const child = affectedChildren[n];\r\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n            const ctx = child.core._worldContext;\r\n\r\n            const cx = ctx.px * precision;\r\n            const cy = ctx.py * precision;\r\n            const cw = child.finalW * ctx.ta * precision;\r\n            const ch = child.finalH * ctx.td * precision;\r\n\r\n            if (cx > this.stage.w || cy > this.stage.h) {\r\n                continue;\r\n            }\r\n\r\n            if (child.parent.core._scissor) {\r\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\r\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\r\n                    continue\r\n            }\r\n\r\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\r\n                candidates.push(child);\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n\r\n    _testCollision(px, py, cx, cy, cw, ch) {\r\n        if (px >= cx &&\r\n            px <= cx + cw &&\r\n            py >= cy &&\r\n            py <= cy + ch) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        if (!this._destroyed) {\r\n            this._destroy();\r\n            this.stage.destroy();\r\n            this._destroyed = true;\r\n        }\r\n    }\r\n\r\n    _destroy() {\r\n        // This forces the _detach, _disabled and _active events to be called.\r\n        this.stage.setApplication(undefined);\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n\r\n        if (this.__keypressTimers.size) {\r\n            for (const timer of this.__keypressTimers.values()) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            this.__keypressTimers.clear();\r\n        }\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.stage.getCanvas();\r\n    }\r\n\r\n}\r\n\r\nimport Stage from \"../tree/Stage.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticCanvasTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._factory = undefined;\r\n        this._lookupId = undefined;\r\n    }\r\n\r\n    set content({factory, lookupId = undefined}) {\r\n        this._factory = factory;\r\n        this._lookupId = lookupId;\r\n        this._changed();\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._factory;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._lookupId;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const f = this._factory;\r\n        return (cb) => {\r\n            return f((err, canvas) => {\r\n                if (err) {\r\n                    return cb(err);\r\n                }\r\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\r\n            }, this.stage);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\r\n\r\nexport default class Tools {\r\n\r\n    static getCanvasTexture(canvasFactory, lookupId) {\r\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\r\n    }\r\n\r\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\r\n            } else {\r\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\r\n            }\r\n        };\r\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (fill === undefined) fill = true;\r\n        if (strokeWidth === undefined) strokeWidth = 0;\r\n\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + strokeWidth + 2;\r\n        canvas.height = h + strokeWidth + 2;\r\n\r\n        ctx.beginPath();\r\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n\r\n        if (fill) {\r\n            if (Utils.isNumber(fillColor)) {\r\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\r\n            } else {\r\n                ctx.fillStyle = \"white\";\r\n            }\r\n            ctx.fill();\r\n        }\r\n\r\n        if (strokeWidth) {\r\n            if (Utils.isNumber(strokeColor)) {\r\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\r\n            } else {\r\n                ctx.strokeStyle = \"white\";\r\n            }\r\n            ctx.lineWidth = strokeWidth;\r\n            ctx.stroke();\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\r\n            } else {\r\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\r\n            }\r\n        };\r\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createShadowRect(stage, w, h, radius, blur, margin) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + margin * 2;\r\n        canvas.height = h + margin * 2;\r\n\r\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\r\n        ctx.globalAlpha = 0.01;\r\n        ctx.fillRect(0, 0, 0.01, 0.01);\r\n        ctx.globalAlpha = 1.0;\r\n\r\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.shadowBlur = blur;\r\n        ctx.shadowOffsetX = (w + 10) + margin;\r\n        ctx.shadowOffsetY = margin;\r\n\r\n        ctx.beginPath();\r\n        const x = -(w + 10);\r\n        const y = 0;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getSvgTexture(url, w, h) {\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createSvg(cb, stage, url, w, h);\r\n            } else {\r\n                this.createSvg(cb, stage, url, w, h);\r\n            }\r\n        };\r\n        let id = 'svg' + [w, h, url].join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createSvg(cb, stage, url, w, h) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            cb(null, canvas);\r\n        }\r\n        img.onerror = (err) => {\r\n            cb(err);\r\n        }\r\n\r\n        // On the PS4 platform setting the `crossOrigin` attribute on images\r\n        // can cause CORS failures.\r\n        if (!Utils.isPS4) {\r\n            img.crossOrigin = \"Anonymous\";\r\n        }\r\n\r\n        img.src = url;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class ObjMerger {\r\n\r\n    static isMf(f) {\r\n        return Utils.isFunction(f) && f.__mf;\r\n    }\r\n\r\n    static mf(f) {\r\n        // Set as merge function.\r\n        f.__mf = true;\r\n        return f;\r\n    }\r\n\r\n    static merge(a, b) {\r\n        const aks = Object.keys(a);\r\n        const bks = Object.keys(b);\r\n\r\n        if (!bks.length) {\r\n            return a;\r\n        }\r\n\r\n        // Create index array for all elements.\r\n        const ai = {};\r\n        const bi = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n            ai[key] = -1;\r\n            bi[key] = i;\r\n        }\r\n        for (let i = 0, n = aks.length; i < n; i++) {\r\n            const key = aks[i];\r\n            ai[key] = i;\r\n            if (bi[key] === undefined) {\r\n                bi[key] = -1;\r\n            }\r\n        }\r\n\r\n        const aksl = aks.length;\r\n\r\n        const result = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n\r\n            // Prepend all items in a that are not in b - before the now added b attribute.\r\n            const aIndex = ai[key];\r\n            let curIndex = aIndex;\r\n            while(--curIndex >= 0) {\r\n                const akey = aks[curIndex];\r\n                if (bi[akey] !== -1) {\r\n                    // Already found? Stop processing.\r\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\r\n                    break;\r\n                }\r\n            }\r\n            while(++curIndex < aIndex) {\r\n                const akey = aks[curIndex];\r\n                result[akey] = a[akey];\r\n            }\r\n\r\n            const bv = b[key];\r\n            const av = a[key];\r\n            let r;\r\n            if (this.isMf(bv)) {\r\n                r = bv(av);\r\n            } else {\r\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\r\n                    r = bv;\r\n                } else {\r\n                    r = ObjMerger.merge(av, bv);\r\n                }\r\n            }\r\n\r\n            // When marked as undefined, property is deleted.\r\n            if (r !== undefined) {\r\n                result[key] = r;\r\n            }\r\n        }\r\n\r\n        // Append remaining final items in a.\r\n        let curIndex = aksl;\r\n        while(--curIndex >= 0) {\r\n            const akey = aks[curIndex];\r\n            if (bi[akey] !== -1) {\r\n                break;\r\n            }\r\n        }\r\n        while(++curIndex < aksl) {\r\n            const akey = aks[curIndex];\r\n            result[akey] = a[akey];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"../tree/ObjectList.mjs\";\r\n\r\nexport default class ObjectListProxy extends ObjectList {\r\n\r\n    constructor(target) {\r\n        super();\r\n        this._target = target;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._target.addAt(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        this._target.removeAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        this._target._setByArray(order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        this._target.setAt(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._target.setAt(item, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        return this._target.createItem(object);\r\n    }\r\n\r\n    isItem(object) {\r\n        return this._target.isItem(object);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\r\n\r\nexport default class ObjectListWrapper extends ObjectListProxy {\r\n\r\n    constructor(target, wrap) {\r\n        super(target);\r\n        this._wrap = wrap;\r\n    }\r\n\r\n    wrap(item) {\r\n        let wrapper = this._wrap(item);\r\n        item._wrapper = wrapper;\r\n        return wrapper;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        item = this.wrap(item);\r\n        super.onAdd(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        added.forEach(a => this.wrap(a));\r\n        order = order.map(a => a._wrapper);\r\n        super.onSync(removed, added, order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        item = this.wrap(item);\r\n        super.onSet(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        super.onMove(item, fromIndex, toIndex);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class NoiseTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__noise';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const gl = this.stage.gl;\r\n        return function(cb) {\r\n            const noise = new Uint8Array(128 * 128 * 4);\r\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\r\n                const v = Math.floor(Math.random() * 256);\r\n                noise[i] = v;\r\n                noise[i+1] = v;\r\n                noise[i+2] = v;\r\n                noise[i+3] = 255;\r\n            }\r\n            const texParams = {}\r\n\r\n            if (gl) {\r\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class HtmlTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._htmlElement = undefined;\r\n        this._scale = 1;\r\n    }\r\n\r\n    set htmlElement(v) {\r\n        this._htmlElement = v;\r\n        this._changed();\r\n    }\r\n\r\n    get htmlElement() {\r\n        return this._htmlElement;\r\n    }\r\n\r\n    set scale(v) {\r\n        this._scale = v;\r\n        this._changed();\r\n    }\r\n\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set html(v) {\r\n        if (!v) {\r\n            this.htmlElement = undefined;\r\n        } else {\r\n            const d = document.createElement('div');\r\n            d.innerHTML = \"<div>\" + v + \"</div>\";\r\n            this.htmlElement = d.firstElementChild;\r\n        }\r\n    }\r\n\r\n    get html() {\r\n        return this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return this.htmlElement;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._scale + \":\" + this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const htmlElement = this._htmlElement;\r\n        const scale = this._scale;\r\n        return function(cb) {\r\n            if (!window.html2canvas) {\r\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\r\n            }\r\n\r\n            const area = HtmlTexture.getPreloadArea();\r\n            area.appendChild(htmlElement);\r\n\r\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\r\n                area.removeChild(htmlElement);\r\n                if (canvas.height === 0) {\r\n                    return cb(new Error(\"Canvas height is 0\"));\r\n                }\r\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\r\n            }).catch(e => {\r\n                console.error('[Lightning]', e);\r\n            });\r\n        }\r\n    }\r\n\r\n    static getPreloadArea() {\r\n        if (!this._preloadArea) {\r\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\r\n            this._preloadArea = document.createElement('div');\r\n            if (this._preloadArea.attachShadow) {\r\n                // Use a shadow DOM if possible to prevent styling from interfering.\r\n                this._preloadArea.attachShadow({mode: 'closed'});\r\n            }\r\n            this._preloadArea.style.opacity = 0;\r\n            this._preloadArea.style.pointerEvents = 'none';\r\n            this._preloadArea.style.position = 'fixed';\r\n            this._preloadArea.style.display = 'block';\r\n            this._preloadArea.style.top = '100vh';\r\n            this._preloadArea.style.overflow = 'hidden';\r\n            document.body.appendChild(this._preloadArea);\r\n        }\r\n        return this._preloadArea;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class ListComponent extends Component {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._wrapper = super._children.a({});\r\n\r\n        this._reloadVisibleElements = false;\r\n\r\n        this._visibleItems = new Set();\r\n\r\n        this._index = 0;\r\n\r\n        this._started = false;\r\n\r\n        /**\r\n         * The transition definition that is being used when scrolling the items.\r\n         * @type TransitionSettings\r\n         */\r\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\r\n\r\n        /**\r\n         * The scroll area size in pixels per item.\r\n         */\r\n        this._itemSize = 100;\r\n\r\n        this._viewportScrollOffset = 0;\r\n\r\n        this._itemScrollOffset = 0;\r\n\r\n        /**\r\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\r\n         */\r\n        this._roll = false;\r\n\r\n        /**\r\n         * Allows restricting the start scroll position.\r\n         */\r\n        this._rollMin = 0;\r\n\r\n        /**\r\n         * Allows restricting the end scroll position.\r\n         */\r\n        this._rollMax = 0;\r\n\r\n        /**\r\n         * Definition for a custom animation that is applied when an item is (partially) selected.\r\n         * @type AnimationSettings\r\n         */\r\n        this._progressAnimation = null;\r\n\r\n        /**\r\n         * Inverts the scrolling direction.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._invertDirection = false;\r\n\r\n        /**\r\n         * Layout the items horizontally or vertically?\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._horizontal = true;\r\n\r\n        this.itemList = new ListItems(this);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return false;\r\n    }\r\n\r\n    get items() {\r\n        return this.itemList.get();\r\n    }\r\n\r\n    set items(children) {\r\n        this.itemList.patch(children);\r\n    }\r\n\r\n    start() {\r\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\r\n        this._scrollTransition = this._wrapper.transition(this.property);\r\n        this._scrollTransition.on('progress', p => this.update());\r\n\r\n        this.setIndex(0, true, true);\r\n\r\n        this._started = true;\r\n\r\n        this.update();\r\n    }\r\n\r\n    setIndex(index, immediate = false, closest = false) {\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n\r\n        if (closest) {\r\n            // Scroll to same offset closest to the index.\r\n            let offset = Utils.getModuloIndex(index, nElements);\r\n            let o = Utils.getModuloIndex(this.index, nElements);\r\n            let diff = offset - o;\r\n            if (diff > 0.5 * nElements) {\r\n                diff -= nElements;\r\n            } else if (diff < -0.5 * nElements) {\r\n                diff += nElements;\r\n            }\r\n            this._index += diff;\r\n        } else {\r\n            this._index = index;\r\n        }\r\n\r\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\r\n            this._index = Utils.getModuloIndex(this._index, nElements);\r\n        }\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = direction * this._index * this._itemSize;\r\n\r\n        if (this._roll) {\r\n            let min, max, scrollDelta;\r\n            if (direction == 1) {\r\n                max = (nElements - 1) * this._itemSize;\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max -= scrollDelta;\r\n\r\n                min = this.viewportSize - (this._itemSize + scrollDelta);\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.max(Math.min(value, max), min);\r\n            } else {\r\n                max = (nElements * this._itemSize - this.viewportSize);\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max += scrollDelta;\r\n\r\n                let min = scrollDelta;\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.min(Math.max(-max, value), -min);\r\n            }\r\n        }\r\n\r\n        this._scrollTransition.start(value);\r\n\r\n        if (immediate) {\r\n            this._scrollTransition.finish();\r\n        }\r\n\r\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n    }\r\n\r\n    getAxisPosition() {\r\n        let target = -this._scrollTransition._targetValue;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = -direction * this._index * this._itemSize;\r\n\r\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\r\n    }\r\n\r\n    update() {\r\n        if (!this._started) return;\r\n\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n\r\n        // Map position to index value.\r\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\r\n\r\n        let viewportSize = this.viewportSize;\r\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\r\n        v += scrollDelta;\r\n\r\n        let s, e, ps, pe;\r\n        if (direction == -1) {\r\n            s = Math.floor(-v / this._itemSize);\r\n            ps = 1 - ((-v / this._itemSize) - s);\r\n            e = Math.floor((viewportSize - v) / this._itemSize);\r\n            pe = (((viewportSize - v) / this._itemSize) - e);\r\n        } else {\r\n            s = Math.ceil(v / this._itemSize);\r\n            ps = 1 + (v / this._itemSize) - s;\r\n            e = Math.ceil((v - viewportSize) / this._itemSize);\r\n            pe = e - ((v - viewportSize) / this._itemSize);\r\n        }\r\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\r\n            // Don't show additional items.\r\n            if (e >= nElements) {\r\n                e = nElements - 1;\r\n                pe = 1;\r\n            }\r\n            if (s >= nElements) {\r\n                s = nElements - 1;\r\n                ps = 1;\r\n            }\r\n            if (e <= -1) {\r\n                e = 0;\r\n                pe = 1;\r\n            }\r\n            if (s <= -1) {\r\n                s = 0;\r\n                ps = 1;\r\n            }\r\n        }\r\n\r\n        let offset = -direction * s * this._itemSize;\r\n\r\n        let item;\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n\r\n            let element = this.getElement(realIndex);\r\n            item = element.parent;\r\n            this._visibleItems.delete(item);\r\n            if (this._horizontal) {\r\n                item.x = offset + scrollDelta;\r\n            } else {\r\n                item.y = offset + scrollDelta;\r\n            }\r\n\r\n            let wasVisible = item.visible;\r\n            item.visible = true;\r\n\r\n            if (!wasVisible || this._reloadVisibleElements) {\r\n                // Turned visible.\r\n                this.emit('visible', index, realIndex);\r\n            }\r\n\r\n\r\n\r\n            if (this._progressAnimation) {\r\n                let p = 1;\r\n                if (index == s) {\r\n                    p = ps;\r\n                } else if (index == e) {\r\n                    p = pe;\r\n                }\r\n\r\n                // Use animation to progress.\r\n                this._progressAnimation.apply(element, p);\r\n            }\r\n\r\n            offset += this._itemSize;\r\n        }\r\n\r\n        // Handle item visibility.\r\n        let self = this;\r\n        this._visibleItems.forEach(function(invisibleItem) {\r\n            invisibleItem.visible = false;\r\n            self._visibleItems.delete(invisibleItem);\r\n        });\r\n\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n            this._visibleItems.add(this.getWrapper(realIndex));\r\n        }\r\n\r\n        this._reloadVisibleElements = false;\r\n    }\r\n\r\n    setPrevious() {\r\n        this.setIndex(this._index - 1);\r\n    }\r\n\r\n    setNext() {\r\n        this.setIndex(this._index + 1);\r\n    }\r\n\r\n    getWrapper(index) {\r\n        return this._wrapper.children[index];\r\n    }\r\n\r\n    getElement(index) {\r\n        let e = this._wrapper.children[index];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    reload() {\r\n        this._reloadVisibleElements = true;\r\n        this.update();\r\n    }\r\n\r\n    get element() {\r\n        let e = this._wrapper.children[this.realIndex];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    get length() {\r\n        return this._wrapper.children.length;\r\n    }\r\n\r\n    get property() {\r\n        return this._horizontal ? 'x' : 'y';\r\n    }\r\n\r\n    get viewportSize() {\r\n        return this._horizontal ? this.w : this.h;\r\n    }\r\n\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    get realIndex() {\r\n        return Utils.getModuloIndex(this._index, this.length);\r\n    }\r\n\r\n    get itemSize() {\r\n        return this._itemSize;\r\n    }\r\n\r\n    set itemSize(v) {\r\n        this._itemSize = v;\r\n        this.update();\r\n    }\r\n\r\n    get viewportScrollOffset() {\r\n        return this._viewportScrollOffset;\r\n    }\r\n\r\n    set viewportScrollOffset(v) {\r\n        this._viewportScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get itemScrollOffset() {\r\n        return this._itemScrollOffset;\r\n    }\r\n\r\n    set itemScrollOffset(v) {\r\n        this._itemScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get scrollTransitionSettings() {\r\n        return this._scrollTransitionSettings;\r\n    }\r\n\r\n    set scrollTransitionSettings(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    set scrollTransition(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    get scrollTransition() {\r\n        return this._scrollTransition;\r\n    }\r\n\r\n    get progressAnimation() {\r\n        return this._progressAnimation;\r\n    }\r\n\r\n    set progressAnimation(v) {\r\n        if (Utils.isObjectLiteral(v)) {\r\n            this._progressAnimation = this.stage.animations.createSettings(v);\r\n        } else {\r\n            this._progressAnimation = v;\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    get roll() {\r\n        return this._roll;\r\n    }\r\n\r\n    set roll(v) {\r\n        this._roll = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMin() {\r\n        return this._rollMin;\r\n    }\r\n\r\n    set rollMin(v) {\r\n        this._rollMin = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMax() {\r\n        return this._rollMax;\r\n    }\r\n\r\n    set rollMax(v) {\r\n        this._rollMax = v;\r\n        this.update();\r\n    }\r\n\r\n    get invertDirection() {\r\n        return this._invertDirection;\r\n    }\r\n\r\n    set invertDirection(v) {\r\n        if (!this._started) {\r\n            this._invertDirection = v;\r\n        }\r\n    }\r\n\r\n    get horizontal() {\r\n        return this._horizontal;\r\n    }\r\n\r\n    set horizontal(v) {\r\n        if (v !== this._horizontal) {\r\n            if (!this._started) {\r\n                this._horizontal = v;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\r\nclass ListItems extends ObjectListWrapper {\r\n    constructor(list) {\r\n        let wrap = (item => {\r\n            let parent = item.stage.createElement();\r\n            parent.add(item);\r\n            parent.visible = false;\r\n            return parent;\r\n        })\r\n\r\n        super(list._wrapper._children, wrap);\r\n        this.list = list;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        super.onAdd(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    checkStarted(index) {\r\n        this.list._reloadVisibleElements = true;\r\n        if (!this.list._started) {\r\n            this.list.start();\r\n        } else {\r\n            if (this.list.length === 1) {\r\n                this.list.setIndex(0, true, true);\r\n            } else {\r\n                if (this.list._index >= this.list.length) {\r\n                    this.list.setIndex(0);\r\n                }\r\n            }\r\n            this.list.update();\r\n        }\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n        let ri = this.list.realIndex;\r\n        if (ri === index) {\r\n            if (ri === this.list.length) {\r\n                ri--;\r\n            }\r\n            if (ri >= 0) {\r\n                this.list.setIndex(ri);\r\n            }\r\n        } else if (ri > index) {\r\n            this.list.setIndex(ri - 1);\r\n        }\r\n\r\n        this.list._reloadVisibleElements = true;\r\n    }\r\n\r\n    onSet(item, index) {\r\n        super.onSet(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        super.onSync(removed, added, order);\r\n        this.checkStarted(0);\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class LinearBlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n\r\n        this._direction = new Float32Array([1, 0]);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get x() {\r\n        return this._direction[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._direction[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._direction[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._direction[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n\r\n    useDefault() {\r\n        return (this._kernelRadius === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\r\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\r\n\r\n        const w = operation.getRenderWidth();\r\n        const h = operation.getRenderHeight();\r\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nLinearBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 resolution;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 direction;\r\n    uniform int kernelRadius;\r\n    \r\n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3333333333333333) * direction;\r\n        color += texture2D(image, uv) * 0.29411764705882354;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n        return color; \r\n    }\r\n    \r\n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3846153846) * direction;\r\n        vec2 off2 = vec2(3.2307692308) * direction;\r\n        color += texture2D(image, uv) * 0.2270270270;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\r\n        return color;\r\n    }\r\n    \r\n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.411764705882353) * direction;\r\n        vec2 off2 = vec2(3.2941176470588234) * direction;\r\n        vec2 off3 = vec2(5.176470588235294) * direction;\r\n        color += texture2D(image, uv) * 0.1964825501511404;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\r\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\r\n        return color;\r\n    }    \r\n\r\n    void main(void){\r\n        if (kernelRadius == 1) {\r\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else if (kernelRadius == 2) {\r\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else {\r\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\r\n */\r\nexport default class BoxBlurShader extends DefaultShader {\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const dx = 1.0 / operation.getTextureWidth(0);\r\n        const dy = 1.0 / operation.getTextureHeight(0);\r\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\r\n    }\r\n\r\n}\r\n\r\nBoxBlurShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 stepTextureCoord;\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\r\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\r\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\r\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nBoxBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class BlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\r\nimport Shader from \"../tree/Shader.mjs\";\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\n\r\nexport default class FastBlurComponent extends Component {\r\n    static _template() {\r\n        return {}\r\n    }\r\n\r\n    get wrap() {\r\n        return this.tag(\"Wrap\");\r\n    }\r\n\r\n    set content(v) {\r\n        return this.wrap.content = v;\r\n    }\r\n\r\n    get content() {\r\n        return this.wrap.content;\r\n    }\r\n\r\n    set padding(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set amount(v) {\r\n        return this.wrap.amount = v;\r\n    }\r\n\r\n    get amount() {\r\n        return this.wrap.amount;\r\n    }\r\n\r\n    _onResize() {\r\n        this.wrap.w = this.renderWidth;\r\n        this.wrap.h = this.renderHeight;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    _build() {\r\n        this.patch({\r\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nclass C2dFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            forceZIndexContext: true,\r\n            rtt: true,\r\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n\r\n    }\r\n\r\n    static getSpline() {\r\n        if (!this._multiSpline) {\r\n            this._multiSpline = new MultiSpline();\r\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\r\n        }\r\n        return this._multiSpline;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        this._wrapper.x = paddingX;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._wrapper.y = paddingY;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this._textwrap.w = w + paddingX * 2;\r\n        this._textwrap.h = h + paddingY * 2;\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\r\n    }\r\n\r\n    static _amountToKernelRadius(v) {\r\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nclass WebGLFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            },\r\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n        this._output = this.sel(\"Result\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _buildLayers() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._output.x = -paddingX;\r\n        this._textwrap.x = -paddingX;\r\n        this._output.w = fw;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._output.y = -paddingY;\r\n        this._textwrap.y = -paddingY;\r\n        this._output.h = fh;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v === 0) {\r\n            this._textwrap.renderToTexture = false;\r\n            this._output.shader.otherTextureSource = null;\r\n            this._output.visible = false;\r\n        } else {\r\n            this._textwrap.renderToTexture = true;\r\n            this._output.visible = true;\r\n\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n\r\n            if (v <= 1) {\r\n                this._output.texture = this._textwrap.getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\r\n                this._output.shader.a = v;\r\n            } else if (v <= 2) {\r\n                this._output.texture = this.getLayer(0).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\r\n                this._output.shader.a = v - 1;\r\n            } else if (v <= 3) {\r\n                this._output.texture = this.getLayer(1).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\r\n                this._output.shader.a = v - 2;\r\n            } else if (v <= 4) {\r\n                this._output.texture = this.getLayer(2).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\r\n                this._output.shader.a = v - 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._buildLayers();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Shader that combines two textures into one output.\r\n */\r\nclass FastBlurOutputShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._a = 0;\r\n        this._otherTextureSource = null;\r\n    }\r\n\r\n    get a() {\r\n        return this._a;\r\n    }\r\n\r\n    set a(v) {\r\n        this._a = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set otherTextureSource(v) {\r\n        this._otherTextureSource = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\r\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\r\n\r\n        let gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n\r\nFastBlurOutputShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uSampler2;\r\n    uniform float a;\r\n    void main(void){\r\n        if (a == 1.0) {\r\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\r\n        } else {\r\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport default class BloomComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\r\n                BloomBase: {shader: {type: BloomBaseShader},\r\n                    Content: {}\r\n                }\r\n            },\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap.Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _build() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap.Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap.Content').patch(v);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v > 0) {\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._build();\r\n    }\r\n\r\n}\r\n\r\nclass BloomBaseShader extends DefaultShader {\r\n}\r\n\r\nBloomBaseShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float m = max(max(color.r, color.g), color.b);\r\n        float c = max(0.0, (m - 0.80)) * 5.0;\r\n        color = color * c;\r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class SmoothScaleComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\r\n                Content: {}\r\n            },\r\n            Scale: {visible: false}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._smoothScale = 1;\r\n        this._iterations = 0;\r\n    }\r\n\r\n    get content() {\r\n        return this.tag('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.tag('Content').patch(v, true);\r\n    }\r\n\r\n    get smoothScale() {\r\n        return this._smoothScale;\r\n    }\r\n\r\n    set smoothScale(v) {\r\n        if (this._smoothScale !== v) {\r\n            let its = 0;\r\n            while(v < 0.5 && its < 12) {\r\n                its++;\r\n                v = v * 2;\r\n            }\r\n\r\n            this.scale = v;\r\n            this._setIterations(its);\r\n\r\n            this._smoothScale = v;\r\n        }\r\n    }\r\n\r\n    _setIterations(its) {\r\n        if (this._iterations !== its) {\r\n            const scalers = this.sel(\"Scale\").childList;\r\n            const content = this.sel(\"ContentWrap\");\r\n            while (scalers.length < its) {\r\n                const first = scalers.length === 0;\r\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\r\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\r\n            }\r\n\r\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\r\n\r\n            const useScalers = (its > 0);\r\n            this.patch({\r\n                ContentWrap: {renderToTexture: useScalers},\r\n                Scale: {visible: useScalers}\r\n            });\r\n\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                scalers.getAt(i).patch({\r\n                    visible: i < its,\r\n                    renderOffscreen: i !== its - 1\r\n                });\r\n            }\r\n            this._iterations = its;\r\n        }\r\n    }\r\n\r\n    static _updateDimensions(contentWrap, force) {\r\n        const content = contentWrap.children[0];\r\n        let w = content.renderWidth;\r\n        let h = content.renderHeight;\r\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\r\n            contentWrap.w = w;\r\n            contentWrap.h = h;\r\n\r\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                w = w * 0.5;\r\n                h = h * 0.5;\r\n                scalers[i].w = w;\r\n                scalers[i].h = h;\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\r\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getC2d() {\r\n        return C2dGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nWebGLGrayscaleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\r\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\r\n    }\r\n`;\r\n\r\nexport class C2dGrayscaleShader extends C2dDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return WebGLGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * This shader can be used to fix a problem that is known as 'gradient banding'.\r\n */\r\nexport default class DitheringShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._noiseTexture = new NoiseTexture(ctx.stage);\r\n\r\n        this._graining = 1/256;\r\n\r\n        this._random = false;\r\n    }\r\n\r\n    set graining(v) {\r\n        this._graining = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set random(v) {\r\n        this._random = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Make sure that the noise texture is uploaded to the GPU.\r\n        this._noiseTexture.load();\r\n\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            // Calculate noise texture coordinates so that it spans the full element.\r\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\r\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\r\n\r\n            let ulx = 0;\r\n            let uly = 0;\r\n            if (this._random) {\r\n                ulx = Math.random();\r\n                uly = Math.random();\r\n\r\n                brx += ulx;\r\n                bry += uly;\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = ulx;\r\n                    ulx = brx;\r\n                    brx = t;\r\n                }\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = uly;\r\n                    uly = bry;\r\n                    bry = t;\r\n                }\r\n            }\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = ulx;\r\n            floats[offset + 1] = uly;\r\n\r\n            floats[offset + 2] = brx;\r\n            floats[offset + 3] = uly;\r\n\r\n            floats[offset + 4] = brx;\r\n            floats[offset + 5] = bry;\r\n\r\n            floats[offset + 6] = ulx;\r\n            floats[offset + 7] = bry;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n\r\n        let glTexture = this._noiseTexture.source.nativeTexture;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\r\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        let gl = this.gl;\r\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    useDefault() {\r\n        return this._graining === 0;\r\n    }\r\n\r\n    afterDraw(operation) {\r\n        if (this._random) {\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDitheringShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec2 aNoiseTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vNoiseTextureCoord = aNoiseTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDitheringShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uNoiseSampler;\r\n    uniform float graining;\r\n    void main(void){\r\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../../tree/Utils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class CircularPushShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._inputValue = 0;\r\n\r\n        this._maxDerivative = 0.01;\r\n\r\n        this._normalizedValue = 0;\r\n\r\n        // The offset between buckets. A value between 0 and 1.\r\n        this._offset = 0;\r\n\r\n        this._amount = 0.1;\r\n\r\n        this._aspectRatio = 1;\r\n\r\n        this._offsetX = 0;\r\n\r\n        this._offsetY = 0;\r\n\r\n        this.buckets = 100;\r\n    }\r\n\r\n    get aspectRatio() {\r\n        return this._aspectRatio;\r\n    }\r\n\r\n    set aspectRatio(v) {\r\n        this._aspectRatio = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetX() {\r\n        return this._offsetX;\r\n    }\r\n\r\n    set offsetX(v) {\r\n        this._offsetX = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        this._offsetY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    set inputValue(v) {\r\n        this._inputValue = v;\r\n    }\r\n\r\n    get inputValue() {\r\n        return this._inputValue;\r\n    }\r\n\r\n    set maxDerivative(v) {\r\n        this._maxDerivative = v;\r\n    }\r\n\r\n    get maxDerivative() {\r\n        return this._maxDerivative;\r\n    }\r\n\r\n    set buckets(v) {\r\n        if (v > 100) {\r\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\r\n            v = 100;\r\n        }\r\n\r\n        // This should be set before starting.\r\n        this._buckets = v;\r\n\r\n        // Init values array in the correct length.\r\n        this._values = new Uint8Array(this._getValues(v));\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    get buckets() {\r\n        return this._buckets;\r\n    }\r\n\r\n    _getValues(n) {\r\n        const v = [];\r\n        for (let i = 0; i < n; i++) {\r\n            v.push(this._inputValue);\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * Progresses the shader with the specified (fractional) number of buckets.\r\n     * @param {number} o;\r\n     *   A number from 0 to 1 (1 = all buckets).\r\n     */\r\n    progress(o) {\r\n        this._offset += o * this._buckets;\r\n        const full = Math.floor(this._offset);\r\n        this._offset -= full;\r\n        this._shiftBuckets(full);\r\n        this.redraw();\r\n    }\r\n\r\n    _shiftBuckets(n) {\r\n        for (let i = this._buckets - 1; i >= 0; i--) {\r\n            const targetIndex = i - n;\r\n            if (targetIndex < 0) {\r\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\r\n                this._values[i] = 255 * this._normalizedValue;\r\n            } else {\r\n                this._values[i] = this._values[targetIndex];\r\n            }\r\n        }\r\n    }\r\n\r\n    set offset(v) {\r\n        this._offset = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\r\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\r\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\r\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\r\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        const gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        if (!this._valuesTexture) {\r\n            this._valuesTexture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            if (Utils.isNode) {\r\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\r\n            }\r\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        } else {\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n        }\r\n\r\n        // Upload new values.\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    cleanup() {\r\n        if (this._valuesTexture) {\r\n            this.gl.deleteTexture(this._valuesTexture);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nCircularPushShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    uniform float offsetX;\r\n    uniform float offsetY;\r\n    uniform float aspectRatio;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vPos;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vPos = vTextureCoord * 2.0 - 1.0;\r\n        vPos.y = vPos.y * aspectRatio;\r\n        vPos.y = vPos.y + offsetY;\r\n        vPos.x = vPos.x + offsetX;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nCircularPushShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vPos;\r\n    uniform float amount;\r\n    uniform float offset;\r\n    uniform float values[100];\r\n    uniform float buckets;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uValueSampler;\r\n    void main(void){\r\n        float l = length(vPos);\r\n        float m = (l * buckets * 0.678 - offset) / buckets;\r\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\r\n        vec2 unit = vPos / l;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\r\n    }\r\n`;\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class InversionShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nInversionShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class OutlineShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._width = 5;\r\n        this._col = 0xFFFFFFFF;\r\n        this._color = [1,1,1,1];\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get color() {\r\n        return this._col;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this._col !== v) {\r\n            const col = StageUtils.getRgbaComponentsNormalized(v);\r\n            col[0] = col[0] * col[3];\r\n            col[1] = col[1] * col[3];\r\n            col[2] = col[2] * col[3];\r\n\r\n            this._color = col;\r\n\r\n            this.redraw();\r\n\r\n            this._col = v;\r\n        }\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._width === 0 || this._col[3] === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            const elementCore = operation.getElementCore(i);\r\n\r\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\r\n            const ddw = this._width / elementCore.w;\r\n            const dw = ddw / (1 - 2 * ddw);\r\n            const ddh = this._width / elementCore.h;\r\n            const dh = ddh / (1 - 2 * ddh);\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = -dw;\r\n            floats[offset + 1] = -dh;\r\n\r\n            floats[offset + 2] = 1 + dw;\r\n            floats[offset + 3] = -dh;\r\n\r\n            floats[offset + 4] = 1 + dw;\r\n            floats[offset + 5] = 1 + dh;\r\n\r\n            floats[offset + 6] = -dw;\r\n            floats[offset + 7] = 1 + dh;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n}\r\n\r\nOutlineShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aCorner;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vCorner;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vCorner = aCorner;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nOutlineShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vCorner;\r\n    uniform vec4 color;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec2 m = min(vCorner, 1.0 - vCorner);\r\n        float value = step(0.0, min(m.x, m.y));\r\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\r\n */\r\nexport default class PixelateShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._size = new Float32Array([4, 4]);\r\n    }\r\n\r\n    get x() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._size[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._size[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get size() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set size(v) {\r\n        this._size[0] = v;\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return ((this._size[0] === 0) && (this._size[1] === 0));\r\n    }\r\n\r\n    static getWebGLImpl() {\r\n        return WebGLPixelateShaderImpl;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let w = operation.quads.getTextureWidth(operation.index + i);\r\n            let h = operation.quads.getTextureHeight(operation.index + i);\r\n\r\n            floats[offset] = w;\r\n            floats[offset + 1] = h;\r\n            floats[offset + 2] = w;\r\n            floats[offset + 3] = h;\r\n            floats[offset + 4] = w;\r\n            floats[offset + 5] = h;\r\n            floats[offset + 6] = w;\r\n            floats[offset + 7] = h;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\r\n    }\r\n}\r\n\r\nPixelateShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aTextureRes;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        vTextureRes = aTextureRes;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPixelateShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n\r\n    uniform vec2 size;\r\n    uniform sampler2D uSampler;\r\n    \r\n    vec2 mapCoord( vec2 coord )\r\n    {\r\n        coord *= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 unmapCoord( vec2 coord )\r\n    {\r\n        coord /= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 pixelate(vec2 coord, vec2 size)\r\n    {\r\n        return floor( coord / size ) * size;\r\n    }\r\n    \r\n    void main(void)\r\n    {\r\n        vec2 coord = mapCoord(vTextureCoord);\r\n        coord = pixelate(coord, size);\r\n        coord = unmapCoord(coord);\r\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class RadialFilterShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._radius = 0;\r\n        this._cutoff = 1;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set cutoff(v) {\r\n        this._cutoff = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get cutoff() {\r\n        return this._cutoff;\r\n    }\r\n    \r\n    useDefault() {\r\n        return this._radius === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        // We substract half a pixel to get a better cutoff effect.\r\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\r\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nRadialFilterShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 pos;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n        pos = gl_Position.xy;\r\n    }\r\n`;\r\n\r\nRadialFilterShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 pos;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float radius;\r\n    uniform float cutoff;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RoundedRectangleShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._blend = 0;\r\n        this._radius = [1, 1, 1, 1];\r\n        this._stroke = 0;\r\n        this._fc = 0x00ffffff;\r\n        this._fillColor = this._getNormalizedColor(0xffffffff);\r\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\r\n    }\r\n\r\n    set blend(p) {\r\n        this._blend = Math.min(Math.max(p, 0), 1);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._radius = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._radius = v;\r\n            }\r\n            else {\r\n                this._radius = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._radius = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set topLeft(num) {\r\n        this._radius[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topLeft() {\r\n        return this._radius[0];\r\n    }\r\n\r\n    set topRight(num) {\r\n        this._radius[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topRight() {\r\n        return this._radius[1];\r\n    }\r\n\r\n    set bottomRight(num) {\r\n        this._radius[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomRight() {\r\n        return this._radius[2];\r\n    }\r\n\r\n    set bottomLeft(num) {\r\n        this._radius[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomLeft() {\r\n        return this._radius[4];\r\n    }\r\n\r\n    set strokeColor(argb) {\r\n        this._sc = argb;\r\n        this._strokeColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get strokeColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set fillColor(argb) {\r\n        this._fc = argb;\r\n        this._fillColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get fillColor() {\r\n        return this._fc;\r\n    }\r\n\r\n    set stroke(num) {\r\n        this._stroke = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\r\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\r\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\r\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nRoundedRectangleShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nRoundedRectangleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n\r\n    #define PI 3.14159265359\r\n\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 radius;\r\n    uniform float stroke;\r\n    uniform vec4 strokeColor;\r\n    uniform vec4 fillColor;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float blend;\r\n    \r\n    float boxDist(vec2 p, vec2 size, float radius){\r\n        size -= vec2(radius);\r\n        vec2 d = abs(p) - size;\r\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    float innerBorderMask(float dist, float width){\r\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\r\n        float alpha2 = clamp(dist, 0.0, 1.0);\r\n        return alpha1 - alpha2;\r\n    }\r\n\r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        float r = 0.0;\r\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[0];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[1];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\r\n            r = radius[2];\r\n        } else {\r\n            r = radius[3];\r\n        }\r\n        \r\n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\r\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \r\n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\r\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from './DefaultShader.mjs';\r\n\r\nexport default class FadeOutShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._fade = [0, 0, 0, 0];\r\n    }\r\n\r\n    set top(num) {\r\n        this._fade[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get top() {\r\n        return this._fade[0];\r\n    }\r\n\r\n    set right(num) {\r\n        this._fade[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get right() {\r\n        return this._fade[1];\r\n    }\r\n\r\n    set bottom(num) {\r\n        this._fade[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottom() {\r\n        return this._fade[2];\r\n    }\r\n\r\n    set left(num) {\r\n        this._fade[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get left() {\r\n        return this._fade[3];\r\n    }\r\n\r\n    set fade(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._fade = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._fade = v;\r\n            }\r\n            else {\r\n                this._fade = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._fade = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get fade() {\r\n        return this._fade;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const fade = this._fade.map((f) => f * renderPrecision);\r\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nFadeOutShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 fade;\r\n    \r\n    void main() {\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 point = vTextureCoord.xy * resolution.xy;\r\n        \r\n        vec2 pos1;\r\n        vec2 pos2;\r\n        vec2 d;\r\n        float c;\r\n        float t = 0.0;\r\n             \r\n        if(fade[0] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x, point.y + fade[0]);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[1] > 0.0) {\r\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\r\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[2] > 0.0) {\r\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\r\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[3] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x + fade[3], point.y);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class VignetteShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._magnitude = 1.3;\r\n        this._intensity = 0.7;\r\n        this._pivot = [0.5, 0.5];\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\r\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\r\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\r\n        this.redraw()\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v)) {\r\n            this._pivot = v;\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivot[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivot[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get intensity() {\r\n        return this._intensity;\r\n    }\r\n\r\n    set intensity(v) {\r\n        this._intensity = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get magnitude() {\r\n        return this._magnitude;\r\n\r\n    }\r\n\r\n    set magnitude(v) {\r\n        this._magnitude = v;\r\n        this.redraw();\r\n    }\r\n}\r\n\r\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nVignetteShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float magnitude;\r\n    uniform float intensity;\r\n    uniform vec2 pivot;\r\n\r\n    void main() {\r\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\r\n        uv.x = clamp(uv.x, 0.0, 1.0);\r\n        uv.y = clamp(uv.y, 0.0, 1.0);\r\n   \r\n        uv *=  1.00 - uv.yx;\r\n        float vig = uv.x * uv.y * 25.0 * intensity;\r\n        vig = pow(vig, 0.45 * magnitude);\r\n        vec4 fragColor = vec4(vig) * vColor;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\r\n\r\n    }\r\n`\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from '../../../tree/StageUtils.mjs'\r\n\r\nexport default class SpinnerShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._radius = 100;\r\n        this._width = 50;\r\n        this._period = 1;\r\n        this._angle = 0.5;\r\n        this._smooth = 0.005;\r\n        this._color = 0xffffffff;\r\n        this._backgroundColor = 0xff000000;\r\n        this._time = Date.now();\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set angle(v) {\r\n        this._angle = v\r\n        this.redraw();\r\n    }\r\n\r\n    set smooth(v) {\r\n        this._smooth = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set color(v) {\r\n        this._color = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set backgroundColor(v) {\r\n        this._backgroundColor = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner\r\n\r\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\r\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\r\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\r\n\r\n        this.redraw()\r\n    }\r\n}\r\n\r\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nSpinnerShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float iTime;\r\n    uniform float radius;\r\n    uniform float width;\r\n    uniform float period;\r\n    uniform float angle;\r\n    uniform float smooth;\r\n    uniform vec2 resolution;\r\n\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n\r\n    float ratio = resolution.y / resolution.x;\r\n\r\n    vec2 transpose_pos(vec2 pos) {\r\n        if (ratio < 1.) {\r\n            float diff = 0.5 - pos.x;\r\n            pos.x = 0.5 - diff / ratio;\r\n        } else {\r\n            float diff = 0.5 - pos.y;\r\n            pos.y = 0.5 - diff * ratio;\r\n        }\r\n        return pos;\r\n    }\r\n\r\n    float get_angle(vec2 pos) {\r\n        pos = transpose_pos(pos);\r\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\r\n        a = (1.0+a/3.14159)/2.0;\r\n        \r\n        return a;\r\n    }\r\n\r\n    float dist(vec2 pos1, vec2 pos2) {\r\n        pos1 = transpose_pos(pos1);\r\n        return distance(pos1, pos2);\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 fragCoord = vTextureCoord;\r\n        vec4 fragColor = vColor;\r\n        \r\n        vec2 st = vTextureCoord;\r\n        float pct = dist(st, vec2(0.5));\r\n\r\n        float a = get_angle(st);\r\n        float t = iTime / 1000.0 / period;\r\n\r\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\r\n        float outer = max(radius / resolution.x, radius / resolution.y);\r\n\r\n        float x1 = mod(t, 1.0);\r\n        float x2 = mod(t + angle, 1.0);\r\n\r\n        if (x1 < x2) {\r\n            if (a > x1 && a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        } else {\r\n            if (a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else if (a > x1) {\r\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        }\r\n\r\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\r\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class HoleShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n        this._radius = 0;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        this._x = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        this._y = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        this._w = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        this._h = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\r\n\r\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\r\n    }\r\n}\r\n\r\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nHoleShader.fragmentShaderSource = `\r\n   #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float x;\r\n    uniform float y;\r\n    uniform float w;\r\n    uniform float h;\r\n    uniform vec2 resolution;\r\n    uniform float radius;\r\n\r\n    float roundBox(vec2 p, vec2 b, float r) {\r\n        float d = length(max(abs(p)-b+r, 0.1))-r;\r\n        return smoothstep(1.0, 0.0, d);\r\n    }\r\n\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n        vec2 size = vec2(w, h) / 2.0;\r\n        float b = roundBox(pos, size, radius);\r\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RadialGradientShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._pivot = [0, 0];\r\n        this._ic = 0xffffffff;\r\n        this._normalizedIC = this._getNormalizedColor(this._ic);\r\n        this._oc = 0x00ffffff;\r\n        this._normalizedOC = this._getNormalizedColor(this._oc);\r\n        this._radius = 0;\r\n    }\r\n\r\n    set radiusX(v) {\r\n        this.radius = v;\r\n    }\r\n\r\n    get radiusX() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radiusY(v) {\r\n        this._radiusY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radiusY() {\r\n        return this._radiusY;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set innerColor(argb) {\r\n        this._ic = argb;\r\n        this._normalizedIC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get innerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set outerColor(argb) {\r\n        this._oc = argb;\r\n        this._normalizedOC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    set color(argb) {\r\n        this.innerColor = argb;\r\n    }\r\n\r\n    get color() {\r\n        return this.innerColor;\r\n    }\r\n\r\n    get outerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set x(f) {\r\n        this._x = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set y(f) {\r\n        this._y = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v) && v.length === 2) {\r\n            this._pivot = v;\r\n        }\r\n        else if(Array.isArray(v)) {\r\n            this._pivot = [v[0], v[1] || v[0]];\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotY(f) {\r\n        this._pivot[1] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotX(f) {\r\n        this._pivot[0] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        if(this._x) {\r\n            this._pivot[0] = this._x / owner.w;\r\n        }\r\n        if(this._y) {\r\n            this._pivot[1] = this._y / owner.h;\r\n        }\r\n\r\n        if(this._radius === 0) {\r\n            this._radius = owner.w * 0.5;\r\n        }\r\n\r\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\r\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\r\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\r\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\r\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\r\n    }\r\n}\r\n\r\nRadialGradientShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec2 pivot;\r\n    uniform vec4 innerColor;\r\n    uniform vec4 outerColor;\r\n    uniform float radius;\r\n    uniform float radiusY;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float aspectRatio;\r\n    \r\n    void main() {\r\n        vec2 point = vTextureCoord.xy * resolution;\r\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\r\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\r\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\r\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class Light3dShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._strength = 0.5;\r\n        this._ambient = 0.5;\r\n        this._fudge = 0.4;\r\n\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n\r\n        this._z = 0;\r\n        this._pivotX = NaN;\r\n        this._pivotY = NaN;\r\n        this._pivotZ = 0;\r\n\r\n        this._lightY = 0;\r\n        this._lightZ = 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        let vr = operation.shaderOwner;\r\n        let element = vr.element;\r\n\r\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\r\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\r\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n\r\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        let gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\r\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\r\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\r\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set strength(v) {\r\n        this._strength = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get strength() {\r\n        return this._strength;\r\n    }\r\n\r\n    set ambient(v) {\r\n        this._ambient = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ambient() {\r\n        return this._ambient;\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivotX = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivotY = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightY() {\r\n        return this._lightY;\r\n    }\r\n\r\n    set lightY(v) {\r\n        this._lightY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotZ() {\r\n        return this._pivotZ;\r\n    }\r\n\r\n    set pivotZ(v) {\r\n        this._pivotZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightZ() {\r\n        return this._lightZ;\r\n    }\r\n\r\n    set lightZ(v) {\r\n        this._lightZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\r\n    }\r\n\r\n}\r\n\r\nLight3dShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float fudge;\r\n    uniform float strength;\r\n    uniform float ambient;\r\n    uniform float z;\r\n    uniform float lightY;\r\n    uniform float lightZ;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Set depth perspective\r\n        float perspective = 1.0 + fudge * pos.z;\r\n\r\n        pos.z += lightZ * projection.x;\r\n\r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, perspective);\r\n\r\n        // Correct light source position.\r\n        pos.y += lightY * abs(projection.y);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nLight3dShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec3 pos;\r\n    uniform sampler2D uSampler;\r\n    uniform float ambient;\r\n    uniform float strength;\r\n    void main(void){\r\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\r\n        float d = length(pos);\r\n        float n = 1.0 / max(0.1, d);\r\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\r\n        gl_FragColor = rgba * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class PerspectiveShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._fudge = 0.2;\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n        this._z = 1.0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const vr = operation.shaderOwner;\r\n        const element = vr.element;\r\n\r\n        const pivotX = element.pivotX * vr.w;\r\n        const pivotY = element.pivotY * vr.h;\r\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        const gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\r\n    }\r\n\r\n}\r\n\r\nPerspectiveShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float z;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, z);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPerspectiveShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform vec3 rot;\r\n    uniform float fudge;\r\n\r\n    void main(void) {\r\n        vec2 coords = vTextureCoord;\r\n\r\n        coords.xy -= vec2(0.5);\r\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\r\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\r\n        coords.xy += vec2(0.5);\r\n\r\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\r\n            gl_FragColor = vec4(0.0);\r\n        } else {\r\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class MagnifierShader extends DefaultShader {\r\n\tconstructor(context) {\r\n\t  super(context);\r\n\t  this._x = 0;\r\n\t  this._y = 0;\r\n\t  this._w = 0;\r\n\t  this._h = 0;\r\n\t  this._radius = 0;\r\n\t  this._magnification = 0.6;\r\n\t}\r\n  \r\n\tget x() {\r\n\t  return this._x;\r\n\t}\r\n  \r\n\tset x(v) {\r\n\t  this._x = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget y() {\r\n\t  return this._y;\r\n\t}\r\n  \r\n\tset y(v) {\r\n\t  this._y = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget w() {\r\n\t  return this._w;\r\n\t}\r\n  \r\n\tset w(v) {\r\n\t  this._w = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget h() {\r\n\t  return this._h;\r\n\t}\r\n  \r\n\tset h(v) {\r\n\t  this._h = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget magnification() {\r\n\t  return this._magnification;\r\n\t}\r\n  \r\n\tset magnification(v) {\r\n\t  this._magnification = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget radius() {\r\n\t  return this._radius;\r\n\t}\r\n  \r\n\tset radius(v) {\r\n\t  this._radius = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tsetupUniforms(operation) {\r\n\t  super.setupUniforms(operation);\r\n  \r\n\t  const owner = operation.shaderOwner;\r\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\r\n\t  this._setUniform(\r\n\t\t'radius',\r\n\t\t(this._radius + 0.5) * renderPrecision,\r\n\t\tthis.gl.uniform1f\r\n\t  );\r\n\t  this._setUniform(\r\n\t\t'resolution',\r\n\t\tnew Float32Array([\r\n\t\t  owner._w * renderPrecision,\r\n\t\t  owner._h * renderPrecision\r\n\t\t]),\r\n\t\tthis.gl.uniform2fv\r\n\t  );\r\n\t}\r\n \r\n\tuseDefault() {\r\n\t  return this._w === 0 && this._h === 0;\r\n\t}\r\n  }\r\n  \r\n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n  \r\n  MagnifierShader.fragmentShaderSource = `\r\n\t  #ifdef GL_ES\r\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\r\n\t\tprecision highp float;\r\n\t\t# else\r\n\t\tprecision lowp float;\r\n\t\t# endif\r\n\t  #endif\r\n\r\n\t  varying vec2 vTextureCoord;\r\n\t  varying vec4 vColor;\r\n\t  uniform sampler2D uSampler;\r\n\t  uniform float x;\r\n\t  uniform float y;\r\n\t  uniform float w;\r\n\t  uniform float h;\r\n\t  uniform vec2 resolution;\r\n\t  uniform float radius;\r\n\t  uniform float magnification;\r\n  \r\n\t  float roundBox(vec2 p, vec2 b, float r) {\r\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\r\n\t\t  return smoothstep(1.0, 0.0, d);\r\n\t  }\r\n\r\n\t  float inside(vec2 v) {\r\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\r\n\t\treturn s.x * s.y;   \r\n      }\r\n  \r\n\t  void main(void) {\r\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\r\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n\t\tvec2 size = vec2(w, h) / 2.0;\r\n\t\tfloat b = roundBox(pos, size, radius);\r\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\r\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\r\n\t  }\r\n  `;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class SpinnerShader2 extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._period = 1;\r\n        this._stroke = 0;\r\n        this._showDot = true;\r\n        this._clockwise = true;\r\n        this._bc = 0xff000000;\r\n        this._normalizedBC = this._getNormalizedColor(this._bc);\r\n        this._c = 0xffffffff;\r\n        this._normalizedC = this._getNormalizedColor(this._c);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(v === 0) {\r\n            v = 1;\r\n        }\r\n        this._radius = v;\r\n    }\r\n\r\n    set stroke(value) {\r\n        this._stroke = Math.abs(value);\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    set color(argb) {\r\n        this._c = argb;\r\n        this._normalizedC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get color() {\r\n        return this._c;\r\n    }\r\n\r\n    set backgroundColor(argb) {\r\n        this._bc = argb;\r\n        this._normalizedBC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set showDot(bool) {\r\n        this._showDot = bool;\r\n    }\r\n\r\n    get showDot() {\r\n        return this._showDot;\r\n    }\r\n\r\n    set clockwise(bool) {\r\n        this._clockwise = bool;\r\n    }\r\n\r\n    get clockwise() {\r\n        return this._clockwise;\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n    }\r\n\r\n    get period() {\r\n        return this._period;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const radius = this._radius || (owner._w / 2);\r\n\r\n        if(this._stroke === 0) {\r\n            this._stroke = radius * 0.33;\r\n        }\r\n\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\r\n        this._setUniform('radius',  radius, this.gl.uniform1f);\r\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\r\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\r\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n\r\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\r\n            this.redraw();\r\n        }\r\n    }\r\n}\r\n\r\nSpinnerShader2.spinSync = Date.now();\r\n\r\nSpinnerShader2.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    \r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n    uniform float direction;\r\n    uniform float radius;\r\n    uniform float time;\r\n    uniform float stroke;\r\n    uniform float showDot;\r\n    uniform float period;\r\n    uniform float alpha;\r\n    \r\n    float circleDist(vec2 p, float radius){\r\n        return length(p) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\r\n        \r\n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\r\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\r\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\r\n        \r\n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\r\n        \r\n        float strokeRad = stroke * 0.5;\r\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\r\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\r\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Application from \"./application/Application.mjs\";\r\nimport Component from \"./application/Component.mjs\";\r\nimport Base from \"./tree/Base.mjs\";\r\nimport Utils from \"./tree/Utils.mjs\";\r\nimport StageUtils from \"./tree/StageUtils.mjs\";\r\nimport Element from \"./tree/Element.mjs\";\r\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\r\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\r\nimport Texture from \"./tree/Texture.mjs\";\r\n\r\nimport Tools from \"./tools/Tools.mjs\";\r\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\r\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\r\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\r\n\r\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\r\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\r\nimport TextTexture from \"./textures/TextTexture.mjs\";\r\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\r\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\r\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\r\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\r\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\r\n\r\nimport ListComponent from \"./components/ListComponent.mjs\";\r\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\r\nimport BloomComponent from \"./components/BloomComponent.mjs\";\r\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\r\nimport BorderComponent from \"./components/BorderComponent.mjs\";\r\nimport EventEmitter from \"./EventEmitter.mjs\";\r\n\r\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\r\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\r\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\r\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\r\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\r\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\r\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\r\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\r\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\r\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\r\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\r\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\r\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\r\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\r\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\r\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\r\n\r\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\r\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\r\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\r\n\r\nimport Stage from \"./tree/Stage.mjs\";\r\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\r\n\r\nconst lightning = {\r\n    Application,\r\n    Component,\r\n    Base,\r\n    Utils,\r\n    StageUtils,\r\n    Element,\r\n    Tools,\r\n    Stage,\r\n    ElementCore,\r\n    ElementTexturizer,\r\n    Texture,\r\n    EventEmitter,\r\n    shaders: {\r\n        Grayscale: WebGLGrayscaleShader,\r\n        BoxBlur: BoxBlurShader,\r\n        Dithering: DitheringShader,\r\n        CircularPush: CircularPushShader,\r\n        Inversion: InversionShader,\r\n        LinearBlur: LinearBlurShader,\r\n        Outline: OutlineShader,\r\n        Pixelate: PixelateShader,\r\n        RadialFilter: RadialFilterShader,\r\n        RoundedRectangle: RoundedRectangleShader,\r\n        Spinner2: SpinnerShader2,\r\n        FadeOut: FadeOutShader,\r\n        Hole: HoleShader,\r\n        Vignette: VignetteShader,\r\n        Spinner: SpinnerShader,\r\n        RadialGradient: RadialGradientShader,\r\n        Light3d: Light3dShader,\r\n        Perspective: PerspectiveShader,\r\n        Magnifier: MagnifierShader,\r\n        WebGLShader,\r\n        WebGLDefaultShader,\r\n        C2dShader,\r\n        C2dDefaultShader,\r\n        c2d: {\r\n            Grayscale: C2dGrayscaleShader,\r\n            Blur: C2dBlurShader\r\n        }\r\n    },\r\n    textures: {\r\n        RectangleTexture,\r\n        NoiseTexture,\r\n        TextTexture,\r\n        ImageTexture,\r\n        HtmlTexture,\r\n        StaticTexture,\r\n        StaticCanvasTexture,\r\n        SourceTexture\r\n    },\r\n    components: {\r\n        FastBlurComponent,\r\n        BloomComponent,\r\n        SmoothScaleComponent,\r\n        BorderComponent,\r\n        ListComponent\r\n    },\r\n    tools: {\r\n        ObjMerger,\r\n        ObjectListProxy,\r\n        ObjectListWrapper\r\n    }\r\n};\r\n\r\nif (Utils.isWeb) {\r\n    window.lng = lightning;\r\n}\r\n\r\nexport default lightning;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticTexture extends Texture {\r\n\r\n    constructor(stage, options) {\r\n        super(stage);\r\n\r\n        this._options = options;\r\n    }\r\n\r\n    set options(v) {\r\n        if (this._options !== v) {\r\n            this._options = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._options;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return (cb) => {\r\n            cb(null, this._options);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class BorderComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            Content: {},\r\n            Borders: {\r\n                Top: {rect: true, visible: false, mountY: 1},\r\n                Right: {rect: true, visible: false},\r\n                Bottom: {rect: true, visible: false},\r\n                Left: {rect: true, visible: false, mountX: 1}\r\n            }\r\n        };\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._borderTop = this.tag(\"Top\");\r\n        this._borderRight = this.tag(\"Right\");\r\n        this._borderBottom = this.tag(\"Bottom\");\r\n        this._borderLeft = this.tag(\"Left\");\r\n\r\n        this.onAfterUpdate = function (element) {\r\n            const content = element.childList.first;\r\n            let w = element.core.w || content.renderWidth;\r\n            let h = element.core.h || content.renderHeight;\r\n            element._borderTop.w = w;\r\n            element._borderBottom.y = h;\r\n            element._borderBottom.w = w;\r\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderLeft.y = -element._borderTop.h;\r\n            element._borderRight.x = w;\r\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderRight.y = -element._borderTop.h;\r\n        };\r\n\r\n        this.borderWidth = 1;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Content').patch(v, true);\r\n    }\r\n\r\n    get borderWidth() {\r\n        return this.borderWidthTop;\r\n    }\r\n\r\n    get borderWidthTop() {\r\n        return this._borderTop.h;\r\n    }\r\n\r\n    get borderWidthRight() {\r\n        return this._borderRight.w;\r\n    }\r\n\r\n    get borderWidthBottom() {\r\n        return this._borderBottom.h;\r\n    }\r\n\r\n    get borderWidthLeft() {\r\n        return this._borderLeft.w;\r\n    }\r\n\r\n    set borderWidth(v) {\r\n        this.borderWidthTop = v;\r\n        this.borderWidthRight = v;\r\n        this.borderWidthBottom = v;\r\n        this.borderWidthLeft = v;\r\n    }\r\n\r\n    set borderWidthTop(v) {\r\n        this._borderTop.h = v;\r\n        this._borderTop.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthRight(v) {\r\n        this._borderRight.w = v;\r\n        this._borderRight.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthBottom(v) {\r\n        this._borderBottom.h = v;\r\n        this._borderBottom.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthLeft(v) {\r\n        this._borderLeft.w = v;\r\n        this._borderLeft.visible = (v > 0);\r\n    }\r\n\r\n    get colorBorder() {\r\n        return this.colorBorderTop;\r\n    }\r\n\r\n    get colorBorderTop() {\r\n        return this._borderTop.color;\r\n    }\r\n\r\n    get colorBorderRight() {\r\n        return this._borderRight.color;\r\n    }\r\n\r\n    get colorBorderBottom() {\r\n        return this._borderBottom.color;\r\n    }\r\n\r\n    get colorBorderLeft() {\r\n        return this._borderLeft.color;\r\n    }\r\n\r\n    set colorBorder(v) {\r\n        this.colorBorderTop = v;\r\n        this.colorBorderRight = v;\r\n        this.colorBorderBottom = v;\r\n        this.colorBorderLeft = v;\r\n    }\r\n\r\n    set colorBorderTop(v) {\r\n        this._borderTop.color = v;\r\n    }\r\n\r\n    set colorBorderRight(v) {\r\n        this._borderRight.color = v;\r\n    }\r\n\r\n    set colorBorderBottom(v) {\r\n        this._borderBottom.color = v;\r\n    }\r\n\r\n    set colorBorderLeft(v) {\r\n        this._borderLeft.color = v;\r\n    }\r\n\r\n    get borderTop() {\r\n        return this._borderTop;\r\n    }\r\n\r\n    set borderTop(settings) {\r\n        this.borderTop.patch(settings);\r\n    }\r\n\r\n    get borderRight() {\r\n        return this._borderRight;\r\n    }\r\n\r\n    set borderRight(settings) {\r\n        this.borderRight.patch(settings);\r\n    }\r\n\r\n    get borderBottom() {\r\n        return this._borderBottom;\r\n    }\r\n\r\n    set borderBottom(settings) {\r\n        this.borderBottom.patch(settings);\r\n    }\r\n\r\n    get borderLeft() {\r\n        return this._borderLeft;\r\n    }\r\n\r\n    set borderLeft(settings) {\r\n        this.borderLeft.patch(settings);\r\n    }\r\n\r\n    set borders(settings) {\r\n        this.borderTop = settings;\r\n        this.borderLeft = settings;\r\n        this.borderBottom = settings;\r\n        this.borderRight = settings;\r\n    }\r\n\r\n}\r\n\r\n"],"names":["StageUtils","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","round","mergeMultiColors","c","t","n","length","i","r1","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils$1","Utils","isFunction","value","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","direction","f","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","hasAlpha","loadError","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","isResultTexture","forEachEnabledElement","cb","texture","elements","hasEnabledElements","forEachActiveElement","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","nativeTexture","clearNativeTexture","replaceNativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","renderTextureReused","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_ignoreRTL","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","offsetY","_disableFuncY","disableFuncW","disableFuncH","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","px","pivotXMul","pivotYMul","isRTL","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","_setIgnoreRTL","enableZSort","newShaderOwner","_setShaderOwnerRecursive","ignoreRTL","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","displayedTextureSource","setDisplayedTextureSource","textureSource","isRoot","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","_setShaderOwnerChildrenRecursive","_hasRenderContext","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","outOfBounds","boundsMargin","_applyRelativeDimFuncs","pw","calculatedX","__parent","getOption","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","setTexturizer","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","l","map","removeListener","emit","listenerCount","removeAllListeners","object","addAsMixin","cls","Shader","coreContext","_initialized","_elements","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","ph","isAutosizeTexture","isTexture","ImageTexture","super","_src","src","fc","charCodeAt","platform","loadSrcTexture","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","fontWeight","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","textAlign","globalAlpha","fillRect","translate","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","textColor","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","renderText","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","fillText","textSplit","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","spl","alignLine","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_getBreakIndex","breakIndex","totalWidth","initialX","prevWidth","prevX","TextTexture","advancedRenderer","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontWeight","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","get","first","last","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","renderWidth","renderHeight","finalX","finalY","finalW","finalH","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","tag","tags","tagSet","parentTreeTags","comp","Map","set","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","tagRoot","sel","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","getLocationString","localTags","getSettings","getPrettyString","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","collision","_collision","colorTop","colorBottom","colorLeft","colorRight","_allowChildrenAccess","hasChildren","rect","rectangleTexture","enableTextTexture","forceUpdate","rtt","rttLazy","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","transitions","smooth","setSmooth","fastForward","_transitions","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","isColorProperty","toLowerCase","toJSON","tree","collectChildren","getProperties","properties","props","key","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","fire","event","_hasMethod","_getState","_state","__path","_inState","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","_supportsSpread","__supportsSpread","code","supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","bindProp","__propertyBinding","__func","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__obj","__prop","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","cparent","seekAncestorByType","getSharedAncestorComponent","ancestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_doFireAncestors","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","getElementHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","glProgram","compiled","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","initialized","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","lp","renderFrame","requestAnimationFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","rv","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","usedVramAlpha","usedVramNonAlpha","usedVram","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusPath","focusTopDownEvent","events","focusBottomUpEvent","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","ch","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","getCanvasTexture","canvasFactory","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","_paddingX","_paddingY","getSpline","_multiSpline","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","blend","topLeft","num","topRight","bottomRight","bottomLeft","_sc","renderPrecision","FadeOutShader","_fade","right","bottom","left","fade","VignetteShader","_magnitude","_intensity","_pivot","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","radiusX","radiusY","_radiusY","innerColor","outerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","MagnifierShader","_magnification","magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","showDot","bool","clockwise","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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0C,KAAK40C,UACf,CAED,aAAID,CAAU/5C,GACVoF,KAAK40C,WAAah6C,CACrB,CAED,gBAAA8yC,GACQ1tC,KAAK20C,WAAa30C,KAAK4uB,eAAwC,IAA5B5uB,KAAK4uB,SAAS+lB,YAKjD30C,KAAK4uB,SAAS+lB,UAAY,EAEjC,CAED,UAAIttB,GACA,OAAOrnB,KAAKysC,OAAOplB,MACtB,CAED,UAAIA,CAAOzsB,GACPoF,KAAKysC,OAAOplB,OAASzsB,CACxB,CAED,UAAI2sB,GACA,OAAOvnB,KAAKysC,OAAOllB,MACtB,CAED,UAAIA,CAAO3sB,GACPoF,KAAKysC,OAAOllB,OAAS3sB,CACxB,CAED,SAAI4sB,GACA,OAAOxnB,KAAKysC,OAAOjlB,KACtB,CAED,SAAIA,CAAM5sB,GACNoF,KAAKysC,OAAOjlB,MAAQ5sB,CACvB,CAED,UAAI6sB,GACA,OAAOznB,KAAKysC,OAAOhlB,MACtB,CAED,UAAIA,CAAO7sB,GACPoF,KAAKysC,OAAOhlB,OAAS7sB,CACxB,CAED,UAAI+sB,GACA,OAAO3nB,KAAKysC,OAAO9kB,MACtB,CAED,UAAIA,CAAO/sB,GACPoF,KAAKysC,OAAO9kB,OAAS/sB,CACxB,CAED,SAAIgtB,GACA,OAAO5nB,KAAKysC,OAAO7kB,KACtB,CAED,SAAIA,CAAMhtB,GACNoF,KAAKysC,OAAO7kB,MAAQhtB,CACvB,CAED,UAAIitB,GACA,OAAO7nB,KAAKysC,OAAO5kB,MACtB,CAED,UAAIA,CAAOjtB,GACPoF,KAAKysC,OAAO5kB,OAASjtB,CACxB,CAED,UAAIktB,GACA,OAAO9nB,KAAKysC,OAAO3kB,MACtB,CAED,UAAIA,CAAOltB,GACPoF,KAAKysC,OAAO3kB,OAASltB,CACxB,CAED,SAAImtB,GACA,OAAO/nB,KAAKysC,OAAO1kB,KACtB,CAED,SAAIA,CAAMntB,GACNoF,KAAKysC,OAAO1kB,MAAQntB,CACvB,CAED,YAAIotB,GACA,OAAOhoB,KAAKysC,OAAOzkB,QACtB,CAED,YAAIA,CAASptB,GACToF,KAAKysC,OAAOz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"}