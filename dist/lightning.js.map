{"version":3,"file":"lightning.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StageUtils {\r\n\r\n    static mergeNumbers(v1, v2, p) {\r\n        return v1 * p + v2 * (1 - p);\r\n    };\r\n\r\n    static rgb(r, g, b) {\r\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\r\n    };\r\n\r\n    static rgba(r, g, b, a) {\r\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\r\n    };\r\n\r\n    static getRgbString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n    };\r\n\r\n    static getRgbaString(color) {\r\n        let r = ((color / 65536) | 0) % 256;\r\n        let g = ((color / 256) | 0) % 256;\r\n        let b = color % 256;\r\n        let a = ((color / 16777216) | 0) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaStringFromArray(color) {\r\n        let r = Math.floor(color[0] * 255);\r\n        let g = Math.floor(color[1] * 255);\r\n        let b = Math.floor(color[2] * 255);\r\n        let a = Math.floor(color[3] * 255) / 255;\r\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\r\n    };\r\n\r\n    static getRgbaComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r / 255, g / 255, b / 255, a / 255];\r\n    };\r\n\r\n    static getRgbComponentsNormalized(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        return [r / 255, g / 255, b / 255];\r\n    };\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static mergeMultiColors(c, p) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1 * p[i];\r\n            g += g1 * p[i];\r\n            b += b1 * p[i];\r\n            a += a1 * p[i];\r\n            t += p[i];\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeMultiColorsEqual(c) {\r\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\r\n        let n = c.length;\r\n        for (let i = 0; i < n; i++) {\r\n            let r1 = ((c[i] / 65536) | 0) % 256;\r\n            let g1 = ((c[i] / 256) | 0) % 256;\r\n            let b1 = c[i] % 256;\r\n            let a1 = ((c[i] / 16777216) | 0);\r\n            r += r1;\r\n            g += g1;\r\n            b += b1;\r\n            a += a1;\r\n            t += 1.0;\r\n        }\r\n\r\n        t = 1 / t;\r\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\r\n    };\r\n\r\n    static mergeColorAlpha(c, alpha) {\r\n        let a = ((c / 16777216 | 0) * alpha) | 0;\r\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\r\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\r\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\r\n            (a << 24);\r\n    };\r\n\r\n    static rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    };\r\n\r\n    static getTimingBezier(a, b, c, d) {\r\n        let xc = 3.0 * a;\r\n        let xb = 3.0 * (c - a) - xc;\r\n        let xa = 1.0 - xc - xb;\r\n        let yc = 3.0 * b;\r\n        let yb = 3.0 * (d - b) - yc;\r\n        let ya = 1.0 - yc - yb;\r\n\r\n        return function (time) {\r\n            if (time >= 1.0) {\r\n                return 1;\r\n            }\r\n            if (time <= 0) {\r\n                return 0;\r\n            }\r\n\r\n            let t = 0.5, cbx, cbxd, dx;\r\n\r\n            for (let it = 0; it < 20; it++) {\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                // Cubic bezier derivative.\r\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                    // Problematic. Fall back to binary search method.\r\n                    break;\r\n                }\r\n\r\n                t += dx / cbxd;\r\n            }\r\n\r\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n            let minT = 0;\r\n            let maxT = 1;\r\n            for (let it = 0; it < 20; it++) {\r\n                t = 0.5 * (minT + maxT);\r\n\r\n                cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n                dx = time - cbx;\r\n                if (dx > -1e-8 && dx < 1e-8) {\r\n                    // Solution found!\r\n                    return t * (t * (t * ya + yb) + yc);\r\n                }\r\n\r\n                if (dx < 0) {\r\n                    maxT = t;\r\n                } else {\r\n                    minT = t;\r\n                }\r\n            }\r\n\r\n        };\r\n    };\r\n\r\n    static getTimingFunction(str) {\r\n        switch (str) {\r\n            case \"linear\":\r\n                return function (time) {\r\n                    return time\r\n                };\r\n            case \"ease\":\r\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\r\n            case \"ease-in\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\r\n            case \"ease-out\":\r\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\r\n            case \"ease-in-out\":\r\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\r\n            case \"step-start\":\r\n                return function () {\r\n                    return 1\r\n                };\r\n            case \"step-end\":\r\n                return function (time) {\r\n                    return time === 1 ? 1 : 0;\r\n                };\r\n            default:\r\n                let s = \"cubic-bezier(\";\r\n                if (str && str.indexOf(s) === 0) {\r\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\r\n                    if (parts.length !== 4) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n                    let a = parseFloat(parts[0]);\r\n                    let b = parseFloat(parts[1]);\r\n                    let c = parseFloat(parts[2]);\r\n                    let d = parseFloat(parts[3]);\r\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\r\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                        // Fallback: use linear.\r\n                        return function (time) {\r\n                            return time\r\n                        };\r\n                    }\r\n\r\n                    return StageUtils.getTimingBezier(a, b, c, d);\r\n                } else {\r\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\r\n                    // Fallback: use linear.\r\n                    return function (time) {\r\n                        return time\r\n                    };\r\n                }\r\n        }\r\n    };\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    static clone(v) {\r\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\r\n            return Utils.getDeepClone(v);\r\n        } else {\r\n            // Copy by value.\r\n            return v;\r\n        }\r\n    }\r\n\r\n    static cloneObjShallow(obj) {\r\n        let keys = Object.keys(obj);\r\n        let clone = {}\r\n        for (let i = 0; i < keys.length; i++) {\r\n            clone[keys[i]] = obj[keys[i]];\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    static merge(obj1, obj2) {\r\n        let keys = Object.keys(obj2);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            obj1[keys[i]] = obj2[keys[i]];\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object' || type === 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type === 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object;\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static getModuloIndex(index, len) {\r\n        if (len === 0) return index;\r\n        while (index < 0) {\r\n            index += Math.ceil(-index / len) * len;\r\n        }\r\n        index = index % len;\r\n        return index;\r\n    }\r\n\r\n    static getDeepClone(obj) {\r\n        let i, c;\r\n        if (Utils.isFunction(obj)) {\r\n            // Copy functions by reference.\r\n            return obj;\r\n        }\r\n        if (Array.isArray(obj)) {\r\n            c = [];\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else if (Utils.isObject(obj)) {\r\n            c = {}\r\n            let keys = Object.keys(obj);\r\n            for (i = 0; i < keys.length; i++) {\r\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\r\n            }\r\n            return c;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false;\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\r\n        } else {\r\n            return v1 === v2;\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false;\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static setToArray(s) {\r\n        let result = [];\r\n        s.forEach(function (value) {\r\n            result.push(value);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    static iteratorToArray(iterator) {\r\n        let result = [];\r\n        let iteratorResult = iterator.next();\r\n        while (!iteratorResult.done) {\r\n            result.push(iteratorResult.value);\r\n            iteratorResult = iterator.next();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isUcChar(charcode) {\r\n        return charcode >= 65 && charcode <= 90;\r\n    }\r\n\r\n}\r\n\r\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\r\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\r\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\r\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\r\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Base {\r\n\r\n    static defaultSetter(obj, name, value) {\r\n        obj[name] = value;\r\n    }\r\n\r\n    static patchObject(obj, settings) {\r\n        if (!Utils.isObjectLiteral(settings)) {\r\n            console.error(\"[Lightning] Settings must be object literal\");\r\n        } else {\r\n            let names = Object.keys(settings);\r\n            for (let i = 0, n = names.length; i < n; i++) {\r\n                let name = names[i];\r\n\r\n                this.patchObjectProperty(obj, name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    static patchObjectProperty(obj, name, value) {\r\n        let setter = obj.setSetting || Base.defaultSetter;\r\n\r\n        if (name.charAt(0) === \"_\") {\r\n            // Disallow patching private variables.\r\n            if (name !== \"__create\") {\r\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\r\n            }\r\n        } else if (name !== \"type\") {\r\n            // Type is a reserved keyword to specify the class type on creation.\r\n            if (Utils.isFunction(value) && value.__local) {\r\n                // Local function (Base.local(s => s.something))\r\n                value = value.__local(obj);\r\n            }\r\n\r\n            setter(obj, name, value);\r\n        }\r\n    }\r\n\r\n    static local(func) {\r\n        // This function can be used as an object setting, which is called with the target object.\r\n        func.__local = true;\r\n    }\r\n\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SpacingCalculator {\r\n\r\n    static getSpacing(mode, numberOfItems, remainingSpace) {\r\n        const itemGaps = (numberOfItems - 1);\r\n        let spacePerGap;\r\n\r\n        let spacingBefore, spacingBetween;\r\n\r\n        switch(mode) {\r\n            case \"flex-start\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"flex-end\":\r\n                spacingBefore = remainingSpace;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"center\":\r\n                spacingBefore = remainingSpace / 2;\r\n                spacingBetween = 0;\r\n                break;\r\n            case \"space-between\":\r\n                spacingBefore = 0;\r\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\r\n                break;\r\n            case \"space-around\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 1);\r\n                    spacingBefore = 0.5 * spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"space-evenly\":\r\n                if (remainingSpace < 0) {\r\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\r\n                } else {\r\n                    spacePerGap = remainingSpace / (itemGaps + 2);\r\n                    spacingBefore = spacePerGap;\r\n                    spacingBetween = spacePerGap;\r\n                }\r\n                break;\r\n            case \"stretch\":\r\n                spacingBefore = 0;\r\n                spacingBetween = 0;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unknown mode: \" + mode);\r\n        }\r\n\r\n        return {spacingBefore, spacingBetween}\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\r\n\r\nexport default class ContentAligner {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._totalCrossAxisSize = 0;\r\n    }\r\n\r\n    get _lines() {\r\n        return this._layout._lines;\r\n    }\r\n\r\n    init() {\r\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\r\n    }\r\n\r\n    align() {\r\n        const crossAxisSize = this._layout.crossAxisSize;\r\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\r\n\r\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\r\n\r\n        const lines = this._lines;\r\n\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        let growSize = 0;\r\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\r\n            growSize = remainingSpace / lines.length;\r\n        }\r\n\r\n        let currentPos = spacingBefore;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const crossAxisLayoutOffset = currentPos;\r\n            const aligner = lines[i].createItemAligner();\r\n\r\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\r\n\r\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\r\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\r\n\r\n            aligner.align();\r\n\r\n            if (aligner.recursiveResizeOccured) {\r\n                lines[i].setItemPositions();\r\n            }\r\n\r\n            currentPos += finalCrossAxisLayoutSize;\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    get totalCrossAxisSize() {\r\n        return this._totalCrossAxisSize;\r\n    }\r\n\r\n    _getTotalCrossAxisSize() {\r\n        const lines = this._lines;\r\n        let total = 0;\r\n        for (let i = 0, n = lines.length; i < n; i++) {\r\n            const line = lines[i];\r\n            total += line.crossAxisLayoutSize;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    _getSpacing(remainingSpace) {\r\n        const mode = this._layout._flexContainer.alignContent;\r\n        const numberOfItems = this._lines.length;\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class FlexUtils {\r\n\r\n    static getParentAxisSizeWithPadding(item, horizontal) {\r\n        const target = item.target;\r\n        const parent = target.getParent();\r\n        if (!parent) {\r\n            return 0;\r\n        } else {\r\n            const flexParent = item.flexParent;\r\n            if (flexParent) {\r\n                // Use pending layout size.\r\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\r\n            } else {\r\n                // Use 'absolute' size.\r\n                return horizontal ? parent.w : parent.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRelAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            if (item.funcW) {\r\n                if (this._allowRelAxisSizeFunction(item, true)) {\r\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalWidth;\r\n            }\r\n        } else {\r\n            if (item.funcH) {\r\n                if (this._allowRelAxisSizeFunction(item, false)) {\r\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                return item.originalHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    static _allowRelAxisSizeFunction(item, horizontal) {\r\n        const flexParent = item.flexParent;\r\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\r\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static isZeroAxisSize(item, horizontal) {\r\n        if (horizontal) {\r\n            return !item.originalWidth && !item.funcW;\r\n        } else {\r\n            return !item.originalHeight && !item.funcH;\r\n        }\r\n    }\r\n\r\n    static getAxisLayoutPos(item, horizontal) {\r\n        return horizontal ? item.x : item.y;\r\n    }\r\n\r\n    static getAxisLayoutSize(item, horizontal) {\r\n        return horizontal ? item.w : item.h;\r\n    }\r\n\r\n    static setAxisLayoutPos(item, horizontal, pos) {\r\n        if (horizontal) {\r\n            item.x = pos;\r\n        } else {\r\n            item.y = pos;\r\n        }\r\n    }\r\n\r\n    static setAxisLayoutSize(item, horizontal, size) {\r\n        if (horizontal) {\r\n            item.w = size;\r\n        } else {\r\n            item.h = size;\r\n        }\r\n    }\r\n\r\n    static getAxisMinSize(item, horizontal) {\r\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\r\n\r\n        let flexItemMinSize = 0;\r\n        if (item.isFlexItemEnabled()) {\r\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\r\n        }\r\n\r\n        const hasLimitedMinSize = (flexItemMinSize > 0);\r\n        if (hasLimitedMinSize) {\r\n            minSize = Math.max(minSize, flexItemMinSize);\r\n        }\r\n        return minSize;\r\n    }\r\n\r\n    static getPlainAxisMinSize(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            return item._flex._layout.getAxisMinSize(horizontal);\r\n        } else {\r\n            const isShrinkable = (item.flexItem.shrink !== 0);\r\n            if (isShrinkable) {\r\n                return 0;\r\n            } else {\r\n                return this.getRelAxisSize(item, horizontal);\r\n            }\r\n        }\r\n    }\r\n\r\n    static resizeAxis(item, horizontal, size) {\r\n        if (item.isFlexEnabled()) {\r\n            const isMainAxis = (item._flex._horizontal === horizontal);\r\n            if (isMainAxis) {\r\n                item._flex._layout.resizeMainAxis(size);\r\n            } else {\r\n                item._flex._layout.resizeCrossAxis(size);\r\n            }\r\n        } else {\r\n            this.setAxisLayoutSize(item, horizontal, size);\r\n        }\r\n    }\r\n\r\n\r\n    static getPaddingOffset(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalPadding(item, horizontal) {\r\n        if (item.isFlexEnabled()) {\r\n            const flex = item._flex;\r\n            if (horizontal) {\r\n                return flex.paddingRight + flex.paddingLeft;\r\n            } else {\r\n                return flex.paddingTop + flex.paddingBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMarginOffset(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getTotalMargin(item, horizontal) {\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            if (horizontal) {\r\n                return flexItem.marginRight + flexItem.marginLeft;\r\n            } else {\r\n                return flexItem.marginTop + flexItem.marginBottom;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeShrinker {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._shrunkSize = 0;\r\n    }\r\n\r\n    shrink(amount) {\r\n        this._shrunkSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalShrinkAmount = this._getTotalShrinkAmount();\r\n        if (totalShrinkAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const shrinkAmount = flexItem.shrink;\r\n                    const isShrinkableItem = (shrinkAmount > 0);\r\n                    if (isShrinkableItem) {\r\n                        let shrink = shrinkAmount * amountPerShrink;\r\n                        const minSize = flexItem._getMainAxisMinSize();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (size > minSize) {\r\n                            const maxShrink = size - minSize;\r\n                            const isFullyShrunk = (shrink >= maxShrink);\r\n                            if (isFullyShrunk) {\r\n                                shrink = maxShrink;\r\n\r\n                                // Destribute remaining amount over the other flex items.\r\n                                totalShrinkAmount -= shrinkAmount;\r\n                            }\r\n\r\n                            const finalSize = size - shrink;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._shrunkSize += shrink;\r\n                            this._amountRemaining -= shrink;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalShrinkAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.shrink) {\r\n                const minSize = flexItem._getMainAxisMinSize();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully shrunk.\r\n                if (size > minSize) {\r\n                    total += flexItem.shrink;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getShrunkSize() {\r\n        return this._shrunkSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class SizeGrower {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._amountRemaining = 0;\r\n        this._grownSize = 0;\r\n    }\r\n\r\n    grow(amount) {\r\n        this._grownSize = 0;\r\n\r\n        this._amountRemaining = amount;\r\n        let totalGrowAmount = this._getTotalGrowAmount();\r\n        if (totalGrowAmount) {\r\n            const items = this._line.items;\r\n            do {\r\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\r\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n                    const item = items[i];\r\n                    const flexItem = item.flexItem;\r\n                    const growAmount = flexItem.grow;\r\n                    const isGrowableItem = (growAmount > 0);\r\n                    if (isGrowableItem) {\r\n                        let grow = growAmount * amountPerGrow;\r\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                        const size = flexItem._getMainAxisLayoutSize();\r\n                        if (maxSize > 0) {\r\n                            if (size >= maxSize) {\r\n                                // Already fully grown.\r\n                                grow = 0;\r\n                            } else {\r\n                                const maxGrow = maxSize - size;\r\n                                const isFullyGrown = (grow >= maxGrow);\r\n                                if (isFullyGrown) {\r\n                                    grow = maxGrow;\r\n\r\n                                    // Destribute remaining amount over the other flex items.\r\n                                    totalGrowAmount -= growAmount;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (grow > 0) {\r\n                            const finalSize = size + grow;\r\n                            flexItem._resizeMainAxis(finalSize);\r\n\r\n                            this._grownSize += grow;\r\n                            this._amountRemaining -= grow;\r\n\r\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\r\n        }\r\n    }\r\n\r\n    _getTotalGrowAmount() {\r\n        let total = 0;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            const flexItem = item.flexItem;\r\n\r\n            if (flexItem.grow) {\r\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\r\n                const size = flexItem._getMainAxisLayoutSize();\r\n\r\n                // Exclude those already fully grown.\r\n                if (maxSize === 0 || size < maxSize) {\r\n                    total += flexItem.grow;\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getGrownSize() {\r\n        return this._grownSize;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\r\n\r\nexport default class ItemPositioner {\r\n\r\n    constructor(lineLayout) {\r\n        this._line = lineLayout;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    position() {\r\n        const {spacingBefore, spacingBetween} = this._getSpacing();\r\n\r\n        let currentPos = spacingBefore;\r\n\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n\r\n            item.flexItem._setMainAxisLayoutPos(currentPos);\r\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n            currentPos += spacingBetween;\r\n        }\r\n    }\r\n\r\n    _getSpacing() {\r\n        const remainingSpace = this._line._availableSpace;\r\n        let mode = this._layout._flexContainer.justifyContent;\r\n        const numberOfItems = this._line.numberOfItems;\r\n\r\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ItemAligner {\r\n\r\n    constructor(line) {\r\n        this._line = line;\r\n        this._crossAxisLayoutSize = 0;\r\n        this._crossAxisLayoutOffset = 0;\r\n        this._alignItemsSetting = null;\r\n        this._recursiveResizeOccured = false;\r\n        this._isCrossAxisFitToContents = false;\r\n    }\r\n\r\n    get _layout() {\r\n        return this._line._layout;\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    setCrossAxisLayoutSize(size) {\r\n        this._crossAxisLayoutSize = size;\r\n    }\r\n\r\n    setCrossAxisLayoutOffset(offset) {\r\n        this._crossAxisLayoutOffset = offset;\r\n    }\r\n\r\n    align() {\r\n        this._alignItemsSetting = this._flexContainer.alignItems;\r\n\r\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\r\n\r\n        this._recursiveResizeOccured = false;\r\n        const items = this._line.items;\r\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\r\n            const item = items[i];\r\n            this._alignItem(item);\r\n        }\r\n    }\r\n\r\n    get recursiveResizeOccured() {\r\n        return this._recursiveResizeOccured;\r\n    }\r\n\r\n    _alignItem(item) {\r\n        const flexItem = item.flexItem;\r\n        let align = flexItem.alignSelf || this._alignItemsSetting;\r\n\r\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\r\n            align = \"flex-start\";\r\n        }\r\n\r\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\r\n            if (flexItem._hasRelCrossAxisSize()) {\r\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\r\n                flexItem._resetCrossAxisLayoutSize();\r\n            }\r\n        }\r\n\r\n        switch(align) {\r\n            case \"flex-start\":\r\n                this._alignItemFlexStart(flexItem);\r\n                break;\r\n            case \"flex-end\":\r\n                this._alignItemFlexEnd(flexItem);\r\n                break;\r\n            case \"center\":\r\n                this._alignItemFlexCenter(flexItem);\r\n                break;\r\n            case \"stretch\":\r\n                this._alignItemStretch(flexItem);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _alignItemFlexStart(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n    }\r\n\r\n    _alignItemFlexEnd(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\r\n    }\r\n\r\n    _alignItemFlexCenter(flexItem) {\r\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\r\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\r\n    }\r\n\r\n    _alignItemStretch(flexItem) {\r\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\r\n\r\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\r\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\r\n\r\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\r\n        if (crossAxisMinSizeSetting > 0) {\r\n            size = Math.max(size, crossAxisMinSizeSetting);\r\n        }\r\n\r\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\r\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\r\n        if (crossAxisMaxSizeSettingEnabled) {\r\n            size = Math.min(size, crossAxisMaxSizeSetting);\r\n        }\r\n\r\n        flexItem._resizeCrossAxis(size);\r\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\r\n\r\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\r\n        if (recursiveResize) {\r\n            // Recursive resize can happen when this flex item has the opposite direction than the container\r\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\r\n            // item may decrease. If it does so, we must re-justify-content the complete line.\r\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\r\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\r\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\r\n            // as slow layout or endless loops.\r\n            this._recursiveResizeOccured = true;\r\n        }\r\n    }\r\n\r\n    _preventStretch(flexItem) {\r\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\r\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\r\n        return hasFixedCrossAxisSize && !forceStretch;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport SizeShrinker from \"./SizeShrinker.mjs\";\r\nimport SizeGrower from \"./SizeGrower.mjs\";\r\nimport ItemPositioner from \"./ItemPositioner.mjs\";\r\nimport ItemAligner from \"./ItemAligner.mjs\";\r\n\r\nexport default class LineLayout {\r\n\r\n    constructor(layout, startIndex, endIndex, availableSpace) {\r\n        this._layout = layout;\r\n        this.items = layout.items;\r\n        this.startIndex = startIndex;\r\n        this.endIndex = endIndex;\r\n        this._availableSpace = availableSpace;\r\n    }\r\n\r\n    performLayout() {\r\n        this._setItemSizes();\r\n        this.setItemPositions();\r\n        this._calcLayoutInfo();\r\n    }\r\n\r\n    _setItemSizes() {\r\n        if (this._availableSpace > 0) {\r\n            this._growItemSizes(this._availableSpace);\r\n        } else if (this._availableSpace < 0) {\r\n            this._shrinkItemSizes(-this._availableSpace);\r\n        }\r\n    }\r\n\r\n    _growItemSizes(amount) {\r\n        const grower = new SizeGrower(this);\r\n        grower.grow(amount);\r\n        this._availableSpace -= grower.getGrownSize();\r\n    }\r\n\r\n    _shrinkItemSizes(amount) {\r\n        const shrinker = new SizeShrinker(this);\r\n        shrinker.shrink(amount);\r\n        this._availableSpace += shrinker.getShrunkSize();\r\n    }\r\n\r\n    setItemPositions() {\r\n        const positioner = new ItemPositioner(this);\r\n        positioner.position();\r\n    }\r\n\r\n    createItemAligner() {\r\n        return new ItemAligner(this);\r\n    }\r\n\r\n    _calcLayoutInfo() {\r\n        this._calcCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    getMainAxisMinSize() {\r\n        let mainAxisMinSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\r\n        }\r\n        return mainAxisMinSize;\r\n    }\r\n    \r\n    get numberOfItems() {\r\n        return this.endIndex - this.startIndex + 1;\r\n    }\r\n\r\n    get crossAxisLayoutSize() {\r\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\r\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\r\n        if (shouldFitToContents) {\r\n            return this._crossAxisMaxLayoutSize;\r\n        } else {\r\n            return this._layout.crossAxisSize;\r\n        }\r\n    }\r\n\r\n    _calcCrossAxisMaxLayoutSize() {\r\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\r\n    }\r\n\r\n    _getCrossAxisMaxLayoutSize() {\r\n        let crossAxisMaxSize = 0;\r\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\r\n            const item = this.items[i];\r\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\r\n        }\r\n        return crossAxisMaxSize;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport LineLayout from \"./line/LineLayout.mjs\";\r\n\r\n/**\r\n * Distributes items over layout lines.\r\n */\r\nexport default class LineLayouter {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    get lines() {\r\n        return this._lines;\r\n    }\r\n\r\n    get mainAxisMinSize() {\r\n        if (this._mainAxisMinSize === -1) {\r\n            this._mainAxisMinSize = this._getMainAxisMinSize();\r\n        }\r\n        return this._mainAxisMinSize;\r\n    }\r\n\r\n    get crossAxisMinSize() {\r\n        if (this._crossAxisMinSize === -1) {\r\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\r\n        }\r\n        return this._crossAxisMinSize;\r\n    }\r\n\r\n    get mainAxisContentSize() {\r\n        return this._mainAxisContentSize;\r\n    }\r\n\r\n    layoutLines() {\r\n        this._setup();\r\n        const items = this._layout.items;\r\n        const wrap = this._layout.isWrapping();\r\n\r\n        let startIndex = 0;\r\n        let i;\r\n        const n = items.length;\r\n        for (i = 0; i < n; i++) {\r\n            const item = items[i];\r\n\r\n            this._layoutFlexItem(item);\r\n\r\n            // Get predicted main axis size.\r\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\r\n\r\n            if (wrap && (i > startIndex)) {\r\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\r\n                if (isOverflowing) {\r\n                    this._layoutLine(startIndex, i - 1);\r\n                    this._curMainAxisPos = 0;\r\n                    startIndex = i;\r\n                }\r\n            }\r\n\r\n            this._addToMainAxisPos(itemMainAxisSize);\r\n        }\r\n\r\n        if (startIndex < i) {\r\n            this._layoutLine(startIndex, i - 1);\r\n        }\r\n    }\r\n\r\n    _layoutFlexItem(item) {\r\n        if (item.isFlexEnabled()) {\r\n            item.flexLayout.updateTreeLayout();\r\n        } else {\r\n            item.flexItem._resetLayoutSize();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n        this._mainAxisSize = this._layout.mainAxisSize;\r\n        this._curMainAxisPos = 0;\r\n        this._maxMainAxisPos = 0;\r\n        this._lines = [];\r\n\r\n        this._mainAxisMinSize = -1;\r\n        this._crossAxisMinSize = -1;\r\n        this._mainAxisContentSize = 0;\r\n    }\r\n\r\n    _addToMainAxisPos(itemMainAxisSize) {\r\n        this._curMainAxisPos += itemMainAxisSize;\r\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\r\n            this._maxMainAxisPos = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _layoutLine(startIndex, endIndex) {\r\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\r\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\r\n        line.performLayout();\r\n        this._lines.push(line);\r\n\r\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\r\n            this._mainAxisContentSize = this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getAvailableMainAxisLayoutSpace() {\r\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\r\n            return 0;\r\n        } else {\r\n            return this._mainAxisSize - this._curMainAxisPos;\r\n        }\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        let crossAxisMinSize = 0;\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\r\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\r\n        }\r\n        return crossAxisMinSize;\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        if (this._lines.length === 1) {\r\n            return this._lines[0].getMainAxisMinSize();\r\n        } else {\r\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\r\n            return this._layout.mainAxisSize;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\n\r\nexport default class ItemCoordinatesUpdater {\r\n\r\n    constructor(layout) {\r\n        this._layout = layout;\r\n        this._isReverse = this._flexContainer._reverse;\r\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\r\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\r\n    }\r\n\r\n    get _flexContainer() {\r\n        return this._layout._flexContainer;\r\n    }\r\n\r\n    finalize() {\r\n        const parentFlex = this._layout.getParentFlexContainer();\r\n        if (parentFlex) {\r\n            // We must update it from the parent to set padding offsets and reverse position.\r\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\r\n            updater._finalizeItemAndChildren(this._flexContainer.item);\r\n        } else {\r\n            this._finalizeRoot();\r\n            this._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _finalizeRoot() {\r\n        const item = this._flexContainer.item;\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        w += this._layout._getHorizontalPadding();\r\n        h += this._layout._getVerticalPadding();\r\n\r\n        item.clearRecalcFlag();\r\n\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItems() {\r\n        const items = this._layout.items;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            const item = items[i];\r\n            const validCache = this._validateItemCache(item);\r\n\r\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\r\n            this._finalizeItem(item);\r\n\r\n            if (!validCache) {\r\n                this._finalizeItemChildren(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    _validateItemCache(item) {\r\n        if (item.recalc === 0) {\r\n            if (item.isFlexEnabled()) {\r\n                const layout = item._flex._layout;\r\n\r\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\r\n                if (dimensionsMatchPreviousResult) {\r\n                    // Cache is valid.\r\n                    return true;\r\n                } else {\r\n                    const crossAxisSize = layout.crossAxisSize;\r\n                    layout.performResizeMainAxis(layout.mainAxisSize);\r\n                    layout.performResizeCrossAxis(crossAxisSize);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _finalizeItemAndChildren(item) {\r\n        this._finalizeItem(item);\r\n        this._finalizeItemChildren(item);\r\n    }\r\n\r\n    _finalizeItem(item) {\r\n        if (this._isReverse) {\r\n            this._reverseMainAxisLayoutPos(item);\r\n        }\r\n\r\n        let x = FlexUtils.getAxisLayoutPos(item, true);\r\n        let y = FlexUtils.getAxisLayoutPos(item, false);\r\n        let w = FlexUtils.getAxisLayoutSize(item, true);\r\n        let h = FlexUtils.getAxisLayoutSize(item, false);\r\n\r\n        x += this._horizontalPaddingOffset;\r\n        y += this._verticalPaddingOffset;\r\n\r\n        const flex = item.flex;\r\n        if (flex) {\r\n            w += item._flex._layout._getHorizontalPadding();\r\n            h += item._flex._layout._getVerticalPadding();\r\n        }\r\n\r\n        const flexItem = item.flexItem;\r\n        if (flexItem) {\r\n            x += flexItem._getHorizontalMarginOffset();\r\n            y += flexItem._getVerticalMarginOffset();\r\n        }\r\n\r\n        item.clearRecalcFlag();\r\n        item.setLayout(x, y, w, h);\r\n    }\r\n\r\n    _finalizeItemChildren(item) {\r\n        const flex = item._flex;\r\n        if (flex) {\r\n            const updater = new ItemCoordinatesUpdater(flex._layout);\r\n            updater._finalizeItems();\r\n        }\r\n    }\r\n\r\n    _reverseMainAxisLayoutPos(item) {\r\n        if (item._reversed && item._recalc == 0) {\r\n            item._reversed = false;\r\n        }\r\n        if (!item._reversed) {\r\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\r\n            const reversedPos = this._layout.mainAxisSize - endPos;\r\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\r\n            if (item._recalc != 0) {\r\n                item._reversed = true;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport ContentAligner from \"./ContentAligner.mjs\";\r\nimport FlexUtils from \"../FlexUtils.mjs\";\r\nimport LineLayouter from \"./LineLayouter.mjs\";\r\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\r\n\r\n/**\r\n * Layouts a flex container (and descendants).\r\n */\r\nexport default class FlexLayout {\r\n\r\n    constructor(flexContainer) {\r\n        this._flexContainer = flexContainer;\r\n\r\n        this._lineLayouter = new LineLayouter(this);\r\n\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n\r\n        this._cachedMainAxisSizeAfterLayout = 0;\r\n        this._cachedCrossAxisSizeAfterLayout = 0;\r\n\r\n        this._shrunk = false;\r\n    }\r\n\r\n    get shrunk() {\r\n        return this._shrunk;\r\n    }\r\n\r\n    get recalc() {\r\n        return this.item.recalc;\r\n    }\r\n\r\n    layoutTree() {\r\n        const isSubTree = (this.item.flexParent !== null);\r\n        if (isSubTree) {\r\n            // Use the dimensions set by the parent flex tree.\r\n            this._updateSubTreeLayout();\r\n        } else {\r\n            this.updateTreeLayout();\r\n        }\r\n        this.updateItemCoords();\r\n    }\r\n\r\n    updateTreeLayout() {\r\n        if (this.recalc) {\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this._performUpdateLayoutTreeFromCache();\r\n        }\r\n    }\r\n\r\n    _performUpdateLayoutTree() {\r\n        this._setInitialAxisSizes();\r\n        this._layoutAxes();\r\n        this._refreshLayoutCache();\r\n    }\r\n\r\n    _refreshLayoutCache() {\r\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\r\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\r\n    }\r\n\r\n    _performUpdateLayoutTreeFromCache() {\r\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\r\n        if (sizeMightHaveChanged) {\r\n            // Update after all.\r\n            this.item.enableLocalRecalcFlag();\r\n            this._performUpdateLayoutTree();\r\n        } else {\r\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\r\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\r\n        }\r\n    }\r\n\r\n    updateItemCoords() {\r\n        const updater = new ItemCoordinatesUpdater(this);\r\n        updater.finalize();\r\n    }\r\n\r\n    _updateSubTreeLayout() {\r\n        // The dimensions of this container are guaranteed not to have changed.\r\n        // That's why we can safely 'reuse' those and re-layout the contents.\r\n        const crossAxisSize = this.crossAxisSize;\r\n        this._layoutMainAxis();\r\n        this.performResizeCrossAxis(crossAxisSize);\r\n    }\r\n\r\n    _setInitialAxisSizes() {\r\n        if (this.item.isFlexItemEnabled()) {\r\n            this.item.flexItem._resetLayoutSize();\r\n        } else {\r\n            this.mainAxisSize = this._getMainAxisBasis();\r\n            this.crossAxisSize = this._getCrossAxisBasis();\r\n        }\r\n        this._resizingMainAxis = false;\r\n        this._resizingCrossAxis = false;\r\n        this._shrunk = false;\r\n    }\r\n\r\n    _layoutAxes() {\r\n        this._layoutMainAxis();\r\n        this._layoutCrossAxis();\r\n    }\r\n\r\n    /**\r\n     * @pre mainAxisSize should exclude padding.\r\n     */\r\n    _layoutMainAxis() {\r\n        this._layoutLines();\r\n        this._fitMainAxisSizeToContents();\r\n    }\r\n\r\n    _layoutLines() {\r\n        this._lineLayouter.layoutLines();\r\n    }\r\n\r\n    get _lines() {\r\n        return this._lineLayouter.lines;\r\n    }\r\n\r\n    _fitMainAxisSizeToContents() {\r\n        if (!this._resizingMainAxis) {\r\n            if (this.isMainAxisFitToContents()) {\r\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @pre crossAxisSize should exclude padding.\r\n     */\r\n    _layoutCrossAxis() {\r\n        const aligner = new ContentAligner(this);\r\n        aligner.init();\r\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\r\n        this._fitCrossAxisSizeToContents();\r\n        aligner.align();\r\n    }\r\n\r\n    _fitCrossAxisSizeToContents() {\r\n        if (!this._resizingCrossAxis) {\r\n            if (this.isCrossAxisFitToContents()) {\r\n                this.crossAxisSize = this._totalCrossAxisSize;\r\n            }\r\n        }\r\n    }\r\n\r\n    isWrapping() {\r\n        return this._flexContainer.wrap;\r\n    }\r\n\r\n    isAxisFitToContents(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this.isMainAxisFitToContents();\r\n        } else {\r\n            return this.isCrossAxisFitToContents();\r\n        }\r\n    }\r\n\r\n    isMainAxisFitToContents() {\r\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\r\n    }\r\n\r\n    isCrossAxisFitToContents() {\r\n        return !this._hasFixedCrossAxisBasis();\r\n    }\r\n\r\n    _hasFixedMainAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _hasFixedCrossAxisBasis() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    getAxisMinSize(horizontal) {\r\n        if (this._horizontal === horizontal) {\r\n            return this._getMainAxisMinSize();\r\n        } else {\r\n            return this._getCrossAxisMinSize();\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return this._lineLayouter.mainAxisMinSize;\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return this._lineLayouter.crossAxisMinSize;\r\n    }\r\n\r\n    resizeMainAxis(size) {\r\n        if (this.mainAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeMainAxis(size);\r\n            } else {\r\n                if (this._checkValidCacheMainAxisResize()) {\r\n                    this.mainAxisSize = size;\r\n                    this._fitCrossAxisSizeToContents();\r\n                } else {\r\n                    // Cache miss.\r\n                    this.item.enableLocalRecalcFlag();\r\n                    this.performResizeMainAxis(size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkValidCacheMainAxisResize(size) {\r\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\r\n        if (isFinalMainAxisSize) {\r\n            return true;\r\n        }\r\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\r\n        if (canIgnoreCacheMiss) {\r\n            // Allow other main axis resizes and check if final resize matches the target main axis size\r\n            //  (ItemCoordinatesUpdater).\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    performResizeMainAxis(size) {\r\n        const isShrinking = (size < this.mainAxisSize);\r\n        this._shrunk = isShrinking;\r\n\r\n        this.mainAxisSize = size;\r\n\r\n        this._resizingMainAxis = true;\r\n        this._layoutAxes();\r\n        this._resizingMainAxis = false;\r\n    }\r\n\r\n    resizeCrossAxis(size) {\r\n        if (this.crossAxisSize !== size) {\r\n            if (this.recalc > 0) {\r\n                this.performResizeCrossAxis(size);\r\n            } else {\r\n                this.crossAxisSize = size;\r\n            }\r\n        }\r\n    }\r\n\r\n    performResizeCrossAxis(size) {\r\n        this.crossAxisSize = size;\r\n\r\n        this._resizingCrossAxis = true;\r\n        this._layoutCrossAxis();\r\n        this._resizingCrossAxis = false;\r\n    }\r\n\r\n    get targetMainAxisSize() {\r\n        return this._horizontal ? this.item.target.w : this.item.target.h;\r\n    }\r\n\r\n    get targetCrossAxisSize() {\r\n        return this._horizontal ? this.item.target.h : this.item.target.w;\r\n    }\r\n\r\n    getParentFlexContainer() {\r\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\r\n    }\r\n\r\n    _getHorizontalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, true);\r\n    }\r\n\r\n    _getVerticalPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, false);\r\n    }\r\n\r\n    _getHorizontalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalPaddingOffset() {\r\n        return FlexUtils.getPaddingOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\r\n    }\r\n\r\n    _getCrossAxisBasis() {\r\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    get _horizontal() {\r\n        return this._flexContainer._horizontal;\r\n    }\r\n\r\n    get _reverse() {\r\n        return this._flexContainer._reverse;\r\n    }\r\n\r\n    get item() {\r\n        return this._flexContainer.item;\r\n    }\r\n\r\n    get items() {\r\n        return this.item.items;\r\n    }\r\n\r\n    get resizingMainAxis() {\r\n        return this._resizingMainAxis;\r\n    }\r\n\r\n    get resizingCrossAxis() {\r\n        return this._resizingCrossAxis;\r\n    }\r\n\r\n    get numberOfItems() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get mainAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\r\n    }\r\n\r\n    get crossAxisSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\r\n    }\r\n\r\n    set mainAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\r\n    }\r\n\r\n    set crossAxisSize(v) {\r\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Layout from \"./layout/FlexLayout.mjs\";\r\n\r\nexport default class FlexContainer {\r\n\r\n\r\n    constructor(item) {\r\n        this._item = item;\r\n\r\n        this._layout = new Layout(this);\r\n        this._horizontal = true;\r\n        this._reverse = false;\r\n        this._wrap = false;\r\n        this._alignItems = 'stretch';\r\n        this._justifyContent = 'flex-start';\r\n        this._alignContent = 'flex-start';\r\n\r\n        this._paddingLeft = 0;\r\n        this._paddingTop = 0;\r\n        this._paddingRight = 0;\r\n        this._paddingBottom = 0;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    _changedDimensions() {\r\n        this._item.changedDimensions();\r\n    }\r\n\r\n    _changedContents() {\r\n        this._item.changedContents();\r\n    }\r\n\r\n    get direction() {\r\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\r\n    }\r\n\r\n    set direction(f) {\r\n        if (this.direction === f) return;\r\n\r\n        this._horizontal = (f === 'row' || f === 'row-reverse');\r\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set wrap(v) {\r\n        this._wrap = v;\r\n        this._changedContents();\r\n    }\r\n\r\n    get wrap() {\r\n        return this._wrap;\r\n    }\r\n\r\n    get alignItems() {\r\n        return this._alignItems;\r\n    }\r\n\r\n    set alignItems(v) {\r\n        if (this._alignItems === v) return;\r\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n        }\r\n        this._alignItems = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get alignContent() {\r\n        return this._alignContent;\r\n    }\r\n\r\n    set alignContent(v) {\r\n        if (this._alignContent === v) return;\r\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\r\n        }\r\n        this._alignContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    get justifyContent() {\r\n        return this._justifyContent;\r\n    }\r\n\r\n    set justifyContent(v) {\r\n        if (this._justifyContent === v) return;\r\n\r\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\r\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\r\n        }\r\n        this._justifyContent = v;\r\n\r\n        this._changedContents();\r\n    }\r\n\r\n    set padding(v) {\r\n        this.paddingLeft = v;\r\n        this.paddingTop = v;\r\n        this.paddingRight = v;\r\n        this.paddingBottom = v;\r\n    }\r\n\r\n    get padding() {\r\n        return this.paddingLeft;\r\n    }\r\n    \r\n    set paddingLeft(v) {\r\n        this._paddingLeft = v;\r\n        this._changedDimensions();\r\n    }\r\n    \r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingTop(v) {\r\n        this._paddingTop = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingTop() {\r\n        return this._paddingTop;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        this._paddingRight = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingBottom(v) {\r\n        this._paddingBottom = v;\r\n        this._changedDimensions();\r\n    }\r\n\r\n    get paddingBottom() {\r\n        return this._paddingBottom;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\r\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\r\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\n\r\nexport default class FlexItem {\r\n\r\n    constructor(item) {\r\n        this._ctr = null;\r\n        this._item = item;\r\n        this._grow = 0;\r\n        this._shrink = FlexItem.SHRINK_AUTO;\r\n        this._alignSelf = undefined;\r\n        this._minWidth = 0;\r\n        this._minHeight = 0;\r\n        this._maxWidth = 0;\r\n        this._maxHeight = 0;\r\n\r\n        this._marginLeft = 0;\r\n        this._marginTop = 0;\r\n        this._marginRight = 0;\r\n        this._marginBottom = 0;\r\n        this._reversed = false;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    get grow() {\r\n        return this._grow;\r\n    }\r\n\r\n    set grow(v) {\r\n        if (this._grow === v) return;\r\n\r\n        this._grow = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get shrink() {\r\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\r\n            return this._getDefaultShrink();\r\n        }\r\n        return this._shrink;\r\n    }\r\n\r\n    _getDefaultShrink() {\r\n        if (this.item.isFlexEnabled()) {\r\n            return 1;\r\n        } else {\r\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    set shrink(v) {\r\n        if (this._shrink === v) return;\r\n\r\n        this._shrink = parseInt(v) || 0;\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get alignSelf() {\r\n        return this._alignSelf;\r\n    }\r\n\r\n    set alignSelf(v) {\r\n        if (this._alignSelf === v) return;\r\n\r\n        if (v === undefined) {\r\n            this._alignSelf = undefined;\r\n        } else {\r\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\r\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\r\n            }\r\n            this._alignSelf = v;\r\n        }\r\n\r\n        this._changed();\r\n    }\r\n\r\n    get minWidth() {\r\n        return this._minWidth;\r\n    }\r\n\r\n    set minWidth(v) {\r\n        this._minWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get minHeight() {\r\n        return this._minHeight;\r\n    }\r\n\r\n    set minHeight(v) {\r\n        this._minHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    get maxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    set maxWidth(v) {\r\n        this._maxWidth = Math.max(0, v);\r\n        this._item.changedDimensions(true, false);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight;\r\n    }\r\n\r\n    set maxHeight(v) {\r\n        this._maxHeight = Math.max(0, v);\r\n        this._item.changedDimensions(false, true);\r\n    }\r\n\r\n    /**\r\n     * @note margins behave slightly different than in HTML with regard to shrinking.\r\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\r\n     */\r\n    set margin(v) {\r\n        this.marginLeft = v;\r\n        this.marginTop = v;\r\n        this.marginRight = v;\r\n        this.marginBottom = v;\r\n    }\r\n\r\n    get margin() {\r\n        return this.marginLeft;\r\n    }\r\n\r\n    set marginLeft(v) {\r\n        this._marginLeft = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginLeft() {\r\n        return this._marginLeft;\r\n    }\r\n\r\n    set marginTop(v) {\r\n        this._marginTop = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginTop() {\r\n        return this._marginTop;\r\n    }\r\n\r\n    set marginRight(v) {\r\n        this._marginRight = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginRight() {\r\n        return this._marginRight;\r\n    }\r\n\r\n    set marginBottom(v) {\r\n        this._marginBottom = v;\r\n        this._changed();\r\n    }\r\n\r\n    get marginBottom() {\r\n        return this._marginBottom;\r\n    }\r\n    \r\n    _changed() {\r\n        if (this.ctr) this.ctr._changedContents();\r\n    }\r\n\r\n    set ctr(v) {\r\n        this._ctr = v;\r\n    }\r\n\r\n    get ctr() {\r\n        return this._ctr;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    _resetLayoutSize() {\r\n        this._resetHorizontalAxisLayoutSize();\r\n        this._resetVerticalAxisLayoutSize();\r\n    }\r\n\r\n    _resetCrossAxisLayoutSize() {\r\n        if (this.ctr._horizontal) {\r\n            this._resetVerticalAxisLayoutSize();\r\n        } else {\r\n            this._resetHorizontalAxisLayoutSize();\r\n        }\r\n    }\r\n\r\n    _resetHorizontalAxisLayoutSize() {\r\n        let w = FlexUtils.getRelAxisSize(this.item, true);\r\n        if (this._minWidth) {\r\n            w = Math.max(this._minWidth, w);\r\n        }\r\n        if (this._maxWidth) {\r\n            w = Math.min(this._maxWidth, w);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\r\n    }\r\n\r\n    _resetVerticalAxisLayoutSize() {\r\n        let h = FlexUtils.getRelAxisSize(this.item, false);\r\n        if (this._minHeight) {\r\n            h = Math.max(this._minHeight, h);\r\n        }\r\n        if (this._maxHeight) {\r\n            h = Math.min(this._maxHeight, h);\r\n        }\r\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\r\n    }\r\n\r\n    _getCrossAxisMinSizeSetting() {\r\n        return this._getMinSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMaxSizeSetting() {\r\n        return this._getMaxSizeSetting(this.ctr._horizontal);\r\n    }\r\n\r\n    _getMinSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._minWidth;\r\n        } else {\r\n            return this._minHeight;\r\n        }\r\n    }\r\n\r\n    _getMaxSizeSetting(horizontal) {\r\n        if (horizontal) {\r\n            return this._maxWidth;\r\n        } else {\r\n            return this._maxHeight;\r\n        }\r\n    }\r\n\r\n    _getMainAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMinSize() {\r\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisLayoutPos() {\r\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _setMainAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _setCrossAxisLayoutPos(pos) {\r\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\r\n    }\r\n\r\n    _getCrossAxisLayoutSize() {\r\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _resizeCrossAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\r\n    }\r\n\r\n    _resizeMainAxis(size) {\r\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\r\n    }\r\n\r\n    _getMainAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisPadding() {\r\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getMainAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\r\n    }\r\n\r\n    _getCrossAxisMargin() {\r\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _getHorizontalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, true);\r\n    }\r\n\r\n    _getVerticalMarginOffset() {\r\n        return FlexUtils.getMarginOffset(this.item, false);\r\n    }\r\n\r\n    _getMainAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\r\n    }\r\n\r\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\r\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\r\n    }\r\n\r\n    _hasFixedCrossAxisSize() {\r\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\r\n    }\r\n\r\n    _hasRelCrossAxisSize() {\r\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\r\n    }\r\n\r\n}\r\n\r\n\r\nFlexItem.SHRINK_AUTO = -1;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexContainer from \"./FlexContainer.mjs\";\r\nimport FlexItem from \"./FlexItem.mjs\";\r\nimport FlexUtils from \"./FlexUtils.mjs\";\r\n\r\n/**\r\n * This is the connection between the render tree with the layout tree of this flex container/item.\r\n */\r\nexport default class FlexTarget {\r\n\r\n    constructor(target) {\r\n        this._target = target;\r\n\r\n        /**\r\n         * Possible values (only in case of container):\r\n         * bit 0: has changed or contains items with changes\r\n         * bit 1: width changed\r\n         * bit 2: height changed\r\n         */\r\n        this._recalc = 0;\r\n        \r\n        this._enabled = false;\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._originalX = 0;\r\n        this._originalY = 0;\r\n        this._originalWidth = 0;\r\n        this._originalHeight = 0;\r\n\r\n        this._flex = null;\r\n        this._flexItem = null;\r\n        this._flexItemDisabled = false;\r\n\r\n        this._items = null;\r\n    }\r\n\r\n    get flexLayout() {\r\n        return this.flex ? this.flex._layout : null;\r\n    }\r\n\r\n    layoutFlexTree() {\r\n        if (this.isFlexEnabled() && this.isChanged()) {\r\n            this.flexLayout.layoutTree();\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        return this._target;\r\n    }\r\n\r\n    get flex() {\r\n        return this._flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        if (!v) {\r\n            if (this.isFlexEnabled()) {\r\n                this._disableFlex();\r\n            }\r\n        } else {\r\n            if (!this.isFlexEnabled()) {\r\n                this._enableFlex();\r\n            }\r\n            this._flex.patch(v);\r\n        }\r\n    }\r\n\r\n    get flexItem() {\r\n        if (this._flexItemDisabled) {\r\n            return false;\r\n        }\r\n        this._ensureFlexItem();\r\n        return this._flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        if (v === false) {\r\n            if (!this._flexItemDisabled) {\r\n                const parent = this.flexParent;\r\n                this._flexItemDisabled = true;\r\n                this._checkEnabled();\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        } else {\r\n            this._ensureFlexItem();\r\n\r\n            this._flexItem.patch(v);\r\n\r\n            if (this._flexItemDisabled) {\r\n                this._flexItemDisabled = false;\r\n                this._checkEnabled();\r\n                const parent = this.flexParent;\r\n                if (parent) {\r\n                    parent._clearFlexItemsCache();\r\n                    parent.changedContents();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlex() {\r\n        this._flex = new FlexContainer(this);\r\n        this._checkEnabled();\r\n        this.changedDimensions();\r\n        this._enableChildrenAsFlexItems();\r\n    }\r\n\r\n    _disableFlex() {\r\n        this.changedDimensions();\r\n        this._flex = null;\r\n        this._checkEnabled();\r\n        this._disableChildrenAsFlexItems();\r\n    }\r\n\r\n    _enableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._enableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableChildrenAsFlexItems() {\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const child = children[i];\r\n                child.layout._disableFlexItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableFlexItem() {\r\n        this._ensureFlexItem();\r\n        const flexParent = this._target._parent._layout;\r\n        this._flexItem.ctr = flexParent._flex;\r\n        flexParent.changedContents();\r\n        this._checkEnabled();\r\n    }\r\n\r\n    _disableFlexItem() {\r\n        if (this._flexItem) {\r\n            this._flexItem.ctr = null;\r\n        }\r\n\r\n        // We keep the flexItem object because it may contain custom settings.\r\n        this._checkEnabled();\r\n\r\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\r\n        this._resetOffsets();\r\n    }\r\n\r\n    _resetOffsets() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n\r\n    _ensureFlexItem() {\r\n        if (!this._flexItem) {\r\n            this._flexItem = new FlexItem(this);\r\n        }\r\n    }\r\n\r\n    _checkEnabled() {\r\n        const enabled = this.isEnabled();\r\n        if (this._enabled !== enabled) {\r\n            if (enabled) {\r\n                this._enable();\r\n            } else {\r\n                this._disable();\r\n            }\r\n            this._enabled = enabled;\r\n        }\r\n    }\r\n    \r\n    _enable() {\r\n        this._setupTargetForFlex();\r\n        this._target.enableFlexLayout();\r\n    }\r\n\r\n    _disable() {\r\n        this._restoreTargetToNonFlex();\r\n        this._target.disableFlexLayout();\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexEnabled() {\r\n        return this._flex !== null;\r\n    }\r\n\r\n    isFlexItemEnabled() {\r\n        return this.flexParent !== null;\r\n    }\r\n\r\n    _restoreTargetToNonFlex() {\r\n        const target = this._target;\r\n        target.x = this._originalX;\r\n        target.y = this._originalY;\r\n        target.setDimensions(this._originalWidth, this._originalHeight);\r\n    }\r\n\r\n    _setupTargetForFlex() {\r\n        const target = this._target;\r\n        this._originalX = target._x;\r\n        this._originalY = target._y;\r\n        this._originalWidth = target._w;\r\n        this._originalHeight = target._h;\r\n    }\r\n    \r\n    setParent(from, to) {\r\n        if (from && from.isFlexContainer()) {\r\n            from._layout._changedChildren();\r\n        }\r\n\r\n        if (to && to.isFlexContainer()) {\r\n            this._enableFlexItem();\r\n            to._layout._changedChildren();\r\n        }\r\n        this._checkEnabled();\r\n    }\r\n\r\n    get flexParent() {\r\n        if (this._flexItemDisabled) {\r\n            return null;\r\n        }\r\n\r\n        const parent = this._target._parent;\r\n        if (parent && parent.isFlexContainer()) {\r\n            return parent._layout;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setVisible(v) {\r\n        const parent = this.flexParent;\r\n        if (parent) {\r\n            parent._changedChildren();\r\n        }\r\n    }\r\n\r\n    get items() {\r\n        if (!this._items) {\r\n            this._items = this._getFlexItems();\r\n        }\r\n        return this._items;\r\n    }\r\n\r\n    _getFlexItems() {\r\n        const items = [];\r\n        const children = this._target._children;\r\n        if (children) {\r\n            for (let i = 0, n = children.length; i < n; i++) {\r\n                const item = children[i];\r\n                if (item.visible) {\r\n                    if (item.isFlexItem()) {\r\n                        items.push(item.layout);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    _changedChildren() {\r\n        this._clearFlexItemsCache();\r\n        this.changedContents();\r\n    }\r\n\r\n    _clearFlexItemsCache() {\r\n        this._items = null;\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        let originalX = this._originalX;\r\n        let originalY = this._originalY;\r\n        if (this.funcX) {\r\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\r\n        }\r\n        if (this.funcY) {\r\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\r\n        }\r\n\r\n        if (this.isFlexItemEnabled()) {\r\n            this.target.setLayout(x + originalX, y + originalY, w, h);\r\n        } else {\r\n            // Reuse the x,y 'settings'.\r\n            this.target.setLayout(originalX, originalY, w, h);\r\n        }\r\n    }\r\n\r\n    changedDimensions(changeWidth = true, changeHeight = true) {\r\n        this._updateRecalc(changeWidth, changeHeight);\r\n    }\r\n\r\n    changedContents() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    forceLayout() {\r\n        this._updateRecalc();\r\n    }\r\n\r\n    isChanged() {\r\n        return this._recalc > 0;\r\n    }\r\n\r\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\r\n        if (this.isFlexEnabled()) {\r\n            const layout = this._flex._layout;\r\n\r\n            // When something internal changes, it can have effect on the external dimensions.\r\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\r\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\r\n        }\r\n\r\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\r\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\r\n        this._recalc |= recalc;\r\n        if (newRecalcFlags > 1) {\r\n            if (this.flexParent) {\r\n                this.flexParent._updateRecalcBottomUp(recalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    getNewRecalcFlags(flags) {\r\n        return (7 - this._recalc) & flags;\r\n    }\r\n\r\n    _updateRecalcBottomUp(childRecalc) {\r\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\r\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\r\n        this._recalc |= newRecalc;\r\n        if (newRecalcFlags > 1) {\r\n            const flexParent = this.flexParent;\r\n            if (flexParent) {\r\n                flexParent._updateRecalcBottomUp(newRecalc);\r\n            } else {\r\n                this._target.triggerLayout();\r\n            }\r\n        } else {\r\n            this._target.triggerLayout();\r\n        }\r\n    }\r\n\r\n    _getRecalcFromChangedChildRecalc(childRecalc) {\r\n        const layout = this._flex._layout;\r\n\r\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\r\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\r\n\r\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\r\n        if (!crossAxisDimensionsChangedInChild) {\r\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\r\n            if (mainAxisDimensionsChangedInChild) {\r\n                const mainAxisIsWrapping = layout.isWrapping();\r\n                if (mainAxisIsWrapping) {\r\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\r\n                    if (crossAxisIsFitToContents) {\r\n                        // Special case: due to wrapping, the cross axis size may be changed.\r\n                        childRecalc += crossAxisRecalcFlag;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isWidthDynamic = layout.isAxisFitToContents(true);\r\n        let isHeightDynamic = layout.isAxisFitToContents(false);\r\n\r\n        if (layout.shrunk) {\r\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\r\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\r\n            if (layout._horizontal) {\r\n                isWidthDynamic = true;\r\n            } else {\r\n                isHeightDynamic = true;\r\n            }\r\n        }\r\n\r\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\r\n\r\n        const combinedRecalc = childRecalc & localRecalc;\r\n        return combinedRecalc;\r\n    }\r\n\r\n    get recalc() {\r\n        return this._recalc;\r\n    }\r\n\r\n    clearRecalcFlag() {\r\n        this._recalc = 0;\r\n    }\r\n\r\n    enableLocalRecalcFlag() {\r\n        this._recalc = 1;\r\n    }\r\n\r\n    get originalX() {\r\n        return this._originalX;\r\n    }\r\n\r\n    setOriginalXWithoutUpdatingLayout(v) {\r\n        this._originalX = v;\r\n    }\r\n\r\n    get originalY() {\r\n        return this._originalY;\r\n    }\r\n\r\n    setOriginalYWithoutUpdatingLayout(v) {\r\n        this._originalY = v;\r\n    }\r\n\r\n    get originalWidth() {\r\n        return this._originalWidth;\r\n    }\r\n\r\n    set originalWidth(v) {\r\n        if (this._originalWidth !== v) {\r\n            this._originalWidth = v;\r\n            this.changedDimensions(true, false);\r\n        }\r\n    }\r\n\r\n    get originalHeight() {\r\n        return this._originalHeight;\r\n    }\r\n\r\n    set originalHeight(v) {\r\n        if (this._originalHeight !== v) {\r\n            this._originalHeight = v;\r\n            this.changedDimensions(false, true);\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return this._target.funcX;\r\n    }\r\n\r\n    get funcY() {\r\n        return this._target.funcY;\r\n    }\r\n\r\n    get funcW() {\r\n        return this._target.funcW;\r\n    }\r\n\r\n    get funcH() {\r\n        return this._target.funcH;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TextureSource {\r\n\r\n    constructor(manager, loader = null) {\r\n        this.id = TextureSource.id++;\r\n\r\n        this.manager = manager;\r\n\r\n        this.stage = manager.stage;\r\n\r\n        /**\r\n         * All enabled textures (textures that are used by visible elements).\r\n         * @type {Set<Texture>}\r\n         */\r\n        this.textures = new Set();\r\n\r\n        /**\r\n         * The number of active textures (textures that have at least one active element).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._activeTextureCount = 0;\r\n\r\n        /**\r\n         * The factory for the source of this texture.\r\n         * @type {Function}\r\n         */\r\n        this.loader = loader;\r\n\r\n        /**\r\n         * Identifier for reuse.\r\n         * @type {String}\r\n         */\r\n        this.lookupId = null;\r\n\r\n        /**\r\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\r\n         * @type {Function}\r\n         */\r\n        this._cancelCb = null;\r\n\r\n        /**\r\n         * Loading since timestamp in millis.\r\n         * @type {number}\r\n         */\r\n        this.loadingSince = 0;\r\n\r\n        this.w = 0;\r\n        this.h = 0;\r\n\r\n        this._nativeTexture = null;\r\n\r\n        /**\r\n         * If true, then this.texture source is never freed from memory during garbage collection.\r\n         * @type {boolean}\r\n         */\r\n        this.permanent = false;\r\n\r\n        /**\r\n         * Sub-object with texture-specific rendering information.\r\n         * For images, contains the src property, for texts, contains handy rendering information.\r\n         * @type {Object}\r\n         */\r\n        this.renderInfo = null;\r\n\r\n        /**\r\n         * Generated for 'renderToTexture'.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._isResultTexture = !this.loader;\r\n\r\n        /**\r\n         * Contains the load error, if the texture source could previously not be loaded.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._loadError = null;\r\n\r\n        /**\r\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\r\n         * @type {object}\r\n         * @private\r\n         */\r\n        this._imageRef = null;\r\n\r\n\r\n        /**\r\n         * Track whether or not there is an alpha channel in this source\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n         this._hasAlpha = false;\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    get loadError() {\r\n        return this._loadError;\r\n    }\r\n\r\n    addTexture(v) {\r\n        if (!this.textures.has(v)) {\r\n            this.textures.add(v);\r\n        }\r\n    }\r\n\r\n    removeTexture(v) {\r\n        this.textures.delete(v);\r\n    }\r\n\r\n    incActiveTextureCount() {\r\n        this._activeTextureCount++;\r\n        if (this._activeTextureCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveTextureCount() {\r\n        this._activeTextureCount--;\r\n        if (this._activeTextureCount === 0) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    get isResultTexture() {\r\n        return this._isResultTexture;\r\n    }\r\n\r\n    set isResultTexture(v) {\r\n        this._isResultTexture = v;\r\n    }\r\n\r\n    forEachEnabledElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(cb);\r\n        });\r\n    }\r\n\r\n    hasEnabledElements() {\r\n        return this.textures.size > 0;\r\n    }\r\n\r\n    forEachActiveElement(cb) {\r\n        this.textures.forEach(texture => {\r\n            texture.elements.forEach(element => {\r\n                if (element.active) {\r\n                    cb(element);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getRenderWidth() {\r\n        return this.w;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        return this.h;\r\n    }\r\n\r\n    allowCleanup() {\r\n        return !this.permanent && !this.isUsed();\r\n    }\r\n\r\n    becomesUsed() {\r\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\r\n        this.load();\r\n    }\r\n\r\n    becomesUnused() {\r\n        this.cancel();\r\n    }\r\n\r\n    cancel() {\r\n        if (this.isLoading()) {\r\n            if (this._cancelCb) {\r\n                this._cancelCb(this);\r\n\r\n                // Clear callback to avoid memory leaks.\r\n                this._cancelCb = null;\r\n            }\r\n            this.loadingSince = 0;\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return !!this._nativeTexture;\r\n    }\r\n\r\n    isLoading() {\r\n        return (this.loadingSince > 0);\r\n    }\r\n\r\n    isError() {\r\n        return !!this._loadError;\r\n    }\r\n\r\n    reload() {\r\n        this.free();\r\n        if (this.isUsed()) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    load(forceSync = false) {\r\n        // From the moment of loading (when a texture source becomes used by active elements)\r\n        if (this.isResultTexture) {\r\n            // Element result texture source, for which the loading is managed by the core.\r\n            return;\r\n        }\r\n\r\n        if (!this._nativeTexture && !this.isLoading()) {\r\n            this.loadingSince = (new Date()).getTime();\r\n            this._cancelCb = this.loader((err, options) => {\r\n                // Ignore loads that come in after a cancel.\r\n                if (this.isLoading()) {\r\n                    // Clear callback to avoid memory leaks.\r\n                    this._cancelCb = null;\r\n\r\n                    if (this.manager.stage.destroyed) {\r\n                        // Ignore async load when stage is destroyed.\r\n                        return;\r\n                    }\r\n                    if (err) {\r\n                        // Emit txError.\r\n                        this.onError(err);\r\n                    } else if (options && options.source) {\r\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\r\n                            const textureThrottler = this.stage.textureThrottler;\r\n                            this._cancelCb = textureThrottler.genericCancelCb;\r\n                            textureThrottler.add(this, options);\r\n                        } else {\r\n                            this.processLoadedSource(options);\r\n                        }\r\n                    }\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    processLoadedSource(options) {\r\n        this.loadingSince = 0;\r\n        this.setSource(options);\r\n    }\r\n\r\n    setSource(options) {\r\n        const source = options.source;\r\n\r\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\r\n        this.w = source.width || (options && options.w) || 0;\r\n        this.h = source.height || (options && options.h) || 0;\r\n\r\n        if (options && options.renderInfo) {\r\n            // Assign to id in cache so that it can be reused.\r\n            this.renderInfo = options.renderInfo;\r\n        }\r\n\r\n        this.permanent = !!options.permanent;\r\n\r\n        if (options && options.imageRef)\r\n            this._imageRef = options.imageRef;\r\n        if (options && options.flipTextureY) {\r\n            this._flipTextureY = options.flipTextureY;\r\n        } else {\r\n            this._flipTextureY = false;\r\n        }\r\n\r\n        if (this._isNativeTexture(source)) {\r\n            // Texture managed by caller.\r\n            this._nativeTexture = source;\r\n\r\n            this.w = this.w || source.w;\r\n            this.h = this.h || source.h;\r\n\r\n            // WebGLTexture objects are by default;\r\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\r\n        } else {\r\n            this.manager.uploadTextureSource(this, options);\r\n        }\r\n\r\n        // Must be cleared when reload is succesful.\r\n        this._loadError = null;\r\n\r\n        this.onLoad();\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeTextureCount > 0;\r\n    }\r\n\r\n    onLoad() {\r\n        if (this.isUsed()) {\r\n            this.textures.forEach(texture => {\r\n                texture.onLoad();\r\n            });\r\n        }\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\r\n        //  (using tex[Sub]Image2d for example).\r\n\r\n        if (this._nativeTexture) {\r\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\r\n            this._nativeTexture.update = this.stage.frameCounter;\r\n        }\r\n\r\n        this.forEachActiveElement(function (element) {\r\n            element.forceRenderUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    forceUpdateRenderCoords() {\r\n        this.forEachActiveElement(function (element) {\r\n            element._updateTextureCoords();\r\n        });\r\n    }\r\n\r\n    get nativeTexture() {\r\n        return this._nativeTexture;\r\n    }\r\n\r\n    clearNativeTexture() {\r\n        this._nativeTexture = null;\r\n        //also clear the reference to the texture variable.\r\n        this._imageRef = null;\r\n    }\r\n\r\n    /**\r\n     * Used for result textures.\r\n     */\r\n    replaceNativeTexture(newNativeTexture, w, h) {\r\n        let prevNativeTexture = this._nativeTexture;\r\n        // Loaded by core.\r\n        this._nativeTexture = newNativeTexture;\r\n        this.w = w;\r\n        this.h = h;\r\n\r\n        if (!prevNativeTexture && this._nativeTexture) {\r\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\r\n        }\r\n\r\n        if (!this._nativeTexture) {\r\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\r\n        }\r\n\r\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\r\n        this.forEachEnabledElement(element => element._updateDimensions());\r\n\r\n        // Notice that the sprite map must never contain render textures.\r\n    }\r\n\r\n    onError(e) {\r\n        this._loadError = e;\r\n        this.loadingSince = 0;\r\n        console.error('[Lightning] texture load error', e, this.lookupId);\r\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\r\n    }\r\n\r\n    free() {\r\n        if (this.isLoaded()) {\r\n            this.manager.freeTextureSource(this);\r\n        }\r\n    }\r\n\r\n    _isNativeTexture(source) {\r\n        if (Utils.isNode) {\r\n            return source.constructor.name === \"WebGLTexture\";\r\n        }\r\n\r\n        if ('WebGLTexture' in window) {\r\n            return source instanceof WebGLTexture;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nTextureSource.prototype.isTextureSource = true;\r\n\r\nTextureSource.id = 1;\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from '../TextureSource.mjs';\r\n\r\nexport default class ElementTexturizer {\r\n\r\n    constructor(elementCore) {\r\n\r\n        this._element = elementCore.element;\r\n        this._core = elementCore;\r\n\r\n        this.ctx = this._core.ctx;\r\n\r\n        this._enabled = false;\r\n        this.lazy = false;\r\n        this._colorize = false;\r\n\r\n        this._renderTexture = null;\r\n\r\n        this._renderTextureReused = false;\r\n\r\n        this._resultTextureSource = null;\r\n\r\n        this._renderOffscreen = false;\r\n\r\n        this.empty = false;\r\n    }\r\n\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(v) {\r\n        this._enabled = v;\r\n        this._core.updateRenderToTextureEnabled();\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this._renderOffscreen = v;\r\n        this._core.setHasRenderUpdates(1);\r\n\r\n        // This enforces rechecking the 'within bounds'.\r\n        this._core._setRecalc(6);\r\n    }\r\n\r\n    get colorize() {\r\n        return this._colorize;\r\n    }\r\n\r\n    set colorize(v) {\r\n        if (this._colorize !== v) {\r\n            this._colorize = v;\r\n\r\n            // Only affects the finally drawn quad.\r\n            this._core.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        if (!this._resultTextureSource) {\r\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\r\n            this.updateResultTexture();\r\n        }\r\n        return this._resultTextureSource;\r\n    }\r\n\r\n    hasResultTexture() {\r\n        return !!this._resultTextureSource;\r\n    }\r\n\r\n    resultTextureInUse() {\r\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\r\n    }\r\n\r\n    updateResultTexture() {\r\n        let resultTexture = this.getResultTexture();\r\n        if (this._resultTextureSource) {\r\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\r\n                let w = resultTexture ? resultTexture.w : 0;\r\n                let h = resultTexture ? resultTexture.h : 0;\r\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\r\n            }\r\n\r\n            // Texture will be updated: all elements using the source need to be updated as well.\r\n            this._resultTextureSource.forEachEnabledElement(element => {\r\n                element._updateDimensions();\r\n                element.core.setHasRenderUpdates(3);\r\n            });\r\n        }\r\n    }\r\n\r\n    mustRenderToTexture() {\r\n        // Check if we must really render as texture.\r\n        if (this._enabled && !this.lazy) {\r\n            return true;\r\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\r\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deactivate() {\r\n        this.release();\r\n    }\r\n\r\n    get renderTextureReused() {\r\n        return this._renderTextureReused;\r\n    }\r\n\r\n    release() {\r\n        this.releaseRenderTexture();\r\n    }\r\n\r\n    releaseRenderTexture() {\r\n        if (this._renderTexture) {\r\n            if (!this._renderTextureReused) {\r\n                this.ctx.releaseRenderTexture(this._renderTexture);\r\n            }\r\n            this._renderTexture = null;\r\n            this._renderTextureReused = false;\r\n            this.updateResultTexture();\r\n        }\r\n    }\r\n\r\n    // Reuses the specified texture as the render texture (in ancestor).\r\n    reuseTextureAsRenderTexture(nativeTexture) {\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this.releaseRenderTexture();\r\n            this._renderTexture = nativeTexture;\r\n            this._renderTextureReused = true;\r\n        }\r\n    }\r\n\r\n    hasRenderTexture() {\r\n        return !!this._renderTexture;\r\n    }\r\n\r\n    getRenderTexture() {\r\n        if (!this._renderTexture) {\r\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\r\n            this._renderTextureReused = false;\r\n        }\r\n        return this._renderTexture;\r\n    }\r\n\r\n    getResultTexture() {\r\n        return this._renderTexture;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\r\n\r\nexport default class ElementCore {\r\n\r\n    constructor(element) {\r\n        this._element = element;\r\n\r\n        this.ctx = element.stage.ctx;\r\n\r\n        // The memory layout of the internal variables is affected by their position in the constructor.\r\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\r\n\r\n        this._recalc = 0;\r\n\r\n        this._parent = null;\r\n\r\n        this._onUpdate = null;\r\n\r\n        this._pRecalc = 0;\r\n\r\n        this._worldContext = new ElementCoreContext();\r\n\r\n        this._hasUpdates = false;\r\n\r\n        this._localAlpha = 1;\r\n\r\n        this._onAfterCalcs = null;\r\n\r\n        this._onAfterUpdate = null;\r\n\r\n        \r\n        this._localPx = 0;\r\n        this._localPy = 0;\r\n\r\n        this._localTa = 1;\r\n        this._localTb = 0;\r\n        this._localTc = 0;\r\n        this._localTd = 1;\r\n\r\n        this._isComplex = false;\r\n\r\n        this._dimsUnknown = false;\r\n\r\n        this._clipping = false;\r\n\r\n        // Used by both update and render.\r\n        this._zSort = false;\r\n\r\n        this._outOfBounds = 0;\r\n\r\n        /**\r\n         * The texture source to be displayed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._displayedTextureSource = null;\r\n\r\n        this._zContextUsage = 0;\r\n\r\n        this._children = null;\r\n\r\n        this._hasRenderUpdates = 0;\r\n\r\n        this._zIndexedChildren = null;\r\n\r\n        this._renderContext = this._worldContext;\r\n\r\n        this.renderState = this.ctx.renderState;\r\n\r\n        this._scissor = null;\r\n\r\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\r\n        this._shaderOwner = null;\r\n\r\n\r\n        this._updateTreeOrder = 0;\r\n\r\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\r\n\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n\r\n        this._optFlags = 0;\r\n        this._funcX = null;\r\n        this._funcY = null;\r\n        this._funcW = null;\r\n        this._funcH = null;\r\n\r\n        this._scaleX = 1;\r\n        this._scaleY = 1;\r\n        this._pivotX = 0.5;\r\n        this._pivotY = 0.5;\r\n        this._mountX = 0;\r\n        this._mountY = 0;\r\n        this._rotation = 0;\r\n\r\n        this._alpha = 1;\r\n        this._visible = true;\r\n\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n\r\n        this._zIndex = 0;\r\n        this._forceZIndexContext = false;\r\n        this._zParent = null;\r\n\r\n        this._isRoot = false;\r\n        \r\n        /**\r\n         * RTL will be ignore. LTR is applied\r\n         */\r\n        this._ignoreRTL = null;\r\n\r\n        /**\r\n         * Iff true, during zSort, this element should be 're-sorted' because either:\r\n         * - zIndex did chang\r\n         * - zParent did change\r\n         * - element was moved in the render tree\r\n         * @type {boolean}\r\n         */\r\n        this._zIndexResort = false;\r\n\r\n        this._shader = null;\r\n\r\n        // Element is rendered on another texture.\r\n        this._renderToTextureEnabled = false;\r\n\r\n        this._texturizer = null;\r\n\r\n        this._useRenderToTexture = false;\r\n\r\n        this._boundsMargin = null;\r\n\r\n        this._recBoundsMargin = null;\r\n\r\n        this._withinBoundsMargin = false;\r\n\r\n        this._viewport = null;\r\n\r\n        this._clipbox = true;\r\n\r\n        this.render = this._renderSimple;\r\n\r\n        this._layout = null;\r\n    }\r\n\r\n    get offsetX() {\r\n        if (this._funcX) {\r\n            return this._funcX;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalX;\r\n            } else {\r\n                return this._x;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetX(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcX = v;\r\n        } else {\r\n            this._disableFuncX();\r\n            if (this.hasFlexLayout()) {\r\n                this.x += (v - this._layout.originalX);\r\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.x = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        if (v !== this._x) {\r\n            this._updateLocalTranslateDelta(v - this._x, 0);\r\n            this._x = v;\r\n        }\r\n    }\r\n\r\n    get funcX() {\r\n        return (this._optFlags & 1 ? this._funcX : null);\r\n    }\r\n\r\n    set funcX(v) {\r\n        if (this._funcX !== v) {\r\n            this._optFlags |= 1;\r\n            this._funcX = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._x = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncX() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 1);\r\n        this._funcX = null;\r\n    }\r\n\r\n    get offsetY() {\r\n        if (this._funcY) {\r\n            return this._funcY;\r\n        } else {\r\n            if (this.hasFlexLayout()) {\r\n                return this._layout.originalY;\r\n            } else {\r\n                return this._y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this.funcY = v;\r\n        } else {\r\n            this._disableFuncY();\r\n            if (this.hasFlexLayout()) {\r\n                this.y += (v - this._layout.originalY);\r\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\r\n            } else {\r\n                this.y = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        if (v !== this._y) {\r\n            this._updateLocalTranslateDelta(0, v - this._y);\r\n            this._y = v;\r\n        }\r\n    }\r\n\r\n    get funcY() {\r\n        return (this._optFlags & 2 ? this._funcY : null);\r\n    }\r\n\r\n    set funcY(v) {\r\n        if (this._funcY !== v) {\r\n            this._optFlags |= 2;\r\n            this._funcY = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\r\n                this.layout.forceLayout();\r\n            } else {\r\n                this._y = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    _disableFuncY() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 2);\r\n        this._funcY = null;\r\n    }\r\n\r\n    get funcW() {\r\n        return (this._optFlags & 4 ? this._funcW : null);\r\n    }\r\n\r\n    set funcW(v) {\r\n        if (this._funcW !== v) {\r\n            this._optFlags |= 4;\r\n            this._funcW = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalWidth = 0;\r\n                this.layout.changedDimensions(true, false);\r\n            } else {\r\n                this._w = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncW() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 4);\r\n        this._funcW = null;\r\n    }\r\n\r\n    get funcH() {\r\n        return (this._optFlags & 8 ? this._funcH : null);\r\n    }\r\n\r\n    set funcH(v) {\r\n        if (this._funcH !== v) {\r\n            this._optFlags |= 8;\r\n            this._funcH = v;\r\n            if (this.hasFlexLayout()) {\r\n                this._layout._originalHeight = 0;\r\n                this.layout.changedDimensions(false, true);\r\n            } else {\r\n                this._h = 0;\r\n                this._triggerRecalcTranslate();\r\n            }\r\n        }\r\n    }\r\n\r\n    disableFuncH() {\r\n        this._optFlags = this._optFlags & (0xFFFF - 8);\r\n        this._funcH = null;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalWidth;\r\n        } else {\r\n            return this._w;\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.hasFlexLayout()) {\r\n            return this._layout.originalHeight;\r\n        } else {\r\n            return this._h;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this._scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        if (this._scaleX !== v) {\r\n            this._scaleX = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scaleY() {\r\n        return this._scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        if (this._scaleY !== v) {\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get scale() {\r\n        return this.scaleX;\r\n    }\r\n\r\n    set scale(v) {\r\n        if (this._scaleX !== v || this._scaleY !== v) {\r\n            this._scaleX = v;\r\n            this._scaleY = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        if (this._pivotX !== v) {\r\n            this._pivotX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        if (this._pivotY !== v) {\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivot(v) {\r\n        if (this._pivotX !== v || this._pivotY !== v) {\r\n            this._pivotX = v;\r\n            this._pivotY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountX() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        if (this._mountX !== v) {\r\n            this._mountX = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mountY() {\r\n        return this._mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        if (this._mountY !== v) {\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get mount() {\r\n        return this._mountX;\r\n    }\r\n\r\n    set mount(v) {\r\n        if (this._mountX !== v || this._mountY !== v) {\r\n            this._mountX = v;\r\n            this._mountY = v;\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        if (this._rotation !== v) {\r\n            this._rotation = v;\r\n            this._updateLocalTransform();\r\n        }\r\n    }\r\n\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        // Account for rounding errors.\r\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\r\n        if (this._alpha !== v) {\r\n            let prev = this._alpha;\r\n            this._alpha = v;\r\n            this._updateLocalAlpha();\r\n            if ((prev === 0) !== (v === 0)) {\r\n                this._element._updateEnabledFlag();\r\n            }\r\n        }\r\n    }\r\n\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        if (this._visible !== v) {\r\n            this._visible = v;\r\n            this._updateLocalAlpha();\r\n            this._element._updateEnabledFlag();\r\n\r\n            if (this.hasFlexLayout()) {\r\n                this.layout.setVisible(v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateLocalTransform() {\r\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\r\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\r\n            let _sr = Math.sin(this._rotation);\r\n            let _cr = Math.cos(this._rotation);\r\n\r\n            this._setLocalTransform(\r\n                _cr * this._scaleX,\r\n                -_sr * this._scaleY,\r\n                _sr * this._scaleX,\r\n                _cr * this._scaleY\r\n            );\r\n        } else {\r\n            this._setLocalTransform(\r\n                this._scaleX,\r\n                0,\r\n                0,\r\n                this._scaleY\r\n            );\r\n        }\r\n        this._updateLocalTranslate();\r\n    };\r\n\r\n    _updateLocalTranslate() {\r\n        this._recalcLocalTranslate();\r\n        this._triggerRecalcTranslate();\r\n    };\r\n\r\n    _recalcLocalTranslate() {\r\n        let pivotXMul = this._pivotX * this._w;\r\n        let pivotYMul = this._pivotY * this._h;\r\n        let px;\r\n        if (window.isRTL && !this._ignoreRTL) {\r\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\r\n        } else {\r\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\r\n        }\r\n\r\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\r\n        px -= this._mountX * this._w;\r\n        py -= this._mountY * this._h;\r\n        this._localPx = px;\r\n        this._localPy = py;\r\n    }\r\n\r\n    _updateLocalTranslateDelta(dx, dy) {\r\n        this._addLocalTranslate(dx, dy);\r\n    };\r\n\r\n    _updateLocalAlpha() {\r\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\r\n    };\r\n\r\n    /**\r\n     * @param {number} type\r\n     * 0: no updates\r\n     * 1: re-invoke shader\r\n     * 3: re-create render texture and re-invoke shader\r\n     */\r\n    setHasRenderUpdates(type) {\r\n        if (this._worldContext.alpha) {\r\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\r\n            let p = this;\r\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\r\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\r\n                p._hasRenderUpdates = 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Number} type\r\n     *   1: alpha\r\n     *   2: translate\r\n     *   4: transform\r\n     * 128: becomes visible\r\n     * 256: flex layout updated\r\n     */\r\n    _setRecalc(type) {\r\n        this._recalc |= type;\r\n\r\n        this._setHasUpdates();\r\n\r\n        // Any changes in descendants should trigger texture updates.\r\n        if (this._parent) {\r\n            this._parent.setHasRenderUpdates(3);\r\n        }\r\n    }\r\n\r\n    _setHasUpdates() {\r\n        let p = this;\r\n        while (p && !p._hasUpdates) {\r\n            p._hasUpdates = true;\r\n            p = p._parent;\r\n        }\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        if (parent !== this._parent) {\r\n            let prevIsZContext = this.isZContext();\r\n            let prevParent = this._parent;\r\n            this._parent = parent;\r\n\r\n            // Notify flex layout engine.\r\n            if (this._layout || (parent && parent.isFlexContainer())) {\r\n                this.layout.setParent(prevParent, parent);\r\n            }\r\n\r\n            if (prevParent) {\r\n                // When elements are deleted, the render texture must be re-rendered.\r\n                prevParent.setHasRenderUpdates(3);\r\n            }\r\n\r\n            this._setRecalc(1 + 2 + 4);\r\n\r\n            if (this._parent) {\r\n                // Force parent to propagate hasUpdates flag.\r\n                this._parent._setHasUpdates();\r\n            }\r\n\r\n            if (this._zIndex === 0) {\r\n                this.setZParent(parent);\r\n            } else {\r\n                this.setZParent(parent ? parent.findZContext() : null);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(prevParent.findZContext());\r\n                }\r\n            }\r\n\r\n            if (this._ignoreRTL != false) {\r\n                //Inherit ignoreRTL value from parent if it isn't setted\r\n                this._setIgnoreRTL(parent);\r\n            }\r\n\r\n            // Tree order did change: even if zParent stays the same, we must resort.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (!this._shader) {\r\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\r\n                if (newShaderOwner !== this._shaderOwner) {\r\n                    this.setHasRenderUpdates(1);\r\n                    this._setShaderOwnerRecursive(newShaderOwner);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setIgnoreRTL(parent) {\r\n        if (parent && parent.ignoreRTL && parent._children) {\r\n            for (let i = 0, n = parent._children.length; i < n; i++) {\r\n                let c = parent._children[i];\r\n                if (c && c.ignoreRTL != false) {\r\n                    c.ignoreRTL = parent.ignoreRTL;\r\n                    c._setIgnoreRTL(c);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    enableZSort(force = false) {\r\n        if (!this._zSort && this._zContextUsage > 0) {\r\n            this._zSort = true;\r\n            if (force) {\r\n                // ZSort must be done, even if this element is invisible.\r\n                // This is done to prevent memory leaks when removing element from inactive render branches.\r\n                this.ctx.forceZSort(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    addChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children.splice(index, 0, child);\r\n        child.setParent(this);\r\n    };\r\n\r\n    setChildAt(index, child) {\r\n        if (!this._children) this._children = [];\r\n        this._children[index].setParent(null);\r\n        this._children[index] = child;\r\n        child.setParent(this);\r\n    }\r\n\r\n    removeChildAt(index) {\r\n        let child = this._children[index];\r\n        this._children.splice(index, 1);\r\n        child.setParent(null);\r\n    };\r\n\r\n    removeChildren() {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i].setParent(null);\r\n            }\r\n\r\n            this._children.splice(0);\r\n\r\n            if (this._zIndexedChildren) {\r\n                this._zIndexedChildren.splice(0);\r\n            }\r\n        }\r\n    };\r\n\r\n    syncChildren(removed, added, order) {\r\n        this._children = order;\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i].setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            added[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    moveChild(fromIndex, toIndex) {\r\n        let c = this._children[fromIndex];\r\n        this._children.splice(fromIndex, 1);\r\n        this._children.splice(toIndex, 0, c);\r\n\r\n        // Tree order changed: must resort!;\r\n        this._zIndexResort = true;\r\n        if (this._zParent) {\r\n            this._zParent.enableZSort();\r\n        }\r\n    }\r\n\r\n    _setLocalTransform(a, b, c, d) {\r\n        this._setRecalc(4);\r\n        this._localTa = a;\r\n        this._localTb = b;\r\n        this._localTc = c;\r\n        this._localTd = d;\r\n\r\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\r\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\r\n    };\r\n\r\n    _addLocalTranslate(dx, dy) {\r\n        this._localPx += dx;\r\n        this._localPy += dy;\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    _setLocalAlpha(a) {\r\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\r\n            // Element is becoming visible. We need to force update.\r\n            this._setRecalc(1 + 128);\r\n        } else {\r\n            this._setRecalc(1);\r\n        }\r\n\r\n        if (a < 1e-14) {\r\n            // Tiny rounding errors may cause failing visibility tests.\r\n            a = 0;\r\n        }\r\n\r\n        this._localAlpha = a;\r\n    };\r\n\r\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\r\n        // In case of an estimation, the update loop should perform different bound checks.\r\n        this._dimsUnknown = isEstimate;\r\n\r\n        if (this.hasFlexLayout()) {\r\n            this._layout.originalWidth = w;\r\n            this._layout.originalHeight = h;\r\n        } else {\r\n            if (this._w !== w || this._h !== h) {\r\n                this._updateDimensions(w, h);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    _updateDimensions(w, h) {\r\n        if (this._w !== w || this._h !== h) {\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._triggerRecalcTranslate();\r\n\r\n            if (this._texturizer) {\r\n                this._texturizer.releaseRenderTexture();\r\n                this._texturizer.updateResultTexture();\r\n            }\r\n            // Due to width/height change: update the translation vector.\r\n            this._updateLocalTranslate();\r\n        }\r\n    }\r\n\r\n    setTextureCoords(ulx, uly, brx, bry) {\r\n        this.setHasRenderUpdates(3);\r\n\r\n        this._ulx = ulx;\r\n        this._uly = uly;\r\n        this._brx = brx;\r\n        this._bry = bry;\r\n    };\r\n\r\n    get displayedTextureSource() {\r\n        return this._displayedTextureSource;\r\n    }\r\n\r\n    setDisplayedTextureSource(textureSource) {\r\n        this.setHasRenderUpdates(3);\r\n        this._displayedTextureSource = textureSource;\r\n    };\r\n\r\n    get isRoot() {\r\n        return this._isRoot;\r\n    }\r\n\r\n    setAsRoot() {\r\n        // Use parent dummy.\r\n        this._parent = new ElementCore(this._element);\r\n\r\n        // After setting root, make sure it's updated.\r\n        this._parent._hasRenderUpdates = 3;\r\n        this._parent._hasUpdates = true;\r\n\r\n        // Root is, and will always be, the primary zContext.\r\n        this._isRoot = true;\r\n\r\n        this.ctx.root = this;\r\n\r\n        // Set scissor area of 'fake parent' to stage's viewport.\r\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\r\n        this._parent._scissor = this._parent._viewport;\r\n\r\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\r\n        this._parent._recBoundsMargin = null;\r\n\r\n        this._setRecalc(1 + 2 + 4);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while (p = p._parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    isZContext() {\r\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\r\n    };\r\n\r\n    findZContext() {\r\n        if (this.isZContext()) {\r\n            return this;\r\n        } else {\r\n            return this._parent.findZContext();\r\n        }\r\n    };\r\n\r\n    setZParent(newZParent) {\r\n        if (this._zParent !== newZParent) {\r\n            if (this._zParent !== null) {\r\n                if (this._zIndex !== 0) {\r\n                    this._zParent.decZContextUsage();\r\n                }\r\n\r\n                // We must filter out this item upon the next resort.\r\n                this._zParent.enableZSort();\r\n            }\r\n\r\n            if (newZParent !== null) {\r\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\r\n\r\n                // @pre: new parent's children array has already been modified.\r\n                if (this._zIndex !== 0) {\r\n                    newZParent.incZContextUsage();\r\n                }\r\n\r\n                if (newZParent._zContextUsage > 0) {\r\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\r\n                        // This child was already in the children list.\r\n                        // Do not add double.\r\n                    } else {\r\n                        // Add new child to array.\r\n                        newZParent._zIndexedChildren.push(this);\r\n                    }\r\n\r\n                    // Order should be checked.\r\n                    newZParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            this._zParent = newZParent;\r\n\r\n            // Newly added element must be marked for resort.\r\n            this._zIndexResort = true;\r\n        }\r\n    };\r\n\r\n    incZContextUsage() {\r\n        this._zContextUsage++;\r\n        if (this._zContextUsage === 1) {\r\n            if (!this._zIndexedChildren) {\r\n                this._zIndexedChildren = [];\r\n            }\r\n            if (this._children) {\r\n                // Copy.\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._zIndexedChildren.push(this._children[i]);\r\n                }\r\n                // Initially, children are already sorted properly (tree order).\r\n                this._zSort = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    decZContextUsage() {\r\n        this._zContextUsage--;\r\n        if (this._zContextUsage === 0) {\r\n            this._zSort = false;\r\n            this._zIndexedChildren.splice(0);\r\n        }\r\n    };\r\n\r\n    get zIndex() {\r\n        return this._zIndex;\r\n    }\r\n\r\n    set zIndex(zIndex) {\r\n        if (this._zIndex !== zIndex) {\r\n            this.setHasRenderUpdates(1);\r\n\r\n            let newZParent = this._zParent;\r\n\r\n            let prevIsZContext = this.isZContext();\r\n            if (zIndex === 0 && this._zIndex !== 0) {\r\n                if (this._parent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.decZContextUsage();\r\n                    }\r\n                } else {\r\n                    newZParent = this._parent;\r\n                }\r\n            } else if (zIndex !== 0 && this._zIndex === 0) {\r\n                newZParent = this._parent ? this._parent.findZContext() : null;\r\n                if (newZParent === this._zParent) {\r\n                    if (this._zParent) {\r\n                        this._zParent.incZContextUsage();\r\n                        this._zParent.enableZSort();\r\n                    }\r\n                }\r\n            } else if (zIndex !== this._zIndex) {\r\n                if (this._zParent && this._zParent._zContextUsage) {\r\n                    this._zParent.enableZSort();\r\n                }\r\n            }\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(null);\r\n            }\r\n\r\n            this._zIndex = zIndex;\r\n\r\n            if (newZParent !== this._zParent) {\r\n                this.setZParent(newZParent);\r\n            }\r\n\r\n            if (prevIsZContext !== this.isZContext()) {\r\n                if (!this.isZContext()) {\r\n                    this.disableZContext();\r\n                } else {\r\n                    this.enableZContext(this._parent.findZContext());\r\n                }\r\n            }\r\n\r\n            // Make sure that resort is done.\r\n            this._zIndexResort = true;\r\n            if (this._zParent) {\r\n                this._zParent.enableZSort();\r\n            }\r\n        }\r\n    };\r\n\r\n    get forceZIndexContext() {\r\n        return this._forceZIndexContext;\r\n    }\r\n\r\n    set forceZIndexContext(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevIsZContext = this.isZContext();\r\n        this._forceZIndexContext = v;\r\n\r\n        if (prevIsZContext !== this.isZContext()) {\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            } else {\r\n                this.enableZContext(this._parent.findZContext());\r\n            }\r\n        }\r\n    };\r\n\r\n    enableZContext(prevZContext) {\r\n        if (prevZContext && prevZContext._zContextUsage > 0) {\r\n            // Transfer from upper z context to this z context.\r\n            const results = this._getZIndexedDescs();\r\n            results.forEach((c) => {\r\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\r\n                    c.setZParent(this);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getZIndexedDescs() {\r\n        const results = [];\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    _getZIndexedDescsRec(results) {\r\n        if (this._zIndex) {\r\n            results.push(this);\r\n        } else if (this._children && !this.isZContext()) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[i]._getZIndexedDescsRec(results);\r\n            }\r\n        }\r\n    }\r\n\r\n    disableZContext() {\r\n        // Transfer from this z context to upper z context.\r\n        if (this._zContextUsage > 0) {\r\n            let newZParent = this._parent.findZContext();\r\n\r\n            // Make sure that z-indexed children are up to date (old ones removed).\r\n            if (this._zSort) {\r\n                this.sortZIndexedChildren();\r\n            }\r\n\r\n            this._zIndexedChildren.slice().forEach(function (c) {\r\n                if (c._zIndex !== 0) {\r\n                    c.setZParent(newZParent);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    get ignoreRTL() {\r\n        return this._ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this._ignoreRTL = v;\r\n    }\r\n\r\n    get colorUl() {\r\n        return this._colorUl;\r\n    }\r\n\r\n    set colorUl(color) {\r\n        if (this._colorUl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUl = color;\r\n        }\r\n    }\r\n\r\n    get colorUr() {\r\n        return this._colorUr;\r\n    }\r\n\r\n    set colorUr(color) {\r\n        if (this._colorUr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorUr = color;\r\n        }\r\n    };\r\n\r\n    get colorBl() {\r\n        return this._colorBl;\r\n    }\r\n\r\n    set colorBl(color) {\r\n        if (this._colorBl !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBl = color;\r\n        }\r\n    };\r\n\r\n    get colorBr() {\r\n        return this._colorBr;\r\n    }\r\n\r\n    set colorBr(color) {\r\n        if (this._colorBr !== color) {\r\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\r\n            this._colorBr = color;\r\n        }\r\n    };\r\n\r\n\r\n    set onUpdate(f) {\r\n        this._onUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this._onAfterUpdate = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this._onAfterCalcs = f;\r\n        this._setRecalc(7);\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        this.setHasRenderUpdates(1);\r\n\r\n        let prevShader = this._shader;\r\n        this._shader = v;\r\n        if (!v && prevShader) {\r\n            // Disabled shader.\r\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\r\n            this._setShaderOwnerRecursive(newShaderOwner);\r\n        } else if (v) {\r\n            // Enabled shader.\r\n            this._setShaderOwnerRecursive(this);\r\n        }\r\n    }\r\n\r\n    get activeShader() {\r\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\r\n    }\r\n\r\n    get activeShaderOwner() {\r\n        return this._shaderOwner;\r\n    }\r\n\r\n    get clipping() {\r\n        return this._clipping;\r\n    }\r\n\r\n    set clipping(v) {\r\n        if (this._clipping !== v) {\r\n            this._clipping = v;\r\n\r\n            // Force update of scissor by updating translate.\r\n            // Alpha must also be updated because the scissor area may have been empty.\r\n            this._setRecalc(1 + 2);\r\n        }\r\n    }\r\n\r\n    get clipbox() {\r\n        return this._clipbox;\r\n    }\r\n\r\n    set clipbox(v) {\r\n        // In case of out-of-bounds element, all children will also be ignored.\r\n        // It will save us from executing the update/render loops for those.\r\n        // The optimization will be used immediately during the next frame.\r\n        this._clipbox = v;\r\n    }\r\n\r\n    _setShaderOwnerRecursive(elementCore) {\r\n        this._shaderOwner = elementCore;\r\n\r\n        if (this._children && !this._renderToTextureEnabled) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setShaderOwnerChildrenRecursive(elementCore) {\r\n        if (this._children) {\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                let c = this._children[i];\r\n                if (!c._shader) {\r\n                    c._setShaderOwnerRecursive(elementCore);\r\n                    c._hasRenderUpdates = 3;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _hasRenderContext() {\r\n        return this._renderContext !== this._worldContext;\r\n    }\r\n\r\n    get renderContext() {\r\n        return this._renderContext;\r\n    }\r\n\r\n    updateRenderToTextureEnabled() {\r\n        // Enforce texturizer initialisation.\r\n        let v = this.texturizer._enabled;\r\n\r\n        if (v) {\r\n            this._enableRenderToTexture();\r\n        } else {\r\n            this._disableRenderToTexture();\r\n            this._texturizer.releaseRenderTexture();\r\n        }\r\n    }\r\n\r\n    _enableRenderToTexture() {\r\n        if (!this._renderToTextureEnabled) {\r\n            let prevIsZContext = this.isZContext();\r\n\r\n            this._renderToTextureEnabled = true;\r\n\r\n            this._renderContext = new ElementCoreContext();\r\n\r\n            // If render to texture is active, a new shader context is started.\r\n            this._setShaderOwnerChildrenRecursive(null);\r\n\r\n            if (!prevIsZContext) {\r\n                // Render context forces z context.\r\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\r\n            }\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.render = this._renderAdvanced;\r\n        }\r\n    }\r\n\r\n    _disableRenderToTexture() {\r\n        if (this._renderToTextureEnabled) {\r\n            this._renderToTextureEnabled = false;\r\n\r\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\r\n\r\n            this._renderContext = this._worldContext;\r\n\r\n            if (!this.isZContext()) {\r\n                this.disableZContext();\r\n            }\r\n\r\n            // Make sure that the render coordinates get updated.\r\n            this._setRecalc(7);\r\n\r\n            this.setHasRenderUpdates(3);\r\n\r\n            this.render = this._renderSimple;\r\n        }\r\n    }\r\n\r\n    isWhite() {\r\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\r\n    }\r\n\r\n    hasSimpleTexCoords() {\r\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\r\n    }\r\n\r\n    _stashTexCoords() {\r\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\r\n        this._ulx = 0;\r\n        this._uly = 0;\r\n        this._brx = 1;\r\n        this._bry = 1;\r\n    }\r\n\r\n    _unstashTexCoords() {\r\n        this._ulx = this._stashedTexCoords[0];\r\n        this._uly = this._stashedTexCoords[1];\r\n        this._brx = this._stashedTexCoords[2];\r\n        this._bry = this._stashedTexCoords[3];\r\n        this._stashedTexCoords = null;\r\n    }\r\n\r\n    _stashColors() {\r\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\r\n        this._colorUl = 0xFFFFFFFF;\r\n        this._colorUr = 0xFFFFFFFF;\r\n        this._colorBr = 0xFFFFFFFF;\r\n        this._colorBl = 0xFFFFFFFF;\r\n    }\r\n\r\n    _unstashColors() {\r\n        this._colorUl = this._stashedColors[0];\r\n        this._colorUr = this._stashedColors[1];\r\n        this._colorBr = this._stashedColors[2];\r\n        this._colorBl = this._stashedColors[3];\r\n        this._stashedColors = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return (this._localAlpha > 1e-14);\r\n    };\r\n\r\n    get outOfBounds() {\r\n        return this._outOfBounds;\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n\r\n        /**\r\n         *  null: inherit from parent.\r\n         *  number[4]: specific margins: left, top, right, bottom.\r\n         */\r\n        this._boundsMargin = v ? v.slice() : null;\r\n\r\n        // We force recalc in order to set all boundsMargin recursively during the next update.\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this._boundsMargin;\r\n    }\r\n\r\n    update() {\r\n        this._recalc |= this._parent._pRecalc;\r\n\r\n        if (this._layout && this._layout.isEnabled()) {\r\n            if (this._recalc & 256) {\r\n                this._layout.layoutFlexTree();\r\n            }\r\n        } else if ((this._recalc & 2) && this._optFlags) {\r\n            this._applyRelativeDimFuncs();\r\n        }\r\n\r\n        if (this._onUpdate) {\r\n            // Block all 'upwards' updates when changing things in this branch.\r\n            this._hasUpdates = true;\r\n            this._onUpdate(this.element, this);\r\n        }\r\n\r\n        const pw = this._parent._worldContext;\r\n        let w = this._worldContext;\r\n        const visible = (pw.alpha && this._localAlpha);\r\n\r\n        /**\r\n         * We must update if:\r\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\r\n         * - there are (inherited) updates and this branch is visible\r\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\r\n         */\r\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\r\n            let recalc = this._recalc;\r\n\r\n            // Update world coords/alpha.\r\n            if (recalc & 1) {\r\n                if (!w.alpha && visible) {\r\n                    // Becomes visible.\r\n                    this._hasRenderUpdates = 3;\r\n                }\r\n                w.alpha = pw.alpha * this._localAlpha;\r\n\r\n                if (w.alpha < 1e-14) {\r\n                    // Tiny rounding errors may cause failing visibility tests.\r\n                    w.alpha = 0;\r\n                }\r\n            }\r\n\r\n            if (recalc & 6) {\r\n                let calculatedX = this._localPx;\r\n                if (window.isRTL && !this._ignoreRTL) {\r\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\r\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                }\r\n\r\n                w.px = pw.px + calculatedX * pw.ta;\r\n                w.py = pw.py + this._localPy * pw.td;\r\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\r\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\r\n            }\r\n\r\n            if (recalc & 4) {\r\n                w.ta = this._localTa * pw.ta;\r\n                w.tb = this._localTd * pw.tb;\r\n                w.tc = this._localTa * pw.tc;\r\n                w.td = this._localTd * pw.td;\r\n\r\n                if (this._isComplex) {\r\n                    w.ta += this._localTc * pw.tb;\r\n                    w.tb += this._localTb * pw.ta;\r\n                    w.tc += this._localTc * pw.td;\r\n                    w.td += this._localTb * pw.tc;\r\n                }\r\n            }\r\n\r\n            // Update render coords/alpha.\r\n            const pr = this._parent._renderContext;\r\n            if (this._parent._hasRenderContext()) {\r\n                const init = this._renderContext === this._worldContext;\r\n                if (init) {\r\n                    // First render context build: make sure that it is fully initialized correctly.\r\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\r\n                    this._renderContext = new ElementCoreContext();\r\n                }\r\n\r\n                const r = this._renderContext;\r\n\r\n                // Update world coords/alpha.\r\n                if (init || (recalc & 1)) {\r\n                    r.alpha = pr.alpha * this._localAlpha;\r\n\r\n                    if (r.alpha < 1e-14) {\r\n                        r.alpha = 0;\r\n                    }\r\n                }\r\n\r\n                if (init || (recalc & 6)) {\r\n                    let calculatedX = this._localPx;\r\n                    if (window.isRTL && !this._ignoreRTL) {\r\n                      const parentW = this._element.__parent\r\n                        ? this._parent.w || 0\r\n                        : this.ctx.stage.getOption(\"w\");\r\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\r\n                    }\r\n                    \r\n                    r.px = pr.px + calculatedX * pr.ta;\r\n                    r.py = pr.py + this._localPy * pr.td;\r\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\r\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\r\n                }\r\n\r\n                if (init) {\r\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\r\n                    recalc |= 2;\r\n                }\r\n\r\n                if (init || (recalc & 4)) {\r\n                    r.ta = this._localTa * pr.ta;\r\n                    r.tb = this._localTd * pr.tb;\r\n                    r.tc = this._localTa * pr.tc;\r\n                    r.td = this._localTd * pr.td;\r\n\r\n                    if (this._isComplex) {\r\n                        r.ta += this._localTc * pr.tb;\r\n                        r.tb += this._localTb * pr.ta;\r\n                        r.tc += this._localTc * pr.td;\r\n                        r.td += this._localTb * pr.tc;\r\n                    }\r\n                }\r\n            } else {\r\n                this._renderContext = this._worldContext;\r\n            }\r\n\r\n            if (this.ctx.updateTreeOrder === -1) {\r\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\r\n            } else {\r\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n            }\r\n\r\n            // Determine whether we must use a 'renderTexture'.\r\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\r\n            if (this._useRenderToTexture !== useRenderToTexture) {\r\n                // Coords must be changed.\r\n                this._recalc |= 2 + 4;\r\n\r\n                // Scissor may change: force update.\r\n                recalc |= 2;\r\n\r\n                if (!this._useRenderToTexture) {\r\n                    // We must release the texture.\r\n                    this._texturizer.release();\r\n                }\r\n            }\r\n            this._useRenderToTexture = useRenderToTexture;\r\n\r\n            const r = this._renderContext;\r\n\r\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\r\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\r\n\r\n            // Calculate a bbox for this element.\r\n            let sx, sy, ex, ey;\r\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\r\n            if (rComplex) {\r\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n            } else {\r\n                sx = r.px;\r\n                ex = r.px + r.ta * bboxW;\r\n                sy = r.py;\r\n                ey = r.py + r.td * bboxH;\r\n            }\r\n\r\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\r\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\r\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                if (nx < sx) sx = nx;\r\n                if (ny < sy) sy = ny;\r\n                if (nx > ex) ex = nx;\r\n                if (ny > ey) ey = ny;\r\n            }\r\n\r\n            if (recalc & 6 || !this._scissor /* initial */) {\r\n                // Determine whether we must 'clip'.\r\n                if (this._clipping && r.isSquare()) {\r\n                    // If the parent renders to a texture, it's scissor should be ignored;\r\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                    if (area) {\r\n                        // Merge scissor areas.\r\n                        const lx = Math.max(area[0], sx);\r\n                        const ly = Math.max(area[1], sy);\r\n                        this._scissor = [\r\n                            lx,\r\n                            ly,\r\n                            Math.min(area[2] + area[0], ex) - lx,\r\n                            Math.min(area[3] + area[1], ey) - ly\r\n                        ];\r\n                    } else {\r\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\r\n                    }\r\n                } else {\r\n                    // No clipping: reuse parent scissor.\r\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\r\n                }\r\n            }\r\n\r\n            // Calculate the outOfBounds margin.\r\n            if (this._boundsMargin) {\r\n                this._recBoundsMargin = this._boundsMargin;\r\n            } else {\r\n                this._recBoundsMargin = this._parent._recBoundsMargin;\r\n            }\r\n\r\n            if (this._onAfterCalcs) {\r\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\r\n                if (this._onAfterCalcs(this.element)) {\r\n                    // Recalculate bbox.\r\n                    if (rComplex) {\r\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\r\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\r\n                    } else {\r\n                        sx = r.px;\r\n                        ex = r.px + r.ta * bboxW;\r\n                        sy = r.py;\r\n                        ey = r.py + r.td * bboxH;\r\n                    }\r\n\r\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\r\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\r\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\r\n                        if (nx < sx) sx = nx;\r\n                        if (ny < sy) sy = ny;\r\n                        if (nx > ex) ex = nx;\r\n                        if (ny > ey) ey = ny;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._parent._outOfBounds === 2) {\r\n                // Inherit parent out of boundsness.\r\n                this._outOfBounds = 2;\r\n\r\n                if (this._withinBoundsMargin) {\r\n                    this._withinBoundsMargin = false;\r\n                    this.element._disableWithinBoundsMargin();\r\n                }\r\n            } else {\r\n                if (recalc & 6) {\r\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\r\n                    this._outOfBounds = 0;\r\n                    let withinMargin = true;\r\n\r\n                    // Offscreens are always rendered as long as the parent is within bounds.\r\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\r\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\r\n                            // Empty scissor area.\r\n                            this._outOfBounds = 2;\r\n                        } else {\r\n                            // Use bbox to check out-of-boundness.\r\n                            if ((this._scissor[0] > ex) ||\r\n                                (this._scissor[1] > ey) ||\r\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\r\n                                (sy > (this._scissor[1] + this._scissor[3]))\r\n                            ) {\r\n                                this._outOfBounds = 1;\r\n                            }\r\n\r\n                            if (this._outOfBounds) {\r\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\r\n                                    this._outOfBounds = 2;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        withinMargin = (this._outOfBounds === 0);\r\n                        if (!withinMargin) {\r\n                            // Re-test, now with margins.\r\n                            if (this._recBoundsMargin) {\r\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\r\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\r\n                            } else {\r\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\r\n                                    (ey < this._scissor[1] - 100) ||\r\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\r\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\r\n                            }\r\n                            if (withinMargin && this._outOfBounds === 2) {\r\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\r\n                                this._outOfBounds = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this._withinBoundsMargin !== withinMargin) {\r\n                        this._withinBoundsMargin = withinMargin;\r\n\r\n                        if (this._withinBoundsMargin) {\r\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\r\n\r\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\r\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\r\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\r\n                            // _recalc directly.\r\n\r\n                            // Changes in descendants are automatically executed within the current update loop, though we must\r\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\r\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\r\n                            this._hasUpdates = true;\r\n\r\n                            const recalc = this._recalc;\r\n                            this._recalc = 0;\r\n                            this.element._enableWithinBoundsMargin();\r\n\r\n                            if (this._recalc) {\r\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\r\n                                return this.update();\r\n                            }\r\n\r\n                            this._recalc = recalc;\r\n                        } else {\r\n                            this.element._disableWithinBoundsMargin();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                // Set viewport necessary for children scissor calculation.\r\n                if (this._viewport) {\r\n                    this._viewport[2] = bboxW;\r\n                    this._viewport[3] = bboxH;\r\n                } else {\r\n                    this._viewport = [0, 0, bboxW, bboxH];\r\n                }\r\n            }\r\n\r\n            // Filter out bits that should not be copied to the children (currently all are).\r\n            this._pRecalc = (this._recalc & 135);\r\n\r\n            // Clear flags so that future updates are properly detected.\r\n            this._recalc = 0;\r\n            this._hasUpdates = false;\r\n\r\n            if (this._outOfBounds < 2) {\r\n                if (this._useRenderToTexture) {\r\n                    if (this._worldContext.isIdentity()) {\r\n                        // Optimization.\r\n                        // The world context is already identity: use the world context as render context to prevents the\r\n                        // ancestors from having to update the render context.\r\n                        this._renderContext = this._worldContext;\r\n                    } else {\r\n                        // Temporarily replace the render coord attribs by the identity matrix.\r\n                        // This allows the children to calculate the render context.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n                    }\r\n                }\r\n\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        this._children[i].update();\r\n                    }\r\n                }\r\n\r\n                if (this._useRenderToTexture) {\r\n                    this._renderContext = r;\r\n                }\r\n            } else {\r\n                if (this._children) {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._hasUpdates) {\r\n                            this._children[i].update();\r\n                        } else {\r\n                            // Make sure we don't lose the 'inherited' updates.\r\n                            this._children[i]._recalc |= this._pRecalc;\r\n                            this._children[i].updateOutOfBounds();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._onAfterUpdate) {\r\n                this._onAfterUpdate(this.element);\r\n            }\r\n        } else {\r\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\r\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\r\n                this.ctx.updateTreeOrder = -1;\r\n            } else {\r\n                this.updateTreeOrder();\r\n            }\r\n        }\r\n    }\r\n\r\n    _applyRelativeDimFuncs() {\r\n        if (this._optFlags & 1) {\r\n            const x = this._funcX(this._parent.w);\r\n            if (x !== this._x) {\r\n                this._localPx += (x - this._x);\r\n                this._x = x;\r\n            }\r\n        }\r\n        if (this._optFlags & 2) {\r\n            const y = this._funcY(this._parent.h);\r\n            if (y !== this._y) {\r\n                this._localPy += (y - this._y);\r\n                this._y = y;\r\n            }\r\n        }\r\n\r\n        let changedDims = false;\r\n        if (this._optFlags & 4) {\r\n            const w = this._funcW(this._parent.w);\r\n            if (w !== this._w) {\r\n                this._w = w;\r\n                changedDims = true;\r\n            }\r\n        }\r\n        if (this._optFlags & 8) {\r\n            const h = this._funcH(this._parent.h);\r\n            if (h !== this._h) {\r\n                this._h = h;\r\n                changedDims = true;\r\n            }\r\n        }\r\n\r\n        if (changedDims) {\r\n            // Recalc mount, scale position.\r\n            this._recalcLocalTranslate();\r\n\r\n            this.element.onDimensionsChanged(this._w, this._h);\r\n        }\r\n    }\r\n\r\n    updateOutOfBounds() {\r\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\r\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\r\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\r\n\r\n            // Inherit parent out of boundsness.\r\n            this._outOfBounds = 2;\r\n\r\n            if (this._withinBoundsMargin) {\r\n                this._withinBoundsMargin = false;\r\n                this.element._disableWithinBoundsMargin();\r\n            }\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateOutOfBounds();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateTreeOrder() {\r\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\r\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\r\n\r\n            if (this._children) {\r\n                for (let i = 0, n = this._children.length; i < n; i++) {\r\n                    this._children[i].updateTreeOrder();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderSimple() {\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                renderState.setShader(this.activeShader, this._shaderOwner);\r\n                renderState.setScissor(this._scissor);\r\n                this.renderState.addQuad(this);\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderAdvanced() {\r\n        const hasRenderUpdates = this._hasRenderUpdates;\r\n\r\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\r\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\r\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\r\n        this._hasRenderUpdates = 0;\r\n\r\n        if (this._zSort) {\r\n            this.sortZIndexedChildren();\r\n        }\r\n\r\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\r\n            let renderState = this.renderState;\r\n\r\n            let mustRenderChildren = true;\r\n            let renderTextureInfo;\r\n            let prevRenderTextureInfo;\r\n            if (this._useRenderToTexture) {\r\n                if (this._w === 0 || this._h === 0) {\r\n                    // Ignore this branch and don't draw anything.\r\n                    return;\r\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\r\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\r\n                    this.ctx.renderToTextureCount++;\r\n                    // Switch to default shader for building up the render texture.\r\n                    renderState.setShader(renderState.defaultShader, this);\r\n\r\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\r\n\r\n                    renderTextureInfo = {\r\n                        nativeTexture: null,\r\n                        offset: 0,  // Set by CoreRenderState.\r\n                        w: this._w,\r\n                        h: this._h,\r\n                        empty: true,\r\n                        cleared: false,\r\n                        ignore: false,\r\n                        cache: false\r\n                    };\r\n\r\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\r\n                        /**\r\n                         * We don't always cache render textures.\r\n                         *\r\n                         * The rule is, that caching for a specific render texture is only enabled if:\r\n                         * - There is a result texture to be updated.\r\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\r\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\r\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\r\n                         *   change while a lower one is not, that lower level will be cached instead.\r\n                         *\r\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\r\n                         * of GPU memory!\r\n                         *\r\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\r\n                         * noticable effect on performance as less render textures need to be allocated.\r\n                         */\r\n                        renderTextureInfo.cache = true;\r\n                        renderState.isCachingTexturizer = true;\r\n                    }\r\n\r\n                    if (!this._texturizer.hasResultTexture()) {\r\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\r\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\r\n                        //  render-to-texture layer.\r\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\r\n                        //  that result texture being filled.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    }\r\n\r\n                    renderState.setRenderTextureInfo(renderTextureInfo);\r\n                    renderState.setScissor(null);\r\n\r\n                    if (this._displayedTextureSource) {\r\n                        let r = this._renderContext;\r\n\r\n                        // Use an identity context for drawing the displayed texture to the render texture.\r\n                        this._renderContext = ElementCoreContext.IDENTITY;\r\n\r\n                        // Add displayed texture source in local coordinates.\r\n                        this.renderState.addQuad(this);\r\n\r\n                        this._renderContext = r;\r\n                    }\r\n                } else {\r\n                    mustRenderChildren = false;\r\n                }\r\n            } else {\r\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\r\n                    renderState.setShader(this.activeShader, this._shaderOwner);\r\n                    renderState.setScissor(this._scissor);\r\n                    this.renderState.addQuad(this);\r\n                }\r\n            }\r\n\r\n            // Also add children to the VBO.\r\n            if (mustRenderChildren && this._children) {\r\n                if (this._zContextUsage) {\r\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\r\n                        this._zIndexedChildren[i].render();\r\n                    }\r\n                } else {\r\n                    for (let i = 0, n = this._children.length; i < n; i++) {\r\n                        if (this._children[i]._zIndex === 0) {\r\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\r\n                            this._children[i].render();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._useRenderToTexture) {\r\n                let updateResultTexture = false;\r\n                if (mustRenderChildren) {\r\n                    // Finished refreshing renderTexture.\r\n                    renderState.finishedRenderTexture();\r\n\r\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\r\n                    //  render-to-texture and filtering.\r\n                    this._texturizer.empty = renderTextureInfo.empty;\r\n\r\n                    if (renderTextureInfo.empty) {\r\n                        // We ignore empty render textures and do not draw the final quad.\r\n\r\n                        // The following cleans up memory and enforces that the result texture is also cleared.\r\n                        this._texturizer.releaseRenderTexture();\r\n                    } else if (renderTextureInfo.nativeTexture) {\r\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\r\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\r\n\r\n                        renderTextureInfo.ignore = true;\r\n                    } else {\r\n                        if (this._texturizer.renderTextureReused) {\r\n                            // Quad operations must be written to a render texture actually owned.\r\n                            this._texturizer.releaseRenderTexture();\r\n                        }\r\n                        // Just create the render texture.\r\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\r\n                    }\r\n\r\n                    // Restore the parent's render texture.\r\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\r\n\r\n                    updateResultTexture = true;\r\n                }\r\n\r\n                if (!this._texturizer.empty) {\r\n                    let resultTexture = this._texturizer.getResultTexture();\r\n                    if (updateResultTexture) {\r\n                        if (resultTexture) {\r\n                            // Logging the update frame can be handy for userland.\r\n                            resultTexture.update = renderState.stage.frameCounter;\r\n                        }\r\n                        this._texturizer.updateResultTexture();\r\n                    }\r\n\r\n                    if (!this._texturizer.renderOffscreen) {\r\n                        // Render result texture to the actual render target.\r\n                        renderState.setShader(this.activeShader, this._shaderOwner);\r\n                        renderState.setScissor(this._scissor);\r\n\r\n                        // If no render texture info is set, the cache can be reused.\r\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\r\n\r\n                        renderState.setTexturizer(this._texturizer, cache);\r\n                        this._stashTexCoords();\r\n                        if (!this._texturizer.colorize) this._stashColors();\r\n                        this.renderState.addQuad(this, true);\r\n                        if (!this._texturizer.colorize) this._unstashColors();\r\n                        this._unstashTexCoords();\r\n                        renderState.setTexturizer(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (renderTextureInfo && renderTextureInfo.cache) {\r\n                // Allow siblings to cache.\r\n                renderState.isCachingTexturizer = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    get zSort() {\r\n        return this._zSort;\r\n    }\r\n\r\n    sortZIndexedChildren() {\r\n        /**\r\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\r\n         * - filtering out elements with a different zParent than this (were removed)\r\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\r\n         * - then, finally, we merge-sort both the new array and the 'old' one\r\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\r\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\r\n         */\r\n\r\n        const n = this._zIndexedChildren.length;\r\n        let ptr = 0;\r\n        const a = this._zIndexedChildren;\r\n\r\n        // Notice that items may occur multiple times due to z-index changing.\r\n        const b = [];\r\n        for (let i = 0; i < n; i++) {\r\n            if (a[i]._zParent === this) {\r\n                if (a[i]._zIndexResort) {\r\n                    b.push(a[i]);\r\n                } else {\r\n                    if (ptr !== i) {\r\n                        a[ptr] = a[i];\r\n                    }\r\n                    ptr++;\r\n                }\r\n            }\r\n        }\r\n\r\n        const m = b.length;\r\n        if (m) {\r\n            for (let j = 0; j < m; j++) {\r\n                b[j]._zIndexResort = false;\r\n            }\r\n\r\n            b.sort(ElementCore.sortZIndexedChildren);\r\n            const n = ptr;\r\n            if (!n) {\r\n                ptr = 0;\r\n                let j = 0;\r\n                do {\r\n                    a[ptr++] = b[j++];\r\n                } while (j < m);\r\n\r\n                if (a.length > ptr) {\r\n                    // Slice old (unnecessary) part off array.\r\n                    a.splice(ptr);\r\n                }\r\n            } else {\r\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\r\n+               // Beware that the function passed here to Array.sort must be stable\r\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\r\n                // Merge-sort arrays;\r\n                ptr = 0;\r\n                let i = 0;\r\n                let j = 0;\r\n                const mergeResult = [];\r\n                do {\r\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\r\n\r\n                    const add = v > 0 ? b[j++] : a[i++];\r\n\r\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                        mergeResult[ptr++] = add;\r\n                    }\r\n\r\n                    if (i >= n) {\r\n                        do {\r\n                            const add = b[j++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (j < m);\r\n                        break;\r\n                    } else if (j >= m) {\r\n                        do {\r\n                            const add = a[i++];\r\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\r\n                                mergeResult[ptr++] = add;\r\n                            }\r\n                        } while (i < n);\r\n                        break;\r\n                    }\r\n                } while (true);\r\n\r\n                this._zIndexedChildren = mergeResult;\r\n            }\r\n        } else {\r\n            if (a.length > ptr) {\r\n                // Slice old (unnecessary) part off array.\r\n                a.splice(ptr);\r\n            }\r\n        }\r\n\r\n        this._zSort = false;\r\n    };\r\n\r\n    get localTa() {\r\n        return this._localTa;\r\n    };\r\n\r\n    get localTb() {\r\n        return this._localTb;\r\n    };\r\n\r\n    get localTc() {\r\n        return this._localTc;\r\n    };\r\n\r\n    get localTd() {\r\n        return this._localTd;\r\n    };\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get renderUpdates() {\r\n        return this._hasRenderUpdates;\r\n    }\r\n\r\n    get texturizer() {\r\n        if (!this._texturizer) {\r\n            this._texturizer = new ElementTexturizer(this);\r\n        }\r\n        return this._texturizer;\r\n    }\r\n\r\n    getCornerPoints() {\r\n        let w = this._worldContext;\r\n\r\n        return [\r\n            w.px,\r\n            w.py,\r\n            w.px + this._w * w.ta,\r\n            w.py + this._w * w.tc,\r\n            w.px + this._w * w.ta + this._h * w.tb,\r\n            w.py + this._w * w.tc + this._h * w.td,\r\n            w.px + this._h * w.tb,\r\n            w.py + this._h * w.td\r\n        ];\r\n    };\r\n\r\n    getRenderTextureCoords(relX, relY) {\r\n        let r = this._renderContext;\r\n        return [\r\n            r.px + r.ta * relX + r.tb * relY,\r\n            r.py + r.tc * relX + r.td * relY\r\n        ];\r\n    }\r\n\r\n    getAbsoluteCoords(relX, relY) {\r\n        let w = this._renderContext;\r\n        return [\r\n            w.px + w.ta * relX + w.tb * relY,\r\n            w.py + w.tc * relX + w.td * relY\r\n        ];\r\n    }\r\n\r\n    collectAtCoord(x, y, children) {\r\n        // return when branch is hidden\r\n        if (this._renderContext.alpha === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.inBound(x, y)) {\r\n            if (this._scissor) {\r\n                if (this.inScissor()) {\r\n                    children.push(this);\r\n                }\r\n            } else {\r\n                children.push(this);\r\n            }\r\n        }\r\n\r\n        if (this._children) {\r\n            const j = this._children.length;\r\n            for (let i = 0; i < j; i++) {\r\n                this._children[i].collectAtCoord(x, y, children);\r\n            }\r\n        }\r\n\r\n        return children.sort(ElementCore.sortZIndexedChildren);\r\n    }\r\n\r\n    inBound(tx, ty) {\r\n        const c = this.getCornerPoints();\r\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\r\n    }\r\n\r\n    inScissor() {\r\n        const sc = this._scissor;\r\n        const c = this.getCornerPoints();\r\n\r\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\r\n    }\r\n\r\n    get layout() {\r\n        this._ensureLayout();\r\n        return this._layout;\r\n    }\r\n\r\n    get flex() {\r\n        return this._layout ? this._layout.flex : null;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.layout.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this._layout ? this._layout.flexItem : null;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.layout.flexItem = v;\r\n    }\r\n\r\n    isFlexItem() {\r\n        return !!this._layout && this._layout.isFlexItemEnabled();\r\n    }\r\n\r\n    isFlexContainer() {\r\n        return !!this._layout && this._layout.isFlexEnabled();\r\n    }\r\n\r\n    enableFlexLayout() {\r\n        this._ensureLayout();\r\n    }\r\n\r\n    _ensureLayout() {\r\n        if (!this._layout) {\r\n            this._layout = new FlexTarget(this);\r\n        }\r\n    }\r\n\r\n    disableFlexLayout() {\r\n        this._triggerRecalcTranslate();\r\n    }\r\n\r\n    hasFlexLayout() {\r\n        return (this._layout && this._layout.isEnabled());\r\n    }\r\n\r\n    setLayout(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this._updateDimensions(w, h);\r\n    }\r\n\r\n    triggerLayout() {\r\n        this._setRecalc(256);\r\n    }\r\n\r\n    _triggerRecalcTranslate() {\r\n        this._setRecalc(2);\r\n    }\r\n\r\n}\r\n\r\nclass ElementCoreContext {\r\n\r\n    constructor() {\r\n        this.alpha = 1;\r\n\r\n        this.px = 0;\r\n        this.py = 0;\r\n\r\n        this.ta = 1;\r\n        this.tb = 0;\r\n        this.tc = 0;\r\n        this.td = 1;\r\n    }\r\n\r\n    isIdentity() {\r\n        return this.alpha === 1 &&\r\n            this.px === 0 &&\r\n            this.py === 0 &&\r\n            this.ta === 1 &&\r\n            this.tb === 0 &&\r\n            this.tc === 0 &&\r\n            this.td === 1;\r\n    }\r\n\r\n    isSquare() {\r\n        return this.tb === 0 && this.tc === 0;\r\n    }\r\n\r\n}\r\n\r\nElementCoreContext.IDENTITY = new ElementCoreContext();\r\nElementCore.sortZIndexedChildren = function (a, b) {\r\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\r\n};\r\n\r\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\r\nimport Utils from \"../Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * This is a partial (and more efficient) implementation of the event emitter.\r\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\r\n * Only if there are multiple listeners, they are combined in an array.\r\n */\r\nexport default class EventEmitter {\r\n\r\n    constructor() {\r\n        // This is set (and kept) to true when events are used at all.\r\n        this._hasEventListeners = false;\r\n    }\r\n\r\n    on(name, listener) {\r\n        if (!this._hasEventListeners) {\r\n            this._eventFunction = {}\r\n            this._eventListeners = {}\r\n            this._hasEventListeners = true;\r\n        }\r\n\r\n        const current = this._eventFunction[name];\r\n        if (!current) {\r\n            this._eventFunction[name] = listener;\r\n        } else {\r\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\r\n                this._eventListeners[name] = [this._eventFunction[name], listener];\r\n                this._eventFunction[name] = EventEmitter.combiner;\r\n            } else {\r\n                this._eventListeners[name].push(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    once(name, listener) {\r\n        const wrapper = (arg1, arg2, arg3) => {\r\n            listener(arg1, arg2, arg3);\r\n            this.off(name, wrapper);\r\n        }\r\n        wrapper.__originalFunc = listener;\r\n        this.on(name, wrapper);\r\n    }\r\n\r\n    has(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    for (const l of listeners) {\r\n                        if (l === listener || l.__originalFunc == listener) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    off(name, listener) {\r\n        if (this._hasEventListeners) {\r\n            const current = this._eventFunction[name];\r\n            if (current) {\r\n                if (current === EventEmitter.combiner) {\r\n                    const listeners = this._eventListeners[name];\r\n                    let index = listeners.indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\r\n                    if (index >= 0) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                    if (listeners.length === 1) {\r\n                        this._eventFunction[name] = listeners[0];\r\n                        this._eventListeners[name] = undefined;\r\n                    }\r\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\r\n                    this._eventFunction[name] = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListener(name, listener) {\r\n        this.off(name, listener);\r\n    }\r\n\r\n    emit(name, arg1, arg2, arg3) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    func(this, name, arg1, arg2, arg3);\r\n                } else {\r\n                    func(arg1, arg2, arg3);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    listenerCount(name) {\r\n        if (this._hasEventListeners) {\r\n            const func = this._eventFunction[name];\r\n            if (func) {\r\n                if (func === EventEmitter.combiner) {\r\n                    return this._eventListeners[name].length;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    removeAllListeners(name) {\r\n        if (this._hasEventListeners) {\r\n            delete this._eventFunction[name];\r\n            delete this._eventListeners[name];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\r\n    const listeners = object._eventListeners[name];\r\n    if (listeners) {\r\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\r\n           we need to create a copy to loop over it */\r\n        for (const listener of [...listeners]) {\r\n            listener(arg1, arg2, arg3);\r\n        }\r\n    }\r\n}\r\n\r\nEventEmitter.addAsMixin = function(cls) {\r\n    cls.prototype.on = EventEmitter.prototype.on;\r\n    cls.prototype.once = EventEmitter.prototype.once;\r\n    cls.prototype.has = EventEmitter.prototype.has;\r\n    cls.prototype.off = EventEmitter.prototype.off;\r\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\r\n    cls.prototype.emit = EventEmitter.prototype.emit;\r\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\r\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nexport default class Shader {\r\n\r\n    constructor(coreContext) {\r\n        this._initialized = false;\r\n\r\n        this.ctx = coreContext;\r\n\r\n        /**\r\n         * The (enabled) elements that use this shader.\r\n         * @type {Set<ElementCore>}\r\n         */\r\n        this._elements = new Set();\r\n    }\r\n\r\n    static create(stage, v) {\r\n        let shader;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                shader = stage.renderer.createShader(stage.ctx, v);\r\n            } else {\r\n                shader = this.shader;\r\n            }\r\n\r\n            if (shader) {\r\n                Base.patchObject(shader, v);\r\n            }\r\n        } else if (v === null) {\r\n            shader = stage.ctx.renderState.defaultShader;\r\n        } else if (v === undefined) {\r\n            shader = null;\r\n        } else {\r\n            if (v.isShader) {\r\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\r\n                    console.error(\"[Lightning] Invalid shader type\");\r\n                    v = null;\r\n                }\r\n                shader = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a shader type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return undefined;\r\n    }\r\n\r\n    static getC2d() {\r\n        return undefined;\r\n    }\r\n\r\n    addElement(elementCore) {\r\n        this._elements.add(elementCore);\r\n    }\r\n\r\n    removeElement(elementCore) {\r\n        this._elements.delete(elementCore);\r\n        if (!this._elements) {\r\n            this.cleanup();\r\n        }\r\n    }\r\n\r\n    redraw() {\r\n        this._elements.forEach(elementCore => {\r\n            elementCore.setHasRenderUpdates(2);\r\n        });\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    useDefault() {\r\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\r\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\r\n        return false;\r\n    }\r\n\r\n    addEmpty() {\r\n        // Draws this shader even if there are no quads to be added.\r\n        // This is handy for custom shaders.\r\n        return false;\r\n    }\r\n\r\n    cleanup() {\r\n        // Called when no more enabled elements have this shader.\r\n    }\r\n\r\n    get isShader() {\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Texture {\r\n\r\n    /**\r\n     * @param {Stage} stage\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.manager = this.stage.textureManager;\r\n\r\n        this.id = Texture.id++;\r\n\r\n        /**\r\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\r\n         * @type {Set<Element>}\r\n         */\r\n        this.elements = new Set();\r\n\r\n        /**\r\n         * The number of enabled elements that are active.\r\n         * @type {number}\r\n         */\r\n        this._activeCount = 0;\r\n\r\n        /**\r\n         * The associated texture source.\r\n         * Should not be changed.\r\n         * @type {TextureSource}\r\n         */\r\n        this._source = null;\r\n\r\n        /**\r\n         * A resize mode can be set to cover or contain a certain area.\r\n         * It will reset the texture clipping settings.\r\n         * When manual texture clipping is performed, the resizeMode is reset.\r\n         * @type {{type: string, width: number, height: number}}\r\n         * @private\r\n         */\r\n        this._resizeMode = null;\r\n\r\n        /**\r\n         * The texture clipping x-offset.\r\n         * @type {number}\r\n         */\r\n        this._x = 0;\r\n\r\n        /**\r\n         * The texture clipping y-offset.\r\n         * @type {number}\r\n         */\r\n        this._y = 0;\r\n\r\n        /**\r\n         * The texture clipping width. If 0 then full width.\r\n         * @type {number}\r\n         */\r\n        this._w = 0;\r\n\r\n        /**\r\n         * The texture clipping height. If 0 then full height.\r\n         * @type {number}\r\n         */\r\n        this._h = 0;\r\n\r\n        /**\r\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._precision = 1;\r\n\r\n        /**\r\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mw = 0;\r\n\r\n        /**\r\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\r\n         * If not set, 2048 is used by ElementCore.update.\r\n         * @type {number}\r\n         */\r\n        this.mh = 0;\r\n\r\n        /**\r\n         * Indicates if Texture.prototype.texture uses clipping.\r\n         * @type {boolean}\r\n         */\r\n        this.clipping = false;\r\n\r\n        /**\r\n         * Indicates whether this texture must update (when it becomes used again).\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._mustUpdate = true;\r\n\r\n    }\r\n\r\n    get source() {\r\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\r\n            this._performUpdateSource(true);\r\n            this.stage.removeUpdateSourceTexture(this);\r\n        }\r\n        return this._source;\r\n    }\r\n\r\n    addElement(v) {\r\n        if (!this.elements.has(v)) {\r\n            this.elements.add(v);\r\n\r\n            if (this.elements.size === 1) {\r\n                if (this._source) {\r\n                    this._source.addTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.incActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeElement(v) {\r\n        if (this.elements.delete(v)) {\r\n            if (this.elements.size === 0) {\r\n                if (this._source) {\r\n                    this._source.removeTexture(this);\r\n                }\r\n            }\r\n\r\n            if (v.active) {\r\n                this.decActiveCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    incActiveCount() {\r\n        // Ensure that texture source's activeCount has transferred ownership.\r\n        const source = this.source;\r\n\r\n        if (source) {\r\n            this._checkForNewerReusableTextureSource();\r\n        }\r\n\r\n        this._activeCount++;\r\n        if (this._activeCount === 1) {\r\n            this.becomesUsed();\r\n        }\r\n    }\r\n\r\n    decActiveCount() {\r\n        const source = this.source; // Force updating the source.\r\n        this._activeCount--;\r\n        if (!this._activeCount) {\r\n            this.becomesUnused();\r\n        }\r\n    }\r\n\r\n    becomesUsed() {\r\n        if (this.source) {\r\n            this.source.incActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        if (this._resizeMode) {\r\n            this._applyResizeMode();\r\n        }\r\n\r\n        this.elements.forEach(element => {\r\n            if (element.active) {\r\n                element.onTextureSourceLoaded();\r\n            }\r\n        });\r\n    }\r\n\r\n    _checkForNewerReusableTextureSource() {\r\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\r\n        // In the meantime another texture may have been generated loaded with the same lookup id.\r\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\r\n        const source = this.source;\r\n        if (!source.isLoaded()) {\r\n            const reusable = this._getReusableTextureSource();\r\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\r\n                this._replaceTextureSource(reusable);\r\n            }\r\n        } else {\r\n            if (this._resizeMode) {\r\n                this._applyResizeMode();\r\n            }\r\n        }\r\n    }\r\n\r\n    becomesUnused() {\r\n        if (this.source) {\r\n            this.source.decActiveTextureCount();\r\n        }\r\n    }\r\n\r\n    isUsed() {\r\n        return this._activeCount > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\r\n     * @returns {string|null}\r\n     */\r\n    _getLookupId() {\r\n        // Default: do not reuse texture.\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\r\n     * It should return a function that receives a single callback argument.\r\n     * That callback should be called with the following arguments:\r\n     *   - err\r\n     *   - options: object\r\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\r\n     *     - w: Number\r\n     *     - h: Number\r\n     *     - permanent: Boolean\r\n     *     - hasAlpha: boolean\r\n     *     - permultiplyAlpha: boolean\r\n     *     - flipBlueRed: boolean\r\n     *     - renderInfo: object\r\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\r\n     * to stop fetching an image when it is no longer in element, for example.\r\n     */\r\n    _getSourceLoader() {\r\n        throw new Error(\"Texture.generate must be implemented.\");\r\n    }\r\n\r\n    get isValid() {\r\n        return this._getIsValid();\r\n    }\r\n\r\n    /**\r\n     * If texture is not 'valid', no source can be created for it.\r\n     * @returns {boolean}\r\n     */\r\n    _getIsValid() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This must be called when the texture source must be re-generated.\r\n     */\r\n    _changed() {\r\n        // If no element is actively using this texture, ignore it altogether.\r\n        if (this.isUsed()) {\r\n            this._updateSource();\r\n        } else {\r\n            this._mustUpdate = true;\r\n        }\r\n    }\r\n\r\n    _updateSource() {\r\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\r\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\r\n        // properties.\r\n        this.stage.addUpdateSourceTexture(this);\r\n    }\r\n\r\n    _performUpdateSource(force = false) {\r\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\r\n        // again.\r\n        if (force || this.isUsed()) {\r\n            this._mustUpdate = false;\r\n            let source = this._getTextureSource();\r\n            this._replaceTextureSource(source);\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        let source = null;\r\n        if (this._getIsValid()) {\r\n            const lookupId = this._getLookupId();\r\n            source = this._getReusableTextureSource(lookupId);\r\n            if (!source) {\r\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n\r\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\r\n        if (this._getIsValid()) {\r\n            if (lookupId) {\r\n                return this.manager.getReusableTextureSource(lookupId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    _replaceTextureSource(newSource = null) {\r\n        let oldSource = this._source;\r\n\r\n        this._source = newSource;\r\n\r\n        if (this.elements.size) {\r\n            if (oldSource) {\r\n                if (this._activeCount) {\r\n                    oldSource.decActiveTextureCount();\r\n                }\r\n\r\n                oldSource.removeTexture(this);\r\n\r\n                // free up unused TextTextures immediately as they are not reused anyway\r\n                if(this['text'] && !oldSource.isUsed()) {\r\n                    this.manager.freeTextureSource(oldSource);\r\n                }\r\n            }\r\n\r\n            if (newSource) {\r\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\r\n                newSource.addTexture(this);\r\n                if (this._activeCount) {\r\n                    newSource.incActiveTextureCount();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isUsed()) {\r\n            if (newSource) {\r\n                if (newSource.isLoaded()) {\r\n\r\n                    // Apply resizeMode\r\n                    if (this._resizeMode) {\r\n                        this._applyResizeMode();\r\n                    }\r\n\r\n                    this.elements.forEach(element => {\r\n                        if (element.active) {\r\n                            element._setDisplayedTexture(this);\r\n                        }\r\n                    });\r\n                } else {\r\n                    const loadError = newSource.loadError;\r\n                    if (loadError) {\r\n                        this.elements.forEach(element => {\r\n                            if (element.active) {\r\n                                element.onTextureSourceLoadError(loadError);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                this.elements.forEach(element => {\r\n                    if (element.active) {\r\n                        element._setDisplayedTexture(null);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    load() {\r\n        // Make sure that source is up to date.\r\n        if (this.source) {\r\n            if (!this.isLoaded()) {\r\n                this.source.load(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._source && this._source.isLoaded();\r\n    }\r\n\r\n    get loadError() {\r\n        return this._source && this._source.loadError;\r\n    }\r\n\r\n    free() {\r\n        if (this._source) {\r\n            this._source.free();\r\n        }\r\n    }\r\n\r\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\r\n        this._resizeMode = {type, w, h, clipX, clipY};\r\n        if (this.isLoaded()) {\r\n            this._applyResizeMode();\r\n        }\r\n    }\r\n\r\n    get resizeMode() {\r\n        return this._resizeMode;\r\n    }\r\n\r\n    _clearResizeMode() {\r\n        this._resizeMode = null;\r\n    }\r\n\r\n    _applyResizeMode() {\r\n        if (this._resizeMode.type === \"cover\") {\r\n            this._applyResizeCover();\r\n        } else if (this._resizeMode.type === \"contain\") {\r\n            this._applyResizeContain();\r\n        }\r\n        this._updatePrecision();\r\n        this._updateClipping();\r\n    }\r\n\r\n    _applyResizeCover() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = Math.max(scaleX, scaleY);\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n        if (scaleX && scaleX < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.w;\r\n            const choppedOffPixels = this._source.w - desiredSize;\r\n            this._x = choppedOffPixels * this._resizeMode.clipX;\r\n            this._w = this._source.w - choppedOffPixels;\r\n        }\r\n        if (scaleY && scaleY < scale) {\r\n            const desiredSize = this._precision * this._resizeMode.h;\r\n            const choppedOffPixels = this._source.h - desiredSize;\r\n            this._y = choppedOffPixels * this._resizeMode.clipY;\r\n            this._h = this._source.h - choppedOffPixels;\r\n        }\r\n    }\r\n\r\n    _applyResizeContain() {\r\n        const scaleX = this._resizeMode.w / this._source.w;\r\n        const scaleY = this._resizeMode.h / this._source.h;\r\n        let scale = scaleX;\r\n        if (!scale || scaleY < scale) {\r\n            scale = scaleY;\r\n        }\r\n        if (!scale) return;\r\n        this._precision = 1/scale;\r\n    }\r\n\r\n    enableClipping(x, y, w, h) {\r\n        this._clearResizeMode();\r\n\r\n        x *= this._precision;\r\n        y *= this._precision;\r\n        w *= this._precision;\r\n        h *= this._precision;\r\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\r\n            this._x = x;\r\n            this._y = y;\r\n            this._w = w;\r\n            this._h = h;\r\n\r\n            this._updateClipping(true);\r\n        }\r\n    }\r\n\r\n    disableClipping() {\r\n        this._clearResizeMode();\r\n\r\n        if (this._x || this._y || this._w || this._h) {\r\n            this._x = 0;\r\n            this._y = 0;\r\n            this._w = 0;\r\n            this._h = 0;\r\n\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    _updateClipping() {\r\n        this.clipping = !!(this._x || this._y || this._w || this._h);\r\n\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onDisplayedTextureClippingChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    _updatePrecision() {\r\n        let self = this;\r\n        this.elements.forEach(function(element) {\r\n            // Ignore if not the currently displayed texture.\r\n            if (element.displayedTexture === self) {\r\n                element.onPrecisionChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let nonDefaults = {};\r\n        nonDefaults['type'] = this.constructor.name;\r\n        if (this.x !== 0) nonDefaults['x'] = this.x;\r\n        if (this.y !== 0) nonDefaults['y'] = this.y;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\r\n        return nonDefaults;\r\n    }\r\n\r\n    get px() {\r\n        return this._x;\r\n    }\r\n\r\n    get py() {\r\n        return this._y;\r\n    }\r\n\r\n    get pw() {\r\n        return this._w;\r\n    }\r\n\r\n    get ph() {\r\n        return this._h;\r\n    }\r\n\r\n    get x() {\r\n        return this._x / this._precision;\r\n    }\r\n    set x(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._x !== v) {\r\n            this._x = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get y() {\r\n        return this._y / this._precision;\r\n    }\r\n    set y(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._y !== v) {\r\n            this._y = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w / this._precision;\r\n    }\r\n\r\n    set w(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h / this._precision;\r\n    }\r\n\r\n    set h(v) {\r\n        this._clearResizeMode();\r\n        v = v * this._precision;\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._updateClipping();\r\n        }\r\n    }\r\n\r\n    get precision() {\r\n        return this._precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        this._clearResizeMode();\r\n        if (this._precision !== v) {\r\n            this._precision = v;\r\n            this._updatePrecision();\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return true;\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\r\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (!this.isAutosizeTexture()) {\r\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\r\n            return 0;\r\n        }\r\n\r\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nTexture.prototype.isTexture = true;\r\n\r\nTexture.id = 0;\r\n\r\nimport Base from \"./Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class ImageTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._src = undefined;\r\n        this._hasAlpha = false;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set src(v) {\r\n        if (this._src !== v) {\r\n            this._src = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get hasAlpha() {\r\n        return this._hasAlpha;\r\n    }\r\n\r\n    set hasAlpha(v) {\r\n        if (this._hasAlpha !== v) {\r\n            this._hasAlpha = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._src;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._src;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        let src = this._src;\r\n        let hasAlpha = this._hasAlpha;\r\n        if (this.stage.getOption('srcBasePath')) {\r\n            var fc = src.charCodeAt(0);\r\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\r\n                // Alphabetical or dot: prepend base path.\r\n                src = this.stage.getOption('srcBasePath') + src;\r\n            }\r\n        }\r\n\r\n        return (cb) => {\r\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\r\n        }\r\n    }\r\n\r\n    getNonDefaults() {\r\n        const obj = super.getNonDefaults();\r\n        if (this._src) {\r\n            obj.src = this._src;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Returns CSS font setting string for use in canvas context.\r\n *\r\n * @param fontFace\r\n * @param fontStyle\r\n * @param fontSize\r\n * @param precision\r\n * @param defaultFontFace\r\n * @returns\r\n */\r\nexport function getFontSetting(\r\n    fontFace: string | string[],\r\n    fontStyle: string,\r\n    fontSize: number,\r\n    precision: number,\r\n    defaultFontFace: string\r\n): string {\r\n    let ff = fontFace;\r\n\r\n    if (!Array.isArray(ff)) {\r\n        ff = [ff];\r\n    }\r\n\r\n    let ffs = [];\r\n    for (let i = 0, n = ff.length; i < n; i++) {\r\n        let curFf = ff[i];\r\n        // Replace the default font face `null` with the actual default font face set\r\n        // on the stage.\r\n        if (curFf === null) {\r\n            curFf = defaultFontFace;\r\n        }\r\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\r\n            ffs.push(curFf);\r\n        } else {\r\n            ffs.push(`\"${curFf}\"`);\r\n        }\r\n    }\r\n\r\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space.\r\n *\r\n * @param space\r\n */\r\nexport function isZeroWidthSpace(space: string): boolean {\r\n    return space === '' || space === '\\u200B';\r\n}\r\n\r\n/**\r\n * Returns true if the given character is a zero-width space or a regular space.\r\n *\r\n * @param space\r\n */\r\nexport function isSpace(space: string): boolean {\r\n    return isZeroWidthSpace(space) || space === ' ';\r\n}\r\n\r\n/**\r\n * Converts a string into an array of tokens and the words between them.\r\n *\r\n * @param tokenRegex\r\n * @param text\r\n */\r\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\r\n    const delimeters = text.match(tokenRegex) || [];\r\n    const words = text.split(tokenRegex) || [];\r\n\r\n    let final: string[] = [];\r\n    for (let i = 0; i < words.length; i++) {\r\n        final.push(words[i]!, delimeters[i]!)\r\n    }\r\n    final.pop()\r\n    return final.filter((word) => word != '');\r\n}\r\n\r\n/**\r\n * Measure the width of a string accounting for letter spacing.\r\n *\r\n * @param context\r\n * @param word\r\n * @param space\r\n */\r\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\r\n    if (!space) {\r\n        return context.measureText(word).width;\r\n    }\r\n    return word.split('').reduce((acc, char) => {\r\n        // Zero-width spaces should not include letter spacing.\r\n        // And since we know the width of a zero-width space is 0, we can skip\r\n        // measuring it.\r\n        if (isZeroWidthSpace(char)) {\r\n            return acc;\r\n        }\r\n        return acc + context.measureText(char).width + space;\r\n    }, 0);\r\n}\r\n\r\nexport interface WrapTextResult {\r\n    l: string[];\r\n    n: number[];\r\n}\r\n\r\n/**\r\n * Applies newlines to a string to have it optimally fit into the horizontal\r\n * bounds set by the Text object's wordWrapWidth property.\r\n *\r\n * @param context\r\n * @param text\r\n * @param wordWrapWidth\r\n * @param letterSpacing\r\n * @param indent\r\n */\r\nexport function wrapText(\r\n    context: CanvasRenderingContext2D,\r\n    text: string,\r\n    wordWrapWidth: number,\r\n    letterSpacing: number,\r\n    indent: number\r\n): WrapTextResult {\r\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\r\n    // than its horizontal bounds.\r\n    const spaceRegex = / |\\u200B/g;\r\n    let lines = text.split(/\\r?\\n/g);\r\n    let allLines: string[] = [];\r\n    let realNewlines: number[] = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        let resultLines: string[] = [];\r\n        let result = '';\r\n        let spaceLeft = wordWrapWidth - indent;\r\n        let words = lines[i]!.split(spaceRegex);\r\n        let spaces = lines[i]!.match(spaceRegex) || [];\r\n        for (let j = 0; j < words.length; j++) {\r\n            const space = spaces[j - 1] || '';\r\n            const word = words[j]!;\r\n            const wordWidth = measureText(context, word, letterSpacing);\r\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\r\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\r\n                // Skip printing the newline if it's the first word of the line that is.\r\n                // greater than the word wrap width.\r\n                if (j > 0) {\r\n                    resultLines.push(result);\r\n                    result = '';\r\n                }\r\n                result += word;\r\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\r\n            }\r\n            else {\r\n                spaceLeft -= wordWidthWithSpace;\r\n                result += space + word;\r\n            }\r\n        }\r\n\r\n        resultLines.push(result);\r\n        result = '';\r\n\r\n        allLines = allLines.concat(resultLines);\r\n\r\n        if (i < lines.length - 1) {\r\n            realNewlines.push(allLines.length);\r\n        }\r\n    }\r\n\r\n    return {l: allLines, n: realNewlines};\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRenderer {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        this._context.font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('[Lightning] Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('[Lightning] Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        let lineHeight = this._settings.lineHeight * precision;\r\n        const w = this._settings.w * precision;\r\n        const h = this._settings.h * precision;\r\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\r\n        const textIndent = this._settings.textIndent * precision;\r\n\r\n        // Set font properties.\r\n        this.setFontProperties();\r\n\r\n        // Total width.\r\n        let width = w || this._stage.getOption('w');\r\n\r\n        // Inner width.\r\n        let innerWidth = width - (paddingLeft);\r\n        if (innerWidth < 10) {\r\n            width += (10 - innerWidth);\r\n            innerWidth = 10;\r\n        }\r\n\r\n        if (!wordWrapWidth) {\r\n            wordWrapWidth = innerWidth;\r\n        }\r\n\r\n        // Text overflow\r\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\r\n        }\r\n\r\n        // word wrap\r\n        // preserve original text\r\n        let linesInfo;\r\n        if (this._settings.wordWrap) {\r\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\r\n        } else {\r\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\r\n            let i, n = linesInfo.l.length;\r\n            for (let i = 0; i < n - 1; i++) {\r\n                linesInfo.n.push(i);\r\n            }\r\n        }\r\n        let lines = linesInfo.l;\r\n\r\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\r\n            let usedLines = lines.slice(0, this._settings.maxLines);\r\n\r\n            let otherLines = null;\r\n            if (this._settings.maxLinesSuffix) {\r\n                // Wrap again with max lines suffix enabled.\r\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\r\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\r\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\r\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\r\n            } else {\r\n                otherLines = [''];\r\n            }\r\n\r\n            // Re-assemble the remaining text.\r\n            let i, n = lines.length;\r\n            let j = 0;\r\n            let m = linesInfo.n.length;\r\n            for (i = this._settings.maxLines; i < n; i++) {\r\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\r\n                if (i + 1 < m && linesInfo.n[i + 1]) {\r\n                    j++;\r\n                }\r\n            }\r\n\r\n            renderInfo.remainingText = otherLines.join(\"\\n\");\r\n\r\n            renderInfo.moreTextLines = true;\r\n\r\n            lines = usedLines;\r\n        } else {\r\n            renderInfo.moreTextLines = false;\r\n            renderInfo.remainingText = \"\";\r\n        }\r\n\r\n        // calculate text width\r\n        let maxLineWidth = 0;\r\n        let lineWidths = [];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\r\n        }\r\n\r\n        renderInfo.lineWidths = lineWidths;\r\n\r\n        if (!w) {\r\n            // Auto-set width to max text length.\r\n            width = maxLineWidth + paddingLeft + paddingRight;\r\n            innerWidth = maxLineWidth;\r\n        }\r\n\r\n        // calculate text height\r\n        lineHeight = lineHeight || fontSize;\r\n\r\n        let height;\r\n        if (h) {\r\n            height = h;\r\n        } else {\r\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\r\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\r\n        }\r\n\r\n        if (offsetY === null) {\r\n            offsetY = fontSize;\r\n        }\r\n\r\n        renderInfo.w = width;\r\n        renderInfo.h = height;\r\n        renderInfo.lines = lines;\r\n        renderInfo.precision = precision;\r\n\r\n        if (!width) {\r\n            // To prevent canvas errors.\r\n            width = 1;\r\n        }\r\n\r\n        if (!height) {\r\n            // To prevent canvas errors.\r\n            height = 1;\r\n        }\r\n\r\n        if (cutSx || cutEx) {\r\n            width = Math.min(width, cutEx - cutSx);\r\n        }\r\n\r\n        if (cutSy || cutEy) {\r\n            height = Math.min(height, cutEy - cutSy);\r\n        }\r\n\r\n        renderInfo.width = width;\r\n        renderInfo.innerWidth = innerWidth;\r\n        renderInfo.height = height;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.lineWidths = lineWidths;\r\n        renderInfo.offsetY = offsetY;\r\n        renderInfo.paddingLeft = paddingLeft;\r\n        renderInfo.paddingRight = paddingRight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textIndent = textIndent;\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n\r\n        // Add extra margin to prevent issue with clipped text when scaling.\r\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(renderInfo.height);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n        if (window.isRTL) {\r\n            this._context.direction = 'rtl';\r\n            this._context.textAlign = 'left';\r\n        }\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        let linePositionX;\r\n        let linePositionY;\r\n\r\n        let drawLines = [];\r\n\r\n        // Draw lines line by line.\r\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\r\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\r\n\r\n            // By default, text is aligned to top\r\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\r\n\r\n            if (this._settings.verticalAlign == 'middle') {\r\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\r\n            } else if (this._settings.verticalAlign == 'bottom') {\r\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\r\n            }\r\n\r\n            if (this._settings.textAlign === 'right') {\r\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\r\n            } else if (this._settings.textAlign === 'center') {\r\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\r\n            }\r\n            linePositionX += renderInfo.paddingLeft;\r\n\r\n            drawLines.push({ text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i] });\r\n        }\r\n\r\n        // Highlight.\r\n        if (this._settings.highlight) {\r\n            let color = this._settings.highlightColor || 0x00000000;\r\n\r\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\r\n            const offset = this._settings.highlightOffset * precision;\r\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(color);\r\n            for (let i = 0; i < drawLines.length; i++) {\r\n                let drawLine = drawLines[i];\r\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n\r\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor[0], this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur[0]];\r\n\r\n            for (let i in this._settings.shadowColor) {\r\n                this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor[i]);\r\n                this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n                this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n                this._context.shadowBlur = this._settings.shadowBlur[i] * precision;\r\n                this.renderText(drawLines, renderInfo);\r\n            }\r\n        } else {\r\n            this.renderText(drawLines, renderInfo);\r\n        }\r\n\r\n\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        this.renderInfo = renderInfo;\r\n    };\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -= 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\r\n    }\r\n\r\n    /**\r\n     * See {@link wrapText}\r\n     *\r\n     * @param {string} text\r\n     * @param {number} wordWrapWidth\r\n     * @param {number} letterSpacing\r\n     * @param {number} indent\r\n     * @returns\r\n     */\r\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\r\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    renderText(drawLines, renderInfo) {\r\n        for (let i = 0, n = drawLines.length; i < n; i++) {\r\n            let drawLine = drawLines[i];\r\n\r\n            if (renderInfo.letterSpacing === 0) {\r\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y + 5);\r\n            } else {\r\n                const textSplit = drawLine.text.split('');\r\n                let x = drawLine.x;\r\n                for (let i = 0, j = textSplit.length; i < j; i++) {\r\n                    this._context.fillText(textSplit[i], x, drawLine.y);\r\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\r\n\r\nexport default class TextTextureRendererAdvanced {\r\n\r\n    constructor(stage, canvas, settings) {\r\n        this._stage = stage;\r\n        this._canvas = canvas;\r\n        this._context = this._canvas.getContext('2d');\r\n        this._settings = settings;\r\n    }\r\n\r\n    getPrecision() {\r\n        return this._settings.precision;\r\n    };\r\n\r\n    setFontProperties() {\r\n        const font = getFontSetting(\r\n            this._settings.fontFace,\r\n            this._settings.fontStyle,\r\n            this._settings.fontSize,\r\n            this.getPrecision(),\r\n            this._stage.getOption('defaultFontFace'),\r\n            this._settings.fontWeight,\r\n        );\r\n        this._context.font = font;\r\n        this._context.textBaseline = this._settings.textBaseline;\r\n        return font;\r\n    };\r\n\r\n    _load() {\r\n        if (Utils.isWeb && document.fonts) {\r\n            const fontSetting = getFontSetting(\r\n                this._settings.fontFace,\r\n                this._settings.fontStyle,\r\n                this._settings.fontSize,\r\n                this.getPrecision(),\r\n                this._stage.getOption('defaultFontFace'),\r\n                this._settings.fontWeight,\r\n            );\r\n            try {\r\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                    // Use a promise that waits for loading.\r\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\r\n                        // Just load the fallback font.\r\n                        console.warn('Font load error', err, fontSetting);\r\n                    }).then(() => {\r\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\r\n                            console.warn('Font not found', fontSetting);\r\n                        }\r\n                    });\r\n                }\r\n            } catch(e) {\r\n                console.warn(\"Can't check font loading for \" + fontSetting);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        // We do not use a promise so that loading is performed syncronous when possible.\r\n        const loadPromise = this._load();\r\n        if (!loadPromise) {\r\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n        } else {\r\n            return loadPromise.then(() => {\r\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\r\n            });\r\n        }\r\n    }\r\n\r\n    _calculateRenderInfo() {\r\n        let renderInfo = {};\r\n\r\n        const precision = this.getPrecision();\r\n\r\n        const paddingLeft = this._settings.paddingLeft * precision;\r\n        const paddingRight = this._settings.paddingRight * precision;\r\n        const fontSize = this._settings.fontSize * precision;\r\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\r\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\r\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\r\n        // const h = this._settings.h * precision;\r\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\r\n        const cutSx = this._settings.cutSx * precision;\r\n        const cutEx = this._settings.cutEx * precision;\r\n        const cutSy = this._settings.cutSy * precision;\r\n        const cutEy = this._settings.cutEy * precision;\r\n        const letterSpacing = this._settings.letterSpacing || 0;\r\n\r\n        // Set font properties.\r\n        renderInfo.baseFont = this.setFontProperties();\r\n\r\n        renderInfo.w = w;\r\n        renderInfo.width = w;\r\n        renderInfo.text = this._settings.text;\r\n        renderInfo.precision = precision;\r\n        renderInfo.fontSize = fontSize;\r\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\r\n        renderInfo.lineHeight = lineHeight;\r\n        renderInfo.letterSpacing = letterSpacing;\r\n        renderInfo.textAlign = this._settings.textAlign;\r\n        renderInfo.textColor = this._settings.textColor;\r\n        renderInfo.verticalAlign = this._settings.verticalAlign;\r\n        renderInfo.highlight = this._settings.highlight;\r\n        renderInfo.highlightColor = this._settings.highlightColor;\r\n        renderInfo.highlightHeight = this._settings.highlightHeight;\r\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\r\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\r\n        renderInfo.highlightOffset = this._settings.highlightOffset;\r\n        renderInfo.paddingLeft = this._settings.paddingLeft;\r\n        renderInfo.paddingRight = this._settings.paddingRight;\r\n        renderInfo.maxLines = this._settings.maxLines;\r\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\r\n        renderInfo.textOverflow = this._settings.textOverflow;\r\n        renderInfo.wordWrap = this._settings.wordWrap;\r\n        renderInfo.wordWrapWidth = wordWrapWidth;\r\n        renderInfo.shadow = this._settings.shadow;\r\n        renderInfo.shadowColor = this._settings.shadowColor;\r\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\r\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\r\n        renderInfo.shadowBlur = this._settings.shadowBlur;\r\n        renderInfo.cutSx = cutSx;\r\n        renderInfo.cutEx = cutEx;\r\n        renderInfo.cutSy = cutSy;\r\n        renderInfo.cutEy = cutEy;\r\n        renderInfo.textIndent = this._settings.textIndent * precision;\r\n        renderInfo.wordBreak = this._settings.wordBreak;\r\n\r\n        let text = renderInfo.text;\r\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\r\n\r\n        // Text overflow\r\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\r\n            let suffix;\r\n            switch (this._settings.textOverflow) {\r\n                case 'clip':\r\n                    suffix = '';\r\n                    break;\r\n                case 'ellipsis':\r\n                    suffix = this._settings.maxLinesSuffix;\r\n                    break;\r\n                default:\r\n                    suffix = this._settings.textOverflow;\r\n            }\r\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\r\n        }\r\n\r\n        text = this.tokenize(text);\r\n        text = this.parse(text);\r\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\r\n\r\n        if (renderInfo.textIndent) {\r\n            text = this.indent(text, renderInfo.textIndent);\r\n        }\r\n\r\n        if (renderInfo.wordBreak) {\r\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\r\n            this.resetFontStyle()\r\n        }\r\n\r\n        // Calculate detailed drawing information\r\n        let x = paddingLeft;\r\n        let lineNo = 0;\r\n\r\n        for (const t of text) {\r\n            // Wrap text\r\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\r\n                x = paddingLeft;\r\n                lineNo += 1;\r\n            }\r\n            t.lineNo = lineNo;\r\n\r\n            if (t.text == '\\n') {\r\n                continue;\r\n            }\r\n\r\n            t.x = x;\r\n            x += t.width;\r\n        }\r\n        renderInfo.lineNum = lineNo + 1;\r\n\r\n        if (this._settings.h) {\r\n            renderInfo.h = this._settings.h;\r\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\r\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\r\n        } else {\r\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\r\n        }\r\n\r\n        // This calculates the baseline offset in pixels from the font size.\r\n        // To retrieve this ratio, you would do this calculation:\r\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\r\n        //\r\n        // This give you the ratio for the baseline, which is then used to figure out\r\n        // where the baseline is relative to the bottom of the text bounding box.\r\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\r\n\r\n        // Vertical align\r\n        let vaOffset = 0;\r\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\r\n            vaOffset = -baselineOffsetInPx;\r\n        } else if (renderInfo.verticalAlign == 'middle') {\r\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\r\n        } else if (this._settings.verticalAlign == 'bottom') {\r\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\r\n        }\r\n\r\n        // Calculate lines information\r\n        renderInfo.lines = []\r\n        for (let i = 0; i < renderInfo.lineNum; i++) {\r\n            renderInfo.lines[i] = {\r\n                width: 0,\r\n                x: 0,\r\n                y: renderInfo.lineHeight * i + vaOffset,\r\n                text: [],\r\n            }\r\n        }\r\n\r\n        for (let t of text) {\r\n            renderInfo.lines[t.lineNo].text.push(t);\r\n        }\r\n\r\n        // Filter out white spaces at beginning and end of each line\r\n        for (const l of renderInfo.lines) {\r\n            if (l.text.length == 0) {\r\n                continue;\r\n            }\r\n\r\n            const firstWord = l.text[0].text;\r\n            const lastWord = l.text[l.text.length - 1].text;\r\n\r\n            if (firstWord == '\\n') {\r\n                l.text.shift();\r\n            }\r\n            if (isSpace(lastWord) || lastWord == '\\n') {\r\n                l.text.pop();\r\n            }\r\n        }\r\n\r\n\r\n        // Calculate line width\r\n        for (let l of renderInfo.lines) {\r\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\r\n        }\r\n\r\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\r\n        renderInfo.w = renderInfo.width;\r\n\r\n        // Apply maxLinesSuffix\r\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\r\n            const index = renderInfo.maxLines - 1;\r\n            let lastLineText = text.filter((t) => t.lineNo == index)\r\n            let suffix = renderInfo.maxLinesSuffix;\r\n            suffix = this.tokenize(suffix);\r\n            suffix = this.parse(suffix);\r\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\r\n            for (const s of suffix) {\r\n                s.lineNo = index;\r\n                s.x = 0;\r\n                lastLineText.push(s)\r\n            }\r\n\r\n            const spl = suffix.length + 1\r\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\r\n                lastLineText.splice(lastLineText.length - spl, 1);\r\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\r\n                if (lastLineText.length < spl) {\r\n                    break;\r\n                }\r\n            }\r\n            this.alignLine(lastLineText, lastLineText[0].x)\r\n\r\n            renderInfo.lines[index].text = lastLineText;\r\n            renderInfo.lines[index].width = _w;\r\n        }\r\n\r\n        // Horizontal alignment offset\r\n        if (renderInfo.textAlign == 'center') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\r\n            }\r\n        } else if (renderInfo.textAlign == 'right') {\r\n            for (let l of renderInfo.lines) {\r\n                l.x = renderInfo.width - l.width - paddingLeft;\r\n            }\r\n        }\r\n\r\n        return renderInfo;\r\n    }\r\n\r\n    _draw() {\r\n        const renderInfo = this._calculateRenderInfo();\r\n        const precision = this.getPrecision();\r\n        const paddingLeft = renderInfo.paddingLeft * precision;\r\n\r\n        // Set canvas dimensions\r\n        let canvasWidth = renderInfo.w || renderInfo.width;\r\n        if (renderInfo.cutSx || renderInfo.cutEx) {\r\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\r\n        }\r\n\r\n        let canvasHeight = renderInfo.h;\r\n        if (renderInfo.cutSy || renderInfo.cutEy) {\r\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\r\n        }\r\n\r\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\r\n        this._canvas.height = Math.ceil(canvasHeight);\r\n\r\n        // Canvas context has been reset.\r\n        this.setFontProperties();\r\n\r\n        if (renderInfo.fontSize >= 128) {\r\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\r\n            this._context.globalAlpha = 0.01;\r\n            this._context.fillRect(0, 0, 0.01, 0.01);\r\n            this._context.globalAlpha = 1.0;\r\n        }\r\n\r\n        // Cut\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\r\n        }\r\n\r\n        // Highlight\r\n        if (renderInfo.highlight) {\r\n            const hlColor = renderInfo.highlightColor || 0x00000000;\r\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\r\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\r\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\r\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\r\n\r\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\r\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\r\n            for (let i = 0; i < lineNum; i++) {\r\n                const l = renderInfo.lines[i];\r\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\r\n            }\r\n        }\r\n\r\n        // Text shadow.\r\n        let prevShadowSettings = null;\r\n        if (this._settings.shadow) {\r\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\r\n\r\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\r\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\r\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\r\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\r\n        }\r\n\r\n        // Draw text\r\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\r\n        let currentColor = defaultColor;\r\n        this._context.fillStyle = defaultColor;\r\n        for (const line of renderInfo.lines) {\r\n            for (const t of line.text) {\r\n                let lx = 0;\r\n\r\n                if (t.text == '\\n') {\r\n                    continue;\r\n                }\r\n\r\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\r\n                    continue;\r\n                }\r\n\r\n                if (t.color != currentColor) {\r\n                    currentColor = t.color;\r\n                    this._context.fillStyle = currentColor;\r\n                }\r\n\r\n                this._context.font = t.fontStyle;\r\n\r\n                // Draw with letter spacing\r\n                if (t.letters) {\r\n                    for (let l of t.letters) {\r\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\r\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                        lx += l.width;\r\n                    }\r\n                // Standard drawing\r\n                } else {\r\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\r\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Reset text shadow\r\n        if (prevShadowSettings) {\r\n            this._context.shadowColor = prevShadowSettings[0];\r\n            this._context.shadowOffsetX = prevShadowSettings[1];\r\n            this._context.shadowOffsetY = prevShadowSettings[2];\r\n            this._context.shadowBlur = prevShadowSettings[3];\r\n        }\r\n\r\n        // Reset cut translation\r\n        if (renderInfo.cutSx || renderInfo.cutSy) {\r\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\r\n        }\r\n\r\n        // Postprocess renderInfo.lines to be compatible with standard version\r\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\r\n        if (renderInfo.maxLines) {\r\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\r\n        }\r\n\r\n\r\n        this.renderInfo = renderInfo;\r\n\r\n    };\r\n\r\n    /**\r\n     * See {@link measureText}\r\n     *\r\n     * @param {string} word\r\n     * @param {number} space\r\n     * @returns {number}\r\n     */\r\n    measureText(word, space = 0) {\r\n        return measureText(this._context, word, space);\r\n    }\r\n\r\n    tokenize(text) {\r\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\r\n    }\r\n\r\n    parse(tokens) {\r\n        let italic = 0;\r\n        let bold = 0;\r\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\r\n        let color = 0;\r\n\r\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\r\n\r\n        return tokens.map((t) => {\r\n            if (t == '<i>') {\r\n                italic += 1;\r\n                t = '';\r\n            } else if (t == '</i>' && italic > 0) {\r\n                italic -= 1;\r\n                t = '';\r\n            } else if (t == '<b>') {\r\n                bold += 1;\r\n                t = '';\r\n            } else if (t == '</b>' && bold > 0) {\r\n                bold -= 1;\r\n                t = '';\r\n            } else if (t == '</color>') {\r\n                if (colorStack.length > 1) {\r\n                    color -= 1;\r\n                    colorStack.pop();\r\n                }\r\n                t = '';\r\n            } else if (colorRegexp.test(t)) {\r\n                const matched = colorRegexp.exec(t);\r\n                colorStack.push(\r\n                    StageUtils.getRgbaString(parseInt(matched[1]))\r\n                );\r\n                color += 1;\r\n                t = '';\r\n\r\n            }\r\n\r\n            return {\r\n                text: t,\r\n                italic: italic,\r\n                bold: bold,\r\n                color: colorStack[color],\r\n            }\r\n        })\r\n        .filter((o) => o.text != '');\r\n    }\r\n\r\n    applyFontStyle(word, baseFont) {\r\n        let font = baseFont;\r\n        if (word.bold) {\r\n            font = 'bold ' + font;\r\n        }\r\n        if (word.italic) {\r\n            font = 'italic ' + font;\r\n        }\r\n        this._context.font = font\r\n        word.fontStyle = font;\r\n    }\r\n\r\n    resetFontStyle(baseFont) {\r\n        this._context.font = baseFont;\r\n    }\r\n\r\n    measure(parsed, letterSpacing = 0, baseFont) {\r\n        for (const p of parsed) {\r\n            this.applyFontStyle(p, baseFont);\r\n            p.width = this.measureText(p.text, letterSpacing);\r\n\r\n            // Letter by letter detail for letter spacing\r\n            if (letterSpacing > 0) {\r\n                p.letters = p.text.split('').map((l) => {return {text: l}});\r\n                for (let l of p.letters) {\r\n                    l.width = this.measureText(l.text, letterSpacing);\r\n                }\r\n            }\r\n\r\n        }\r\n        this.resetFontStyle(baseFont);\r\n        return parsed;\r\n    }\r\n\r\n    indent(parsed, textIndent) {\r\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\r\n        return parsed;\r\n    }\r\n\r\n    wrapWord(word, wordWrapWidth, suffix) {\r\n        const suffixWidth = this.measureText(suffix);\r\n        const wordLen = word.length\r\n        const wordWidth = this.measureText(word);\r\n\r\n        /* If word fits wrapWidth, do nothing */\r\n        if (wordWidth <= wordWrapWidth) {\r\n            return word;\r\n        }\r\n\r\n        /* Make initial guess for text cuttoff */\r\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > wordWrapWidth) {\r\n            while (cutoffIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth > wordWrapWidth) {\r\n                    cutoffIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (cutoffIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\r\n                if (truncWordWidth < wordWrapWidth) {\r\n                    cutoffIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    cutoffIndex -=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\r\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\r\n    }\r\n\r\n    _getBreakIndex(word, width) {\r\n        const wordLen = word.length;\r\n        const wordWidth = this.measureText(word);\r\n\r\n        if (wordWidth <= width) {\r\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\r\n        }\r\n\r\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\r\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\r\n\r\n        /* In case guess was overestimated, shrink it letter by letter. */\r\n        if (truncWordWidth > width) {\r\n            while (breakIndex > 0) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth > width) {\r\n                    breakIndex -= 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        /* In case guess was underestimated, extend it letter by letter. */\r\n        } else {\r\n            while (breakIndex < wordLen) {\r\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                if (truncWordWidth < width) {\r\n                    breakIndex += 1;\r\n                } else {\r\n                    // Finally, when bound is crossed, retract last letter.\r\n                    breakIndex -=1;\r\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return {breakIndex, truncWordWidth};\r\n\r\n    }\r\n\r\n    wordBreak(word, width, baseFont) {\r\n        if (!word.text) {\r\n            return word\r\n        }\r\n        this.applyFontStyle(word, baseFont)\r\n        const parts = [];\r\n        let text = word.text;\r\n        if (!word.letters) {\r\n            while (true) {\r\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = truncWordWidth;\r\n\r\n                if (breakIndex === text.length) {\r\n                    break;\r\n                }\r\n\r\n                text = text.slice(breakIndex);\r\n            }\r\n        } else {\r\n            let totalWidth = 0;\r\n            let letters = [];\r\n            let breakIndex = 0;\r\n            for (const l of word.letters) {\r\n                if (totalWidth + l.width >= width) {\r\n                    parts.push({...word});\r\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                    parts[parts.length - 1].width = totalWidth;\r\n                    parts[parts.length - 1].letters = letters;\r\n                    text = text.slice(breakIndex);\r\n                    totalWidth = 0;\r\n                    letters = [];\r\n                    breakIndex = 0;\r\n\r\n                } else {\r\n                    breakIndex += 1;\r\n                    letters.push(l);\r\n                    totalWidth += l.width;\r\n                }\r\n            }\r\n\r\n            if (totalWidth > 0) {\r\n                parts.push({...word});\r\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\r\n                parts[parts.length - 1].width = totalWidth;\r\n                parts[parts.length - 1].letters = letters;\r\n            }\r\n        }\r\n\r\n        return parts;\r\n    }\r\n\r\n    alignLine(parsed, initialX = 0) {\r\n        let prevWidth = 0;\r\n        let prevX = initialX;\r\n        for (const word of parsed) {\r\n            if (word.text == '\\n') {\r\n                continue;\r\n            }\r\n            word.x = prevX + prevWidth;\r\n            prevX = word.x;\r\n            prevWidth = word.width;\r\n        }\r\n\r\n    }\r\n}","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class TextTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        // We use the stage precision as the default precision in case of a text texture.\r\n        this._precision = this.stage.getOption('precision');\r\n    }\r\n\r\n    static renderer(stage, canvas, settings) {\r\n        if (this.advancedRenderer) {\r\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\r\n        } else {\r\n            return new TextTextureRenderer(stage, canvas, settings);\r\n        }\r\n    }\r\n\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    set text(v) {\r\n        if (this._text !== v) {\r\n            this._text = \"\" + v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (this._w !== v) {\r\n            this._w = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (this._h !== v) {\r\n            this._h = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontStyle() {\r\n        return this._fontStyle;\r\n    }\r\n\r\n    set fontStyle(v) {\r\n        if (this._fontStyle !== v) {\r\n            this._fontStyle = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontBaselineRatio() {\r\n        return this._fontBaselineRatio;\r\n    }\r\n    \r\n    set fontBaselineRatio(v) {\r\n        if (this._fontBaselineRatio !== v) {\r\n            this._fontBaselineRatio = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n\r\n    set fontSize(v) {\r\n        if (this._fontSize !== v) {\r\n            this._fontSize = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontWeight() {\r\n        return this._fontWeight;\r\n    }\r\n\r\n    set fontWeight(v) {\r\n        if (this._fontWeight !== v) {\r\n            this._fontWeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get fontFace() {\r\n        return this._fontFace;\r\n    }\r\n\r\n    set fontFace(v) {\r\n        if (this._fontFace !== v) {\r\n            this._fontFace = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrap() {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(v) {\r\n        if (this._wordWrap !== v) {\r\n            this._wordWrap = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordWrapWidth() {\r\n        return this._wordWrapWidth;\r\n    }\r\n\r\n    set wordWrapWidth(v) {\r\n        if (this._wordWrapWidth !== v) {\r\n            this._wordWrapWidth = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get wordBreak() {\r\n        return this._wordBreak;\r\n    }\r\n\r\n    set wordBreak(v) {\r\n        if (this._wordBreak !== v) {\r\n            this._wordBreak = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textOverflow() {\r\n        return this._textOverflow;\r\n    }\r\n\r\n    set textOverflow(v) {\r\n        if (v != this._textOverflow) {\r\n            this._textOverflow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this._lineHeight;\r\n    }\r\n\r\n    set lineHeight(v) {\r\n        if (this._lineHeight !== v) {\r\n            this._lineHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textBaseline() {\r\n        return this._textBaseline;\r\n    }\r\n\r\n    set textBaseline(v) {\r\n        if (this._textBaseline !== v) {\r\n            this._textBaseline = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textAlign() {\r\n        return this._textAlign;\r\n    }\r\n\r\n    set textAlign(v) {\r\n        if (v != 'center' && window.isRTL) {\r\n            v = v == \"right\" ? \"left\" : \"right\";\r\n        }\r\n        if (this._textAlign !== v) {\r\n            this._textAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get verticalAlign() {\r\n        return this._verticalAlign;\r\n    }\r\n\r\n    set verticalAlign(v) {\r\n        if (this._verticalAlign !== v) {\r\n            this._verticalAlign = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        if (this._offsetY !== v) {\r\n            this._offsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLines() {\r\n        return this._maxLines;\r\n    }\r\n\r\n    set maxLines(v) {\r\n        if (this._maxLines !== v) {\r\n            this._maxLines = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get maxLinesSuffix() {\r\n        return this._maxLinesSuffix;\r\n    }\r\n\r\n    set maxLinesSuffix(v) {\r\n        if (this._maxLinesSuffix !== v) {\r\n            this._maxLinesSuffix = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textColor() {\r\n        return this._textColor;\r\n    }\r\n\r\n    set textColor(v) {\r\n        if (this._textColor !== v) {\r\n            this._textColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingLeft() {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set paddingLeft(v) {\r\n        if (this._paddingLeft !== v) {\r\n            this._paddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get paddingRight() {\r\n        return this._paddingRight;\r\n    }\r\n\r\n    set paddingRight(v) {\r\n        if (this._paddingRight !== v) {\r\n            this._paddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadow() {\r\n        return this._shadow;\r\n    }\r\n\r\n    set shadow(v) {\r\n        if (this._shadow !== v) {\r\n            this._shadow = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowColor() {\r\n        return this._shadowColor;\r\n    }\r\n\r\n    set shadowColor(v) {\r\n        if (this._shadowColor !== v) {\r\n            this._shadowColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetX() {\r\n        return this._shadowOffsetX;\r\n    }\r\n\r\n    set shadowOffsetX(v) {\r\n        if (this._shadowOffsetX !== v) {\r\n            this._shadowOffsetX = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowOffsetY() {\r\n        return this._shadowOffsetY;\r\n    }\r\n\r\n    set shadowOffsetY(v) {\r\n        if (this._shadowOffsetY !== v) {\r\n            this._shadowOffsetY = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get shadowBlur() {\r\n        return this._shadowBlur;\r\n    }\r\n\r\n    set shadowBlur(v) {\r\n        if (this._shadowBlur !== v) {\r\n            this._shadowBlur = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlight() {\r\n        return this._highlight;\r\n    }\r\n\r\n    set highlight(v) {\r\n        if (this._highlight !== v) {\r\n            this._highlight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightHeight() {\r\n        return this._highlightHeight;\r\n    }\r\n\r\n    set highlightHeight(v) {\r\n        if (this._highlightHeight !== v) {\r\n            this._highlightHeight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightColor() {\r\n        return this._highlightColor;\r\n    }\r\n\r\n    set highlightColor(v) {\r\n        if (this._highlightColor !== v) {\r\n            this._highlightColor = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightOffset() {\r\n        return this._highlightOffset;\r\n    }\r\n\r\n    set highlightOffset(v) {\r\n        if (this._highlightOffset !== v) {\r\n            this._highlightOffset = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingLeft() {\r\n        return this._highlightPaddingLeft;\r\n    }\r\n\r\n    set highlightPaddingLeft(v) {\r\n        if (this._highlightPaddingLeft !== v) {\r\n            this._highlightPaddingLeft = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get highlightPaddingRight() {\r\n        return this._highlightPaddingRight;\r\n    }\r\n\r\n    set highlightPaddingRight(v) {\r\n        if (this._highlightPaddingRight !== v) {\r\n            this._highlightPaddingRight = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSx() {\r\n        return this._cutSx;\r\n    }\r\n\r\n    set cutSx(v) {\r\n        if (this._cutSx !== v) {\r\n            this._cutSx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEx() {\r\n        return this._cutEx;\r\n    }\r\n\r\n    set cutEx(v) {\r\n        if (this._cutEx !== v) {\r\n            this._cutEx = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutSy() {\r\n        return this._cutSy;\r\n    }\r\n\r\n    set cutSy(v) {\r\n        if (this._cutSy !== v) {\r\n            this._cutSy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get cutEy() {\r\n        return this._cutEy;\r\n    }\r\n\r\n    set cutEy(v) {\r\n        if (this._cutEy !== v) {\r\n            this._cutEy = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get advancedRenderer() {\r\n        return this._advancedRenderer;\r\n    }\r\n\r\n    set advancedRenderer(v) {\r\n        if (this._advancedRenderer !== v) {\r\n            this._advancedRenderer = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    set letterSpacing(v) {\r\n        if (this._letterSpacing !== v) {\r\n            this._letterSpacing = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get letterSpacing() {\r\n        return this._letterSpacing;\r\n    }\r\n\r\n    set textIndent(v) {\r\n        if (this._textIndent !== v) {\r\n            this._textIndent = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get textIndent() {\r\n        return this._textIndent;\r\n    }\r\n\r\n    get precision() {\r\n        return super.precision;\r\n    }\r\n\r\n    set precision(v) {\r\n        // We actually draw differently when the precision changes.\r\n        if (this.precision !== v) {\r\n            super.precision = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this.text;\r\n    }\r\n\r\n    _getLookupId() {\r\n        let parts = [];\r\n\r\n        if (this.w !== 0) parts.push(\"w \" + this.w);\r\n        if (this.h !== 0) parts.push(\"h \" + this.h);\r\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\r\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\r\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\r\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\r\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\r\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\r\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\r\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\r\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\r\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\r\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\r\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\r\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\r\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\r\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\r\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\r\n        parts.push(\"pc\" + this.precision);\r\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\r\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\r\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\r\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\r\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\r\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\r\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\r\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\r\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\r\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\r\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\r\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\r\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\r\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\r\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\r\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\r\n\r\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\r\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\r\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\r\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\r\n\r\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\r\n\r\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\r\n        return id;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const args = this.cloneArgs();\r\n\r\n        const gl = this.stage.gl;\r\n\r\n        return function (cb) {\r\n            const canvas = this.stage.platform.getDrawingCanvas();\r\n            const renderer = (args.advancedRenderer)\r\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\r\n              : new TextTextureRenderer(this.stage, canvas, args);\r\n            \r\n            const p = renderer.draw();\r\n\r\n            const texParams = {};\r\n\r\n            const sharpCfg = this.stage.getOption('fontSharp');\r\n            let sharpen = false;\r\n\r\n            // Prevent text blur when text texture is downscaled\r\n            if (Utils.isBoolean(sharpCfg)) {\r\n                sharpen = sharpCfg;\r\n            } else if (Utils.isObject(sharpCfg)) {\r\n                const precision = this.stage.getRenderPrecision();\r\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\r\n            }\r\n\r\n            if (gl && sharpen) {\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            if (p) {\r\n                p.then(() => {\r\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\r\n                    cb(null, Object.assign({\r\n                        renderInfo: renderer.renderInfo,\r\n                        throttle: false,\r\n                        texParams: texParams,\r\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n                }).catch((err) => {\r\n                    cb(err);\r\n                });\r\n            } else {\r\n                cb(null, Object.assign({\r\n                    renderInfo: renderer.renderInfo,\r\n                    throttle: false,\r\n                    texParams: texParams,\r\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    getNonDefaults() {\r\n        const nonDefaults = super.getNonDefaults();\r\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\r\n        if (this.w !== 0) nonDefaults['w'] = this.w;\r\n        if (this.h !== 0) nonDefaults['h'] = this.h;\r\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\r\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\r\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\r\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\r\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\r\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\r\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\r\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\r\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\r\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\r\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\r\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\r\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\r\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\r\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\r\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\r\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\r\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\r\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\r\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\r\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\r\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\r\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\r\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\r\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\r\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\r\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\r\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\r\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\r\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\r\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\r\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\r\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\r\n\r\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\r\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\r\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\r\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\r\n\r\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\r\n        return nonDefaults;\r\n    }\r\n\r\n    cloneArgs() {\r\n        let obj = {};\r\n        obj.text = this._text;\r\n        obj.w = this._w;\r\n        obj.h = this._h;\r\n        obj.fontStyle = this._fontStyle;\r\n        obj.fontSize = this._fontSize;\r\n        obj.fontWeight = this._fontWeight;\r\n        obj.fontBaselineRatio = this._fontBaselineRatio;\r\n        obj.fontFace = this._fontFace;\r\n        obj.wordWrap = this._wordWrap;\r\n        obj.wordWrapWidth = this._wordWrapWidth;\r\n        obj.wordBreak = this._wordBreak;\r\n        obj.textOverflow = this._textOverflow;\r\n        obj.lineHeight = this._lineHeight;\r\n        obj.textBaseline = this._textBaseline;\r\n        obj.textAlign = this._textAlign;\r\n        obj.verticalAlign = this._verticalAlign;\r\n        obj.offsetY = this._offsetY;\r\n        obj.maxLines = this._maxLines;\r\n        obj.maxLinesSuffix = this._maxLinesSuffix;\r\n        obj.precision = this._precision;\r\n        obj.textColor = this._textColor;\r\n        obj.paddingLeft = this._paddingLeft;\r\n        obj.paddingRight = this._paddingRight;\r\n        obj.shadow = this._shadow;\r\n        obj.shadowColor = this._shadowColor;\r\n        obj.shadowOffsetX = this._shadowOffsetX;\r\n        obj.shadowOffsetY = this._shadowOffsetY;\r\n        obj.shadowBlur = this._shadowBlur;\r\n        obj.highlight = this._highlight;\r\n        obj.highlightHeight = this._highlightHeight;\r\n        obj.highlightColor = this._highlightColor;\r\n        obj.highlightOffset = this._highlightOffset;\r\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\r\n        obj.highlightPaddingRight = this._highlightPaddingRight;\r\n        obj.letterSpacing = this._letterSpacing;\r\n        obj.textIndent = this._textIndent;\r\n        obj.cutSx = this._cutSx;\r\n        obj.cutEx = this._cutEx;\r\n        obj.cutSy = this._cutSy;\r\n        obj.cutEy = this._cutEy;\r\n        obj.advancedRenderer = this._advancedRenderer;\r\n        return obj;\r\n    }\r\n\r\n\r\n}\r\n\r\n// Because there are so many properties, we prefer to use the prototype for default values.\r\n// This causes a decrease in performance, but also a decrease in memory usage.\r\nlet proto = TextTexture.prototype;\r\nproto._text = \"\";\r\nproto._w = 0;\r\nproto._h = 0;\r\nproto._fontStyle = \"normal\";\r\nproto._fontSize = 40;\r\nproto._fontWeight = \"normal\";\r\nproto._fontFace = null;\r\nproto._wordWrap = true;\r\nproto._wordWrapWidth = 0;\r\nproto._wordBreak = false;\r\nproto._textOverflow = \"\";\r\nproto._lineHeight = null;\r\nproto._textBaseline = \"alphabetic\";\r\nproto._textAlign = \"left\";\r\nproto._verticalAlign = \"top\";\r\nproto._offsetY = null;\r\nproto._maxLines = 0;\r\nproto._maxLinesSuffix = \"..\";\r\nproto._textColor = 0xFFFFFFFF;\r\nproto._paddingLeft = 0;\r\nproto._paddingRight = 0;\r\nproto._shadow = false;\r\nproto._shadowColor = 0xFF000000;\r\nproto._shadowOffsetX = 0;\r\nproto._shadowOffsetY = 0;\r\nproto._shadowBlur = 5;\r\nproto._highlight = false;\r\nproto._highlightHeight = 0;\r\nproto._highlightColor = 0xFF000000;\r\nproto._highlightOffset = 0;\r\nproto._highlightPaddingLeft = 0;\r\nproto._highlightPaddingRight = 0;\r\nproto._letterSpacing = 0;\r\nproto._textIndent = 0;\r\nproto._cutSx = 0;\r\nproto._cutEx = 0;\r\nproto._cutSy = 0;\r\nproto._cutEy = 0;\r\nproto._advancedRenderer = false;\r\nproto._fontBaselineRatio = 0;\r\n\r\n\r\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\r\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class SourceTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._textureSource = undefined;\r\n    }\r\n\r\n    get textureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n    set textureSource(v) {\r\n        if (v !== this._textureSource) {\r\n            if (v.isResultTexture) {\r\n                // In case of a result texture, automatically inherit the precision.\r\n                this._precision = this.stage.getRenderPrecision();\r\n            }\r\n            this._textureSource = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    _getTextureSource() {\r\n        return this._textureSource;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\n\r\nexport default class Transition extends EventEmitter {\r\n\r\n    constructor(manager, settings, element, property) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._getter = element.constructor.getGetter(property);\r\n        this._setter = element.constructor.getSetter(property);\r\n\r\n        this._merger = settings.merger;\r\n\r\n        if (!this._merger) {\r\n            this._merger = element.constructor.getMerger(property);\r\n        }\r\n\r\n        this._startValue = this._getter(this._element);\r\n        this._targetValue = this._startValue;\r\n\r\n        this._p = 1;\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    start(targetValue) {\r\n        this._startValue = this._getter(this._element);\r\n\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            if (targetValue === this._startValue) {\r\n                this.reset(targetValue, 1);\r\n            } else {\r\n                this._targetValue = targetValue;\r\n                this._p = 0;\r\n                this._delayLeft = this._settings.delay;\r\n                this.emit('start');\r\n                this.add();\r\n            }\r\n        }\r\n    }\r\n\r\n    finish() {\r\n        if (this._p < 1) {\r\n            // Value setting and will must be invoked (async) upon next transition cycle.\r\n            this._p = 1;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        // Just stop where the transition is at.\r\n        this.emit('stop');\r\n        this.manager.removeActive(this);\r\n    }\r\n\r\n    pause() {\r\n        this.stop();\r\n    }\r\n\r\n    play() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    reset(targetValue, p) {\r\n        if (!this.isAttached()) {\r\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = 1;\r\n            this._updateDrawValue();\r\n        } else {\r\n            this._startValue = this._getter(this._element);\r\n            this._targetValue = targetValue;\r\n            this._p = p;\r\n            this.add();\r\n        }\r\n    }\r\n\r\n    _updateDrawValue() {\r\n        this._setter(this._element, this.getDrawValue());\r\n    }\r\n\r\n    add() {\r\n        this.manager.addActive(this);\r\n    }\r\n\r\n    isAttached() {\r\n        return this._element.attached;\r\n    }\r\n\r\n    isRunning() {\r\n        return (this._p < 1.0);\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this.isAttached()) {\r\n            // Skip to end of transition so that it is removed.\r\n            this._p = 1;\r\n        }\r\n\r\n        if (this.p < 1) {\r\n            if (this.delayLeft > 0) {\r\n                this._delayLeft -= dt;\r\n\r\n                if (this.delayLeft < 0) {\r\n                    dt = -this.delayLeft;\r\n                    this._delayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this._settings.duration == 0) {\r\n                this._p = 1;\r\n            } else {\r\n                this._p += dt / this._settings.duration;\r\n            }\r\n            if (this._p >= 1) {\r\n                // Finished!;\r\n                this._p = 1;\r\n            }\r\n        }\r\n\r\n        this._updateDrawValue();\r\n\r\n        this.invokeListeners();\r\n    }\r\n\r\n    invokeListeners() {\r\n        this.emit('progress', this.p);\r\n        if (this.p === 1) {\r\n            this.emit('finish');\r\n        }\r\n    }\r\n\r\n    updateTargetValue(targetValue) {\r\n        let t = this._settings.timingFunctionImpl(this.p);\r\n        if (t === 1) {\r\n            this._targetValue = targetValue;\r\n        } else if (t === 0) {\r\n            this._startValue = this._targetValue;\r\n            this._targetValue = targetValue;\r\n        } else {\r\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\r\n            this._targetValue = targetValue;\r\n        }\r\n    }\r\n\r\n    getDrawValue() {\r\n        if (this.p >= 1) {\r\n            return this.targetValue;\r\n        } else {\r\n            let v = this._settings._timingFunctionImpl(this.p);\r\n            return this._merger(this.targetValue, this.startValue, v);\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n    }\r\n\r\n    get startValue() {\r\n        return this._startValue;\r\n    }\r\n\r\n    get targetValue() {\r\n        return this._targetValue;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n    set settings(v) {\r\n        this._settings = v;\r\n    }\r\n\r\n}\r\n\r\nTransition.prototype.isTransition = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages a list of objects.\r\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\r\n */\r\nexport default class ObjectList {\r\n\r\n    constructor() {\r\n        this._items = [];\r\n        this._refs = {}\r\n    }\r\n\r\n    get() {\r\n        return this._items;\r\n    }\r\n\r\n    get first() {\r\n        return this._items[0];\r\n    }\r\n\r\n    get last() {\r\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\r\n    }\r\n\r\n    add(item) {\r\n        this.addAt(item, this._items.length);\r\n    }\r\n\r\n    addAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex === index) {\r\n                return item;\r\n            }\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            if (currentIndex != -1) {\r\n                this.setAt(item, index);\r\n            } else {\r\n                if (item.ref) {\r\n                    this._refs[item.ref] = item;\r\n                }\r\n                this._items.splice(index, 0, item);\r\n                this.onAdd(item, index);\r\n            }\r\n        } else {\r\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    replaceByRef(item) {\r\n        if (item.ref) {\r\n            const existingItem = this.getByRef(item.ref);\r\n            if (!existingItem) {\r\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\r\n            }\r\n            this.replace(item, existingItem);\r\n        } else {\r\n            throw new Error('replaceByRef: no ref specified in item');\r\n        }\r\n        this.addAt(item, this._items.length);\r\n\r\n    }\r\n\r\n    replace(item, prevItem) {\r\n        const index = this.getIndex(prevItem);\r\n        if (index === -1) {\r\n            throw new Error('replace: The previous item does not exist');\r\n        }\r\n        this.setAt(item, index);\r\n    }\r\n\r\n    setAt(item, index) {\r\n        if (index >= 0 && index <= this._items.length) {\r\n\r\n            if (Utils.isObjectLiteral(item)) {\r\n                const o = item;\r\n                item = this.createItem(o);\r\n                item.patch(o);\r\n            }\r\n\r\n            let currentIndex = this._items.indexOf(item);\r\n            if (currentIndex != -1) {\r\n                if (currentIndex !== index) {\r\n                    const fromIndex = currentIndex;\r\n                    if (fromIndex !== index) {\r\n                        this._items.splice(fromIndex, 1);\r\n                        this._items.splice(index, 0, item);\r\n                        this.onMove(item, fromIndex, index);\r\n                    }\r\n                }\r\n            } else {\r\n                if( index < this._items.length){\r\n\r\n                    if (this._items[index].ref) {\r\n                        this._refs[this._items[index].ref] = undefined;\r\n                    }\r\n\r\n                    const prevItem = this._items[index];\r\n\r\n                    // Doesn't exist yet: overwrite current.\r\n                    this._items[index] = item;\r\n\r\n                    if (item.ref) {\r\n                        this._refs[item.ref] = item;\r\n                    }\r\n\r\n                    this.onSet(item, index, prevItem);\r\n                } else {\r\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\r\n        }\r\n    }\r\n\r\n    getAt(index) {\r\n        return this._items[index];\r\n    }\r\n\r\n    getIndex(item) {\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    remove(item) {\r\n        let index = this._items.indexOf(item);\r\n\r\n        if (index !== -1) {\r\n            this.removeAt(index);\r\n        }\r\n    };\r\n\r\n    removeAt(index) {\r\n        if (index >= 0 && index < this._items.length) {\r\n            const item = this._items[index];\r\n\r\n            if (item.ref) {\r\n                this._refs[item.ref] = undefined;\r\n            }\r\n\r\n            this._items.splice(index, 1);\r\n\r\n            this.onRemove(item, index);\r\n\r\n            return item;\r\n        } else {\r\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        let n = this._items.length;\r\n        if (n) {\r\n            let prev = this._items;\r\n            this._items = [];\r\n            this._refs = {}\r\n            this.onSync(prev, [], []);\r\n        }\r\n    };\r\n\r\n    a(o) {\r\n        if (Utils.isObjectLiteral(o)) {\r\n            let c = this.createItem(o);\r\n            c.patch(o);\r\n            this.add(c);\r\n            return c;\r\n        } else if (Array.isArray(o)) {\r\n            for (let i = 0, n = o.length; i < n; i++) {\r\n                this.a(o[i]);\r\n            }\r\n            return null;\r\n        } else if (this.isItem(o)) {\r\n            this.add(o);\r\n            return o;\r\n        }\r\n    };\r\n\r\n    get length() {\r\n        return this._items.length;\r\n    }\r\n\r\n    _getRefs() {\r\n        return this._refs;\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this._refs[ref];\r\n    }\r\n\r\n    clearRef(ref) {\r\n        delete this._refs[ref];\r\n    }\r\n\r\n    setRef(ref, child) {\r\n        this._refs[ref] = child;\r\n    }\r\n\r\n    patch(settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            this._setByObject(settings);\r\n        } else if (Array.isArray(settings)) {\r\n            this._setByArray(settings);\r\n        }\r\n    }\r\n\r\n    _setByObject(settings) {\r\n        // Overrule settings of known referenced items.\r\n        let refs = this._getRefs();\r\n        let crefs = Object.keys(settings);\r\n        for (let i = 0, n = crefs.length; i < n; i++) {\r\n            let cref = crefs[i];\r\n            let s = settings[cref];\r\n\r\n            let c = refs[cref];\r\n            if (!c) {\r\n                if (this.isItem(s)) {\r\n                    // Replace previous item;\r\n                    s.ref = cref;\r\n                    this.add(s);\r\n                } else {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                    c.ref = cref;\r\n                    c.patch(s);\r\n                    this.add(c);\r\n                }\r\n            } else {\r\n                if (this.isItem(s)) {\r\n                    if (c !== s) {\r\n                        // Replace previous item;\r\n                        let idx = this.getIndex(c);\r\n                        s.ref = cref;\r\n                        this.setAt(s, idx);\r\n                    }\r\n                } else {\r\n                    c.patch(s);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _equalsArray(array) {\r\n        let same = true;\r\n        if (array.length === this._items.length) {\r\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\r\n                same = same && (this._items[i] === array[i]);\r\n            }\r\n        } else {\r\n            same = false;\r\n        }\r\n        return same;\r\n    }\r\n\r\n    _setByArray(array) {\r\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\r\n        if (this._equalsArray(array)) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0, n = this._items.length; i < n; i++) {\r\n            this._items[i].marker = true;\r\n        }\r\n\r\n        let refs;\r\n        let newItems = [];\r\n        for (let i = 0, n = array.length; i < n; i++) {\r\n            let s = array[i];\r\n            if (this.isItem(s)) {\r\n                s.marker = false;\r\n                newItems.push(s);\r\n            } else {\r\n                let cref = s.ref;\r\n                let c;\r\n                if (cref) {\r\n                    if (!refs) refs = this._getRefs();\r\n                    c = refs[cref];\r\n                }\r\n\r\n                if (!c) {\r\n                    // Create new item.\r\n                    c = this.createItem(s);\r\n                } else {\r\n                    c.marker = false;\r\n                }\r\n\r\n                if (Utils.isObjectLiteral(s)) {\r\n                    c.patch(s);\r\n                }\r\n\r\n                newItems.push(c);\r\n            }\r\n        }\r\n\r\n        this._setItems(newItems);\r\n    }\r\n\r\n    _setItems(newItems) {\r\n        let prevItems = this._items;\r\n        this._items = newItems;\r\n\r\n        // Remove the items.\r\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\r\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\r\n\r\n        if (removed.length || added.length) {\r\n            // Recalculate refs.\r\n            this._refs = {}\r\n            for (let i = 0, n = this._items.length; i < n; i++) {\r\n                let ref = this._items[i].ref;\r\n                if (ref) {\r\n                    this._refs[ref] = this._items[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSync(removed, added, newItems);\r\n    }\r\n\r\n    sort(f) {\r\n        const items = this._items.slice();\r\n        items.sort(f);\r\n        this._setByArray(items);\r\n    }\r\n\r\n    onAdd(item, index) {\r\n    }\r\n\r\n    onRemove(item, index) {\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n    }\r\n\r\n    createItem(object) {\r\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\r\n    }\r\n\r\n    isItem(object) {\r\n        return false;\r\n    }\r\n\r\n    forEach(f) {\r\n        this.get().forEach(f);\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"./Utils.mjs\";\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"./ObjectList.mjs\";\r\n\r\nexport default class ElementChildList extends ObjectList {\r\n\r\n    constructor(element) {\r\n        super();\r\n        this._element = element;\r\n    }\r\n\r\n    _connectParent(item) {\r\n        const prevParent = item.parent;\r\n        if (prevParent && prevParent !== this._element) {\r\n            // Cleanup in previous child list, without\r\n            const prevChildList = item.parent.childList;\r\n            const index = prevChildList.getIndex(item);\r\n\r\n            if (item.ref) {\r\n                prevChildList._refs[item.ref] = undefined;\r\n            }\r\n            prevChildList._items.splice(index, 1);\r\n\r\n            // Also clean up element core.\r\n            prevParent.core.removeChildAt(index);\r\n\r\n        }\r\n\r\n        item._setParent(this._element);\r\n\r\n        // We are expecting the caller to sync it to the core.\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._connectParent(item);\r\n        this._element.core.addChildAt(index, item.core);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        item._setParent(null);\r\n        this._element.core.removeChildAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        for (let i = 0, n = removed.length; i < n; i++) {\r\n            removed[i]._setParent(null);\r\n        }\r\n        for (let i = 0, n = added.length; i < n; i++) {\r\n            this._connectParent(added[i]);\r\n        }\r\n        let gc = i => i.core;\r\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\r\n    }\r\n\r\n    onSet(item, index, prevItem) {\r\n        prevItem._setParent(null);\r\n\r\n        this._connectParent(item);\r\n        this._element.core.setChildAt(index, item.core);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._element.core.moveChild(fromIndex, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        if (object.type) {\r\n            return new object.type(this._element.stage);\r\n        } else {\r\n            return this._element.stage.createElement();\r\n        }\r\n    }\r\n\r\n    isItem(object) {\r\n        return object.isElement;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Render tree node.\r\n */\r\n\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport ElementCore from \"./core/ElementCore.mjs\";\r\nimport Base from \"./Base.mjs\";\r\n\r\nimport Utils from \"./Utils.mjs\";\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Element {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.__id = Element.id++;\r\n\r\n        this.__start();\r\n\r\n        // EventEmitter constructor.\r\n        this._hasEventListeners = false;\r\n\r\n        this.__core = new ElementCore(this);\r\n\r\n        /**\r\n         * A reference that can be used while merging trees.\r\n         * @type {string}\r\n         */\r\n        this.__ref = null;\r\n\r\n        /**\r\n         * An element is attached if it is a descendant of the stage root.\r\n         * @type {boolean}\r\n         */\r\n        this.__attached = false;\r\n\r\n        /**\r\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\r\n         * @type {boolean}\r\n         */\r\n        this.__enabled = false;\r\n\r\n        /**\r\n         * An element is active when it is enabled and it is within bounds.\r\n         * @type {boolean}\r\n         */\r\n        this.__active = false;\r\n\r\n        /**\r\n         * @type {Element}\r\n         */\r\n        this.__parent = null;\r\n\r\n        /**\r\n         * The texture that is currently set.\r\n         * @type {Texture}\r\n         */\r\n        this.__texture = null;\r\n\r\n        /**\r\n         * The currently displayed texture. While this.texture is loading, this one may be different.\r\n         * @type {Texture}\r\n         */\r\n        this.__displayedTexture = null;\r\n\r\n        /**\r\n         * Tags that can be used to identify/search for a specific element.\r\n         * @type {String[]}\r\n         */\r\n        this.__tags = null;\r\n\r\n        /**\r\n         * The tree's tags mapping.\r\n         * This contains all elements for all known tags, at all times.\r\n         * @type {Map}\r\n         */\r\n        this.__treeTags = null;\r\n\r\n        /**\r\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\r\n         * @type {boolean}\r\n         */\r\n        this.__tagRoot = false;\r\n\r\n        /**\r\n         * (Lazy-initialised) list of children owned by this elements.\r\n         * @type {ElementChildList}\r\n         */\r\n        this.__childList = null;\r\n\r\n        this._w = 0;\r\n\r\n        this._h = 0;\r\n    }\r\n\r\n    __start() {\r\n    }\r\n\r\n    get id() {\r\n        return this.__id;\r\n    }\r\n\r\n    set ref(ref) {\r\n        if (this.__ref !== ref) {\r\n            const charcode = ref.charCodeAt(0);\r\n            if (!Utils.isUcChar(charcode)) {\r\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\r\n            }\r\n            if (this.__ref !== null) {\r\n                this.removeTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.clearRef(this.__ref);\r\n                }\r\n            }\r\n\r\n            this.__ref = ref;\r\n\r\n            if (this.__ref) {\r\n                this._addTag(this.__ref);\r\n                if (this.__parent) {\r\n                    this.__parent.__childList.setRef(this.__ref, this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get ref() {\r\n        return this.__ref;\r\n    }\r\n\r\n    get core() {\r\n        return this.__core;\r\n    }\r\n\r\n    setAsRoot() {\r\n        this.__core.setAsRoot();\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n    }\r\n\r\n    get isRoot() {\r\n        return this.__core.isRoot;\r\n    }\r\n\r\n    _setParent(parent) {\r\n        if (this.__parent === parent) return;\r\n\r\n        if (this.__parent) {\r\n            this._unsetTagsParent();\r\n        }\r\n\r\n        this.__parent = parent;\r\n\r\n        if (parent) {\r\n            this._setTagsParent();\r\n        }\r\n\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n        this._updateCollision();\r\n\r\n        if (this.isRoot && parent) {\r\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\r\n        }\r\n    };\r\n\r\n    getDepth() {\r\n        let depth = 0;\r\n\r\n        let p = this.__parent;\r\n        while(p) {\r\n            depth++;\r\n            p = p.__parent;\r\n        }\r\n\r\n        return depth;\r\n    };\r\n\r\n    getAncestor(l) {\r\n        let p = this;\r\n        while (l > 0 && p.__parent) {\r\n            p = p.__parent;\r\n            l--;\r\n        }\r\n        return p;\r\n    };\r\n\r\n    getAncestors() {\r\n        const a = [];\r\n        let p = this;\r\n        while (p) {\r\n            a.push(p);\r\n            p = p.__parent;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getAncestorAtDepth(depth) {\r\n        let levels = this.getDepth() - depth;\r\n        if (levels < 0) {\r\n            return null;\r\n        }\r\n        return this.getAncestor(levels);\r\n    };\r\n\r\n    isAncestorOf(c) {\r\n        let p = c;\r\n        while(p = p.parent) {\r\n            if (this === p) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    getSharedAncestor(c) {\r\n        let o1 = this;\r\n        let o2 = c;\r\n        let l1 = o1.getDepth();\r\n        let l2 = o2.getDepth();\r\n        if (l1 > l2) {\r\n            o1 = o1.getAncestor(l1 - l2);\r\n        } else if (l2 > l1) {\r\n            o2 = o2.getAncestor(l2 - l1);\r\n        }\r\n\r\n        do {\r\n            if (o1 === o2) {\r\n                return o1;\r\n            }\r\n\r\n            o1 = o1.__parent;\r\n            o2 = o2.__parent;\r\n        } while (o1 && o2);\r\n\r\n        return null;\r\n    };\r\n\r\n    get attached() {\r\n        return this.__attached;\r\n    }\r\n\r\n    get enabled() {\r\n        return this.__enabled;\r\n    }\r\n\r\n    get active() {\r\n        return this.__active;\r\n    }\r\n\r\n    _isAttached() {\r\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\r\n    };\r\n\r\n    _isEnabled() {\r\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\r\n    };\r\n\r\n    _isActive() {\r\n        return this._isEnabled() && this.withinBoundsMargin;\r\n    };\r\n\r\n    /**\r\n     * Updates the 'attached' flag for this branch.\r\n     */\r\n    _updateAttachedFlag() {\r\n        let newAttached = this._isAttached();\r\n        if (this.__attached !== newAttached) {\r\n            this.__attached = newAttached;\r\n\r\n            if (newAttached) {\r\n                this._onSetup();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateAttachedFlag();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newAttached) {\r\n                this._onAttach();\r\n            } else {\r\n                this._onDetach();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Updates the 'enabled' flag for this branch.\r\n     */\r\n    _updateEnabledFlag() {\r\n        let newEnabled = this._isEnabled();\r\n        if (this.__enabled !== newEnabled) {\r\n            if (newEnabled) {\r\n                this._onEnabled();\r\n                this._setEnabledFlag();\r\n            } else {\r\n                this._onDisabled();\r\n                this._unsetEnabledFlag();\r\n            }\r\n\r\n            let children = this._children.get();\r\n            if (children) {\r\n                let m = children.length;\r\n                if (m > 0) {\r\n                    for (let i = 0; i < m; i++) {\r\n                        children[i]._updateEnabledFlag();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setEnabledFlag() {\r\n        this.__enabled = true;\r\n\r\n        // Force re-check of texture because dimensions might have changed (cutting).\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n\r\n        if (this.__texture) {\r\n            this.__texture.addElement(this);\r\n        }\r\n\r\n        if (this.withinBoundsMargin) {\r\n            this._setActiveFlag();\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.addElement(this.__core);\r\n        }\r\n\r\n    }\r\n\r\n    _unsetEnabledFlag() {\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this.__texture.removeElement(this);\r\n        }\r\n\r\n        if (this.__core.shader) {\r\n            this.__core.shader.removeElement(this.__core);\r\n        }\r\n\r\n        if (this._texturizer) {\r\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\r\n        }\r\n\r\n        this.__enabled = false;\r\n    }\r\n\r\n    _setActiveFlag() {\r\n        this.__active = true;\r\n\r\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\r\n        if (this.__texture) {\r\n            this.__texture.incActiveCount();\r\n        }\r\n\r\n        if (this.__texture) {\r\n            this._enableTexture();\r\n        }\r\n        this._onActive();\r\n    }\r\n\r\n    _unsetActiveFlag() {\r\n        if (this.__texture) {\r\n            this.__texture.decActiveCount();\r\n        }\r\n\r\n        this.__active = false;\r\n        if (this.__texture) {\r\n            this._disableTexture();\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            this.texturizer.deactivate();\r\n        }\r\n\r\n        this._onInactive();\r\n    }\r\n\r\n    _onSetup() {\r\n    }\r\n\r\n    _onAttach() {\r\n    }\r\n\r\n    _onDetach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n    }\r\n\r\n    _onDisabled() {\r\n    }\r\n\r\n    _onActive() {\r\n    }\r\n\r\n    _onInactive() {\r\n    }\r\n\r\n    _onResize() {\r\n    }\r\n\r\n    _getRenderWidth() {\r\n        if (this._w) {\r\n            return this._w;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderWidth();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderWidth();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    _getRenderHeight() {\r\n        if (this._h) {\r\n            return this._h;\r\n        } else if (this.__displayedTexture) {\r\n            return this.__displayedTexture.getRenderHeight();\r\n        } else if (this.__texture) {\r\n            // Texture already loaded, but not yet updated (probably because this element is not active).\r\n            return this.__texture.getRenderHeight();\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    get renderWidth() {\r\n        if (this.__enabled) {\r\n            // Render width is only maintained if this element is enabled.\r\n            return this.__core.getRenderWidth();\r\n        } else {\r\n            return this._getRenderWidth();\r\n        }\r\n    }\r\n\r\n    get renderHeight() {\r\n        if (this.__enabled) {\r\n            return this.__core.getRenderHeight();\r\n        } else {\r\n            return this._getRenderHeight();\r\n        }\r\n    }\r\n\r\n    get finalX() {\r\n        return this.__core.x;\r\n    }\r\n\r\n    get finalY() {\r\n        return this.__core.y;\r\n    }\r\n\r\n    get finalW() {\r\n        return this.__core.w;\r\n    }\r\n\r\n    get finalH() {\r\n        return this.__core.h;\r\n    }\r\n\r\n    textureIsLoaded() {\r\n        return this.__texture && this.__texture.isLoaded();\r\n    }\r\n\r\n    loadTexture() {\r\n        if (this.__texture) {\r\n            this.__texture.load();\r\n\r\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\r\n                // Loading the texture will have no effect on the dimensions of this element.\r\n                // Manually update them, so that calcs can be performed immediately in userland.\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    _enableTextureError() {\r\n        // txError event should automatically be re-triggered when a element becomes active.\r\n        const loadError = this.__texture.loadError;\r\n        if (loadError) {\r\n            this.emit('txError', loadError, this.__texture._source);\r\n        }\r\n    }\r\n\r\n    _enableTexture() {\r\n        if (this.__texture.isLoaded()) {\r\n            this._setDisplayedTexture(this.__texture);\r\n        } else {\r\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\r\n            this._setDisplayedTexture(null);\r\n\r\n            this._enableTextureError();\r\n        }\r\n    }\r\n\r\n    _disableTexture() {\r\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\r\n        // mw, mh for checking within bounds.\r\n        this._setDisplayedTexture(null);\r\n    }\r\n\r\n    get texture() {\r\n        return this.__texture;\r\n    }\r\n\r\n    set texture(v) {\r\n        let texture;\r\n        if (Utils.isObjectLiteral(v)) {\r\n            if (v.type) {\r\n                texture = new v.type(this.stage);\r\n            } else {\r\n                texture = this.texture;\r\n            }\r\n\r\n            if (texture) {\r\n                Base.patchObject(texture, v);\r\n            }\r\n        } else if (!v) {\r\n            texture = null;\r\n        } else {\r\n            if (v.isTexture) {\r\n                texture = v;\r\n            } else if (v.isTextureSource) {\r\n                texture = new SourceTexture(this.stage);\r\n                texture.textureSource = v;\r\n            } else {\r\n                console.error(\"[Lightning] Please specify a texture type.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        const prevTexture = this.__texture;\r\n        if (texture !== prevTexture) {\r\n            this.__texture = texture;\r\n\r\n            if (this.__texture) {\r\n                if (this.__enabled) {\r\n                    this.__texture.addElement(this);\r\n\r\n                    if (this.withinBoundsMargin) {\r\n                        if (this.__texture.isLoaded()) {\r\n                            this._setDisplayedTexture(this.__texture);\r\n                        } else {\r\n                            this._enableTextureError();\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\r\n                this._setDisplayedTexture(null);\r\n            }\r\n\r\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\r\n                prevTexture.removeElement(this);\r\n            }\r\n\r\n            this._updateDimensions();\r\n        }\r\n    }\r\n\r\n    get displayedTexture() {\r\n        return this.__displayedTexture;\r\n    }\r\n\r\n    _setDisplayedTexture(v) {\r\n        let prevTexture = this.__displayedTexture;\r\n\r\n        if (prevTexture && (v !== prevTexture)) {\r\n            if (this.__texture !== prevTexture) {\r\n                // The old displayed texture is deprecated.\r\n                prevTexture.removeElement(this);\r\n            }\r\n        }\r\n\r\n        const prevSource = this.__core.displayedTextureSource;\r\n        const sourceChanged = (v ? v._source : null) !== prevSource;\r\n\r\n        this.__displayedTexture = v;\r\n        this._updateDimensions();\r\n\r\n        if (this.__displayedTexture) {\r\n            if (sourceChanged) {\r\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\r\n                this._updateTextureCoords();\r\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\r\n            }\r\n        } else {\r\n            this.__core.setDisplayedTextureSource(null);\r\n        }\r\n\r\n        if (sourceChanged) {\r\n            if (this.__displayedTexture) {\r\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\r\n                this.emit('txLoaded', this.__displayedTexture);\r\n            } else {\r\n                this.emit('txUnloaded', this.__displayedTexture);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextureSourceLoaded() {\r\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\r\n        if (this.active) {\r\n            // We may be dealing with a texture reloading, so we must force update.\r\n            this._setDisplayedTexture(this.__texture);\r\n        }\r\n    };\r\n\r\n    onTextureSourceLoadError(e) {\r\n        this.emit('txError', e, this.__texture._source);\r\n    };\r\n\r\n    forceRenderUpdate() {\r\n        this.__core.setHasRenderUpdates(3);\r\n    }\r\n\r\n    onDisplayedTextureClippingChanged() {\r\n        this._updateDimensions();\r\n        this._updateTextureCoords();\r\n    };\r\n\r\n    onPrecisionChanged() {\r\n        this._updateDimensions();\r\n    };\r\n\r\n    onDimensionsChanged(w, h) {\r\n        if (this.texture instanceof TextTexture) {\r\n            this.texture.w = w;\r\n            this.texture.h = h;\r\n            this.w = w;\r\n            this.h = h;\r\n        }\r\n    }\r\n\r\n    _updateDimensions() {\r\n        let w = this._getRenderWidth();\r\n        let h = this._getRenderHeight();\r\n\r\n        let unknownSize = false;\r\n        if (!w || !h) {\r\n            if (!this.__displayedTexture && this.__texture) {\r\n                // We use a 'max width' replacement instead in the ElementCore calcs.\r\n                // This makes sure that it is able to determine withinBounds.\r\n                w = w || this.__texture.mw;\r\n                h = h || this.__texture.mh;\r\n\r\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\r\n                    unknownSize = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.__core.setDimensions(w, h, unknownSize)) {\r\n            this._onResize();\r\n        }\r\n    }\r\n\r\n    _updateTextureCoords() {\r\n        if (this.displayedTexture && this.displayedTexture._source) {\r\n            let displayedTexture = this.displayedTexture;\r\n            let displayedTextureSource = this.displayedTexture._source;\r\n\r\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\r\n            if (displayedTexture.clipping) {\r\n                // Apply texture clipping.\r\n                let w = displayedTextureSource.getRenderWidth();\r\n                let h = displayedTextureSource.getRenderHeight();\r\n                let iw, ih, rw, rh;\r\n                iw = 1 / w;\r\n                ih = 1 / h;\r\n\r\n                if (displayedTexture.pw) {\r\n                    rw = (displayedTexture.pw) * iw;\r\n                } else {\r\n                    rw = (w - displayedTexture.px) * iw;\r\n                }\r\n\r\n                if (displayedTexture.ph) {\r\n                    rh = displayedTexture.ph * ih;\r\n                } else {\r\n                    rh = (h - displayedTexture.py) * ih;\r\n                }\r\n\r\n                iw *= (displayedTexture.px);\r\n                ih *= (displayedTexture.py);\r\n\r\n                tx1 = iw;\r\n                ty1 = ih;\r\n                tx2 = tx2 * rw + iw;\r\n                ty2 = ty2 * rh + ih;\r\n\r\n                tx1 = Math.max(0, tx1);\r\n                ty1 = Math.max(0, ty1);\r\n                tx2 = Math.min(1, tx2);\r\n                ty2 = Math.min(1, ty2);\r\n            }\r\n\r\n            if (displayedTextureSource._flipTextureY) {\r\n                let tempty = ty2;\r\n                ty2 = ty1;\r\n                ty1 = tempty;\r\n            }\r\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\r\n        }\r\n    }\r\n\r\n    getCornerPoints() {\r\n        return this.__core.getCornerPoints();\r\n    }\r\n\r\n    _unsetTagsParent() {\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                // Remove from treeTags.\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    let parentTreeTags = p.__treeTags.get(tag);\r\n                    parentTreeTags.delete(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        let tags = null;\r\n        let n = 0;\r\n        if (this.__treeTags) {\r\n            if (!this.__tagRoot) {\r\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\r\n                n = tags.length;\r\n\r\n                if (n > 0) {\r\n                    for (let i = 0; i < n; i++) {\r\n                        let tagSet = this.__treeTags.get(tags[i]);\r\n\r\n                        // Remove from treeTags.\r\n                        let p = this;\r\n                        while ((p = p.__parent)) {\r\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\r\n\r\n                            tagSet.forEach(function (comp) {\r\n                                parentTreeTags.delete(comp);\r\n                            });\r\n\r\n                            if (p.__tagRoot) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _setTagsParent() {\r\n        // Just copy over the 'local' tags.\r\n        if (this.__tags) {\r\n            this.__tags.forEach((tag) => {\r\n                let p = this;\r\n                while (p = p.__parent) {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                    if (p.__tagRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.__treeTags && this.__treeTags.size) {\r\n            if (!this.__tagRoot) {\r\n                this.__treeTags.forEach((tagSet, tag) => {\r\n                    let p = this;\r\n                    while (!p.__tagRoot && (p = p.__parent)) {\r\n                        if (p.__tagRoot) {\r\n                            // Do not copy all subs.\r\n                        }\r\n                        if (!p.__treeTags) {\r\n                            p.__treeTags = new Map();\r\n                        }\r\n\r\n                        let s = p.__treeTags.get(tag);\r\n                        if (!s) {\r\n                            s = new Set();\r\n                            p.__treeTags.set(tag, s);\r\n                        }\r\n\r\n                        tagSet.forEach(function (comp) {\r\n                            s.add(comp);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    _getByTag(tag) {\r\n        if (!this.__treeTags) {\r\n            return [];\r\n        }\r\n        let t = this.__treeTags.get(tag);\r\n        return t ? Utils.setToArray(t) : [];\r\n    };\r\n\r\n    getTags() {\r\n        return this.__tags ? this.__tags : [];\r\n    };\r\n\r\n    setTags(tags) {\r\n        tags = tags.reduce((acc, tag) => {\r\n            return acc.concat(tag.split(' '));\r\n        }, []);\r\n\r\n        if (this.__ref) {\r\n            tags.push(this.__ref);\r\n        }\r\n\r\n        let i, n = tags.length;\r\n        let removes = [];\r\n        let adds = [];\r\n        for (i = 0; i < n; i++) {\r\n            if (!this.hasTag(tags[i])) {\r\n                adds.push(tags[i]);\r\n            }\r\n        }\r\n\r\n        let currentTags = this.tags || [];\r\n        n = currentTags.length;\r\n        for (i = 0; i < n; i++) {\r\n            if (tags.indexOf(currentTags[i]) == -1) {\r\n                removes.push(currentTags[i]);\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < removes.length; i++) {\r\n            this.removeTag(removes[i]);\r\n        }\r\n\r\n        for (i = 0; i < adds.length; i++) {\r\n            this.addTag(adds[i]);\r\n        }\r\n    }\r\n\r\n    addTag(tag) {\r\n        if (tag.indexOf(' ') === -1) {\r\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                this._throwError(\"Tag may not start with an upper case character.\");\r\n            }\r\n\r\n            this._addTag(tag);\r\n        } else {\r\n            const tags = tag.split(' ');\r\n            for (let i = 0, m = tags.length; i < m; i++) {\r\n                const tag = tags[i];\r\n\r\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\r\n                    this._throwError(\"Tag may not start with an upper case character.\");\r\n                }\r\n\r\n                this._addTag(tag);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addTag(tag) {\r\n        if (!this.__tags) {\r\n            this.__tags = [];\r\n        }\r\n        if (this.__tags.indexOf(tag) === -1) {\r\n            this.__tags.push(tag);\r\n\r\n            // Add to treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    if (!p.__treeTags) {\r\n                        p.__treeTags = new Map();\r\n                    }\r\n\r\n                    let s = p.__treeTags.get(tag);\r\n                    if (!s) {\r\n                        s = new Set();\r\n                        p.__treeTags.set(tag, s);\r\n                    }\r\n\r\n                    s.add(this);\r\n\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    removeTag(tag) {\r\n        let i = this.__tags.indexOf(tag);\r\n        if (i !== -1) {\r\n            this.__tags.splice(i, 1);\r\n\r\n            // Remove from treeTags hierarchy.\r\n            let p = this.__parent;\r\n            if (p) {\r\n                do {\r\n                    let list = p.__treeTags.get(tag);\r\n                    if (list) {\r\n                        list.delete(this);\r\n                    }\r\n                } while (!p.__tagRoot && (p = p.__parent));\r\n            }\r\n        }\r\n    }\r\n\r\n    hasTag(tag) {\r\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\r\n    }\r\n\r\n    /**\r\n     * Returns one of the elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element}\r\n     */\r\n    _tag(tag) {\r\n        if (tag.indexOf(\".\") !== -1) {\r\n            return this.mtag(tag)[0];\r\n        } else {\r\n            if (this.__treeTags) {\r\n                let t = this.__treeTags.get(tag);\r\n                if (t) {\r\n                    const item = t.values().next();\r\n                    return item ? item.value : undefined;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    get tag() {\r\n        return this._tag;\r\n    }\r\n\r\n    set tag(t) {\r\n        this.tags = t;\r\n    }\r\n\r\n    /**\r\n     * Returns all elements from the subtree that have this tag.\r\n     * @param {string} tag\r\n     * @returns {Element[]}\r\n     */\r\n    mtag(tag) {\r\n        let idx = tag.indexOf(\".\");\r\n        if (idx >= 0) {\r\n            let parts = tag.split('.');\r\n            let res = this._getByTag(parts[0]);\r\n            let level = 1;\r\n            let c = parts.length;\r\n            while (res.length && level < c) {\r\n                let resn = [];\r\n                for (let j = 0, n = res.length; j < n; j++) {\r\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\r\n                }\r\n\r\n                res = resn;\r\n                level++;\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._getByTag(tag);\r\n        }\r\n    };\r\n\r\n    stag(tag, settings) {\r\n        let t = this.mtag(tag);\r\n        let n = t.length;\r\n        for (let i = 0; i < n; i++) {\r\n            Base.patchObject(t[i], settings);\r\n        }\r\n    }\r\n\r\n    get tagRoot() {\r\n        return this.__tagRoot;\r\n    }\r\n\r\n    set tagRoot(v) {\r\n        if (this.__tagRoot !== v) {\r\n            if (!v) {\r\n                this._setTagsParent();\r\n            } else {\r\n                this._unsetTagsParent();\r\n            }\r\n\r\n            this.__tagRoot = v;\r\n        }\r\n    }\r\n\r\n    sel(path) {\r\n        const results = this.select(path);\r\n        if (results.length) {\r\n            return results[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    select(path) {\r\n        if (path.indexOf(\",\") !== -1) {\r\n            let selectors = path.split(',');\r\n            let res = [];\r\n            for (let i = 0; i < selectors.length; i++) {\r\n                res = res.concat(this._select(selectors[i]));\r\n            }\r\n            return res;\r\n        } else {\r\n            return this._select(path);\r\n        }\r\n    }\r\n\r\n    _select(path) {\r\n        if (path === \"\") return [this];\r\n\r\n\r\n        let pointIdx = path.indexOf(\".\");\r\n        let arrowIdx = path.indexOf(\">\");\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            // Quick case.\r\n            return this.mtag(path);\r\n        }\r\n\r\n        // Detect by first char.\r\n        let isRef;\r\n        if (arrowIdx === 0) {\r\n            isRef = true;\r\n            path = path.substr(1);\r\n        } else if (pointIdx === 0) {\r\n            isRef = false;\r\n            path = path.substr(1);\r\n        } else {\r\n            isRef = false;\r\n        }\r\n\r\n        return this._selectChilds(path, isRef);\r\n    }\r\n\r\n    _selectChilds(path, isRef) {\r\n        const pointIdx = path.indexOf(\".\");\r\n        const arrowIdx = path.indexOf(\">\");\r\n\r\n        if (pointIdx === -1 && arrowIdx === -1) {\r\n            if (isRef) {\r\n                const ref = this.getByRef(path);\r\n                return ref ? [ref] : [];\r\n            } else {\r\n                return this.mtag(path);\r\n            }\r\n        }\r\n\r\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\r\n            let next;\r\n            const str = path.substr(0, pointIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(pointIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, false));\r\n            }\r\n            return total;\r\n        } else {\r\n            let next;\r\n            const str = path.substr(0, arrowIdx);\r\n            if (isRef) {\r\n                const ref = this.getByRef(str);\r\n                next = ref ? [ref] : [];\r\n            } else {\r\n                next = this.mtag(str);\r\n            }\r\n            let total = [];\r\n            const subPath = path.substr(arrowIdx + 1);\r\n            for (let i = 0, n = next.length; i < n; i++) {\r\n                total = total.concat(next[i]._selectChilds(subPath, true));\r\n            }\r\n            return total;\r\n        }\r\n    }\r\n\r\n    getByRef(ref) {\r\n        return this.childList.getByRef(ref);\r\n    }\r\n\r\n    getLocationString() {\r\n        let i;\r\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\r\n        let localTags = this.getTags();\r\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\r\n        if (this.ref) {\r\n            str += \":[\" + i + \"]\" + this.ref;\r\n        } else if (localTags.length) {\r\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\r\n        } else {\r\n            str += \":[\" + i + \"]#\" + this.id;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    toString() {\r\n        let obj = this.getSettings();\r\n        return Element.getPrettyString(obj, \"\");\r\n    };\r\n\r\n    static getPrettyString(obj, indent) {\r\n        let children = obj.children;\r\n        delete obj.children;\r\n\r\n\r\n        // Convert singular json settings object.\r\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\r\n        let str = JSON.stringify(obj, function (k, v) {\r\n            if (colorKeys.indexOf(k) !== -1) {\r\n                return \"COLOR[\" + v.toString(16) + \"]\";\r\n            }\r\n            return v;\r\n        });\r\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\r\n\r\n        if (children) {\r\n            let childStr = \"\";\r\n            if (Utils.isObjectLiteral(children)) {\r\n                let refs = Object.keys(children);\r\n                childStr = \"\";\r\n                for (let i = 0, n = refs.length; i < n; i++) {\r\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\r\n                    delete children[refs[i]].ref;\r\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\r\n                }\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\r\n            } else {\r\n                let n = children.length;\r\n                childStr = \"[\";\r\n                for (let i = 0; i < n; i++) {\r\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\r\n                }\r\n                childStr += indent + \"]}\";\r\n                let isEmpty = (str === \"{}\");\r\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\r\n            }\r\n\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    getSettings() {\r\n        let settings = this.getNonDefaults();\r\n\r\n        let children = this._children.get();\r\n        if (children) {\r\n            let n = children.length;\r\n            if (n) {\r\n                const childArray = [];\r\n                let missing = false;\r\n                for (let i = 0; i < n; i++) {\r\n                    childArray.push(children[i].getSettings());\r\n                    missing = missing || !children[i].ref;\r\n                }\r\n\r\n                if (!missing) {\r\n                    settings.children = {}\r\n                    childArray.forEach(child => {\r\n                        settings.children[child.ref] = child;\r\n                    });\r\n                } else {\r\n                    settings.children = childArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        settings.id = this.id;\r\n\r\n        return settings;\r\n    }\r\n\r\n    getNonDefaults() {\r\n        let settings = {};\r\n\r\n        if (this.constructor !== Element) {\r\n            settings.type = this.constructor.name;\r\n        }\r\n\r\n        if (this.__ref) {\r\n            settings.ref = this.__ref;\r\n        }\r\n\r\n        if (this.__tags && this.__tags.length) {\r\n            settings.tags = this.__tags;\r\n        }\r\n\r\n        if (this.x !== 0) settings.x = this.x;\r\n        if (this.y !== 0) settings.y = this.y;\r\n        if (this.w !== 0) settings.w = this.w;\r\n        if (this.h !== 0) settings.h = this.h;\r\n\r\n        if (this.scaleX === this.scaleY) {\r\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\r\n        } else {\r\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\r\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\r\n        }\r\n\r\n        if (this.pivotX === this.pivotY) {\r\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\r\n        } else {\r\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\r\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\r\n        }\r\n\r\n        if (this.mountX === this.mountY) {\r\n            if (this.mountX !== 0) settings.mount = this.mountX;\r\n        } else {\r\n            if (this.mountX !== 0) settings.mountX = this.mountX;\r\n            if (this.mountY !== 0) settings.mountY = this.mountY;\r\n        }\r\n\r\n        if (this.alpha !== 1) settings.alpha = this.alpha;\r\n\r\n        if (!this.visible) settings.visible = false;\r\n\r\n        if (this.rotation !== 0) settings.rotation = this.rotation;\r\n\r\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\r\n        } else {\r\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\r\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\r\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\r\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\r\n        }\r\n\r\n        if (this.zIndex) settings.zIndex = this.zIndex;\r\n\r\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\r\n\r\n        if (this.clipping) settings.clipping = this.clipping;\r\n\r\n        if (!this.clipbox) settings.clipbox = this.clipbox;\r\n\r\n        if (this.__texture) {\r\n            let tnd = this.__texture.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.texture = tnd;\r\n            }\r\n        }\r\n\r\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\r\n            let tnd = this.shader.getNonDefaults();\r\n            if (Object.keys(tnd).length) {\r\n                settings.shader = tnd;\r\n            }\r\n        }\r\n\r\n        if (this._hasTexturizer()) {\r\n            if (this.texturizer.enabled) {\r\n                settings.renderToTexture = this.texturizer.enabled;\r\n            }\r\n            if (this.texturizer.lazy) {\r\n                settings.renderToTextureLazy = this.texturizer.lazy;\r\n            }\r\n            if (this.texturizer.colorize) {\r\n                settings.colorizeResultTexture = this.texturizer.colorize;\r\n            }\r\n            if (this.texturizer.renderOffscreen) {\r\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\r\n            }\r\n        }\r\n\r\n        return settings;\r\n    };\r\n\r\n    static getGetter(propertyPath) {\r\n        let getter = Element.PROP_GETTERS.get(propertyPath);\r\n        if (!getter) {\r\n            getter = new Function('obj', 'return obj.' + propertyPath);\r\n            Element.PROP_GETTERS.set(propertyPath, getter);\r\n        }\r\n        return getter;\r\n    }\r\n\r\n    static getSetter(propertyPath) {\r\n        let setter = Element.PROP_SETTERS.get(propertyPath);\r\n        if (!setter) {\r\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\r\n            Element.PROP_SETTERS.set(propertyPath, setter);\r\n        }\r\n        return setter;\r\n    }\r\n\r\n    get withinBoundsMargin() {\r\n        return this.__core._withinBoundsMargin;\r\n    }\r\n\r\n    _enableWithinBoundsMargin() {\r\n        // Iff enabled, this toggles the active flag.\r\n        if (this.__enabled) {\r\n            this._setActiveFlag();\r\n        }\r\n    }\r\n\r\n    _disableWithinBoundsMargin() {\r\n        // Iff active, this toggles the active flag.\r\n        if (this.__active) {\r\n            this._unsetActiveFlag();\r\n        }\r\n    }\r\n\r\n    set boundsMargin(v) {\r\n        if (!Array.isArray(v) && v !== null) {\r\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\r\n        }\r\n        this.__core.boundsMargin = v;\r\n    }\r\n\r\n    get boundsMargin() {\r\n        return this.__core.boundsMargin;\r\n    }\r\n\r\n    get x() {\r\n        return this.__core.offsetX;\r\n    }\r\n\r\n    set x(v) {\r\n        this.__core.offsetX = v;\r\n    }\r\n\r\n    get y() {\r\n        return this.__core.offsetY;\r\n    }\r\n\r\n    set y(v) {\r\n        this.__core.offsetY = v;\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._w = 0;\r\n            this.__core.funcW = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._w !== v) {\r\n                this.__core.disableFuncW();\r\n                this._w = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        if (Utils.isFunction(v)) {\r\n            this._h = 0;\r\n            this.__core.funcH = v;\r\n        } else {\r\n            v = Math.max(v, 0);\r\n            if (this._h !== v) {\r\n                this.__core.disableFuncH();\r\n                this._h = v;\r\n                this._updateDimensions();\r\n            }\r\n        }\r\n    }\r\n\r\n    get collision() {\r\n        return this._collision;\r\n    }\r\n\r\n    set collision(v) {\r\n        this._collision = v;\r\n    }\r\n\r\n    _updateCollision() {\r\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\r\n            /**\r\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\r\n             * This narrows down the search for elements with active collision.\r\n            */\r\n            this.__parent.collision = 2;\r\n        }\r\n    }\r\n\r\n    get scaleX() {\r\n        return this.__core.scaleX;\r\n    }\r\n\r\n    set scaleX(v) {\r\n        this.__core.scaleX = v;\r\n    }\r\n\r\n    get scaleY() {\r\n        return this.__core.scaleY;\r\n    }\r\n\r\n    set scaleY(v) {\r\n        this.__core.scaleY = v;\r\n    }\r\n\r\n    get scale() {\r\n        return this.__core.scale;\r\n    }\r\n\r\n    set scale(v) {\r\n        this.__core.scale = v;\r\n    }\r\n\r\n    get pivotX() {\r\n        return this.__core.pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this.__core.pivotX = v;\r\n    }\r\n\r\n    get pivotY() {\r\n        return this.__core.pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this.__core.pivotY = v;\r\n    }\r\n\r\n    get pivot() {\r\n        return this.__core.pivot;\r\n    }\r\n\r\n    set pivot(v) {\r\n        this.__core.pivot = v;\r\n    }\r\n\r\n    get mountX() {\r\n        return this.__core.mountX;\r\n    }\r\n\r\n    set mountX(v) {\r\n        this.__core.mountX = v;\r\n    }\r\n\r\n    get mountY() {\r\n        return this.__core.mountY;\r\n    }\r\n\r\n    set mountY(v) {\r\n        this.__core.mountY = v;\r\n    }\r\n\r\n    get mount() {\r\n        return this.__core.mount;\r\n    }\r\n\r\n    set mount(v) {\r\n        this.__core.mount = v;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.__core.rotation;\r\n    }\r\n\r\n    set rotation(v) {\r\n        this.__core.rotation = v;\r\n    }\r\n\r\n    get alpha() {\r\n        return this.__core.alpha;\r\n    }\r\n\r\n    set alpha(v) {\r\n        this.__core.alpha = v;\r\n    }\r\n\r\n    get visible() {\r\n        return this.__core.visible;\r\n    }\r\n\r\n    set visible(v) {\r\n        this.__core.visible = v;\r\n    }\r\n    \r\n    get colorUl() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set colorUl(v) {\r\n        this.__core.colorUl = v;\r\n    }\r\n\r\n    get colorUr() {\r\n        return this.__core.colorUr;\r\n    }\r\n\r\n    set colorUr(v) {\r\n        this.__core.colorUr = v;\r\n    }\r\n\r\n    get colorBl() {\r\n        return this.__core.colorBl;\r\n    }\r\n\r\n    set colorBl(v) {\r\n        this.__core.colorBl = v;\r\n    }\r\n\r\n    get colorBr() {\r\n        return this.__core.colorBr;\r\n    }\r\n\r\n    set colorBr(v) {\r\n        this.__core.colorBr = v;\r\n    }\r\n\r\n    get color() {\r\n        return this.__core.colorUl;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorTop() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorTop(v) {\r\n        if (this.colorUl !== v || this.colorUr !== v) {\r\n            this.colorUl = v;\r\n            this.colorUr = v;\r\n        }\r\n    }\r\n\r\n    get colorBottom() {\r\n        return this.colorBl;\r\n    }\r\n\r\n    set colorBottom(v) {\r\n        if (this.colorBl !== v || this.colorBr !== v) {\r\n            this.colorBl = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get colorLeft() {\r\n        return this.colorUl;\r\n    }\r\n\r\n    set colorLeft(v) {\r\n        if (this.colorUl !== v || this.colorBl !== v) {\r\n            this.colorUl = v;\r\n            this.colorBl = v;\r\n        }\r\n    }\r\n\r\n    get colorRight() {\r\n        return this.colorUr;\r\n    }\r\n\r\n    set colorRight(v) {\r\n        if (this.colorUr !== v || this.colorBr !== v) {\r\n            this.colorUr = v;\r\n            this.colorBr = v;\r\n        }\r\n    }\r\n\r\n    get zIndex() {return this.__core.zIndex}\r\n    set zIndex(v) {\r\n        this.__core.zIndex = v;\r\n    }\r\n\r\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\r\n    set forceZIndexContext(v) {\r\n        this.__core.forceZIndexContext = v;\r\n    }\r\n\r\n    get clipping() {return this.__core.clipping}\r\n    set clipping(v) {\r\n        this.__core.clipping = v;\r\n    }\r\n\r\n    get clipbox() {return this.__core.clipbox}\r\n    set clipbox(v) {\r\n        this.__core.clipbox = v;\r\n    }\r\n\r\n    get tags() {\r\n        return this.getTags();\r\n    }\r\n\r\n    set tags(v) {\r\n        if (!Array.isArray(v)) v = [v];\r\n        this.setTags(v);\r\n    }\r\n\r\n    set t(v) {\r\n        this.tags = v;\r\n    }\r\n\r\n    get _children() {\r\n        if (!this.__childList) {\r\n            this.__childList = new ElementChildList(this, false);\r\n        }\r\n        return this.__childList;\r\n    }\r\n\r\n    get childList() {\r\n        if (!this._allowChildrenAccess()) {\r\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\r\n        }\r\n        return this._children;\r\n    }\r\n\r\n    hasChildren() {\r\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return true;\r\n    }\r\n\r\n    get children() {\r\n        return this.childList.get();\r\n    }\r\n\r\n    set children(children) {\r\n        this.childList.patch(children);\r\n    }\r\n\r\n    add(o) {\r\n        return this.childList.a(o);\r\n    }\r\n\r\n    get p() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get parent() {\r\n        return this.__parent;\r\n    }\r\n\r\n    get src() {\r\n        if (this.texture && this.texture instanceof ImageTexture) {\r\n            return this.texture._src;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    set src(v) {\r\n        const texture = new ImageTexture(this.stage);\r\n        texture.src = v;\r\n        this.texture = texture;\r\n    }\r\n\r\n    set mw(v) {\r\n        if (this.texture) {\r\n            this.texture.mw = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mw after setting a texture.');\r\n        }\r\n    }\r\n\r\n    set mh(v) {\r\n        if (this.texture) {\r\n            this.texture.mh = v;\r\n            this._updateDimensions();\r\n        } else {\r\n            this._throwError('Please set mh after setting a texture.');\r\n        }\r\n    }\r\n\r\n    get rect() {\r\n        return (this.texture === this.stage.rectangleTexture);\r\n    }\r\n\r\n    set rect(v) {\r\n        if (v) {\r\n            this.texture = this.stage.rectangleTexture;\r\n        } else {\r\n            this.texture = null;\r\n        }\r\n    }\r\n\r\n    enableTextTexture() {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.texture = new TextTexture(this.stage);\r\n\r\n            if (!this.texture.w && !this.texture.h) {\r\n                // Inherit dimensions from element.\r\n                // This allows userland to set dimensions of the Element and then later specify the text.\r\n                this.texture.w = this.w;\r\n                this.texture.h = this.h;\r\n            }\r\n        }\r\n        return this.texture;\r\n    }\r\n\r\n    get text() {\r\n        if (this.texture && (this.texture instanceof TextTexture)) {\r\n            return this.texture;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set text(v) {\r\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\r\n            this.enableTextTexture();\r\n        }\r\n        if (Utils.isString(v)) {\r\n            this.texture.text = v;\r\n        } else {\r\n            this.texture.patch(v);\r\n        }\r\n    }\r\n\r\n    set onUpdate(f) {\r\n        this.__core.onUpdate = f;\r\n    }\r\n\r\n    set onAfterCalcs(f) {\r\n        this.__core.onAfterCalcs = f;\r\n    }\r\n\r\n    set onAfterUpdate(f) {\r\n        this.__core.onAfterUpdate = f;\r\n    }\r\n\r\n    forceUpdate() {\r\n        // Make sure that the update loop is run.\r\n        this.__core._setHasUpdates();\r\n    }\r\n\r\n    get shader() {\r\n        return this.__core.shader;\r\n    }\r\n\r\n    set shader(v) {\r\n        if (Utils.isObjectLiteral(v) && !v.type) {\r\n            // Setting properties on an existing shader.\r\n            if (this.shader) {\r\n                this.shader.patch(v);\r\n            }\r\n        } else {\r\n            const shader = Shader.create(this.stage, v);\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.removeElement(this.__core);\r\n            }\r\n\r\n            this.__core.shader = shader;\r\n\r\n            if (this.__enabled && this.__core.shader) {\r\n                this.__core.shader.addElement(this.__core);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hasTexturizer() {\r\n        return !!this.__core._texturizer;\r\n    }\r\n\r\n    get renderToTexture() {\r\n        return this.rtt\r\n    }\r\n\r\n    set renderToTexture(v) {\r\n        this.rtt = v\r\n    }\r\n\r\n    get rtt() {\r\n        return this._hasTexturizer() && this.texturizer.enabled;\r\n    }\r\n\r\n    set rtt(v) {\r\n        this.texturizer.enabled = v;\r\n    }\r\n\r\n    get rttLazy() {\r\n        return this._hasTexturizer() && this.texturizer.lazy;\r\n    }\r\n\r\n    set rttLazy(v) {\r\n        this.texturizer.lazy = v;\r\n    }\r\n\r\n    get renderOffscreen() {\r\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\r\n    }\r\n\r\n    set renderOffscreen(v) {\r\n        this.texturizer.renderOffscreen = v;\r\n    }\r\n\r\n    get colorizeResultTexture() {\r\n        return this._hasTexturizer() && this.texturizer.colorize;\r\n    }\r\n\r\n    set colorizeResultTexture(v) {\r\n        this.texturizer.colorize = v;\r\n    }\r\n\r\n    getTexture() {\r\n        return this.texturizer._getTextureSource();\r\n    }\r\n\r\n    get texturizer() {\r\n        return this.__core.texturizer;\r\n    }\r\n\r\n    patch(settings) {\r\n        let paths = Object.keys(settings);\r\n\r\n        for (let i = 0, n = paths.length; i < n; i++) {\r\n            let path = paths[i];\r\n            const v = settings[path];\r\n\r\n            const firstCharCode = path.charCodeAt(0);\r\n            if (Utils.isUcChar(firstCharCode)) {\r\n                // Ref.\r\n                const child = this.getByRef(path);\r\n                if (!child) {\r\n                    if (v !== undefined) {\r\n                        // Add to list immediately.\r\n                        let c;\r\n                        if (Utils.isObjectLiteral(v)) {\r\n                            // Catch this case to capture createMode flag.\r\n                            c = this.childList.createItem(v);\r\n                            c.patch(v);\r\n                        } else if (Utils.isObject(v)) {\r\n                            c = v;\r\n                        }\r\n                        if (c.isElement) {\r\n                            c.ref = path;\r\n                        }\r\n\r\n                        this.childList.a(c);\r\n                    }\r\n                } else {\r\n                    if (v === undefined) {\r\n                        if (child.parent) {\r\n                            child.parent.childList.remove(child);\r\n                        }\r\n                    } else if (Utils.isObjectLiteral(v)) {\r\n                        child.patch(v);\r\n                    } else if (v.isElement) {\r\n                        // Replace element by new element.\r\n                        v.ref = path;\r\n                        this.childList.replace(v, child);\r\n                    } else {\r\n                        this._throwError(\"Unexpected value for path: \" + path);\r\n                    }\r\n                }\r\n            } else {\r\n                // Property.\r\n                Base.patchObjectProperty(this, path, v);\r\n            }\r\n        }\r\n    }\r\n\r\n    _throwError(message) {\r\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\r\n    }\r\n\r\n    animation(settings) {\r\n        return this.stage.animations.createAnimation(this, settings);\r\n    }\r\n\r\n    transition(property, settings = null) {\r\n        if (settings === null) {\r\n            return this._getTransition(property);\r\n        } else {\r\n            this._setTransition(property, settings);\r\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set transitions(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            this.transition(property, object[property]);\r\n        });\r\n    }\r\n\r\n    set smooth(object) {\r\n        let keys = Object.keys(object);\r\n        keys.forEach(property => {\r\n            let value = object[property];\r\n            if (Array.isArray(value)) {\r\n                this.setSmooth(property, value[0], value[1]);\r\n            } else {\r\n                this.setSmooth(property, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    fastForward(property) {\r\n        if (this._transitions) {\r\n            let t = this._transitions[property];\r\n            if (t && t.isTransition) {\r\n                t.finish();\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTransition(property) {\r\n        if (!this._transitions) {\r\n            this._transitions = {};\r\n        }\r\n        let t = this._transitions[property];\r\n        if (!t) {\r\n            // Create default transition.\r\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\r\n        } else if (t.isTransitionSettings) {\r\n            // Upgrade to 'real' transition.\r\n            t = new Transition(\r\n                this.stage.transitions,\r\n                t,\r\n                this,\r\n                property\r\n            );\r\n        }\r\n        this._transitions[property] = t;\r\n        return t;\r\n    }\r\n\r\n    _setTransition(property, settings) {\r\n        if (!settings) {\r\n            this._removeTransition(property);\r\n        } else {\r\n            if (Utils.isObjectLiteral(settings)) {\r\n                // Convert plain object to proper settings object.\r\n                settings = this.stage.transitions.createSettings(settings);\r\n            }\r\n\r\n            if (!this._transitions) {\r\n                this._transitions = {};\r\n            }\r\n\r\n            let current = this._transitions[property];\r\n            if (current && current.isTransition) {\r\n                // Runtime settings change.\r\n                current.settings = settings;\r\n                return current;\r\n            } else {\r\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\r\n                this._transitions[property] = settings;\r\n            }\r\n        }\r\n    }\r\n\r\n    _removeTransition(property) {\r\n        if (this._transitions) {\r\n            delete this._transitions[property];\r\n        }\r\n    }\r\n\r\n    getSmooth(property, v) {\r\n        let t = this._getTransition(property);\r\n        if (t && t.isAttached()) {\r\n            return t.targetValue;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setSmooth(property, v, settings) {\r\n        if (settings) {\r\n            this._setTransition(property, settings);\r\n        }\r\n        let t = this._getTransition(property);\r\n        t.start(v);\r\n        return t;\r\n    }\r\n\r\n    get flex() {\r\n        return this.__core.flex;\r\n    }\r\n\r\n    set flex(v) {\r\n        this.__core.flex = v;\r\n    }\r\n\r\n    get flexItem() {\r\n        return this.__core.flexItem;\r\n    }\r\n\r\n    set flexItem(v) {\r\n        this.__core.flexItem = v;\r\n    }\r\n\r\n    get ignoreRTL() {\r\n        return this.__core.ignoreRTL;\r\n    }\r\n\r\n    set ignoreRTL(v) {\r\n        this.__core.ignoreRTL = v;\r\n    }\r\n\r\n    static isColorProperty(property) {\r\n        return property.toLowerCase().indexOf(\"color\") >= 0;\r\n    }\r\n\r\n    static getMerger(property) {\r\n        if (Element.isColorProperty(property)) {\r\n            return StageUtils.mergeColors;\r\n        } else {\r\n            return StageUtils.mergeNumbers;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        const ref = [`${this.constructor.name}`];\r\n        const tree = {};\r\n        tree[ref] = {};\r\n\r\n        if (this.hasChildren()) {\r\n            Element.collectChildren(tree[ref], this.__childList);\r\n        } else {\r\n            tree[ref] = {...Element.getProperties(this)};\r\n        }\r\n        return tree;\r\n    }\r\n\r\n    static collectChildren(tree, children) {\r\n        const childList = children;\r\n        for (let i = 0, j = childList.length; i < j; i++) {\r\n            const element = childList.getAt(i);\r\n            const ref = `${element.__ref || `Element-${element.id}`}`;\r\n            const properties = this.getProperties(element);\r\n\r\n            tree[ref] = {...properties};\r\n\r\n            if (element.hasChildren()) {\r\n                tree[ref].children = {};\r\n                this.collectChildren(\r\n                    tree[ref].children, element.__childList\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    static getProperties(element) {\r\n        const props = {};\r\n        const list = [\r\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\r\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\r\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\r\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\r\n        ];\r\n        let n = list.length;\r\n\r\n        while (n--) {\r\n            let key = list[n];\r\n            const getBoolean = /^!{2}/;\r\n            const isFunction = /\\(\\)$/;\r\n\r\n            if (getBoolean.test(key)) {\r\n                key = key.substring(2, key.length);\r\n                props[key] = !!element[key];\r\n            } else if (isFunction.test(key)) {\r\n                key = key.substring(0, key.length - 2);\r\n                if (typeof element[key] === \"function\") {\r\n                    props[key] = element[key]();\r\n                }\r\n            } else {\r\n                props[key] = element[key];\r\n            }\r\n        }\r\n        return {...props, ...element.getNonDefaults()};\r\n    }\r\n}\r\n\r\n// This gives a slight performance benefit compared to extending EventEmitter.\r\nEventEmitter.addAsMixin(Element);\r\n\r\nElement.prototype.isElement = 1;\r\n\r\nElement.id = 1;\r\n\r\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_GETTERS = new Map();\r\n\r\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\r\nElement.PROP_SETTERS = new Map();\r\n\r\nimport Texture from \"./Texture.mjs\";\r\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\r\nimport TextTexture from \"../textures/TextTexture.mjs\";\r\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\r\nimport Transition from \"../animation/Transition.mjs\";\r\nimport ElementChildList from \"./ElementChildList.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class StateMachine {\r\n\r\n    constructor() {\r\n        StateMachine.setupStateMachine(this);\r\n    }\r\n\r\n    static setupStateMachine(target) {\r\n        const targetConstructor = target.constructor;\r\n        const router = StateMachine.create(targetConstructor);\r\n        Object.setPrototypeOf(target, router.prototype);\r\n        target.constructor = targetConstructor;\r\n        target._initStateMachine();\r\n    }\r\n\r\n    /**\r\n     * Creates a state machine implementation.\r\n     * It extends the original type and should be used when creating new instances.\r\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\r\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\r\n     * @param {Class} type\r\n     * @returns {StateMachine}\r\n     */\r\n    static create(type) {\r\n        if (!type.hasOwnProperty('_sm')) {\r\n            // Only need to run once.\r\n            const stateMachineType = new StateMachineType(type);\r\n            type._sm = stateMachineType;\r\n        }\r\n\r\n        return type._sm.router;\r\n    }\r\n\r\n    /**\r\n     * Calls the specified method if it exists.\r\n     * @param {string} event\r\n     * @param {*...} args\r\n     */\r\n    fire(event, ...args) {\r\n        if (this._hasMethod(event)) {\r\n            return this[event](...args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current state path (for example \"Initialized.Loading\").\r\n     * @returns {string}\r\n     * @protected\r\n     */\r\n    _getState() {\r\n        return this._state.__path;\r\n    }\r\n\r\n    /**\r\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\r\n     * @param {string} statePath\r\n     * @param {string} currentStatePath\r\n     * @returns {Boolean}\r\n     * @protected\r\n     */\r\n    _inState(statePath, currentStatePath = this._state.__path) {\r\n        const state = this._sm.getStateByPath(statePath);\r\n        const currentState = this._sm.getStateByPath(currentStatePath);\r\n        const level = state.__level;\r\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\r\n        return (stateAtLevel === state);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is defined for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMember(name) {\r\n        return !!this.constructor.prototype[name];\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified class member is a method for the currently set state.\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     * @protected\r\n     */\r\n    _hasMethod(name) {\r\n        const member = this.constructor.prototype[name];\r\n        return !!member && (typeof member === \"function\")\r\n    }\r\n\r\n    /**\r\n     * Switches to the specified state.\r\n     * @param {string} statePath\r\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\r\n     * @param {*[]} [args]\r\n     *   Args that are supplied in $enter and $exit events.\r\n     * @protected\r\n     */\r\n    _setState(statePath, args) {\r\n        const setStateId = ++this._setStateCounter;\r\n        this._setStateId = setStateId;\r\n\r\n        if (this._state.__path !== statePath) {\r\n            // Performance optimization.\r\n            let newState = this._sm._stateMap[statePath];\r\n            if (!newState) {\r\n                // Check for super state.\r\n                newState = this._sm.getStateByPath(statePath);\r\n            }\r\n\r\n            const prevState = this._state;\r\n\r\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\r\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\r\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\r\n                const sharedState = StateMachine._getSharedState(this._state, newState);\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path,\r\n                    sharedState: sharedState.__path\r\n                };\r\n                const sharedLevel = sharedState.__level;\r\n\r\n                if (hasDifferentExitMethod) {\r\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\r\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\r\n                        this.__setState(exitStates[i]);\r\n                        this._callExit(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasDifferentEnterMethod) {\r\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\r\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\r\n                        this.__setState(enterStates[i]);\r\n                        this._callEnter(this._state, args, context);\r\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\r\n                        if (stateChangeOverridden) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            this.__setState(newState);\r\n\r\n            if (this._changedState) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n\r\n                if (args) {\r\n                    this._changedState(context, ...args);\r\n                } else {\r\n                    this._changedState(context);\r\n                }\r\n            }\r\n\r\n            if (this._onStateChange) {\r\n                const context = {\r\n                    newState: newState.__path,\r\n                    prevState: prevState.__path\r\n                };\r\n                this._onStateChange(context);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    _callEnter(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$enter) {\r\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\r\n                state.prototype.$enter.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _callExit(state, args = [], context) {\r\n        const hasParent = !!state.__parent;\r\n        if (state.prototype.$exit) {\r\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\r\n                state.prototype.$exit.apply(this, [context, ...args]);\r\n            }\r\n        }\r\n    }\r\n\r\n    __setState(state) {\r\n        this._state = state;\r\n        this._stateIndex = state.__index;\r\n        this.constructor = state;\r\n    }\r\n\r\n    _initStateMachine() {\r\n        this._state = null;\r\n        this._stateIndex = 0;\r\n        this._setStateCounter = 0;\r\n        this._sm = this._routedType._sm;\r\n        this.__setState(this._sm.getStateByPath(\"\"));\r\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\r\n        this._callEnter(this._state, [], context);\r\n        this._onStateChange = undefined;\r\n    }\r\n\r\n    /**\r\n     * Between multiple member names, select the one specified in the deepest state.\r\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\r\n     * @param {string[]} memberNames\r\n     * @returns {string|undefined}\r\n     * @protected\r\n     */\r\n    _getMostSpecificHandledMember(memberNames) {\r\n        let cur = this._state;\r\n        do {\r\n            for (let i = 0, n = memberNames.length; i < n; i++) {\r\n                const memberName = memberNames[i];\r\n                if (!cur.__parent) {\r\n                    if (cur.prototype[memberName]) {\r\n                        return memberName;\r\n                    }\r\n                } else {\r\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\r\n                    if (this[alias]) {\r\n                        return memberName;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.__parent;\r\n        } while (cur);\r\n    }\r\n\r\n    static _getStatesUntilLevel(state, level) {\r\n        const states = [];\r\n        while (state.__level > level) {\r\n            states.push(state);\r\n            state = state.__parent;\r\n        }\r\n        return states;\r\n    }\r\n\r\n    static _getSharedState(state1, state2) {\r\n        const state1Array = StateMachine._getAncestorStates(state1);\r\n        const state2Array = StateMachine._getAncestorStates(state2);\r\n        const n = Math.min(state1Array.length, state2Array.length);\r\n        for (let i = 0; i < n; i++) {\r\n            if (state1Array[i] !== state2Array[i]) {\r\n                return state1Array[i - 1];\r\n            }\r\n        }\r\n        return state1Array[n - 1];\r\n    }\r\n\r\n    static _getAncestorStates(state) {\r\n        const result = [];\r\n        do {\r\n            result.push(state);\r\n        } while(state = state.__parent);\r\n        return result.reverse();\r\n    }\r\n\r\n    static _getStateAtLevel(state, level) {\r\n        if (level > state.__level) {\r\n            return undefined;\r\n        }\r\n\r\n        while(level < state.__level) {\r\n            state = state.__parent;\r\n        }\r\n        return state;\r\n    }\r\n}\r\n\r\nclass StateMachineType {\r\n\r\n    constructor(type) {\r\n        this._type = type;\r\n        this._router = null;\r\n\r\n        this.init();\r\n    }\r\n\r\n    get router() {\r\n        return this._router;\r\n    }\r\n\r\n    init() {\r\n        this._router = this._createRouter();\r\n\r\n        this._stateMap = this._getStateMap();\r\n\r\n        this._addStateMemberDelegatorsToRouter();\r\n\r\n    }\r\n\r\n    _createRouter() {\r\n        const type = this._type;\r\n\r\n        const router = class StateMachineRouter extends type {\r\n            constructor() {\r\n                super(...arguments);\r\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\r\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\r\n                }\r\n            }\r\n        };\r\n        router._isRouter = true;\r\n        router.prototype._routedType = type;\r\n        router.original = type;\r\n\r\n        this._mixinStateMachineMethods(router);\r\n\r\n        return router;\r\n    }\r\n\r\n    _mixinStateMachineMethods(router) {\r\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\r\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\r\n        for (let i = 0, n = names.length; i < n; i++) {\r\n            const name = names[i];\r\n            if (name !== \"constructor\") {\r\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\r\n                Object.defineProperty(router.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    _addStateMemberDelegatorsToRouter() {\r\n        const members = this._getAllMemberNames();\r\n\r\n        members.forEach(member => {\r\n            this._addMemberRouter(member);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @note We are generating code because it yields much better performance.\r\n     */\r\n    _addMemberRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member);\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        let type = undefined;\r\n        descriptors.forEach(descriptor => {\r\n            if (descriptor) {\r\n                const descType = this._getDescriptorType(descriptor);\r\n                if (type && (type !== descType)) {\r\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\r\n                    return;\r\n                }\r\n                type = descType;\r\n            }\r\n        });\r\n\r\n        switch(type) {\r\n            case \"method\":\r\n                this._addMethodRouter(member, descriptors, aliases);\r\n                break;\r\n            case \"getter\":\r\n                this._addGetterSetterRouters(member);\r\n                break;\r\n            case \"property\":\r\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\r\n                break;\r\n        }\r\n    }\r\n\r\n    _getDescriptor(state, member, isValid = () => true) {\r\n        let type = state;\r\n        let curState = state;\r\n\r\n        do {\r\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\r\n            if (descriptor) {\r\n                if (isValid(descriptor)) {\r\n                    descriptor._source = curState;\r\n                    return descriptor;\r\n                }\r\n            }\r\n            type = Object.getPrototypeOf(type);\r\n            if (type && type.hasOwnProperty('__state')) {\r\n                curState = type;\r\n            }\r\n        } while(type && type.prototype);\r\n        return undefined;\r\n    }\r\n\r\n    _getDescriptorType(descriptor) {\r\n        if (descriptor.get || descriptor.set) {\r\n            return 'getter';\r\n        } else {\r\n            if (typeof descriptor.value === \"function\") {\r\n                return 'method';\r\n            } else {\r\n                return 'property';\r\n            }\r\n        }\r\n    }\r\n\r\n    static _supportsSpread() {\r\n        if (this.__supportsSpread === undefined) {\r\n            this.__supportsSpread = false;\r\n            try {\r\n                const func = new Function(\"return [].concat(...arguments);\");\r\n                func();\r\n                this.__supportsSpread = true;\r\n            } catch(e) {}\r\n        }\r\n        return this.__supportsSpread;\r\n    }\r\n\r\n    _addMethodRouter(member, descriptors, aliases) {\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        const supportsSpread = StateMachineType._supportsSpread();\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    if (supportsSpread) {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\r\n                    } else {\r\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\r\n                    }\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            if (supportsSpread) {\r\n                code.push(`return this[\"${cur}\"](...arguments);`);\r\n            } else {\r\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\r\n            }\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n\r\n        const descriptor = {value: router};\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _addGetterSetterRouters(member) {\r\n        const getter = this._getGetterRouter(member);\r\n        const setter = this._getSetterRouter(member);\r\n        const descriptor = {\r\n            get: getter,\r\n            set: setter\r\n        };\r\n        Object.defineProperty(this._router.prototype, member, descriptor);\r\n    }\r\n\r\n    _getGetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) return ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`return this[\"${cur}\"];`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([], functionBody);\r\n        return router;\r\n    }\r\n\r\n    _getSetterRouter(member) {\r\n        const statePaths = Object.keys(this._stateMap);\r\n        const descriptors = [];\r\n        const aliases = [];\r\n        statePaths.forEach((statePath, index) => {\r\n            const state = this._stateMap[statePath];\r\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\r\n            if (descriptor) {\r\n                descriptors[index] = descriptor;\r\n\r\n                // Add to prototype.\r\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\r\n                aliases[index] = alias;\r\n\r\n                if (!this._router.prototype.hasOwnProperty(alias)) {\r\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\r\n                }\r\n            } else {\r\n                descriptors[index] = null;\r\n                aliases[index] = null;\r\n            }\r\n        });\r\n\r\n        const code = [\r\n            // The line ensures that, while debugging, your IDE won't open many tabs.\r\n            \"//@ sourceURL=StateMachineRouter.js\",\r\n            \"var i = this._stateIndex;\"\r\n        ];\r\n        let cur = aliases[0];\r\n        for (let i = 1, n = aliases.length; i < n; i++) {\r\n            const alias = aliases[i];\r\n            if (alias !== cur) {\r\n                if (cur) {\r\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\r\n                } else {\r\n                    code.push(`if (i < ${i}) ; else`);\r\n                }\r\n            }\r\n            cur = alias;\r\n        }\r\n        if (cur) {\r\n            code.push(`this[\"${cur}\"] = arg;`);\r\n        } else {\r\n            code.push(`;`);\r\n        }\r\n        const functionBody = code.join(\"\\n\");\r\n        const router = new Function([\"arg\"], functionBody);\r\n        return router;\r\n    }\r\n\r\n    static getStateMemberAlias(path, member) {\r\n        return \"$\" + (path ? path + \".\" : \"\") + member;\r\n    }\r\n\r\n    _getAllMemberNames() {\r\n        const stateMap = this._stateMap;\r\n        const map = Object.keys(stateMap);\r\n        let members = new Set();\r\n        map.forEach(statePath => {\r\n            if (statePath === \"\") {\r\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\r\n                return;\r\n            }\r\n            const state = stateMap[statePath];\r\n            const names = this._getStateMemberNames(state);\r\n            names.forEach(name => {\r\n                members.add(name);\r\n            })\r\n        });\r\n        return [...members];\r\n    }\r\n\r\n    _getStateMemberNames(state) {\r\n        let type = state;\r\n        let members = new Set();\r\n        const isRoot = this._type === state;\r\n        do {\r\n            const names = this._getStateMemberNamesForType(type);\r\n            names.forEach(name => {\r\n                members.add(name)\r\n            });\r\n\r\n            type = Object.getPrototypeOf(type);\r\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\r\n\r\n        return members;\r\n    }\r\n\r\n    _getStateMemberNamesForType(type) {\r\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\r\n        return memberNames.filter(memberName => {\r\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\r\n        });\r\n    }\r\n\r\n    static _isStateLocalMember(memberName) {\r\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\r\n    }\r\n\r\n    getStateByPath(statePath) {\r\n        if (this._stateMap[statePath]) {\r\n            return this._stateMap[statePath];\r\n        }\r\n\r\n        // Search for closest match.\r\n        const parts = statePath.split(\".\");\r\n        while(parts.pop()) {\r\n            const statePath = parts.join(\".\");\r\n            if (this._stateMap[statePath]) {\r\n                return this._stateMap[statePath];\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStateMap() {\r\n        if (!this._stateMap) {\r\n            this._stateMap = this._createStateMap();\r\n        }\r\n        return this._stateMap;\r\n    }\r\n\r\n    _createStateMap() {\r\n        const stateMap = {};\r\n        this._addState(this._type, null, \"\", stateMap);\r\n        return stateMap;\r\n    }\r\n\r\n    _addState(state, parentState, name, stateMap) {\r\n        state.__state = true;\r\n        state.__name = name;\r\n\r\n        this._addStaticStateProperty(state, parentState);\r\n\r\n        const parentPath = (parentState ? parentState.__path : \"\");\r\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\r\n        state.__path = path;\r\n        state.__level = parentState ? parentState.__level + 1 : 0;\r\n        state.__parent = parentState;\r\n        state.__index = Object.keys(stateMap).length;\r\n        stateMap[path] = state;\r\n\r\n        const states = state._states;\r\n        if (states) {\r\n            const isInheritedFromParent = (parentState && parentState._states === states);\r\n            if (!isInheritedFromParent) {\r\n                const subStates = state._states();\r\n                subStates.forEach(subState => {\r\n                    const stateName = StateMachineType._getStateName(subState);\r\n                    this._addState(subState, state, stateName, stateMap);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    static _getStateName(state) {\r\n        const name = state.name;\r\n\r\n        const index = name.indexOf('$');\r\n        if (index > 0) {\r\n            // Strip off rollup name suffix.\r\n            return name.substr(0, index);\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    _addStaticStateProperty(state, parentState) {\r\n        if (parentState) {\r\n            const isClassStateLevel = parentState && !parentState.__parent;\r\n            if (isClassStateLevel) {\r\n                this._router[state.__name] = state;\r\n            } else {\r\n                parentState[state.__name] = state;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Element from \"../tree/Element.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StateMachine from \"./StateMachine.mjs\";\r\n\r\n/**\r\n * @extends StateMachine\r\n */\r\nexport default class Component extends Element {\r\n\r\n    constructor(stage, properties) {\r\n        super(stage);\r\n\r\n        // Encapsulate tags to prevent leaking.\r\n        this.tagRoot = true;\r\n\r\n        if (Utils.isObjectLiteral(properties)) {\r\n            Object.assign(this, properties);\r\n        }\r\n\r\n        this.__initialized = false;\r\n        this.__firstActive = false;\r\n        this.__firstEnable = false;\r\n\r\n        this.__signals = undefined;\r\n\r\n        this.__passSignals = undefined;\r\n\r\n        this.__construct();\r\n\r\n        // Quick-apply template.\r\n        const func = this.constructor.getTemplateFunc(this);\r\n        func.f(this, func.a);\r\n\r\n        this._build();\r\n    }\r\n\r\n    __start() {\r\n        StateMachine.setupStateMachine(this);\r\n        this._onStateChange = Component.prototype.__onStateChange;\r\n    }\r\n\r\n    get state() {\r\n        return this._getState();\r\n    }\r\n\r\n    __onStateChange() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    _refocus() {\r\n        /* FIXME: Workaround for case, where application was shut but component still lives */\r\n        if (this.application) {\r\n            this.application.updateFocusPath();\r\n        }\r\n    }\r\n\r\n    static bindProp(name, func = null) {\r\n        return {__propertyBinding: true, __name: name, __func: func};\r\n    }\r\n\r\n    __bindProperty(propObj, targetObj, targetProp) {\r\n        // 1. find binding position: find object and property name to be bound\r\n        const obj = targetObj;\r\n        const prop = targetProp;\r\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\r\n\r\n        // 2. create setters for every given dependency\r\n        for (let i = 0; i < propDependencies.length; i++) {\r\n            const propName = propDependencies[i];\r\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\r\n\r\n            if (!this.hasOwnProperty(propName)) {\r\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\r\n                Object.defineProperty(this, propName, {\r\n                    set: (value) => {\r\n                        this[`__prop_${propName}`] = value;\r\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\r\n                            __obj[__prop] = __func(this);\r\n                        }\r\n                    },\r\n                    get: () => this[`__prop_${propName}`]\r\n                });\r\n            } else {\r\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a high-performance template patcher.\r\n     */\r\n    static getTemplateFunc(ctx) {\r\n        // We need a different template function per patch id.\r\n        const name = \"_templateFunc\";\r\n\r\n        // Be careful with class-based static inheritance.\r\n        const hasName = '__has' + name;\r\n        if (this[hasName] !== this) {\r\n            this[hasName] = this;\r\n            this[name] = this.parseTemplate(this._template(ctx));\r\n        }\r\n        return this[name];\r\n    }\r\n\r\n    static parseTemplate(obj) {\r\n        const context = {\r\n            loc: [],\r\n            store: [],\r\n            rid: 0\r\n        };\r\n\r\n        this.parseTemplateRec(obj, context, \"element\");\r\n\r\n        const code = context.loc.join(\";\\n\");\r\n        const f = new Function(\"element\", \"store\", code);\r\n        return {f: f, a: context.store};\r\n    }\r\n\r\n    static parseTemplateRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            let value = obj[key];\r\n            if (Utils.isUcChar(key.charCodeAt(0))) {\r\n                // Value must be expanded as well.\r\n                if (Utils.isObjectLiteral(value)) {\r\n                    // Ref.\r\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\r\n                    let type = value.type ? value.type : Element;\r\n                    if (type === Element) {\r\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\r\n                    } else {\r\n                        store.push(type);\r\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                    }\r\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\r\n                    context.rid++;\r\n\r\n                    // Enter sub.\r\n                    this.parseTemplateRec(value, context, childCursor);\r\n\r\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\r\n                } else if (Utils.isObject(value)) {\r\n                    // Dynamic assignment.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\r\n                }\r\n            } else {\r\n                if (key === \"text\") {\r\n                    const propKey = cursor + \"__text\";\r\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\r\n                    if (value.__propertyBinding === true) {\r\n                        // Allow binding entire objects to text property\r\n                        store.push(value);\r\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                    } else {\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\r\n                    const shaderCursor = `${cursor}[\"shader\"]`\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    this.parsePropertyBindings(value, context, shaderCursor);\r\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\r\n                    const propKey = cursor + \"__texture\";\r\n                    const type = value.type;\r\n                    if (type) {\r\n                        store.push(type);\r\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\r\n                    } else {\r\n                        loc.push(`${propKey} = ${cursor}.texture`);\r\n                        this.parseTemplatePropRec(value, context, propKey);\r\n                    }\r\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else {\r\n                    // Property;\r\n                    if (Utils.isNumber(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                    } else if (Utils.isBoolean(value)) {\r\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                        // Dynamic assignment.\r\n                        // Because literal objects may contain dynamics, we store the full object.\r\n                        store.push(value);\r\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                    } else {\r\n                        // String etc.\r\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parseTemplatePropRec(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isNumber(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\r\n                } else if (Utils.isBoolean(value)) {\r\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\r\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\r\n                    // Dynamic assignment.\r\n                    // Because literal objects may contain dynamics, we store the full object.\r\n                    store.push(value);\r\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\r\n                } else {\r\n                    // String etc.\r\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static parsePropertyBindings(obj, context, cursor) {\r\n        const store = context.store;\r\n        const loc = context.loc;\r\n        const keys = Object.keys(obj);\r\n        keys.forEach(key => {\r\n            if (key !== \"type\") {\r\n                const value = obj[key];\r\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\r\n                    store.push(value);\r\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _onSetup() {\r\n        if (!this.__initialized) {\r\n            this._setup();\r\n        }\r\n    }\r\n\r\n    _setup() {\r\n    }\r\n\r\n    _onAttach() {\r\n        if (!this.__initialized) {\r\n            this.__init();\r\n            this.__initialized = true;\r\n        }\r\n\r\n        this._attach();\r\n    }\r\n\r\n    _attach() {\r\n    }\r\n\r\n    _onDetach() {\r\n        this._detach();\r\n    }\r\n\r\n    _detach() {\r\n    }\r\n\r\n    _onEnabled() {\r\n        if (!this.__firstEnable) {\r\n            this._firstEnable();\r\n            this.__firstEnable = true;\r\n        }\r\n\r\n        this._enable();\r\n    }\r\n\r\n    _firstEnable() {\r\n    }\r\n\r\n    _enable() {\r\n    }\r\n\r\n    _onDisabled() {\r\n        this._disable();\r\n    }\r\n\r\n    _disable() {\r\n    }\r\n\r\n    _onActive() {\r\n        if (!this.__firstActive) {\r\n            this._firstActive();\r\n            this.__firstActive = true;\r\n        }\r\n\r\n        this._active();\r\n    }\r\n\r\n    _firstActive() {\r\n    }\r\n\r\n    _active() {\r\n    }\r\n\r\n    _onInactive() {\r\n        this._inactive();\r\n    }\r\n\r\n    _inactive() {\r\n    }\r\n\r\n    get application() {\r\n        return this.stage.application;\r\n    }\r\n\r\n    __construct() {\r\n        this._construct();\r\n    }\r\n\r\n    _construct() {\r\n    }\r\n\r\n    _build() {\r\n    }\r\n\r\n    __init() {\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n    }\r\n\r\n    _focus(newTarget, prevTarget) {\r\n    }\r\n\r\n    _unfocus(newTarget) {\r\n    }\r\n\r\n    _focusChange(target, newTarget) {\r\n    }\r\n\r\n    _getFocused() {\r\n        // Override to delegate focus to child components.\r\n        return this;\r\n    }\r\n\r\n    _setFocusSettings(settings) {\r\n        // Override to add custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    _handleFocusSettings(settings) {\r\n        // Override to react on custom settings. See Application._handleFocusSettings().\r\n    }\r\n\r\n    static _template() {\r\n        return {};\r\n    }\r\n\r\n    hasFinalFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && path.length && path[path.length - 1] === this;\r\n    }\r\n\r\n    hasFocus() {\r\n        let path = this.application._focusPath;\r\n        return path && (path.indexOf(this) >= 0);\r\n    }\r\n\r\n    get cparent() {\r\n        return Component.getParent(this);\r\n    }\r\n\r\n    seekAncestorByType(type) {\r\n        let c = this.cparent;\r\n        while (c) {\r\n            if (c.constructor === type) {\r\n                return c;\r\n            }\r\n            c = c.cparent;\r\n        }\r\n    }\r\n\r\n    getSharedAncestorComponent(element) {\r\n        let ancestor = this.getSharedAncestor(element);\r\n        while (ancestor && !ancestor.isComponent) {\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return ancestor;\r\n    }\r\n\r\n    get signals() {\r\n        return this.__signals;\r\n    }\r\n\r\n    set signals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        this.__signals = v;\r\n    }\r\n\r\n    set alterSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__signals) {\r\n            this.__signals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__signals[key];\r\n            } else {\r\n                this.__signals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    get passSignals() {\r\n        return this.__passSignals || {};\r\n    }\r\n\r\n    set passSignals(v) {\r\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\r\n    }\r\n\r\n    set alterPassSignals(v) {\r\n        if (!Utils.isObjectLiteral(v)) {\r\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\r\n        }\r\n        if (!this.__passSignals) {\r\n            this.__passSignals = {};\r\n        }\r\n        for (let key in v) {\r\n            const d = v[key];\r\n            if (d === undefined) {\r\n                delete this.__passSignals[key];\r\n            } else {\r\n                this.__passSignals[key] = v;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signals the parent of the specified event.\r\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\r\n     * @param {string} event\r\n     * @param {...*} args\r\n     */\r\n    signal(event, ...args) {\r\n        return this._signal(event, args);\r\n    }\r\n\r\n    _signal(event, args) {\r\n        const signalParent = this._getParentSignalHandler();\r\n        if (signalParent) {\r\n            if (this.__signals) {\r\n                let fireEvent = this.__signals[event];\r\n                if (fireEvent === false) {\r\n                    // Ignore event.\r\n                    return;\r\n                }\r\n                if (fireEvent) {\r\n                    if (fireEvent === true) {\r\n                        fireEvent = event;\r\n                    }\r\n \r\n                    if (Utils.isFunction(fireEvent)) {\r\n                        return fireEvent(...args);\r\n                    }\r\n\r\n                    if (signalParent._hasMethod(fireEvent)) {\r\n                        return signalParent[fireEvent](...args);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\r\n            if (passSignal) {\r\n                // Bubble up.\r\n                if (passSignal && passSignal !== true) {\r\n                    // Replace signal name.\r\n                    event = passSignal;\r\n                }\r\n\r\n                return signalParent._signal(event, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getParentSignalHandler() {\r\n        return this.cparent ? this.cparent._getSignalHandler() : null;\r\n    }\r\n\r\n    _getSignalHandler() {\r\n        if (this._signalProxy) {\r\n            return this.cparent ? this.cparent._getSignalHandler() : null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return false;\r\n    }\r\n\r\n    fireAncestors(name, ...args) {\r\n        if (!name.startsWith('$')) {\r\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\r\n        }\r\n\r\n        const parent = this._getParentSignalHandler();\r\n        if (parent) {\r\n            return parent._doFireAncestors(name, args);\r\n        }\r\n    }\r\n\r\n    _doFireAncestors(name, args) {\r\n        if (this._hasMethod(name)) {\r\n            return this.fire(name, ...args);\r\n        } else {\r\n            const signalParent = this._getParentSignalHandler();\r\n            if (signalParent) {\r\n                return signalParent._doFireAncestors(name, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    static collectSubComponents(subs, element) {\r\n        if (element.hasChildren()) {\r\n            const childList = element.__childList;\r\n            for (let i = 0, n = childList.length; i < n; i++) {\r\n                const child = childList.getAt(i);\r\n                if (child.isComponent) {\r\n                    subs.push(child);\r\n                } else {\r\n                    Component.collectSubComponents(subs, child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getComponent(element) {\r\n        let parent = element;\r\n        while (parent && !parent.isComponent) {\r\n            parent = parent.parent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    static getParent(element) {\r\n        return Component.getComponent(element.parent);\r\n    }\r\n}\r\n\r\nComponent.prototype.isComponent = true;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n\r\n        this.ctx = ctx;\r\n\r\n        this.quadTextures = [];\r\n\r\n        this.quadElements = [];\r\n    }\r\n\r\n    get length() {\r\n        return this.quadTextures.length;\r\n    }\r\n\r\n    reset() {\r\n        this.quadTextures = [];\r\n        this.quadElements = [];\r\n        this.dataLength = 0;\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quadElements[index]._element;\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quadElements[index];\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quadTextures[index];\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.w) {\r\n            // Render texture;\r\n            return nativeTexture.w;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.w;\r\n        }\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        let nativeTexture = this.quadTextures[index];\r\n        if (nativeTexture.h) {\r\n            // Render texture;\r\n            return nativeTexture.h;\r\n        } else {\r\n            return this.quadElements[index]._displayedTextureSource.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class WebGLCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\r\n        // We do not (want to) handle memory overflow.\r\n        const byteSize = ctx.stage.getOption('bufferMemory');\r\n\r\n        this.dataLength = 0;\r\n\r\n        this.data = new ArrayBuffer(byteSize);\r\n        this.floats = new Float32Array(this.data);\r\n        this.uints = new Uint32Array(this.data);\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return index * 80;\r\n    }\r\n\r\n    getQuadContents() {\r\n        // Debug: log contents of quad buffer.\r\n        let floats = this.floats;\r\n        let uints = this.uints;\r\n        let lines = [];\r\n        for (let i = 1; i <= this.length; i++) {\r\n            let str = 'entry ' + i + ': ';\r\n            for (let j = 0; j < 4; j++) {\r\n                let b = i * 20 + j * 4;\r\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\r\n            }\r\n            lines.push(str);\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n\r\n        this.ctx = ctx;\r\n        this.shader = shader;\r\n        this.shaderOwner = shaderOwner;\r\n        this.renderTextureInfo = renderTextureInfo;\r\n        this.scissor = scissor;\r\n        this.index = index;\r\n        this.length = 0;\r\n\r\n    }\r\n\r\n    get quads() {\r\n        return this.ctx.renderState.quads;\r\n    }\r\n\r\n    getTexture(index) {\r\n        return this.quads.getTexture(this.index + index);\r\n    }\r\n\r\n    getElementCore(index) {\r\n        return this.quads.getElementCore(this.index + index);\r\n    }\r\n\r\n    getElement(index) {\r\n        return this.quads.getElement(this.index + index);\r\n    }\r\n\r\n    getElementWidth(index) {\r\n        return this.getElement(index).renderWidth;\r\n    }\r\n\r\n    getElementHeight(index) {\r\n        return this.getElement(index).renderHeight;\r\n    }\r\n\r\n    getTextureWidth(index) {\r\n        return this.quads.getTextureWidth(this.index + index);\r\n    }\r\n\r\n    getTextureHeight(index) {\r\n        return this.quads.getTextureHeight(this.index + index);\r\n    }\r\n\r\n    getRenderWidth() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.w;\r\n        } else {\r\n            return this.ctx.stage.w;\r\n        }\r\n    }\r\n\r\n    getRenderHeight() {\r\n        if (this.renderTextureInfo) {\r\n            return this.renderTextureInfo.h;\r\n        } else {\r\n            return this.ctx.stage.h;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n\r\n        this.extraAttribsDataByteOffset = 0;\r\n    }\r\n\r\n    getAttribsDataByteOffset(index) {\r\n        // Where this quad can be found in the attribs buffer.\r\n        return this.quads.getAttribsDataByteOffset(this.index + index);\r\n    }\r\n\r\n    /**\r\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\r\n     * @param x\r\n     * @param y\r\n     * @return {number[]}\r\n     */\r\n    getNormalRenderTextureCoords(x, y) {\r\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\r\n        coords[0] /= this.getRenderWidth();\r\n        coords[1] /= this.getRenderHeight();\r\n        coords[0] = coords[0] * 2 - 1;\r\n        coords[1] = 1 - coords[1] * 2;\r\n        return coords;\r\n    }\r\n\r\n    getProjection() {\r\n        if (this.renderTextureInfo === null) {\r\n            return this.ctx.renderExec._projection;\r\n        } else {\r\n            return this.renderTextureInfo.nativeTexture.projection;\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.renderState = ctx.renderState;\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n    }\r\n\r\n    destroy() {\r\n        this.ctx = null;\r\n        this.renderState = null;\r\n        this.gl = null;\r\n\r\n        delete this.ctx;\r\n        delete this.renderState;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        this._bindRenderTexture(null);\r\n        this._setScissor(null);\r\n        this._clearRenderTexture();\r\n    }\r\n\r\n    execute() {\r\n        this._reset();\r\n\r\n        let qops = this.renderState.quadOperations;\r\n\r\n        let i = 0, j = 0, n = qops.length;\r\n        while (i < n) {\r\n            this._processQuadOperation(qops[i]);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    _processQuadOperation(quadOperation) {\r\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\r\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\r\n            return;\r\n        }\r\n\r\n        this._setupQuadOperation(quadOperation);\r\n        this._execQuadOperation(quadOperation);\r\n\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n    }\r\n\r\n    _execQuadOperation(op) {\r\n        // Set render texture.\r\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\r\n\r\n        if (this._renderTexture !== nativeTexture) {\r\n            this._bindRenderTexture(nativeTexture);\r\n        }\r\n\r\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\r\n            this._setScissor(null);\r\n            this._clearRenderTexture();\r\n            op.renderTextureInfo.cleared = true;\r\n            this._setScissor(op.scissor);\r\n        } else {\r\n            this._setScissor(op.scissor);\r\n        }\r\n\r\n        this._renderQuadOperation(op);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        this._renderTexture = renderTexture;\r\n    }\r\n\r\n    _clearRenderTexture(renderTexture) {\r\n    }\r\n\r\n    _setScissor(area) {\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\n\r\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    constructor(ctx) {\r\n        super(ctx)\r\n\r\n        this.gl = this.ctx.stage.gl;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let gl = this.gl;\r\n\r\n        // Create new sharable buffer for params.\r\n        this._attribsBuffer = gl.createBuffer();\r\n\r\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\r\n\r\n        // Init webgl arrays.\r\n        let allIndices = new Uint16Array(maxQuads * 6);\r\n\r\n        // fill the indices with the quads to draw.\r\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\r\n            allIndices[i] = j;\r\n            allIndices[i + 1] = j + 1;\r\n            allIndices[i + 2] = j + 2;\r\n            allIndices[i + 3] = j;\r\n            allIndices[i + 4] = j + 2;\r\n            allIndices[i + 5] = j + 3;\r\n        }\r\n\r\n        // The quads buffer can be (re)used to draw a range of quads.\r\n        this._quadsBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\r\n\r\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\r\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\r\n\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.gl.deleteBuffer(this._attribsBuffer);\r\n        this.gl.deleteBuffer(this._quadsBuffer);\r\n\r\n        this.gl = null;\r\n        delete this.gl;\r\n    }\r\n\r\n    _reset() {\r\n        super._reset();\r\n\r\n        let gl = this.gl;\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.enable(gl.BLEND);\r\n        gl.disable(gl.DEPTH_TEST);\r\n\r\n        this._stopShaderProgram();\r\n        this._setupBuffers();\r\n    }\r\n\r\n    _setupBuffers() {\r\n        let gl = this.gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\r\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\r\n    }\r\n\r\n    _setupQuadOperation(quadOperation) {\r\n        super._setupQuadOperation(quadOperation);\r\n        this._useShaderProgram(quadOperation.shader, quadOperation);\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            shader.beforeDraw(op);\r\n            shader.draw(op);\r\n            shader.afterDraw(op);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {WebGLShader} shader;\r\n     * @param {CoreQuadOperation} operation;\r\n     */\r\n    _useShaderProgram(shader, operation) {\r\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\r\n            if (this._currentShaderProgram) {\r\n                this._currentShaderProgram.stopProgram();\r\n            }\r\n            shader.useProgram();\r\n            this._currentShaderProgram = shader;\r\n        }\r\n        shader.setupUniforms(operation);\r\n    }\r\n\r\n    _stopShaderProgram() {\r\n        if (this._currentShaderProgram) {\r\n            // The currently used shader program should be stopped gracefully.\r\n            this._currentShaderProgram.stopProgram();\r\n            this._currentShaderProgram = null;\r\n        }\r\n    }\r\n\r\n    _bindRenderTexture(renderTexture) {\r\n        super._bindRenderTexture(renderTexture);\r\n\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\r\n        } else {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\r\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        super._clearRenderTexture();\r\n        let gl = this.gl;\r\n        if (!this._renderTexture) {\r\n            let glClearColor = this.ctx.stage.getClearColor();\r\n            if (glClearColor) {\r\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\r\n                gl.clear(gl.COLOR_BUFFER_BIT);\r\n            }\r\n        } else {\r\n            // Clear texture.\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n    }\r\n\r\n    _setScissor(area) {\r\n        super._setScissor(area);\r\n\r\n        if (this._scissor === area) {\r\n            return;\r\n        }\r\n        this._scissor = area;\r\n\r\n        let gl = this.gl;\r\n        if (!area) {\r\n            gl.disable(gl.SCISSOR_TEST);\r\n        } else {\r\n            gl.enable(gl.SCISSOR_TEST);\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            let y = area[1];\r\n            if (this._renderTexture === null) {\r\n                // Flip.\r\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\r\n            }\r\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class CoreRenderState {\r\n\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n\r\n        this.stage = ctx.stage;\r\n\r\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\r\n\r\n        this.renderer = ctx.stage.renderer;\r\n\r\n        this.quads = this.renderer.createCoreQuadList(ctx);\r\n\r\n    }\r\n\r\n    reset() {\r\n        this._renderTextureInfo = null;\r\n\r\n        this._scissor = null;\r\n\r\n        this._shader = null;\r\n\r\n        this._shaderOwner = null;\r\n\r\n        this._realShader = null;\r\n\r\n        this._check = false;\r\n\r\n        this.quadOperations = [];\r\n\r\n        this._texturizer = null;\r\n\r\n        this._texturizerTemporary = false;\r\n\r\n        this._quadOperation = null;\r\n\r\n        this.quads.reset();\r\n\r\n        this._temporaryTexturizers = [];\r\n        \r\n        this._isCachingTexturizer = false;\r\n\r\n    }\r\n\r\n    get length() {\r\n        return this.quads.quadTextures.length;\r\n    }\r\n\r\n    setShader(shader, owner) {\r\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\r\n            // Same shader owner: active shader is also the same.\r\n            // Prevent any shader usage to save performance.\r\n\r\n            this._realShader = shader;\r\n\r\n            if (shader.useDefault()) {\r\n                // Use the default shader when possible to prevent unnecessary program changes.\r\n                shader = this.defaultShader;\r\n            }\r\n            if (this._shader !== shader || this._shaderOwner !== owner) {\r\n                this._shader = shader;\r\n                this._shaderOwner = owner;\r\n                this._check = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderTextureInfo() {\r\n        return this._renderTextureInfo;\r\n    }\r\n\r\n    setScissor(area) {\r\n        if (this._scissor !== area) {\r\n            if (area) {\r\n                this._scissor = area;\r\n            } else {\r\n                this._scissor = null;\r\n            }\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    getScissor() {\r\n        return this._scissor;\r\n    }\r\n\r\n    setRenderTextureInfo(renderTextureInfo) {\r\n        if (this._renderTextureInfo !== renderTextureInfo) {\r\n            this._renderTextureInfo = renderTextureInfo;\r\n            this._scissor = null;\r\n            this._check = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texturizer to be drawn during subsequent addQuads.\r\n     * @param {ElementTexturizer} texturizer\r\n     */\r\n    setTexturizer(texturizer, cache = false) {\r\n        this._texturizer = texturizer;\r\n        this._cacheTexturizer = cache;\r\n    }\r\n\r\n    set isCachingTexturizer(v) {\r\n        this._isCachingTexturizer = v;\r\n    }\r\n\r\n    get isCachingTexturizer() {\r\n        return this._isCachingTexturizer;\r\n    }\r\n\r\n    addQuad(elementCore) {\r\n        if (!this._quadOperation) {\r\n            this._createQuadOperation();\r\n        } else if (this._check && this._hasChanges()) {\r\n            this._finishQuadOperation();\r\n            this._check = false;\r\n        }\r\n\r\n        let nativeTexture = null;\r\n        if (this._texturizer) {\r\n            nativeTexture = this._texturizer.getResultTexture();\r\n\r\n            if (!this._cacheTexturizer) {\r\n                // We can release the temporary texture immediately after finalizing this quad operation.\r\n                this._temporaryTexturizers.push(this._texturizer);\r\n            }\r\n        }\r\n\r\n        if (!nativeTexture) {\r\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\r\n        }\r\n\r\n        if (this._renderTextureInfo) {\r\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\r\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\r\n                this._renderTextureInfo.nativeTexture = nativeTexture;\r\n                this._renderTextureInfo.offset = this.length;\r\n            } else {\r\n                // It is not possible to reuse another texture when there is more than one quad.\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n            this._renderTextureInfo.empty = false;\r\n        }\r\n\r\n        this.quads.quadTextures.push(nativeTexture);\r\n        this.quads.quadElements.push(elementCore);\r\n\r\n        this._quadOperation.length++;\r\n\r\n        this.renderer.addQuad(this, this.quads, this.length - 1)\r\n    }\r\n\r\n    finishedRenderTexture() {\r\n        if (this._renderTextureInfo.nativeTexture) {\r\n            // There was only one texture drawn in this render texture.\r\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\r\n            // (it should exactly span this render texture).\r\n            if (!this._isRenderTextureReusable()) {\r\n                this._renderTextureInfo.nativeTexture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isRenderTextureReusable() {\r\n        const offset = this._renderTextureInfo.offset;\r\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\r\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\r\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\r\n    }\r\n\r\n    _hasChanges() {\r\n        let q = this._quadOperation;\r\n        if (this._shader !== q.shader) return true;\r\n        if (this._shaderOwner !== q.shaderOwner) return true;\r\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\r\n        if (this._scissor !== q.scissor) {\r\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _finishQuadOperation(create = true) {\r\n        if (this._quadOperation) {\r\n            if (this._quadOperation.length || this._shader.addEmpty()) {\r\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\r\n                    // Ignore empty clipping regions.\r\n                    this.quadOperations.push(this._quadOperation);\r\n                }\r\n            }\r\n\r\n            if (this._temporaryTexturizers.length) {\r\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\r\n                    // We can now reuse these render-to-textures in subsequent stages.\r\n                    // Huge performance benefit when filtering (fast blur).\r\n                    this._temporaryTexturizers[i].releaseRenderTexture();\r\n                }\r\n                this._temporaryTexturizers = [];\r\n            }\r\n\r\n            this._quadOperation = null;\r\n        }\r\n\r\n        if (create) {\r\n            this._createQuadOperation();\r\n        }\r\n    }\r\n\r\n    _createQuadOperation() {\r\n        this._quadOperation = this.renderer.createCoreQuadOperation(\r\n            this.ctx,\r\n            this._shader,\r\n            this._shaderOwner,\r\n            this._renderTextureInfo,\r\n            this._scissor,\r\n            this.length\r\n        );\r\n        this._check = false;\r\n    }\r\n\r\n    finish() {\r\n        if (this._quadOperation) {\r\n            // Add remaining.\r\n            this._finishQuadOperation(false);\r\n        }\r\n\r\n        this.renderer.finishRenderState(this);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Base functionality for shader setup/destroy.\r\n */\r\nexport default class WebGLShaderProgram {\r\n\r\n    constructor(vertexShaderSource, fragmentShaderSource) {\r\n\r\n        this.vertexShaderSource = vertexShaderSource;\r\n        this.fragmentShaderSource = fragmentShaderSource;\r\n\r\n        this._program = null;\r\n        this.gl = null;\r\n\r\n        this._uniformLocations = new Map();\r\n        this._attributeLocations = new Map();\r\n\r\n        this._currentUniformValues = {};\r\n    }\r\n\r\n    compile(gl) {\r\n        if (this._program) return;\r\n\r\n        this.gl = gl;\r\n\r\n        this._program = gl.createProgram();\r\n\r\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\r\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\r\n\r\n        gl.attachShader(this._program, glVertShader);\r\n        gl.attachShader(this._program, glFragShader);\r\n        gl.linkProgram(this._program);\r\n\r\n        // if linking fails, then log and cleanup\r\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\r\n            console.error('[Lightning] Error: Could not initialize shader.');\r\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\r\n            console.error('[Lightning] gl.getError()', gl.getError());\r\n\r\n            // if there is a program info log, log it\r\n            if (gl.getProgramInfoLog(this._program) !== '') {\r\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\r\n            }\r\n\r\n            gl.deleteProgram(this._program);\r\n            this._program = null;\r\n        }\r\n\r\n        // clean up some shaders\r\n        gl.deleteShader(glVertShader);\r\n        gl.deleteShader(glFragShader);\r\n    }\r\n\r\n    _glCompile(type, src) {\r\n        let shader = this.gl.createShader(type);\r\n\r\n        this.gl.shaderSource(shader, src);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\r\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\r\n            let idx = 0;\r\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    getUniformLocation(name) {\r\n        let location = this._uniformLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getUniformLocation(this._program, name);\r\n            this._uniformLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    getAttribLocation(name) {\r\n        let location = this._attributeLocations.get(name);\r\n        if (location === undefined) {\r\n            location = this.gl.getAttribLocation(this._program, name);\r\n            this._attributeLocations.set(name, location);\r\n        }\r\n\r\n        return location;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._program) {\r\n            this.gl.deleteProgram(this._program);\r\n        }\r\n\r\n        this._attributeLocations = null;\r\n        this._currentUniformValues = null;\r\n        this.fragmentShaderSource = null;\r\n        this._program = null;\r\n        this.gl = null;\r\n        this._uniformLocations = null;\r\n        this.vertexShaderSource = null;  \r\n\r\n        delete this.vertexShaderSource;\r\n        delete this._program;        \r\n        delete this._currentUniformValues;\r\n        delete this.fragmentShaderSource;\r\n        delete this.gl;\r\n        delete this._uniformLocations;\r\n        delete this._attributeLocations;\r\n\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program;\r\n    }\r\n\r\n    get compiled() {\r\n        return !!this._program;\r\n    }\r\n\r\n    _valueEquals(v1, v2) {\r\n        // Uniform value is either a typed array or a numeric value.\r\n        if (v1.length && v2.length) {\r\n            for (let i = 0, n = v1.length; i < n; i++) {\r\n                if (v1[i] !== v2[i]) return false;\r\n            }\r\n            return true;\r\n        } else {\r\n            return (v1 === v2);\r\n        }\r\n    }\r\n\r\n    _valueClone(v) {\r\n        if (v.length) {\r\n            return v.slice(0);\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    setUniformValue(name, value, glFunction) {\r\n        let v = this._currentUniformValues[name];\r\n        if (v === undefined || !this._valueEquals(v, value)) {\r\n            let clonedValue = this._valueClone(value);\r\n            this._currentUniformValues[name] = clonedValue;\r\n\r\n            let loc = this.getUniformLocation(name);\r\n            if (loc) {\r\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\r\n                if (isMatrix) {\r\n                    glFunction.call(this.gl, loc, false, clonedValue);\r\n                } else {\r\n                    glFunction.call(this.gl, loc, clonedValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class WebGLShader extends Shader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        const stage = ctx.stage;\r\n\r\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\r\n        if (!this._program) {\r\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\r\n\r\n            // Let the vbo context perform garbage collection.\r\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\r\n        }\r\n\r\n        this.gl = stage.gl;\r\n    }\r\n\r\n    get glProgram() {\r\n        return this._program.glProgram;\r\n    }\r\n\r\n    _init() {\r\n        if (!this._initialized) {\r\n            this.initialize();\r\n            this._initialized = true;\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this._program.compile(this.gl);\r\n    }\r\n\r\n    get initialized() {\r\n        return this._initialized;\r\n    }\r\n\r\n    _uniform(name) {\r\n        return this._program.getUniformLocation(name);\r\n    }\r\n\r\n    _attrib(name) {\r\n        return this._program.getAttribLocation(name);\r\n    }\r\n\r\n    _setUniform(name, value, glFunction) {\r\n        this._program.setUniformValue(name, value, glFunction);\r\n    }\r\n\r\n    useProgram() {\r\n        this._init();\r\n        this.gl.useProgram(this.glProgram);\r\n        this.beforeUsage();\r\n        this.enableAttribs();\r\n    }\r\n\r\n    stopProgram() {\r\n        this.afterUsage();\r\n        this.disableAttribs();\r\n    }\r\n\r\n    hasSameProgram(other) {\r\n        // For performance reasons, we first check for identical references.\r\n        return (other && ((other === this) || (other._program === this._program)));\r\n    }\r\n\r\n    beforeUsage() {\r\n        // Override to set settings other than the default settings (blend mode etc).\r\n    }\r\n\r\n    afterUsage() {\r\n        // All settings changed in beforeUsage should be reset here.\r\n    }\r\n\r\n    enableAttribs() {\r\n\r\n    }\r\n\r\n    disableAttribs() {\r\n\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 0;\r\n    }\r\n\r\n    getVertexAttribPointerOffset(operation) {\r\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\r\n        // operation.extraAttribsBufferByteOffset.\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        // Set all shader-specific uniforms.\r\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\r\n        // The uniforms are shared by all shaders that have the same type (and shader program).\r\n    }\r\n\r\n    _getProjection(operation) {\r\n        return operation.getProjection();\r\n    }\r\n\r\n    getFlipY(operation) {\r\n        return this._getProjection(operation)[1] < 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n    cleanup() {\r\n        this._initialized = false;\r\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../WebGLShader.mjs\";\r\n\r\nexport default class DefaultShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            \r\n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDefaultShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDefaultShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class Renderer {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._defaultShader = undefined;\r\n    }\r\n\r\n    gc(aggressive) {\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    getDefaultShader(ctx = this.stage.ctx) {\r\n        if (!this._defaultShader) {\r\n            this._defaultShader = this._createDefaultShader(ctx);\r\n        }\r\n        return this._defaultShader;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n    }\r\n\r\n    isValidShaderType(shaderType) {\r\n        return (shaderType.prototype instanceof this._getShaderBaseType());\r\n    }\r\n\r\n    createShader(ctx, settings) {\r\n        const shaderType = settings.type;\r\n        // If shader type is not correct, use a different platform.\r\n        if (!this.isValidShaderType(shaderType)) {\r\n            const convertedShaderType = this._getShaderAlternative(shaderType);\r\n            if (!convertedShaderType) {\r\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\r\n                return this._createDefaultShader(ctx);\r\n            }\r\n            return new convertedShaderType(ctx);\r\n        } else {\r\n            const shader = new shaderType(ctx);\r\n            Base.patchObject(this, settings);\r\n            return shader;\r\n        }\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return this.getDefaultShader();\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\r\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\r\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport WebGLShader from \"./WebGLShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\n\r\nexport default class WebGLRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this.shaderPrograms = new Map();\r\n        this._compressedTextureExtensions = {\r\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\r\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\r\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\r\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\r\n        }\r\n    }\r\n\r\n    getCompressedTextureExtensions() {\r\n        return this._compressedTextureExtensions\r\n    }\r\n\r\n    destroy() {\r\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\r\n\r\n        this.shaderPrograms = null;\r\n        this._compressedTextureExtensions = null;\r\n\r\n        delete this.shaderPrograms;\r\n        delete this._compressedTextureExtensions;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return WebGLShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getWebGL && shaderType.getWebGL();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new WebGLCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new WebGLCoreRenderExecutor(ctx);\r\n    }\r\n\r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const gl = this.stage.gl;\r\n        const glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        glTexture.params = {};\r\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\r\n\r\n        // We need a specific framebuffer for every render texture.\r\n        glTexture.framebuffer = gl.createFramebuffer();\r\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeRenderTexture(glTexture) {\r\n        let gl = this.stage.gl;\r\n        gl.deleteFramebuffer(glTexture.framebuffer);\r\n        gl.deleteTexture(glTexture);\r\n    }\r\n\r\n    _getBytesPerPixel(fmt, type) {\r\n        const gl = this.stage.gl;\r\n\r\n        if (fmt === gl.RGBA) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 4;\r\n\r\n                case gl.UNSIGNED_SHORT_4_4_4_4:\r\n                    return 2;\r\n\r\n                case gl.UNSIGNED_SHORT_5_5_5_1:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGBA format');\r\n            }\r\n        }\r\n        else if (fmt === gl.RGB) {\r\n            switch (type) {\r\n                case gl.UNSIGNED_BYTE:\r\n                    return 3;\r\n\r\n                case gl.UNSIGNED_BYTE_5_6_5:\r\n                    return 2;\r\n\r\n                default:\r\n                    throw new Error('Invalid type specified for GL_RGB format');\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\r\n        }\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        const gl = this.stage.gl;\r\n\r\n        const source = options.source;\r\n        let compressed = false;\r\n        if (options.renderInfo) {\r\n            compressed = options.renderInfo.compressed || false\r\n        }\r\n\r\n        const format = {\r\n            premultiplyAlpha: true,\r\n            hasAlpha: true\r\n        };\r\n\r\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\r\n            format.premultiplyAlpha = options.premultiplyAlpha;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('flipBlueRed')) {\r\n            format.flipBlueRed = options.flipBlueRed;\r\n        }\r\n\r\n        if (options && options.hasOwnProperty('hasAlpha')) {\r\n            format.hasAlpha = options.hasAlpha;\r\n        }\r\n\r\n        if (!format.hasAlpha) {\r\n            format.premultiplyAlpha = false;\r\n        }\r\n\r\n        format.texParams = options.texParams || {}\r\n        format.texOptions = options.texOptions || {}\r\n\r\n        let glTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\r\n\r\n        if (Utils.isNode) {\r\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\r\n        }\r\n\r\n        const texParams = format.texParams;\r\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\r\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\r\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\r\n\r\n        Object.keys(texParams).forEach(key => {\r\n            const value = texParams[key];\r\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\r\n        });\r\n\r\n        if (compressed) {\r\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\r\n            return glTexture;\r\n        }\r\n         \r\n        const texOptions = format.texOptions;\r\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\r\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\r\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\r\n        if (options && options.imageRef) {\r\n            texOptions.imageRef = options.imageRef;\r\n        }\r\n        \r\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\r\n        \r\n        glTexture.params = Utils.cloneObjShallow(texParams);\r\n        glTexture.options = Utils.cloneObjShallow(texOptions);\r\n\r\n        // calculate bytes per pixel for vram usage tracking\r\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\r\n\r\n        return glTexture;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        let offset = (index * 20);\r\n        const elementCore = quads.quadElements[index];\r\n\r\n        let r = elementCore._renderContext;\r\n\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        const mca = StageUtils.mergeColorAlpha;\r\n\r\n        if (r.tb !== 0 || r.tc !== 0) {\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta;\r\n            floats[offset++] = r.py + elementCore._w * r.tc;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px + elementCore._h * r.tb;\r\n            floats[offset++] = r.py + elementCore._h * r.td;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        } else {\r\n            // Simple.\r\n            let cx = r.px + elementCore._w * r.ta;\r\n            let cy = r.py + elementCore._h * r.td;\r\n\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = r.py;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._uly;\r\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\r\n            floats[offset++] = cx;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._brx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\r\n            floats[offset++] = r.px;\r\n            floats[offset++] = cy;\r\n            floats[offset++] = elementCore._ulx;\r\n            floats[offset++] = elementCore._bry;\r\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\r\n        }\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\r\n        let floats = renderState.quads.floats;\r\n        let uints = renderState.quads.uints;\r\n        return ((floats[offset] === 0) &&\r\n            (floats[offset + 1] === 0) &&\r\n            (floats[offset + 2] === 0) &&\r\n            (floats[offset + 3] === 0) &&\r\n            (uints[offset + 4] === 0xFFFFFFFF) &&\r\n            (floats[offset + 5] === renderTextureInfo.w) &&\r\n            (floats[offset + 6] === 0) &&\r\n            (floats[offset + 7] === 1) &&\r\n            (floats[offset + 8] === 0) &&\r\n            (uints[offset + 9] === 0xFFFFFFFF) &&\r\n            (floats[offset + 10] === renderTextureInfo.w) &&\r\n            (floats[offset + 11] === renderTextureInfo.h) &&\r\n            (floats[offset + 12] === 1) &&\r\n            (floats[offset + 13] === 1) &&\r\n            (uints[offset + 14] === 0xFFFFFFFF) &&\r\n            (floats[offset + 15] === 0) &&\r\n            (floats[offset + 16] === renderTextureInfo.h) &&\r\n            (floats[offset + 17] === 0) &&\r\n            (floats[offset + 18] === 1) &&\r\n            (uints[offset + 19] === 0xFFFFFFFF));\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n        // Set extra shader attribute data.\r\n        let offset = renderState.length * 80;\r\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\r\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\r\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\r\n            offset += extra;\r\n            if (extra) {\r\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\r\n            }\r\n        }\r\n        renderState.quads.dataLength = offset;\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        const gl = this.stage.gl;\r\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\r\n        const precision = renderTexture.precision;\r\n        gl.copyTexSubImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            precision * (options.sx || 0),\r\n            precision * (options.sy || 0),\r\n            precision * (options.x || 0),\r\n            precision * (options.y || 0),\r\n            precision * (options.w || renderTexture.ow),\r\n            precision * (options.h || renderTexture.oh));\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\r\n\r\nexport default class C2dCoreQuadList extends CoreQuadList {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this.renderContexts = [];\r\n        this.modes = [];\r\n    }\r\n\r\n    setRenderContext(index, v) {\r\n        this.renderContexts[index] = v;\r\n    }\r\n\r\n    setSimpleTc(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 1;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 1);\r\n        }\r\n    }\r\n\r\n    setWhite(index, v) {\r\n        if (v) {\r\n            this.modes[index] |= 2;\r\n        } else {\r\n            this.modes[index] -= (this.modes[index] & 2);\r\n        }\r\n    }\r\n\r\n    getRenderContext(index) {\r\n        return this.renderContexts[index];\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return (this.modes[index] & 1);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return (this.modes[index] & 2);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\r\n\r\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\r\n\r\n    getRenderContext(index) {\r\n        return this.quads.getRenderContext(this.index + index);\r\n    }\r\n\r\n    getSimpleTc(index) {\r\n        return this.quads.getSimpleTc(this.index + index);\r\n    }\r\n\r\n    getWhite(index) {\r\n        return this.quads.getWhite(this.index + index);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\r\nimport StageUtils from \"../../tree/StageUtils.mjs\";\r\nimport Utils from \"../../tree/Utils.mjs\";\r\n\r\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\r\n\r\n    init() {\r\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\r\n    }\r\n\r\n    _renderQuadOperation(op) {\r\n        let shader = op.shader;\r\n\r\n        if (op.length || op.shader.addEmpty()) {\r\n            const target = this._renderTexture || this._mainRenderTexture;\r\n            shader.beforeDraw(op, target);\r\n            shader.draw(op, target);\r\n            shader.afterDraw(op, target);\r\n        }\r\n    }\r\n\r\n    _clearRenderTexture() {\r\n        const ctx = this._getContext();\r\n\r\n        let clearColor = [0, 0, 0, 0];\r\n        if (this._mainRenderTexture.ctx === ctx) {\r\n            clearColor = this.ctx.stage.getClearColor();\r\n        }\r\n\r\n        const renderTexture = ctx.canvas;\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\r\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\r\n        } else {\r\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\r\n            // Do not use fillRect because it produces artifacts.\r\n            ctx.globalCompositeOperation = 'copy';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.globalCompositeOperation = 'source-over';\r\n        }\r\n    }\r\n    \r\n    _getContext() {\r\n        if (this._renderTexture) {\r\n            return this._renderTexture.ctx;\r\n        } else {\r\n            return this._mainRenderTexture.ctx;\r\n        } \r\n    }\r\n\r\n    _restoreContext() {\r\n        const ctx = this._getContext();\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx._scissor = null;\r\n    }\r\n\r\n    _setScissor(area) {\r\n        const ctx = this._getContext();\r\n\r\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\r\n            // Clipping is stored in the canvas context state.\r\n            // We can't reset clipping alone so we need to restore the full context.\r\n            this._restoreContext();\r\n\r\n            let precision = this.ctx.stage.getRenderPrecision();\r\n            if (area) {\r\n                ctx.beginPath();\r\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\r\n                ctx.closePath();\r\n                ctx.clip();\r\n            }\r\n            ctx._scissor = area;\r\n        }\r\n    }\r\n\r\n    static _equalScissorAreas(canvas, area, current) {\r\n        if (!area) {\r\n            area = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        if (!current) {\r\n            current = [0, 0, canvas.width, canvas.height]\r\n        }\r\n        return Utils.equalValues(area, current)\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Shader from \"../../tree/Shader.mjs\";\r\n\r\nexport default class C2dShader extends Shader {\r\n\r\n    beforeDraw(operation) {\r\n    }\r\n\r\n    draw(operation) {\r\n    }\r\n\r\n    afterDraw(operation) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dShader from \"../C2dShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class DefaultShader extends C2dShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\r\n        this._tintManager = this.ctx.stage.renderer.tintManager;\r\n    }\r\n\r\n    draw(operation, target) {\r\n        const ctx = target.ctx;\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const tx = operation.getTexture(i);\r\n            const vc = operation.getElementCore(i);\r\n            const rc = operation.getRenderContext(i);\r\n            const white = operation.getWhite(i);\r\n            const stc = operation.getSimpleTc(i);\r\n\r\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\r\n            const precision = this.ctx.stage.getRenderPrecision();\r\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\r\n\r\n            const rect = (tx === this._rectangleTexture);\r\n            const info = {operation, target, index: i, rect};\r\n\r\n            if (rect) {\r\n                // Check for gradient.\r\n                if (white) {\r\n                    ctx.fillStyle = 'white';\r\n                } else {\r\n                    this._setColorGradient(ctx, vc);\r\n                }\r\n\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n                ctx.fillRect(0, 0, vc.w, vc.h);\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            } else {\r\n                // @todo: set image smoothing based on the texture.\r\n\r\n                // @todo: optimize by registering whether identity texcoords are used.\r\n                ctx.globalAlpha = rc.alpha;\r\n                this._beforeDrawEl(info);\r\n\r\n                // @todo: test if rounding yields better performance.\r\n\r\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\r\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\r\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\r\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\r\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\r\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\r\n\r\n                let colorize = !white;\r\n                if (colorize) {\r\n                    // @todo: cache the tint texture for better performance.\r\n\r\n                    // Draw to intermediate texture with background color/gradient.\r\n                    // This prevents us from having to create a lot of render texture canvases.\r\n\r\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\r\n                    let color = vc._colorUl;\r\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\r\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\r\n                    }\r\n\r\n                    const alpha = ((color / 16777216) | 0) / 255.0;\r\n                    ctx.globalAlpha *= alpha;\r\n\r\n                    const rgb = color & 0x00FFFFFF;\r\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\r\n\r\n                    // Actually draw result.\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                } else {\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\r\n                }\r\n                this._afterDrawEl(info);\r\n                ctx.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\r\n        let color = vc._colorUl;\r\n        let gradient;\r\n        //@todo: quick single color check.\r\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\r\n\r\n        if (vc._colorUl === vc._colorUr) {\r\n            if (vc._colorBl === vc._colorBr) {\r\n                if (vc._colorUl === vc.colorBl) {\r\n                    // Single color.\r\n                } else {\r\n                    // Vertical gradient.\r\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\r\n                    if (transparency) {\r\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\r\n                    } else {\r\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                // Not supported gradient.\r\n            }\r\n        } else {\r\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\r\n                // Horizontal gradient.\r\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\r\n                if (transparency) {\r\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\r\n                } else {\r\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\r\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (gradient) {\r\n            ctx.fillStyle = gradient;\r\n        } else {\r\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\r\n        }\r\n    }\r\n\r\n    _beforeDrawEl(info) {\r\n    }\r\n\r\n    _afterDrawEl(info) {\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class C2dTextureTintManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._usedMemory = 0;\r\n        this._cachedNativeTextures = new Set();\r\n    }\r\n\r\n    destroy() {\r\n        this.gc(true);\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    delete(nativeTexture) {\r\n        // Should be called when native texture is cleaned up.\r\n        if (this._hasCache(nativeTexture)) {\r\n            const cache = this._getCache(nativeTexture);\r\n            const prevMemUsage = cache.memoryUsage;\r\n            cache.clear();\r\n            this._cachedNativeTextures.delete(nativeTexture);\r\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\r\n        }\r\n    }\r\n\r\n    getTintTexture(nativeTexture, color) {\r\n        const frame = this.stage.frameCounter;\r\n\r\n        this._cachedNativeTextures.add(nativeTexture);\r\n\r\n        const cache = this._getCache(nativeTexture);\r\n\r\n        const item = cache.get(color);\r\n        item.lf = frame;\r\n\r\n        if (item.tx) {\r\n            if (nativeTexture.update > item.u) {\r\n                // Native texture was updated in the mean time: renew.\r\n                this._tintTexture(item.tx, nativeTexture, color)\r\n            }\r\n\r\n            return item.tx;\r\n        } else {\r\n            const before = cache.memoryUsage;\r\n\r\n            // Find blanco tint texture.\r\n            let target = cache.reuseTexture(frame);\r\n            if (target) {\r\n                target.ctx.clearRect(0, 0, target.width, target.height);\r\n            } else {\r\n                // Allocate new.\r\n                target = document.createElement('canvas');\r\n                target.width = nativeTexture.w;\r\n                target.height = nativeTexture.h;\r\n                target.ctx = target.getContext('2d');\r\n            }\r\n\r\n            this._tintTexture(target, nativeTexture, color);\r\n            cache.set(color, target, frame);\r\n\r\n            const after = cache.memoryUsage;\r\n\r\n            if (after !== before) {\r\n                this._addMemoryUsage(after - before);\r\n            }\r\n\r\n            return target;\r\n        }\r\n    }\r\n\r\n    _tintTexture(target, source, color) {\r\n        let col = color.toString(16);\r\n        while (col.length < 6) {\r\n            col = \"0\" + col;\r\n        }\r\n        target.ctx.fillStyle = '#' + col;\r\n        target.ctx.globalCompositeOperation = 'copy';\r\n        target.ctx.fillRect(0, 0, source.w, source.h);\r\n        target.ctx.globalCompositeOperation = 'multiply';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n\r\n        // Alpha-mix the texture.\r\n        target.ctx.globalCompositeOperation = 'destination-in';\r\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\r\n    }\r\n\r\n    _hasCache(nativeTexture) {\r\n        return !!nativeTexture._tintCache;\r\n    }\r\n\r\n    _getCache(nativeTexture) {\r\n        if (!nativeTexture._tintCache) {\r\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\r\n        }\r\n        return nativeTexture._tintCache;\r\n    }\r\n\r\n    gc(aggressive = false) {\r\n        const frame = this.stage.frameCounter;\r\n        let delta = 0;\r\n        this._cachedNativeTextures.forEach(texture => {\r\n            const cache = this._getCache(texture);\r\n            if (aggressive) {\r\n                delta += cache.memoryUsage;\r\n                cache.clear();\r\n            } else {\r\n                const before = cache.memoryUsage;\r\n                cache.cleanup(frame);\r\n                cache.releaseBlancoTextures();\r\n                delta += (cache.memoryUsage - before);\r\n            }\r\n        });\r\n\r\n        if (aggressive) {\r\n            this._cachedNativeTextures.clear();\r\n        }\r\n\r\n        if (delta) {\r\n            this._addMemoryUsage(delta);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass C2dTintCache {\r\n\r\n    constructor(nativeTexture) {\r\n        this._tx = nativeTexture;\r\n        this._colors = new Map();\r\n        this._blancoTextures = null;\r\n        this._lastCleanupFrame = 0;\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get memoryUsage() {\r\n        return this._memTextures * this._tx.w * this._tx.h;\r\n    }\r\n\r\n    releaseBlancoTextures() {\r\n        this._memTextures -= this._blancoTextures.length;\r\n        this._blancoTextures = [];\r\n    }\r\n\r\n    clear() {\r\n        // Dereference the textures.\r\n        this._blancoTextures = null;\r\n        this._colors.clear();\r\n        this._memTextures = 0;\r\n    }\r\n\r\n    get(color) {\r\n        let item = this._colors.get(color);\r\n        if (!item) {\r\n            item = {lf: -1, tx: undefined, u: -1};\r\n            this._colors.set(color, item);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    set(color, texture, frame) {\r\n        const item = this.get(color);\r\n        item.lf = frame;\r\n        item.tx = texture;\r\n        item.u = frame;\r\n        this._memTextures++;\r\n    }\r\n\r\n    cleanup(frame) {\r\n        // We only need to clean up once per frame.\r\n        if (this._lastCleanupFrame !== frame) {\r\n\r\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\r\n            this._blancoTextures = [];\r\n\r\n            this._colors.forEach((item, color) => {\r\n                // Clean up entries that were not used last frame.\r\n                if (item.lf < frame - 1) {\r\n                    if (item.tx) {\r\n                        // Keep as reusable blanco texture.\r\n                        this._blancoTextures.push(item.tx);\r\n                    }\r\n                    this._colors.delete(color);\r\n                }\r\n            });\r\n\r\n            this._lastCleanupFrame = frame;\r\n        }\r\n    }\r\n\r\n    reuseTexture(frame) {\r\n        // Try to reuse textures, because creating them every frame is expensive.\r\n        this.cleanup(frame);\r\n        if (this._blancoTextures && this._blancoTextures.length) {\r\n            this._memTextures--;\r\n            return this._blancoTextures.pop();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\r\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\r\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\r\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\r\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\r\nimport C2dShader from \"./C2dShader.mjs\";\r\nimport Renderer from \"../Renderer.mjs\";\r\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\r\n\r\nexport default class C2dRenderer extends Renderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this.tintManager = new TextureTintManager(stage);\r\n\r\n        this.setupC2d(this.stage.c2d.canvas);\r\n    }\r\n\r\n    destroy() {\r\n        this.tintManager.destroy();\r\n\r\n        this.tintManager = null;\r\n        delete this.tintManager;\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new DefaultShader(ctx);\r\n    }\r\n\r\n    _getShaderBaseType() {\r\n        return C2dShader\r\n    }\r\n\r\n    _getShaderAlternative(shaderType) {\r\n        return shaderType.getC2d && shaderType.getC2d();\r\n    }\r\n\r\n    createCoreQuadList(ctx) {\r\n        return new C2dCoreQuadList(ctx);\r\n    }\r\n\r\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\r\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        return new C2dCoreRenderExecutor(ctx);\r\n    }\r\n    \r\n    createCoreRenderState(ctx) {\r\n        return new CoreRenderState(ctx);\r\n    }\r\n\r\n    createRenderTexture(w, h, pw, ph) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = pw;\r\n        canvas.height = ph;\r\n        this.setupC2d(canvas);\r\n        return canvas;\r\n    }\r\n    \r\n    freeRenderTexture(nativeTexture) {\r\n        this.tintManager.delete(nativeTexture);\r\n    }\r\n\r\n    gc(aggressive) {\r\n        this.tintManager.gc(aggressive);\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        // For canvas, we do not need to upload.\r\n        if (options.source.buffer) {\r\n            // Convert RGBA buffer to canvas.\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = options.w;\r\n            canvas.height = options.h;\r\n\r\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\r\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\r\n            return canvas;\r\n        }\r\n\r\n        return options.source;\r\n    }\r\n\r\n    freeTextureSource(textureSource) {\r\n        this.tintManager.delete(textureSource.nativeTexture);\r\n    }\r\n\r\n    addQuad(renderState, quads, index) {\r\n        // Render context changes while traversing so we save it by ref.\r\n        const elementCore = quads.quadElements[index];\r\n        quads.setRenderContext(index, elementCore._renderContext);\r\n        quads.setWhite(index, elementCore.isWhite());\r\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\r\n    }\r\n\r\n    isRenderTextureReusable(renderState, renderTextureInfo) {\r\n        // @todo: check render coords/matrix, maybe move this to core?\r\n        return false;\r\n    }\r\n\r\n    finishRenderState(renderState) {\r\n    }\r\n\r\n    setupC2d(canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.ctx = ctx;\r\n\r\n        ctx._scissor = null;\r\n\r\n        // Save base state so we can restore the defaults later.\r\n        canvas.ctx.save();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\r\n\r\nexport default class SparkShader extends WebGLShader {\r\n\r\n    enableAttribs() {\r\n        // Enables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\r\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            // Some shaders may ignore the color.\r\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\r\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    disableAttribs() {\r\n        // Disables the attribs in the shader program.\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\r\n\r\n        if (this._attrib(\"aTextureCoord\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\r\n        }\r\n\r\n        if (this._attrib(\"aColor\") !== -1) {\r\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\r\n        }\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\r\n    }\r\n\r\n    draw(operation) {\r\n        let gl = this.gl;\r\n\r\n        let length = operation.length;\r\n\r\n        if (length) {\r\n            let glTexture = operation.getTexture(0);\r\n            let pos = 0;\r\n            for (let i = 0; i < length; i++) {\r\n                let tx = operation.getTexture(i);\r\n                if (glTexture !== tx) {\r\n                    if (glTexture.options && glTexture.options.imageRef) {\r\n                        let elementPostion = (i > 0) ? (i - 1) : i;\r\n                        const precision = this.ctx.stage.getOption('precision');\r\n                        let vc = operation.getElementCore(elementPostion);\r\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                    } else {\r\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                    }\r\n                    glTexture = tx;\r\n                    pos = i;\r\n                }\r\n            }\r\n            if (pos < length) {\r\n                if (glTexture.options && glTexture.options.imageRef) {\r\n                    const precision = this.ctx.stage.getOption('precision');\r\n                    let vc = operation.getElementCore(pos);\r\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\r\n                } else {\r\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nSparkShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nSparkShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\r\nimport SparkShader from \"./shaders/SparkShader.mjs\";\r\n\r\nexport default class SparkRenderer extends WebGLRenderer {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n    }\r\n\r\n    _createDefaultShader(ctx) {\r\n        return new SparkShader(ctx);\r\n    }\r\n\r\n    createCoreRenderExecutor(ctx) {\r\n        global.beginDrawing();\r\n        let ret = super.createCoreRenderExecutor(ctx);\r\n        global.endDrawing();\r\n        return ret;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class ImageWorker {\r\n\r\n    constructor(options = {}) {\r\n        this._items = new Map();\r\n        this._id = 0;\r\n\r\n        this._initWorker();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._worker) {\r\n            this._worker.terminate();\r\n        }\r\n\r\n        this._items = null;\r\n        this._worker = null;\r\n\r\n        delete this._items;\r\n        delete this._worker;        \r\n    }\r\n\r\n    _initWorker() {\r\n        const code = `(${createWorker.toString()})()`;\r\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\r\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\r\n            type: 'application/javascript; charset=utf-8'\r\n        });\r\n        this._worker = new Worker(blobURL);\r\n\r\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\r\n\r\n        this._worker.onmessage = (e) => {\r\n            if (e.data && e.data.id) {\r\n                const id = e.data.id;\r\n                const item = this._items.get(id);\r\n                if (item) {\r\n                    if (e.data.type == 'data') {\r\n                        this.finish(item, e.data.info);\r\n                    } else {\r\n                        this.error(item, e.data.info);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    create(src) {\r\n        const id = ++this._id;\r\n        const item = new ImageWorkerImage(this, id, src);\r\n        this._items.set(id, item);\r\n        this._worker.postMessage({type: \"add\", id: id, src: src});\r\n        return item;\r\n    }\r\n\r\n    cancel(image) {\r\n        this._worker.postMessage({type: \"cancel\", id: image.id});\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    error(image, info) {\r\n        image.error(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n    finish(image, info) {\r\n        image.load(info);\r\n        this._items.delete(image.id);\r\n    }\r\n\r\n}\r\n\r\nclass ImageWorkerImage {\r\n\r\n    constructor(manager, id, src) {\r\n        this._manager = manager;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._onError = null;\r\n        this._onLoad = null;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get src() {\r\n        return this._src;\r\n    }\r\n\r\n    set onError(f) {\r\n        this._onError = f;\r\n    }\r\n\r\n    set onLoad(f) {\r\n        this._onLoad = f;\r\n    }\r\n\r\n    cancel() {\r\n        this._manager.cancel(this);\r\n    }\r\n\r\n    load(info) {\r\n        if (this._onLoad) {\r\n            this._onLoad(info);\r\n        }\r\n    }\r\n\r\n    error(info) {\r\n        if (this._onError) {\r\n            this._onError(info);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\r\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\r\n */\r\nconst createWorker = function() {\r\n\r\n    function ImageWorkerServer() {\r\n\r\n        this.items = new Map();\r\n\r\n        var t = this;\r\n        onmessage = function(e) {\r\n            t._receiveMessage(e);\r\n        }\r\n\r\n    }\r\n\r\n    ImageWorkerServer.isPathAbsolute = function(path) {\r\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\r\n    };\r\n\r\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\r\n        if (e.data.type === 'config') {\r\n            this.config = e.data.config;\r\n\r\n            var base = this.config.path;\r\n            // the constructing of the basepath fails\r\n            // if location.hash contains a slash\r\n            var hasHashPath = /#.*?\\//;\r\n            if(hasHashPath.test(base)){\r\n                base = base.replace(/#.*$/,'');\r\n            }\r\n\r\n            var parts = base.split(\"/\");\r\n            parts.pop();\r\n            this._relativeBase = parts.join(\"/\") + \"/\";\r\n\r\n        } else if (e.data.type === 'add') {\r\n            this.add(e.data.id, e.data.src);\r\n        } else if (e.data.type === 'cancel') {\r\n            this.cancel(e.data.id);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServer.prototype.add = function(id, src) {\r\n        // Convert relative URLs.\r\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\r\n            src = this._relativeBase + src;\r\n        }\r\n\r\n        if (src.substr(0,2) === \"//\") {\r\n            // This doesn't work for image workers.\r\n            src = this.config.protocol + src;\r\n        }\r\n\r\n        var item = new ImageWorkerServerItem(id, src);\r\n        var t = this;\r\n        item.onFinish = function(result) {\r\n            t.finish(item, result);\r\n        };\r\n        item.onError = function(info) {\r\n            t.error(item, info);\r\n        };\r\n        this.items.set(id, item);\r\n        item.start();\r\n    };\r\n\r\n    ImageWorkerServer.prototype.cancel = function(id) {\r\n        var item = this.items.get(id);\r\n        if (item) {\r\n            item.cancel();\r\n            this.items.delete(id);\r\n        }\r\n    }\r\n\r\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\r\n        postMessage({\r\n            type: \"data\",\r\n            id: item.id,\r\n            info: {\r\n                imageBitmap,\r\n                hasAlphaChannel\r\n            }\r\n        }, [imageBitmap]);\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\r\n        postMessage({\r\n            type: \"error\",\r\n            id: item.id,\r\n            info: {\r\n                type,\r\n                message\r\n            }\r\n        });\r\n        this.items.delete(item.id);\r\n    };\r\n\r\n    ImageWorkerServer.isWPEBrowser = function() {\r\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\r\n    };\r\n\r\n    function ImageWorkerServerItem(id, src) {\r\n\r\n        this._onError = undefined;\r\n        this._onFinish = undefined;\r\n        this._id = id;\r\n        this._src = src;\r\n        this._xhr = undefined;\r\n        this._mimeType = undefined;\r\n        this._canceled = false;\r\n\r\n    }\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\r\n        get: function() {\r\n            return this._id;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\r\n        get: function() {\r\n            return this._onFinish;\r\n        },\r\n        set: function(f) {\r\n            this._onFinish = f;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\r\n        get: function() {\r\n            return this._onError;\r\n        },\r\n        set: function(f) {\r\n            this._onError = f;\r\n        }\r\n    });\r\n\r\n    ImageWorkerServerItem.prototype.start = function() {\r\n        this._xhr = new XMLHttpRequest();\r\n        this._xhr.open(\"GET\", this._src, true);\r\n        this._xhr.responseType = \"blob\";\r\n\r\n        var t = this;\r\n        this._xhr.onerror = function(oEvent) {\r\n            t.error({type: \"connection\", message: \"Connection error\"});\r\n        };\r\n\r\n        this._xhr.onload = function(oEvent) {\r\n            var blob = t._xhr.response;\r\n            t._mimeType = blob.type;\r\n\r\n            t._createImageBitmap(blob);\r\n        };\r\n\r\n        this._xhr.send();\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\r\n        var t = this;\r\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\r\n            t.finish({\r\n                imageBitmap,\r\n                hasAlphaChannel: t._hasAlphaChannel()\r\n            });\r\n        }).catch(function(e) {\r\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\r\n        });\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\r\n        if (ImageWorkerServer.isWPEBrowser()) {\r\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\r\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\r\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\r\n            return true;\r\n        } else {\r\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.cancel = function() {\r\n        if (this._canceled) return;\r\n        if (this._xhr) {\r\n            this._xhr.abort();\r\n        }\r\n        this._canceled = true;\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.error = function(type, message) {\r\n        if (!this._canceled && this._onError) {\r\n            this._onError({type, message});\r\n        }\r\n    };\r\n\r\n    ImageWorkerServerItem.prototype.finish = function(info) {\r\n        if (!this._canceled && this._onFinish) {\r\n            this._onFinish(info);\r\n        }\r\n    };\r\n\r\n    var worker = new ImageWorkerServer();\r\n};\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../tree/Utils.mjs\";\r\nimport ImageWorker from \"./ImageWorker.mjs\";\r\n\r\n/**\r\n * Platform-specific functionality.\r\n */\r\nexport default class WebPlatform {\r\n\r\n    init(stage) {\r\n        this.stage = stage;\r\n        this._looping = false;\r\n        this._awaitingLoop = false;\r\n\r\n        // Alternative handler to avoid RAF when idle\r\n        this._loopHandler = null;\r\n        this._idleLoopCounter = 0;\r\n        this._idleLoopDelay = 60;\r\n\r\n        if (this.stage.getOption(\"useImageWorker\")) {\r\n            if (!window.createImageBitmap || !window.Worker) {\r\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\r\n            } else {\r\n                this._imageWorker = new ImageWorker();\r\n            }\r\n        }\r\n\r\n        this._registerVisibilityChangeHandler();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._imageWorker) {\r\n            this._imageWorker.destroy();\r\n        }\r\n\r\n        clearInterval(this._loopHandler);\r\n\r\n        this._removeKeyHandler();\r\n        this._removeClickHandler();\r\n        this._removeHoverHandler();\r\n        this._removeScrollWheelHandler();\r\n        this._removeVisibilityChangeHandler();\r\n\r\n        this.stage = null;\r\n        delete this.stage;\r\n    }\r\n\r\n    startLoop() {\r\n        this._looping = true;\r\n        if (!this._awaitingLoop) {\r\n            this.loop();\r\n        }\r\n    }\r\n\r\n    stopLoop() {\r\n        this._looping = false;\r\n    }\r\n\r\n    switchLoop() {\r\n        if (this._idleLoopCounter < this._idleLoopDelay) {\r\n            this._idleLoopCounter++;\r\n            return;\r\n        }\r\n        if (!this.stage.ctx.hasRenderUpdates()) {\r\n            this.stopLoop();\r\n            this._loopHandler = setInterval(() => {\r\n                this.stage.updateFrame();\r\n                this.stage.idleFrame();\r\n                if (this.stage.ctx.hasRenderUpdates()) {\r\n                    clearInterval(this._loopHandler);\r\n                    this.startLoop();\r\n                };\r\n            }, 1000 / 60);\r\n        } else {\r\n            this._idleLoopCounter = 0;\r\n        }\r\n    }\r\n\r\n    loop() {\r\n        let self = this;\r\n        let lp = function () {\r\n            self._awaitingLoop = false;\r\n            if (self._looping) {\r\n                self.stage.updateFrame();\r\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\r\n                    self.switchLoop();\r\n                }\r\n                self.stage.renderFrame();\r\n                requestAnimationFrame(lp);\r\n                self._awaitingLoop = true;\r\n            }\r\n        }\r\n        requestAnimationFrame(lp);\r\n    }\r\n\r\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\r\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\r\n        gl.compressedTexImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            source.glInternalFormat,\r\n            source.pixelWidth,\r\n            source.pixelHeight,\r\n            0,\r\n            view,\r\n        )\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n\r\n    uploadGlTexture(gl, textureSource, source, options) {\r\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\r\n            // Web-specific data types.\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n        } else if (source instanceof HTMLCanvasElement) {\r\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\r\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\r\n            } else if (source.width > 0 && source.height > 0) {\r\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\r\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\r\n                const ctx = source.getContext('2d');\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\r\n            }\r\n        } else {\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * KTX File format specification\r\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n     **/\r\n    handleKtxLoad(cb, src) {\r\n        var self = this;\r\n        return function () {\r\n            var arraybuffer = this.response;\r\n            var view = new DataView(arraybuffer);\r\n\r\n            // identifier, big endian\r\n            var targetIdentifier = 3632701469\r\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\r\n                cb('Parsing failed: identifier ktx mismatch:', src)\r\n            }\r\n\r\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\r\n            var data = {\r\n                glType: view.getUint32(16, littleEndian),\r\n                glTypeSize: view.getUint32(20, littleEndian),\r\n                glFormat: view.getUint32(24, littleEndian),\r\n                glInternalFormat: view.getUint32(28, littleEndian),\r\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\r\n                pixelWidth: view.getUint32(36, littleEndian),\r\n                pixelHeight: view.getUint32(40, littleEndian),\r\n                pixelDepth: view.getUint32(44, littleEndian),\r\n                numberOfArrayElements: view.getUint32(48, littleEndian),\r\n                numberOfFaces: view.getUint32(52, littleEndian),\r\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\r\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\r\n                kvps: [],\r\n                mipmaps: [],\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            const props = (obj) => {\r\n                const p = [];\r\n                for (let v in obj) {\r\n                    p.push(obj[v]);\r\n                }\r\n                return p;\r\n            }\r\n\r\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\r\n                .filter((obj) => obj != null)\r\n                .map((obj) => props(obj))\r\n                .reduce((prev, current) => prev.concat(current));\r\n\r\n            if (!formats.includes(data.glInternalFormat)) {\r\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\r\n            }\r\n\r\n            var offset = 64\r\n            // Key Value Pairs of data start at byte offset 64\r\n            // But the only known kvp is the API version, so skipping parsing.\r\n            offset += data.bytesOfKeyValueData;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                var imageSize = view.getUint32(offset);\r\n                offset += 4;\r\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\r\n                offset += imageSize\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePvrLoad(cb, src) {\r\n        return function () {\r\n            // pvr header length in 32 bits\r\n            const pvrHeaderLength = 13;\r\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\r\n            const pvrFormatEtc1 = 0x8D64;\r\n            const pvrWidth = 7;\r\n            const pvrHeight = 6;\r\n            const pvrMipmapCount = 11;\r\n            const pvrMetadata = 12;\r\n            const arrayBuffer = this.response;\r\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\r\n            const dataOffset = header[pvrMetadata] + 52;\r\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\r\n\r\n            var data = {\r\n                glInternalFormat: pvrFormatEtc1,\r\n                pixelWidth: header[pvrWidth],\r\n                pixelHeight: header[pvrHeight],\r\n                numberOfMipmapLevels: header[pvrMipmapCount],\r\n                mipmaps: [],\r\n                pvr: true,\r\n                get width() { return this.pixelWidth },\r\n                get height() { return this.pixelHeight },\r\n            };\r\n\r\n            let offset = 0\r\n            let width = data.pixelWidth;\r\n            let height = data.pixelHeight;\r\n\r\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\r\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\r\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\r\n                data.mipmaps.push(view);\r\n                offset += level;\r\n                width = width >> 1;\r\n                height = height >> 1;\r\n            }\r\n\r\n            cb(null, {\r\n                source: data,\r\n                renderInfo: { src: src, compressed: true },\r\n            })\r\n        }\r\n    }\r\n\r\n    loadSrcTexture({ src, hasAlpha }, cb) {\r\n        let cancelCb = undefined;\r\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\r\n        // shahid splash service uses the type query param to determine the format.\r\n        let isKtx = src.indexOf('.ktx') >= 0 || src.indexOf('type=etc') >= 0;\r\n        let isPvr = src.indexOf('.pvr') >= 0;\r\n        if (isKtx || isPvr) {\r\n            let request = new XMLHttpRequest();\r\n            request.addEventListener(\r\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\r\n            );\r\n            request.open(\"GET\", src);\r\n            request.responseType = \"arraybuffer\";\r\n            request.send();\r\n            cancelCb = function () {\r\n                request.abort();\r\n            }\r\n        } else if (this._imageWorker) {\r\n            // WPE-specific image parser.\r\n            const image = this._imageWorker.create(src);\r\n            image.onError = function (err) {\r\n                return cb(\"Image load error\");\r\n            };\r\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\r\n                cb(null, {\r\n                    source: imageBitmap,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: hasAlphaChannel,\r\n                    premultiplyAlpha: true\r\n                });\r\n            };\r\n            cancelCb = function () {\r\n                image.cancel();\r\n            }\r\n        } else {\r\n            let image = new Image();\r\n\r\n            // On the PS4 platform setting the `crossOrigin` attribute on\r\n            // images can cause CORS failures.\r\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\r\n                // Base64.\r\n                image.crossOrigin = \"Anonymous\";\r\n            }\r\n            image.onerror = function (err) {\r\n                // Ignore error message when cancelled.\r\n                if (image.src) {\r\n                    return cb(\"Image load error\");\r\n                }\r\n            };\r\n            image.onload = function () {\r\n                cb(null, {\r\n                    source: image,\r\n                    renderInfo: { src: src, compressed: false },\r\n                    hasAlpha: isPng || hasAlpha\r\n                });\r\n            };\r\n            image.src = src;\r\n\r\n            cancelCb = function () {\r\n                image.onerror = null;\r\n                image.onload = null;\r\n                image.removeAttribute('src');\r\n            }\r\n        }\r\n\r\n        return cancelCb;\r\n    }\r\n\r\n    createWebGLContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let opts = {\r\n            alpha: true,\r\n            antialias: false,\r\n            premultipliedAlpha: true,\r\n            stencil: true,\r\n            preserveDrawingBuffer: false\r\n        };\r\n\r\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\r\n\r\n        if (!gl) {\r\n            throw new Error('This browser does not support webGL.');\r\n        }\r\n\r\n        return gl;\r\n    }\r\n\r\n    createCanvasContext(w, h) {\r\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\r\n\r\n        if (w && h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n        }\r\n\r\n        let c2d = canvas.getContext('2d');\r\n        if (!c2d) {\r\n            throw new Error('This browser does not support 2d canvas.');\r\n        }\r\n\r\n        return c2d;\r\n    }\r\n\r\n    getHrTime() {\r\n        return window.performance ? window.performance.now() : (new Date()).getTime();\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        // We can't reuse this canvas because textures may load async.\r\n        return document.createElement('canvas');\r\n    }\r\n\r\n    getTextureOptionsForDrawingCanvas(canvas) {\r\n        let options = {};\r\n        options.source = canvas;\r\n        return options;\r\n    }\r\n\r\n    nextFrame(changes) {\r\n        /* WebGL blits automatically */\r\n    }\r\n\r\n    registerKeydownHandler(keyhandler) {\r\n        this._keydownListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keydown', this._keydownListener);\r\n    }\r\n\r\n    registerKeyupHandler(keyhandler) {\r\n        this._keyupListener = (e) => {\r\n            keyhandler(e);\r\n        };\r\n        window.addEventListener('keyup', this._keyupListener);\r\n    }\r\n\r\n    _removeKeyHandler() {\r\n        if (this._keydownListener) {\r\n            window.removeEventListener('keydown', this._keydownListener);\r\n        }\r\n\r\n        if (this._keyupListener) {\r\n            window.removeEventListener('keyup', this._keyupListener);\r\n        }\r\n    }\r\n\r\n    registerClickHandler(clickHandler) {\r\n        this._clickListener = e => {\r\n            clickHandler(e);\r\n        };\r\n        window.addEventListener('mousedown', this._clickListener);\r\n    }\r\n\r\n    _removeClickHandler() {\r\n        if (this._clickListener) {\r\n            window.removeEventListener('mousedown', this._clickListener);\r\n        }\r\n    }\r\n\r\n    registerHoverHandler(hoverHandler) {\r\n        this._hoverListener = e => {\r\n            hoverHandler(e);\r\n        };\r\n        window.addEventListener('mousemove', this._hoverListener);\r\n    }\r\n\r\n    _removeHoverHandler() {\r\n        if (this._hoverListener) {\r\n            window.removeEventListener('mousemove', this._hoverListener);\r\n        }\r\n    }\r\n\r\n    registerScrollWheelHandler(registerScrollWheelHandler) {\r\n        this._scrollWheelListener = e => {\r\n            registerScrollWheelHandler(e);\r\n        }\r\n        window.addEventListener('wheel', this._scrollWheelListener);\r\n    }\r\n\r\n    _removeScrollWheelHandler() {\r\n        if (this._scrollWheelListener) {\r\n            window.removeEventListener('wheel', this._scrollWheelListener);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\r\n     */\r\n    _registerVisibilityChangeHandler() {\r\n        this._visibilityChangeHandler = () => {\r\n            if (document.visibilityState === 'visible') {\r\n                this.stage.root.core.setHasRenderUpdates(2);\r\n                this.stage.renderFrame();\r\n            }\r\n        }\r\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\r\n    }\r\n\r\n    _removeVisibilityChangeHandler() {\r\n        if (this._visibilityChangeHandler) {\r\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\r\n\r\nexport default class PlatformLoader {\r\n    static load(options) {\r\n        if (options.platform) {\r\n            return options.platform;\r\n        } else {\r\n            return WebPlatform;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass Utils {\r\n\r\n    static isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    static isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n\r\n    static isInteger(value) {\r\n        return (typeof value === 'number' && (value % 1) === 0);\r\n    }\r\n\r\n    static isBoolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static isString(value) {\r\n        return typeof value == 'string';\r\n    }\r\n\r\n    static isObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object' || type == 'function');\r\n    }\r\n\r\n    static isPlainObject(value) {\r\n        let type = typeof value;\r\n        return !!value && (type == 'object');\r\n    }\r\n\r\n    static isObjectLiteral(value){\r\n        return typeof value === 'object' && value && value.constructor === Object\r\n    }\r\n\r\n    static getArrayIndex(index, arr) {\r\n        return Utils.getModuloIndex(index, arr.length);\r\n    }\r\n\r\n    static equalValues(v1, v2) {\r\n        if ((typeof v1) !== (typeof v2)) return false\r\n        if (Utils.isObjectLiteral(v1)) {\r\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\r\n        } else if (Array.isArray(v1)) {\r\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\r\n        } else {\r\n            return v1 === v2\r\n        }\r\n    }\r\n\r\n    static equalObjectLiterals(obj1, obj2) {\r\n        let keys1 = Object.keys(obj1);\r\n        let keys2 = Object.keys(obj2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false\r\n        }\r\n\r\n        for (let i = 0, n = keys1.length; i < n; i++) {\r\n            const k1 = keys1[i];\r\n            const k2 = keys2[i];\r\n            if (k1 !== k2) {\r\n                return false\r\n            }\r\n\r\n            const v1 = obj1[k1];\r\n            const v2 = obj2[k2];\r\n\r\n            if (!Utils.equalValues(v1, v2)) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static equalArrays(v1, v2) {\r\n        if (v1.length !== v2.length) {\r\n            return false\r\n        }\r\n        for (let i = 0, n = v1.length; i < n; i++) {\r\n            if (!this.equalValues(v1[i], v2[i])) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Maintains the state of a WebGLRenderingContext.\r\n */\r\nclass WebGLState {\r\n\r\n    constructor(id, gl) {\r\n        this._id = id;\r\n        this._gl = gl;\r\n        this._program = undefined;\r\n        this._buffers = new Map();\r\n        this._framebuffers = new Map();\r\n        this._renderbuffers = new Map();\r\n\r\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\r\n        this._vertexAttribs = new Array(16);\r\n        this._nonDefaultFlags = new Set();\r\n        this._settings = new Map();\r\n        this._textures = new Array(8);\r\n        this._maxTexture = 0;\r\n        this._activeTexture = gl.TEXTURE0;\r\n        this._pixelStorei = new Array(5);\r\n    }\r\n\r\n    _getDefaultFlag(cap) {\r\n        return (cap === this._gl.DITHER);\r\n    }\r\n\r\n    setFlag(cap, v) {\r\n        const def = this._getDefaultFlag(cap);\r\n        if (v === def) {\r\n            return this._nonDefaultFlags.delete(cap);\r\n        } else {\r\n            if (!this._nonDefaultFlags.has(cap)) {\r\n                this._nonDefaultFlags.add(cap);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setBuffer(target, buffer) {\r\n        const change = this._buffers.get(target) !== buffer;\r\n        this._buffers.set(target, buffer);\r\n\r\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\r\n            // When the array buffer is changed all attributes are cleared.\r\n            this._vertexAttribs = [];\r\n        }\r\n\r\n        return change;\r\n    }\r\n\r\n    setFramebuffer(target, buffer) {\r\n        const change = this._framebuffers.get(target) !== buffer;\r\n        this._framebuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setRenderbuffer(target, buffer) {\r\n        const change = this._renderbuffers.get(target) !== buffer;\r\n        this._renderbuffers.set(target, buffer);\r\n        return change;\r\n    }\r\n\r\n    setProgram(program) {\r\n        const change = this._program !== program;\r\n        this._program = program;\r\n        return change\r\n    }\r\n\r\n    setSetting(func, v) {\r\n        const s = this._settings.get(func);\r\n        const change = !s || !Utils.equalValues(s, v);\r\n        this._settings.set(func, v);\r\n        return change\r\n    }\r\n\r\n    disableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va && va[5]) {\r\n            va[5] = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    enableVertexAttribArray(index) {\r\n        const va = this._vertexAttribs[index];\r\n        if (va) {\r\n            if (!va[0]) {\r\n                va[0] = true;\r\n                return true;\r\n            }\r\n        } else {\r\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    vertexAttribPointer(index, props) {\r\n        let va = this._vertexAttribs[index];\r\n        let equal = false;\r\n        if (va) {\r\n            equal = va[0] === props[0] &&\r\n                va[1] === props[1] &&\r\n                va[2] === props[2] &&\r\n                va[3] === props[3] &&\r\n                va[4] === props[4];\r\n        }\r\n\r\n        if (equal) {\r\n            return false;\r\n        } else {\r\n            props[5] = va ? va[5] : false;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setActiveTexture(texture) {\r\n        const changed = this._activeTexture !== texture;\r\n        this._activeTexture = texture;\r\n        return changed;\r\n    }\r\n\r\n    bindTexture(target, texture) {\r\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\r\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\r\n        const current = this._textures[activeIndex];\r\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\r\n        if (current) {\r\n            if (current[targetIndex] === texture) {\r\n                return false;\r\n            }\r\n            current[targetIndex] = texture;\r\n            return true;\r\n        } else {\r\n            if (texture) {\r\n                this._textures[activeIndex] = [];\r\n                this._textures[activeIndex][targetIndex] = texture;\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    setPixelStorei(pname, param) {\r\n        const i = WebGLState._getPixelStoreiIndex(pname);\r\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\r\n        this._pixelStorei[i] = param;\r\n        return change;\r\n    }\r\n\r\n    migrate(s) {\r\n        const t = this;\r\n\r\n        // Warning: migrate should call the original prototype methods directly.\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        // useProgram\r\n        if (s._program !== t._program) {\r\n            this._gl._useProgram(s._program);\r\n        }\r\n\r\n        this._migrateFramebuffers(t, s);\r\n        this._migrateRenderbuffers(t, s);\r\n\r\n        const buffersChanged = this._migrateBuffers(t, s);\r\n        this._migrateAttributes(t, s, buffersChanged);\r\n\r\n        this._migrateFlags(t, s);\r\n\r\n        this._migrateSettings(t, s);\r\n\r\n        this._migratePixelStorei(t, s);\r\n        \r\n        this._migrateTextures(t, s);\r\n        \r\n    }\r\n\r\n    _migratePixelStorei(t, s) {\r\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\r\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\r\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\r\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\r\n            }\r\n        }\r\n    }\r\n\r\n    _migrateTextures(t, s) {\r\n        const max = Math.max(t._maxTexture, s._maxTexture);\r\n\r\n        let activeTexture = t._activeTexture;\r\n\r\n        for (let i = 0; i < max; i++) {\r\n            const sTargets = s._textures[i];\r\n            const tTargets = t._textures[i];\r\n            const textureNumb = WebGLState._getTextureByIndex(i);\r\n\r\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\r\n            for (let j = 0, n = targetMax; j < n; j++) {\r\n                const target = WebGLState._getTextureTargetByIndex(j);\r\n                if (activeTexture !== textureNumb) {\r\n                    this._gl._activeTexture(textureNumb);\r\n                    activeTexture = textureNumb;\r\n                }\r\n\r\n                const texture = (sTargets && sTargets[j]) || null;\r\n                this._gl._bindTexture(target, texture);\r\n            }\r\n        }\r\n\r\n        if (s._activeTexture !== activeTexture) {\r\n            this._gl._activeTexture(s._activeTexture);\r\n        }\r\n    }\r\n\r\n    _migrateBuffers(t, s) {\r\n        s._buffers.forEach((framebuffer, target) => {\r\n            if (t._buffers.get(target) !== framebuffer) {\r\n                this._gl._bindBuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._buffers.forEach((buffer, target) => {\r\n            const b = s._buffers.get(target);\r\n            if (b === undefined) {\r\n                this._gl._bindBuffer(target, null);\r\n            }\r\n        });\r\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\r\n    }\r\n\r\n    _migrateFramebuffers(t, s) {\r\n        s._framebuffers.forEach((framebuffer, target) => {\r\n            if (t._framebuffers.get(target) !== framebuffer) {\r\n                this._gl._bindFramebuffer(target, framebuffer);\r\n            }\r\n        });\r\n\r\n        t._framebuffers.forEach((framebuffer, target) => {\r\n            const fb = s._framebuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindFramebuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateRenderbuffers(t, s) {\r\n        s._renderbuffers.forEach((renderbuffer, target) => {\r\n            if (t._renderbuffers.get(target) !== renderbuffer) {\r\n                this._gl._bindRenderbuffer(target, renderbuffer);\r\n            }\r\n        });\r\n\r\n        t._renderbuffers.forEach((renderbuffer, target) => {\r\n            const fb = s._renderbuffers.get(target);\r\n            if (fb === undefined) {\r\n                this._gl._bindRenderbuffer(target, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateAttributes(t, s, buffersChanged) {\r\n\r\n        if (!buffersChanged) {\r\n            t._vertexAttribs.forEach((attrib, index) => {\r\n                if (!s._vertexAttribs[index]) {\r\n                    // We can't 'delete' a vertex attrib so we'll disable it.\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                } else {\r\n                    this._gl._disableVertexAttribArray(index);\r\n                }\r\n            });\r\n        } else {\r\n            // When buffers are changed, previous attributes were reset automatically.\r\n            s._vertexAttribs.forEach((attrib, index) => {\r\n                if (attrib[0]) {\r\n                    // Do not set vertex attrib pointer when it was just the default value.\r\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\r\n                }\r\n                if (attrib[5]) {\r\n                    this._gl._enableVertexAttribArray(index);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _migrateSettings(t, s) {\r\n        const defaults = this.constructor.getDefaultSettings();\r\n        t._settings.forEach((value, func) => {\r\n            const name = func.name || func.xname;\r\n            if (!s._settings.has(func)) {\r\n                let args = defaults.get(name);\r\n                if (Utils.isFunction(args)) {\r\n                    args = args(this._gl);\r\n                }\r\n                // We are actually setting the setting for optimization purposes.\r\n                s._settings.set(func, args);\r\n                func.apply(this._gl, args);\r\n            }\r\n        });\r\n        s._settings.forEach((value, func) => {\r\n            const tValue = t._settings.get(func);\r\n            if (!tValue || !Utils.equalValues(tValue, value)) {\r\n                func.apply(this._gl, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    _migrateFlags(t, s) {\r\n        t._nonDefaultFlags.forEach(setting => {\r\n            if (!s._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._enable(setting);\r\n                } else {\r\n                    this._gl._disable(setting);\r\n                }\r\n            }\r\n        });\r\n        s._nonDefaultFlags.forEach(setting => {\r\n            if (!t._nonDefaultFlags.has(setting)) {\r\n                if (this._getDefaultFlag(setting)) {\r\n                    this._gl._disable(setting);\r\n                } else {\r\n                    this._gl._enable(setting);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static getDefaultSettings() {\r\n        if (!this._defaultSettings) {\r\n            this._defaultSettings = new Map();\r\n            const d = this._defaultSettings;\r\n            const g = WebGLRenderingContext.prototype;\r\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\r\n            d.set(\"blendColor\", [0, 0, 0, 0]);\r\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\r\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\r\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\r\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\r\n            d.set(\"clearColor\", [0, 0, 0, 0]);\r\n            d.set(\"clearDepth\", [1]);\r\n            d.set(\"clearStencil\", [0]);\r\n            d.set(\"colorMask\", [true, true, true, true]);\r\n            d.set(\"cullFace\", [g.BACK]);\r\n            d.set(\"depthFunc\", [g.LESS]);\r\n            d.set(\"depthMask\", [true]);\r\n            d.set(\"depthRange\", [0, 1]);\r\n            d.set(\"frontFace\", [g.CCW]);\r\n            d.set(\"lineWidth\", [1]);\r\n            d.set(\"polygonOffset\", [0, 0]);\r\n            d.set(\"sampleCoverage\", [1, false]);\r\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\r\n            d.set(\"stencilMask\", [1]);\r\n            d.set(\"_stencilMaskSeparateFront\", [1]);\r\n            d.set(\"_stencilMaskSeparateBack\", [1]);\r\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\r\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\r\n            d.set(\"vertexAttrib1f\", []);\r\n            d.set(\"vertexAttrib1fv\", []);\r\n            d.set(\"vertexAttrib2f\", []);\r\n            d.set(\"vertexAttrib2fv\", []);\r\n            d.set(\"vertexAttrib3f\", []);\r\n            d.set(\"vertexAttrib3fv\", []);\r\n            d.set(\"vertexAttrib4f\", []);\r\n            d.set(\"vertexAttrib4fv\", []);\r\n        }\r\n        return this._defaultSettings\r\n    }\r\n\r\n    static _getTextureTargetIndex(target) {\r\n        switch(target) {\r\n            case 0x0DE1:\r\n                /* TEXTURE_2D */\r\n                return 0;\r\n            case 0x8513:\r\n                /* TEXTURE_CUBE_MAP */\r\n                return 1;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown texture target: ' + target);\r\n        }\r\n    }\r\n\r\n    static _getTextureTargetByIndex(index) {\r\n        if (!this._textureTargetIndices) {\r\n            this._textureTargetIndices = [0x0DE1, 0x8513];\r\n        }\r\n        return this._textureTargetIndices[index]\r\n    }\r\n\r\n    static _getTextureIndex(index) {\r\n        return index - 0x84C0 /* GL_TEXTURE0 */;\r\n    }\r\n\r\n    static _getTextureByIndex(index) {\r\n        return index + 0x84C0;\r\n    }\r\n\r\n    static _getPixelStoreiIndex(pname) {\r\n        switch(pname) {\r\n            case 0x0D05:\r\n                /* PACK_ALIGNMENT */\r\n                return 0;\r\n            case 0x0CF5:\r\n                /* UNPACK_ALIGNMENT */\r\n                return 1;\r\n            case 0x9240:\r\n                /* UNPACK_FLIP_Y_WEBGL */\r\n                return 2;\r\n            case 0x9241:\r\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\r\n                return 3;\r\n            case 0x9243:\r\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\r\n                return 4;\r\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\r\n            case 0x9245:\r\n                /* UNPACK_FLIP_BLUE_RED */\r\n                return 5;\r\n            default:\r\n                // Shouldn't happen.\r\n                throw new Error('Unknown pixelstorei: ' + pname);\r\n        }\r\n    }\r\n\r\n    static _getPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiIndices) {\r\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\r\n        }\r\n        return this._pixelStoreiIndices[index]\r\n    }\r\n\r\n    static _getDefaultPixelStoreiByIndex(index) {\r\n        if (!this._pixelStoreiDefaults) {\r\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\r\n        }\r\n        return this._pixelStoreiDefaults[index]\r\n    }\r\n}\r\n\r\nclass WebGLStateManager {\r\n\r\n    _initStateManager(id = \"default\") {\r\n        this._states = {};\r\n        this._state = this._getState(id);\r\n    }\r\n\r\n    _getState(id) {\r\n        if (!this._states[id]) {\r\n            this._states[id] = new WebGLState(id, this);\r\n        }\r\n        return this._states[id];\r\n    }\r\n\r\n    switchState(id = \"default\") {\r\n        if (this._state._id !== id) {\r\n            const newState = this._getState(id);\r\n            this._state.migrate(newState);\r\n            this._state = newState;\r\n        }\r\n    }\r\n\r\n    $useProgram(program) {\r\n        if (this._state.setProgram(program))\r\n            this._useProgram(program);\r\n    }\r\n\r\n    $bindBuffer(target, fb) {\r\n        if (this._state.setBuffer(target, fb))\r\n            this._bindBuffer(target, fb);\r\n    }\r\n\r\n    $bindFramebuffer(target, fb) {\r\n        if (this._state.setFramebuffer(target, fb))\r\n            this._bindFramebuffer(target, fb);\r\n    }\r\n\r\n    $bindRenderbuffer(target, fb) {\r\n        if (this._state.setRenderbuffer(target, fb))\r\n            this._bindRenderbuffer(target, fb);\r\n    }\r\n\r\n    $enable(cap) {\r\n        if (this._state.setFlag(cap, true))\r\n            this._enable(cap);\r\n    }\r\n\r\n    $disable(cap) {\r\n        if (this._state.setFlag(cap, false))\r\n            this._disable(cap);\r\n    }\r\n\r\n    $viewport(x, y, w, h) {\r\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\r\n            this._viewport(x, y, w, h);\r\n    }\r\n\r\n    $scissor(x, y, w, h) {\r\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\r\n            this._scissor(x, y, w, h);\r\n    }\r\n\r\n    $disableVertexAttribArray(index) {\r\n        if (this._state.disableVertexAttribArray(index))\r\n            this._disableVertexAttribArray(index);\r\n    }\r\n\r\n    $enableVertexAttribArray(index) {\r\n        if (this._state.enableVertexAttribArray(index))\r\n            this._enableVertexAttribArray(index);\r\n    }\r\n\r\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\r\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n    }\r\n\r\n    $activeTexture(texture) {\r\n        if (this._state.setActiveTexture(texture))\r\n            this._activeTexture(texture);\r\n    }\r\n\r\n    $bindTexture(target, texture) {\r\n        if (this._state.bindTexture(target, texture))\r\n            this._bindTexture(target, texture);\r\n    }\r\n\r\n    $pixelStorei(pname, param) {\r\n        if (this._state.setPixelStorei(pname, param)) {\r\n            this._pixelStorei(pname, param);\r\n        }\r\n    }\r\n\r\n    $stencilFuncSeparate(face, func, ref, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilFuncSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilFuncSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilFuncSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [func, ref, mask]))\r\n            f.apply(this, [func, ref, mask]);\r\n    }\r\n\r\n    _stencilFuncSeparateFront(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\r\n    }\r\n\r\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\r\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\r\n    }\r\n\r\n    $stencilMaskSeparate(face, mask) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilMaskSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilMaskSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilMaskSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [mask]))\r\n            f.apply(this, [mask]);\r\n    }\r\n\r\n    _stencilMaskSeparateFront(mask) {\r\n        this._stencilMaskSeparate(this.FRONT, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateBack(mask) {\r\n        this._stencilMaskSeparate(this.BACK, mask);\r\n    }\r\n\r\n    _stencilMaskSeparateFrontAndBack(mask) {\r\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\r\n    }\r\n\r\n    $stencilOpSeparate(face, fail, zfail, zpass) {\r\n        let f;\r\n        switch(face) {\r\n            case this.FRONT:\r\n                f = this._stencilOpSeparateFront;\r\n                break;\r\n            case this.BACK:\r\n                f = this._stencilOpSeparateBack;\r\n                break;\r\n            case this.FRONT_AND_BACK:\r\n                f = this._stencilOpSeparateFrontAndBack;\r\n                break;\r\n        }\r\n\r\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\r\n            f.apply(this, [fail, zfail, zpass]);\r\n    }\r\n\r\n    _stencilOpSeparateFront(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\r\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\r\n    }\r\n\r\n    $blendColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\r\n            this._blendColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $blendEquation(mode) {\r\n        if (this._state.setSetting(this._blendEquation, [mode]))\r\n            this._blendEquation(mode);\r\n    }\r\n\r\n    $blendEquationSeparate(modeRGB, modeAlpha) {\r\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\r\n            this._blendEquationSeparate(modeRGB, modeAlpha);\r\n    }\r\n\r\n    $blendFunc(sfactor, dfactor) {\r\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\r\n            this._blendFunc(sfactor, dfactor);\r\n    }\r\n\r\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\r\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\r\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    $clearColor(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\r\n            this._clearColor(red, green, blue, alpha);\r\n    }\r\n\r\n    $clearDepth(depth) {\r\n        if (this._state.setSetting(this._clearDepth, [depth]))\r\n            this._clearDepth(depth);\r\n    }\r\n\r\n    $clearStencil(s) {\r\n        if (this._state.setSetting(this._clearStencil, [s]))\r\n            this._clearStencil(s);\r\n    }\r\n\r\n    $colorMask(red, green, blue, alpha) {\r\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\r\n            this._colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    $cullFace(mode) {\r\n        if (this._state.setSetting(this._cullFace, [mode]))\r\n            this._cullFace(mode);\r\n    }\r\n\r\n    $depthFunc(func) {\r\n        if (this._state.setSetting(this._depthFunc, [func]))\r\n            this._depthFunc(func);\r\n    }\r\n\r\n    $depthMask(flag) {\r\n        if (this._state.setSetting(this._depthMask, [flag]))\r\n            this._depthMask(flag);\r\n    }\r\n\r\n    $depthRange(zNear, zFar) {\r\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\r\n            this._depthRange(zNear, zFar);\r\n    }\r\n\r\n    $frontFace(mode) {\r\n        if (this._state.setSetting(this._frontFace, [mode]))\r\n            this._frontFace(mode);\r\n    }\r\n\r\n    $lineWidth(width) {\r\n        if (this._state.setSetting(this._lineWidth, [width]))\r\n            this._lineWidth(width);\r\n    }\r\n\r\n    $polygonOffset(factor, units) {\r\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\r\n            this._polygonOffset(factor, units);\r\n    }\r\n\r\n    $sampleCoverage(value, invert) {\r\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\r\n            this._sampleCoverage(value, invert);\r\n    }\r\n\r\n    $stencilFunc(func, ref, mask) {\r\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\r\n            this._stencilFunc(func, ref, mask);\r\n    }\r\n\r\n    $stencilMask(mask) {\r\n        if (this._state.setSetting(this._stencilMask, [mask]))\r\n            this._stencilMask(mask);\r\n    }\r\n\r\n    $stencilOp(fail, zfail, zpass) {\r\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\r\n            this._stencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n    $vertexAttrib1f(indx, x) {\r\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\r\n            this._vertexAttrib1f(indx, x);\r\n    }\r\n\r\n    $vertexAttrib1fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\r\n            this._vertexAttrib1fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib2f(indx, x, y) {\r\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\r\n            this._vertexAttrib2f(indx, x, y);\r\n    }\r\n\r\n    $vertexAttrib2fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\r\n            this._vertexAttrib2fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib3f(indx, x, y, z) {\r\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\r\n            this._vertexAttrib3f(indx, x, y, z);\r\n    }\r\n\r\n    $vertexAttrib3fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\r\n            this._vertexAttrib3fv(indx, values);\r\n    }\r\n\r\n    $vertexAttrib4f(indx, x, y, z, w) {\r\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\r\n            this._vertexAttrib4f(indx, x, y, z, w);\r\n    }\r\n\r\n    $vertexAttrib4fv(indx, values) {\r\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\r\n            this._vertexAttrib4fv(indx, values);\r\n    }\r\n\r\n    /**\r\n     * Sets up the rendering context for context sharing.\r\n     * @param {WebGLRenderingContext} gl\r\n     * @param {string} id\r\n     */\r\n    static enable(gl, id = \"default\") {\r\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\r\n        const WebGLRenderingContextProto = gl.__proto__;\r\n        names.forEach(name => {\r\n            if (name !== \"constructor\") {\r\n                const method = WebGLStateManager.prototype[name];\r\n                if (name.charAt(0) === \"$\") {\r\n                    name = name.substr(1);\r\n                }\r\n                if (gl[name] !== method) {\r\n                    if (gl[name]) {\r\n                        if (!gl[name].name) {\r\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\r\n                            gl[name].xname = name;\r\n                        }\r\n                        gl['_' + name] = gl[name];\r\n                    }\r\n                    gl[name] = method;\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\r\n\r\n        return gl;\r\n    }\r\n\r\n}\r\n\r\nexport default WebGLStateManager;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport TextureSource from \"./TextureSource.mjs\";\r\nimport Stage from './Stage.mjs';\r\n\r\nexport default class TextureManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        /**\r\n         * The currently used amount of texture memory.\r\n         * @type {number}\r\n         */\r\n        this._usedMemory = 0;\r\n\r\n        /**\r\n         * All uploaded texture sources.\r\n         * @type {TextureSource[]}\r\n         */\r\n        this._uploadedTextureSources = [];\r\n\r\n        /**\r\n         * The texture source lookup id to texture source hashmap.\r\n         * @type {Map<String, TextureSource>}\r\n         */\r\n        this.textureSourceHashmap = new Map();\r\n\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\r\n        }\r\n        \r\n        this.textureSourceHashmap.clear();\r\n        this._usedMemory = 0;\r\n    }\r\n\r\n    getReusableTextureSource(id) {\r\n        return this.textureSourceHashmap.get(id);\r\n    }\r\n\r\n    getTextureSource(func, id) {\r\n        // Check if texture source is already known.\r\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\r\n        if (!textureSource) {\r\n            // Create new texture source.\r\n            textureSource = new TextureSource(this, func);\r\n\r\n            if (id) {\r\n                textureSource.lookupId = id;\r\n                this.textureSourceHashmap.set(id, textureSource);\r\n            }\r\n        }\r\n\r\n        return textureSource;\r\n    }\r\n\r\n    uploadTextureSource(textureSource, options) {\r\n        if (textureSource.isLoaded()) return;\r\n\r\n        this._addMemoryUsage(textureSource.w * textureSource.h);\r\n\r\n        // Load texture.\r\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\r\n\r\n        textureSource._nativeTexture = nativeTexture;\r\n\r\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\r\n        nativeTexture.w = textureSource.w;\r\n        nativeTexture.h = textureSource.h;\r\n\r\n        nativeTexture.update = this.stage.frameCounter;\r\n\r\n        this._uploadedTextureSources.push(textureSource);\r\n        \r\n        this.addToLookupMap(textureSource);\r\n\r\n        // add VRAM tracking if using the webgl renderer\r\n        this._updateVramUsage(textureSource, 1);\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    _updateVramUsage(textureSource, sign) {\r\n        const nativeTexture = textureSource.nativeTexture;\r\n        var usage;\r\n\r\n        // do nothing if webgl isn't even supported\r\n        if (!Stage.isWebglSupported())\r\n            return;\r\n\r\n        // or if there is no native texture\r\n        if (!textureSource.isLoaded())\r\n            return;\r\n\r\n        // or, finally, if there is no bytes per pixel specified\r\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\r\n            return;\r\n\r\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\r\n\r\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\r\n    }\r\n\r\n    addToLookupMap(textureSource) {\r\n        const lookupId = textureSource.lookupId;\r\n        if (lookupId) {\r\n            if (!this.textureSourceHashmap.has(lookupId)) {\r\n                this.textureSourceHashmap.set(lookupId, textureSource);\r\n            }\r\n        }\r\n    }\r\n\r\n    gc() {\r\n        this.freeUnusedTextureSources();\r\n        this._cleanupLookupMap();\r\n    }\r\n    \r\n    freeUnusedTextureSources() {\r\n        let remainingTextureSources = [];\r\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\r\n            let ts = this._uploadedTextureSources[i];\r\n            if (ts.allowCleanup()) {\r\n                this._freeManagedTextureSource(ts);\r\n            } else {\r\n                remainingTextureSources.push(ts);\r\n            }\r\n        }\r\n\r\n        this._uploadedTextureSources = remainingTextureSources;\r\n\r\n        this._cleanupLookupMap();\r\n    }\r\n\r\n    _freeManagedTextureSource(textureSource) {\r\n        if (textureSource.isLoaded()) {\r\n            this._nativeFreeTextureSource(textureSource);\r\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n\r\n            // add VRAM tracking if using the webgl renderer\r\n            this._updateVramUsage(textureSource, -1);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _cleanupLookupMap() {\r\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\r\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\r\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\r\n                this.textureSourceHashmap.delete(lookupId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Externally free texture source.\r\n     * @param textureSource\r\n     */\r\n    freeTextureSource(textureSource) {\r\n        const index = this._uploadedTextureSources.indexOf(textureSource);\r\n        const managed = (index !== -1);\r\n\r\n        if (textureSource.isLoaded()) {\r\n            if (managed) {\r\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\r\n                this._uploadedTextureSources.splice(index, 1);\r\n            }\r\n            this._nativeFreeTextureSource(textureSource);\r\n        }\r\n\r\n        // Should be reloaded.\r\n        textureSource.loadingSince = null;\r\n    }\r\n\r\n    _nativeUploadTextureSource(textureSource, options) {\r\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\r\n    }\r\n\r\n    _nativeFreeTextureSource(textureSource) {\r\n        this.stage.renderer.freeTextureSource(textureSource);\r\n        textureSource.clearNativeTexture();\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Allows throttling of loading texture sources, keeping the app responsive.\r\n */\r\nexport default class TextureThrottler {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.genericCancelCb = (textureSource) => {\r\n            this._remove(textureSource);\r\n        };\r\n\r\n        this._sources = [];\r\n        this._data = [];\r\n    }\r\n\r\n    destroy() {\r\n        this._sources = [];\r\n        this._data = [];\r\n        this.stage = null;\r\n\r\n        delete this._sources;\r\n        delete this._data;\r\n        delete this.stage;\r\n    }\r\n\r\n    processSome() {\r\n        if (this._sources.length) {\r\n            const start = Date.now();\r\n            do {\r\n                this._processItem();\r\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\r\n        }\r\n    }\r\n\r\n    _processItem() {\r\n        const source = this._sources.pop();\r\n        const data = this._data.pop();\r\n        if (source.isLoading()) {\r\n            source.processLoadedSource(data);\r\n        }\r\n    }\r\n\r\n    add(textureSource, data) {\r\n        this._sources.push(textureSource);\r\n        this._data.push(data);\r\n    }\r\n\r\n    _remove(textureSource) {\r\n        const index = this._sources.indexOf(textureSource);\r\n        if (index >= 0) {\r\n            this._sources.splice(index, 1);\r\n            this._data.splice(index, 1);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n\r\nexport default class CoreContext {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.root = null;\r\n\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\r\n\r\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\r\n        this.renderExec.init();\r\n\r\n        this._usedMemory = 0;\r\n        this._renderTexturePool = [];\r\n\r\n        this._renderTextureId = 1;\r\n\r\n        this._zSorts = [];\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    destroy() {\r\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\r\n        this._usedMemory = 0;\r\n\r\n        this.stage = null;\r\n        this.root = null;\r\n\r\n        this.renderState = null;\r\n        this.renderExec = null;\r\n        this._renderTexturePool = null;\r\n        this._zSorts = null;\r\n\r\n        delete this.stage;\r\n        delete this.root;\r\n        delete this.renderState;\r\n        delete this.renderExec;\r\n        delete this._renderTexturePool;\r\n        delete this._zSorts;\r\n    }\r\n\r\n    hasRenderUpdates() {\r\n        return !!this.root._parent._hasRenderUpdates;\r\n    }\r\n\r\n    render() {\r\n        // Clear flag to identify if anything changes before the next frame.\r\n        this.root._parent._hasRenderUpdates = 0;\r\n\r\n        this._render();\r\n    }\r\n\r\n    update() {\r\n        this._update();\r\n\r\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\r\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\r\n        // (but not recursively to prevent infinite loops).\r\n        if (this.root._hasUpdates) {\r\n            this._update();\r\n        }\r\n\r\n        this._performForcedZSorts();\r\n    }\r\n\r\n    /**\r\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\r\n     */\r\n    _performForcedZSorts() {\r\n        const n = this._zSorts.length;\r\n        if (n) {\r\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\r\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\r\n                if (this._zSorts[i].zSort) {\r\n                    this._zSorts[i].sortZIndexedChildren();\r\n                }\r\n            }\r\n            this._zSorts = [];\r\n        }\r\n    }\r\n\r\n    _update() {\r\n        this.updateTreeOrder = 0;\r\n\r\n        this.root.update();\r\n    }\r\n\r\n    _render() {\r\n        const debugFrame = this.stage.getOption('debugFrame');\r\n        // Obtain a sequence of the quad operations.\r\n        this._fillRenderState();\r\n\r\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\r\n            this._readPixels();\r\n        }\r\n\r\n        // Now run them with the render executor.\r\n        this._performRender();\r\n\r\n        if (debugFrame) {\r\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\r\n        }\r\n\r\n        // Block OpenGL pipeline to prevent framebuffer flickering\r\n        // on certain devices\r\n        if (this.stage.getOption('readPixelsAfterDraw') &&\r\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\r\n        ) {\r\n            if (debugFrame) {\r\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\r\n            }\r\n            this._readPixels();\r\n        }\r\n\r\n        this.renderToTextureCount = 0;\r\n    }\r\n\r\n    _readPixels() {\r\n        const pixels = new Uint8Array(4);\r\n        const gl = this.stage.gl;\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n    }\r\n\r\n    _fillRenderState() {\r\n        this.renderState.reset();\r\n        this.root.render();\r\n        this.renderState.finish();\r\n    }\r\n\r\n    _performRender() {\r\n        this.renderExec.execute();\r\n    }\r\n\r\n    _addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        this.stage.addMemoryUsage(delta);\r\n    }\r\n\r\n    allocateRenderTexture(w, h) {\r\n        let prec = this.stage.getRenderPrecision();\r\n        let pw = Math.max(1, Math.round(w * prec));\r\n        let ph = Math.max(1, Math.round(h * prec));\r\n\r\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\r\n        const n = this._renderTexturePool.length;\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const texture = this._renderTexturePool[i];\r\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\r\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\r\n                texture.f = this.stage.frameCounter;\r\n                this._renderTexturePool.splice(i, 1);\r\n                return texture;\r\n            }\r\n        }\r\n\r\n        const texture = this._createRenderTexture(w, h, pw, ph);\r\n        texture.precision = prec;\r\n        return texture;\r\n    }\r\n\r\n    releaseRenderTexture(texture) {\r\n        this._renderTexturePool.push(texture);\r\n    }\r\n\r\n    freeUnusedRenderTextures(maxAge = 60) {\r\n        // Clean up all textures that are no longer used.\r\n        // This cache is short-lived because it is really just meant to supply running shaders that are\r\n        // updated during a number of frames.\r\n        let limit = this.stage.frameCounter - maxAge;\r\n\r\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\r\n            if (texture.f <= limit) {\r\n                this._freeRenderTexture(texture);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    _createRenderTexture(w, h, pw, ph) {\r\n        this._addMemoryUsage(pw * ph);\r\n\r\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\r\n        texture.id = this._renderTextureId++;\r\n        texture.f = this.stage.frameCounter;\r\n        texture.ow = w;\r\n        texture.oh = h;\r\n        texture.w = pw;\r\n        texture.h = ph;\r\n\r\n        return texture;\r\n    }\r\n\r\n    _freeRenderTexture(nativeTexture) {\r\n        this.stage.renderer.freeRenderTexture(nativeTexture);\r\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\r\n    }\r\n\r\n    copyRenderTexture(renderTexture, nativeTexture, options) {\r\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\r\n    }\r\n\r\n    forceZSort(elementCore) {\r\n        this._zSorts.push(elementCore);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class TransitionSettings {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this._timingFunction = 'ease';\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\r\n        this.delay = 0;\r\n        this.duration = 0.2;\r\n        this.merger = null;\r\n    }\r\n\r\n    get timingFunction() {\r\n        return this._timingFunction;\r\n    }\r\n\r\n    set timingFunction(v) {\r\n        this._timingFunction = v;\r\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get timingFunctionImpl() {\r\n        return this._timingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n}\r\n\r\nTransitionSettings.prototype.isTransitionSettings = true;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class TransitionManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All transitions that are running and attached.\r\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\r\n         * @type {Set<Transition>}\r\n         */\r\n        this.active = new Set();\r\n\r\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                a.progress(dt);\r\n                if (!a.isRunning()) {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\r\n            }\r\n        }\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const transitionSettings = new TransitionSettings();\r\n        Base.patchObject(transitionSettings, settings);\r\n        return transitionSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n\r\n    removeActive(transition) {\r\n        this.active.delete(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport TransitionSettings from \"./TransitionSettings.mjs\";\r\nimport Transition from \"./Transition.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class MultiSpline {\r\n\r\n    constructor() {\r\n        this._clear();\r\n    }\r\n\r\n    _clear() {\r\n        this._p = [];\r\n        this._pe = [];\r\n        this._idp = [];\r\n        this._f = [];\r\n        this._v = [];\r\n        this._lv = [];\r\n        this._sm = [];\r\n        this._s = [];\r\n        this._ve = [];\r\n        this._sme = [];\r\n        this._se = [];\r\n\r\n        this._length = 0;\r\n    }\r\n\r\n    parse(rgba, def) {\r\n        let i, n;\r\n        if (!Utils.isObjectLiteral(def)) {\r\n            def = {0: def}\r\n        }\r\n\r\n        let defaultSmoothness = 0.5;\r\n\r\n        let items = [];\r\n        for (let key in def) {\r\n            if (def.hasOwnProperty(key)) {\r\n                let obj = def[key];\r\n                if (!Utils.isObjectLiteral(obj)) {\r\n                    obj = {v: obj}\r\n                }\r\n\r\n                let p = parseFloat(key);\r\n\r\n                if (key === \"sm\") {\r\n                    defaultSmoothness = obj.v;\r\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\r\n                    obj.p = p;\r\n\r\n                    obj.f = Utils.isFunction(obj.v);\r\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\r\n\r\n                    items.push(obj);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Sort by progress value.\r\n        items = items.sort(function(a, b) {return a.p - b.p});\r\n\r\n        n = items.length;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            let last = (i === n - 1);\r\n            if (!items[i].hasOwnProperty('pe')) {\r\n                // Progress.\r\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\r\n            } else {\r\n                // Prevent multiple items at the same time.\r\n                const max = i < n - 1 ? items[i + 1].p : 1;\r\n                if (items[i].pe > max) {\r\n                    items[i].pe = max;\r\n                }\r\n            }\r\n            if (items[i].pe === items[i].p) {\r\n                items[i].idp = 0;\r\n            } else {\r\n                items[i].idp = 1 / (items[i].pe - items[i].p);\r\n            }\r\n        }\r\n\r\n        // Color merger: we need to split/combine RGBA components.\r\n\r\n        // Calculate bezier helper values.;\r\n        for (i = 0; i < n; i++) {\r\n            if (!items[i].hasOwnProperty('sm')) {\r\n                // Smoothness.;\r\n                items[i].sm = defaultSmoothness;\r\n            }\r\n            if (!items[i].hasOwnProperty('s')) {\r\n                // Slope.;\r\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\r\n                    // Horizontal slope at start and end.;\r\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                } else {\r\n                    const pi = items[i - 1];\r\n                    const ni = items[i + 1];\r\n                    if (pi.p === ni.p) {\r\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\r\n                    } else {\r\n                        if (rgba) {\r\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\r\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\r\n                            const d = 1 / (ni.p - pi.p);\r\n                            items[i].s = [\r\n                                d * (nc[0] - pc[0]),\r\n                                d * (nc[1] - pc[1]),\r\n                                d * (nc[2] - pc[2]),\r\n                                d * (nc[3] - pc[3])\r\n                            ];\r\n                        } else {\r\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < n - 1; i++) {\r\n            // Calculate value function.;\r\n            if (!items[i].f) {\r\n\r\n                let last = (i === n - 1);\r\n                if (!items[i].hasOwnProperty('ve')) {\r\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\r\n                }\r\n\r\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\r\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\r\n                    if (!items[i].hasOwnProperty('sme')) {\r\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\r\n                    }\r\n                    if (!items[i].hasOwnProperty('se')) {\r\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\r\n                    }\r\n\r\n                    // Generate spline.;\r\n                    if (rgba) {\r\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    } else {\r\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\r\n                    }\r\n\r\n                    items[i].f = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.length) {\r\n            this._clear();\r\n        }\r\n\r\n        for (i = 0, n = items.length; i < n; i++) {\r\n            this._add(items[i]);\r\n        }\r\n    }\r\n\r\n    _add(item) {\r\n        this._p.push(item.p || 0);\r\n        this._pe.push(item.pe || 0);\r\n        this._idp.push(item.idp || 0);\r\n        this._f.push(item.f || false);\r\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\r\n        this._lv.push(item.lv || 0);\r\n        this._sm.push(item.sm || 0);\r\n        this._s.push(item.s || 0);\r\n        this._ve.push(item.ve || 0);\r\n        this._sme.push(item.sme || 0);\r\n        this._se.push(item.se || 0);\r\n        this._length++;\r\n    }\r\n\r\n    _getItem(p) {\r\n        const n = this._length;\r\n        if (!n) {\r\n            return -1;\r\n        }\r\n\r\n        if (p < this._p[0]) {\r\n            return 0;\r\n        }\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (this._p[i] <= p && p < this._pe[i]) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return n - 1;\r\n    }\r\n\r\n    getValue(p) {\r\n        const i = this._getItem(p);\r\n        if (i === -1) {\r\n            return undefined;\r\n        } else {\r\n            if (this._f[i]) {\r\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\r\n                return this._v[i](o);\r\n            } else {\r\n                return this._v[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    get length() {\r\n        return this._length;\r\n    }\r\n\r\n    static getRgbaComponents(argb) {\r\n        let r = ((argb / 65536) | 0) % 256;\r\n        let g = ((argb / 256) | 0) % 256;\r\n        let b = argb % 256;\r\n        let a = ((argb / 16777216) | 0);\r\n        return [r, g, b, a];\r\n    };\r\n\r\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1 *= dp;\r\n        s2 *= dp;\r\n\r\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\r\n        if (!helpers) {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return v2 * p + v1 * (1 - p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n                return MultiSpline.calculateSpline(helpers, p);\r\n            };\r\n        }\r\n    };\r\n\r\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\r\n        // Normalize slopes because we use a spline that goes from 0 to 1.\r\n        let dp = p2 - p1;\r\n        s1[0] *= dp;\r\n        s1[1] *= dp;\r\n        s1[2] *= dp;\r\n        s1[3] *= dp;\r\n        s2[0] *= dp;\r\n        s2[1] *= dp;\r\n        s2[2] *= dp;\r\n        s2[3] *= dp;\r\n\r\n        let cv1 = MultiSpline.getRgbaComponents(v1);\r\n        let cv2 = MultiSpline.getRgbaComponents(v2);\r\n\r\n        let helpers = [\r\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\r\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\r\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\r\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\r\n        ];\r\n\r\n        if (!helpers[0]) {\r\n            return function (p) {\r\n                // Linear.\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.mergeColors(v2, v1, p);\r\n            };\r\n        } else {\r\n            return function (p) {\r\n                if (p === 0) return v1;\r\n                if (p === 1) return v2;\r\n\r\n                return MultiSpline.getArgbNumber([\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\r\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\r\n                ]);\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates helpers to be used in the spline function.\r\n     * @param {number} v1\r\n     *   From value.\r\n     * @param {number} v2\r\n     *   To value.\r\n     * @param {number} o1\r\n     *   From smoothness (0 = linear, 1 = smooth).\r\n     * @param {number} s1\r\n     *   From slope (0 = horizontal, infinite = vertical).\r\n     * @param {number} i2\r\n     *   To smoothness.\r\n     * @param {number} s2\r\n     *   To slope.\r\n     * @returns {Number[]}\r\n     *   The helper values to be supplied to the spline function.\r\n     *   If the configuration is actually linear, null is returned.\r\n     */\r\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\r\n        if (!o1 && !i2) {\r\n            // Linear.\r\n            return null;\r\n        }\r\n\r\n        // Cubic bezier points.\r\n        // http://cubic-bezier.com/\r\n        let csx = o1;\r\n        let csy = v1 + s1 * o1;\r\n        let cex = 1 - i2;\r\n        let cey = v2 - s2 * i2;\r\n\r\n        let xa = 3 * csx - 3 * cex + 1;\r\n        let xb = -6 * csx + 3 * cex;\r\n        let xc = 3 * csx;\r\n\r\n        let ya = 3 * csy - 3 * cey + v2 - v1;\r\n        let yb = 3 * (cey + v1) - 6 * csy;\r\n        let yc = 3 * (csy - v1);\r\n        let yd = v1;\r\n\r\n        return [xa, xb, xc, ya, yb, yc, yd];\r\n    };\r\n\r\n    /**\r\n     * Calculates the intermediate spline value based on the specified helpers.\r\n     * @param {number[]} helpers\r\n     *   Obtained from getSplineHelpers.\r\n     * @param {number} p\r\n     * @return {number}\r\n     */\r\n    static calculateSpline(helpers, p) {\r\n        let xa = helpers[0];\r\n        let xb = helpers[1];\r\n        let xc = helpers[2];\r\n        let ya = helpers[3];\r\n        let yb = helpers[4];\r\n        let yc = helpers[5];\r\n        let yd = helpers[6];\r\n\r\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\r\n            // Linear.\r\n            return p;\r\n        }\r\n\r\n        // Find t for p.\r\n        let t = 0.5, cbx, dx;\r\n\r\n        for (let it = 0; it < 20; it++) {\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\r\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\r\n\r\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\r\n                // Problematic. Fall back to binary search method.\r\n                break;\r\n            }\r\n\r\n            t += dx / cbxd;\r\n        }\r\n\r\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\r\n        let minT = 0;\r\n        let maxT = 1;\r\n        for (let it = 0; it < 20; it++) {\r\n            t = 0.5 * (minT + maxT);\r\n\r\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\r\n            cbx = t * (t * (t * xa + xb) + xc);\r\n\r\n            dx = p - cbx;\r\n            if (dx > -1e-8 && dx < 1e-8) {\r\n                // Solution found!\r\n                return t * (t * (t * ya + yb) + yc) + yd;\r\n            }\r\n\r\n            if (dx < 0) {\r\n                maxT = t;\r\n            } else {\r\n                minT = t;\r\n            }\r\n        }\r\n\r\n        return t;\r\n    };\r\n\r\n    static mergeColors(c1, c2, p) {\r\n        let r1 = ((c1 / 65536) | 0) % 256;\r\n        let g1 = ((c1 / 256) | 0) % 256;\r\n        let b1 = c1 % 256;\r\n        let a1 = ((c1 / 16777216) | 0);\r\n\r\n        let r2 = ((c2 / 65536) | 0) % 256;\r\n        let g2 = ((c2 / 256) | 0) % 256;\r\n        let b2 = c2 % 256;\r\n        let a2 = ((c2 / 16777216) | 0);\r\n\r\n        let r = r1 * p + r2 * (1 - p);\r\n        let g = g1 * p + g2 * (1 - p);\r\n        let b = b1 * p + b2 * (1 - p);\r\n        let a = a1 * p + a2 * (1 - p);\r\n\r\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\r\n    };\r\n\r\n    static getArgbNumber(rgba) {\r\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\r\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\r\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\r\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\r\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\r\n        if (v < 0) {\r\n            v = 0xFFFFFFFF + v + 1;\r\n        }\r\n        return v;\r\n    };\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationActionSettings {\r\n\r\n    constructor(animationSettings) {\r\n\r\n        this.animationSettings = animationSettings;\r\n\r\n        /**\r\n         * The selector that selects the elements.\r\n         * @type {string}\r\n         */\r\n        this._selector = \"\";\r\n\r\n        /**\r\n         * The value items, ordered by progress offset.\r\n         * @type {MultiSpline}\r\n         * @private;\r\n         */\r\n        this._items = new MultiSpline();\r\n\r\n        /**\r\n         * The affected properties (paths).\r\n         * @private;\r\n         */\r\n        this._props = [];\r\n\r\n        /**\r\n         * Property setters, indexed according to props.\r\n         * @private;\r\n         */\r\n        this._propSetters = [];\r\n\r\n        this._resetValue = undefined;\r\n        this._hasResetValue = false;\r\n\r\n        this._hasColorProperty = undefined;\r\n    }\r\n\r\n    getResetValue() {\r\n        if (this._hasResetValue) {\r\n            return this._resetValue;\r\n        } else {\r\n            return this._items.getValue(0);\r\n        }\r\n    }\r\n\r\n    apply(element, p, factor) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this._items.getValue(p);\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        if (factor !== 1) {\r\n            // Stop factor.;\r\n            let sv = this.getResetValue();\r\n\r\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\r\n                if (this.hasColorProperty()) {\r\n                    v = StageUtils.mergeColors(v, sv, factor);\r\n                } else {\r\n                    v = StageUtils.mergeNumbers(v, sv, factor);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Apply transformation to all components.;\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    getAnimatedElements(element) {\r\n        return element.select(this._selector);\r\n    }\r\n\r\n    reset(element) {\r\n        const elements = this.getAnimatedElements(element);\r\n\r\n        let v = this.getResetValue();\r\n\r\n        if (v === undefined || !elements.length) {\r\n            return;\r\n        }\r\n\r\n        // Apply transformation to all components.\r\n        const n = this._propSetters.length;\r\n\r\n        const m = elements.length;\r\n        for (let j = 0; j < m; j++) {\r\n            for (let i = 0; i < n; i++) {\r\n                this._propSetters[i](elements[j], v);\r\n            }\r\n        }\r\n    }\r\n    \r\n    set selector(v) {\r\n        this._selector = v;\r\n    }\r\n\r\n    set t(v) {\r\n        this.selector = v;\r\n    }\r\n\r\n    get resetValue() {\r\n        return this._resetValue;\r\n    }\r\n    \r\n    set resetValue(v) {\r\n        this._resetValue = v;\r\n        this._hasResetValue = (v !== undefined);\r\n    }\r\n\r\n    set rv(v) {\r\n        this.resetValue = v;\r\n    }\r\n\r\n    set value(v) {\r\n        this._items.parse(this.hasColorProperty(), v);\r\n    }\r\n\r\n    set v(v) {\r\n        this.value = v;\r\n    }\r\n\r\n    set properties(v) {\r\n        if (!Array.isArray(v)) {\r\n            v = [v];\r\n        }\r\n\r\n        this._props = [];\r\n\r\n        v.forEach((prop) => {\r\n            this._props.push(prop);\r\n            this._propSetters.push(Element.getSetter(prop));\r\n        });\r\n    }\r\n\r\n    set property(v) {\r\n        this._hasColorProperty = undefined;\r\n        this.properties = v;\r\n    }\r\n\r\n    set p(v) {\r\n        this.properties = v;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n    hasColorProperty() {\r\n        if (this._hasColorProperty === undefined) {\r\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\r\n        }\r\n        return this._hasColorProperty;\r\n    }\r\n}\r\n\r\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\r\n\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\nimport Element from \"../tree/Element.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\r\nimport Base from \"../tree/Base.mjs\";\r\n\r\nexport default class AnimationSettings {\r\n    constructor() {\r\n        /**\r\n         * @type {AnimationActionSettings[]}\r\n         */\r\n        this._actions = [];\r\n\r\n        this.delay = 0;\r\n        this.duration = 1;\r\n\r\n        this.repeat = 0;\r\n        this.repeatOffset = 0;\r\n        this.repeatDelay = 0;\r\n\r\n        this.autostop = false;\r\n\r\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\r\n        this._stopTimingFunction = 'ease';\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\r\n        this.stopDuration = 0;\r\n        this.stopDelay = 0;\r\n    }\r\n\r\n    get actions() {\r\n        return this._actions;\r\n    }\r\n\r\n    set actions(v) {\r\n        this._actions = [];\r\n        for (let i = 0, n = v.length; i < n; i++) {\r\n            const e = v[i];\r\n            if (!e.isAnimationActionSettings) {\r\n                const aas = new AnimationActionSettings(this);\r\n                aas.patch(e);\r\n                this._actions.push(aas);\r\n            } else {\r\n                this._actions.push(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\r\n     * @param {Element} element;\r\n     * @param {number} p;\r\n     * @param {number} factor;\r\n     */\r\n    apply(element, p, factor = 1) {\r\n        this._actions.forEach(function(action) {\r\n            action.apply(element, p, factor);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets the animation to the reset values.\r\n     * @param {Element} element;\r\n     */\r\n    reset(element) {\r\n        this._actions.forEach(function(action) {\r\n            action.reset(element);\r\n        });\r\n    }\r\n\r\n    get stopTimingFunction() {\r\n        return this._stopTimingFunction;\r\n    }\r\n\r\n    set stopTimingFunction(v) {\r\n        this._stopTimingFunction = v;\r\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\r\n    }\r\n\r\n    get stopTimingFunctionImpl() {\r\n        return this._stopTimingFunctionImpl;\r\n    }\r\n\r\n    patch(settings) {\r\n        Base.patchObject(this, settings);\r\n    }\r\n\r\n}\r\n\r\nAnimationSettings.STOP_METHODS = {\r\n    FADE: 'fade',\r\n    REVERSE: 'reverse',\r\n    FORWARD: 'forward',\r\n    IMMEDIATE: 'immediate',\r\n    ONETOTWO: 'onetotwo'\r\n};\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\n\r\nexport default class Animation extends EventEmitter {\r\n\r\n    constructor(manager, settings, element) {\r\n        super();\r\n\r\n        this.manager = manager;\r\n\r\n        this._settings = settings;\r\n\r\n        this._element = element;\r\n\r\n        this._state = Animation.STATES.IDLE;\r\n\r\n        this._p = 0;\r\n        this._delayLeft = 0;\r\n        this._repeatsLeft = 0;\r\n\r\n        this._stopDelayLeft = 0;\r\n        this._stopP = 0;\r\n    }\r\n\r\n    start() {\r\n        if (this._element && this._element.attached) {\r\n            this._p = 0;\r\n            this._delayLeft = this.settings.delay;\r\n            this._repeatsLeft = this.settings.repeat;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('start');\r\n            this.checkActive();\r\n        } else {\r\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\r\n        }\r\n    }\r\n\r\n    play() {\r\n        if (this._state === Animation.STATES.PAUSED) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.checkActive();\r\n            this.emit('resume');\r\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            // Continue.;\r\n            this._state = Animation.STATES.PLAYING;\r\n            this.emit('stopContinue');\r\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\r\n            // Restart.;\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._state = Animation.STATES.PAUSED;\r\n            this.emit('pause');\r\n        }\r\n    }\r\n\r\n    replay() {\r\n        if (this._state == Animation.STATES.FINISHED) {\r\n            this.start();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    skipDelay() {\r\n        this._delayLeft = 0;\r\n        this._stopDelayLeft = 0;\r\n    }\r\n\r\n    finish() {\r\n        if (this._state === Animation.STATES.PLAYING) {\r\n            this._delayLeft = 0;\r\n            this._p = 1;\r\n        } else if (this._state === Animation.STATES.STOPPING) {\r\n            this._stopDelayLeft = 0;\r\n            this._p = 0;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\r\n\r\n        this._stopDelayLeft = this.settings.stopDelay || 0;\r\n\r\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\r\n            // Stop upon next progress.;\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        } else {\r\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                this._stopP = 0;\r\n            }\r\n\r\n            this._state = Animation.STATES.STOPPING;\r\n            this.emit('stop');\r\n        }\r\n\r\n        this.checkActive();\r\n    }\r\n\r\n    stopNow() {\r\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\r\n            this._state = Animation.STATES.STOPPING;\r\n            this._p = 0;\r\n            this.emit('stop');\r\n            this.reset();\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        }\r\n    }\r\n\r\n    isPaused() {\r\n        return this._state === Animation.STATES.PAUSED;\r\n    }\r\n\r\n    isPlaying() {\r\n        return this._state === Animation.STATES.PLAYING;\r\n    }\r\n\r\n    isStopping() {\r\n        return this._state === Animation.STATES.STOPPING;\r\n    }\r\n\r\n    isFinished() {\r\n        return this._state === Animation.STATES.FINISHED;\r\n    }\r\n\r\n    checkActive() {\r\n        if (this.isActive()) {\r\n            this.manager.addActive(this);\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\r\n    }\r\n\r\n    progress(dt) {\r\n        if (!this._element) return;\r\n        this._progress(dt);\r\n        this.apply();\r\n    }\r\n\r\n    _progress(dt) {\r\n        if (this._state == Animation.STATES.STOPPING) {\r\n            this._stopProgress(dt);\r\n            return;\r\n        }\r\n\r\n        if (this._state != Animation.STATES.PLAYING) {\r\n            return;\r\n        }\r\n\r\n        if (this._delayLeft > 0) {\r\n            this._delayLeft -= dt;\r\n\r\n            if (this._delayLeft < 0) {\r\n                dt = -this._delayLeft;\r\n                this._delayLeft = 0;\r\n\r\n                this.emit('delayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.settings.duration === 0) {\r\n            this._p = 1;\r\n        } else if (this.settings.duration > 0) {\r\n            this._p += dt / this.settings.duration;\r\n        }\r\n        if (this._p >= 1) {\r\n            // Finished!;\r\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\r\n                if (this._repeatsLeft > 0) {\r\n                    this._repeatsLeft--;\r\n                }\r\n                this._p = this.settings.repeatOffset;\r\n                this.emit('progress', this._p);\r\n                \r\n                if (this.settings.repeatDelay) {\r\n                    this._delayLeft = this.settings.repeatDelay;\r\n                }\r\n\r\n                this.emit('repeat', this._repeatsLeft);\r\n            } else {\r\n                this._p = 1;\r\n                this.emit('progress', this._p);\r\n                \r\n                this._state = Animation.STATES.FINISHED;\r\n                this.emit('finish');\r\n                if (this.settings.autostop) {\r\n                    this.stop();\r\n                }\r\n            }\r\n        } else {\r\n            this.emit('progress', this._p);\r\n        }\r\n    }\r\n    \r\n    _stopProgress(dt) {\r\n        let duration = this._getStopDuration();\r\n\r\n        if (this._stopDelayLeft > 0) {\r\n            this._stopDelayLeft -= dt;\r\n\r\n            if (this._stopDelayLeft < 0) {\r\n                dt = -this._stopDelayLeft;\r\n                this._stopDelayLeft = 0;\r\n\r\n                this.emit('stopDelayEnd');\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\r\n            this._state = Animation.STATES.STOPPED;\r\n            this.emit('stopFinish');\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\r\n            if (duration === 0) {\r\n                this._p = 0;\r\n            } else if (duration > 0) {\r\n                this._p -= dt / duration;\r\n            }\r\n\r\n            if (this._p <= 0) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\r\n            this._progressStopTransition(dt);\r\n            if (this._stopP >= 1) {\r\n                this._p = 0;\r\n                this._state = Animation.STATES.STOPPED;\r\n                this.emit('stopFinish');\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\r\n            if (this._p < 2) {\r\n                if (duration === 0) {\r\n                    this._p = 2;\r\n                } else if (duration > 0) {\r\n                    if (this._p < 1) {\r\n                        this._p += dt / this.settings.duration;\r\n                    } else {\r\n                        this._p += dt / duration;\r\n                    }\r\n                }\r\n                if (this._p >= 2) {\r\n                    this._p = 2;\r\n                    this._state = Animation.STATES.STOPPED;\r\n                    this.emit('stopFinish');\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n            if (this._p < 1) {\r\n                if (this.settings.duration == 0) {\r\n                    this._p = 1;\r\n                } else {\r\n                    this._p += dt / this.settings.duration;\r\n                }\r\n                if (this._p >= 1) {\r\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\r\n                        this._p = 1;\r\n                        this._state = Animation.STATES.STOPPED;\r\n                        this.emit('stopFinish');\r\n                    } else {\r\n                        if (this._repeatsLeft > 0) {\r\n                            this._repeatsLeft--;\r\n                            this._p = 0;\r\n                            this.emit('repeat', this._repeatsLeft);\r\n                        } else {\r\n                            this._p = 1;\r\n                            this._state = Animation.STATES.STOPPED;\r\n                            this.emit('stopFinish');\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.emit('progress', this._p);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    _progressStopTransition(dt) {\r\n        if (this._stopP < 1) {\r\n            if (this._stopDelayLeft > 0) {\r\n                this._stopDelayLeft -= dt;\r\n\r\n                if (this._stopDelayLeft < 0) {\r\n                    dt = -this._stopDelayLeft;\r\n                    this._stopDelayLeft = 0;\r\n\r\n                    this.emit('delayEnd');\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            const duration = this._getStopDuration();\r\n\r\n            if (duration == 0) {\r\n                this._stopP = 1;\r\n            } else {\r\n                this._stopP += dt / duration;\r\n            }\r\n            if (this._stopP >= 1) {\r\n                // Finished!;\r\n                this._stopP = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    _getStopDuration() {\r\n        return this.settings.stopDuration || this.settings.duration;\r\n    }\r\n\r\n    apply() {\r\n        if (this._state === Animation.STATES.STOPPED) {\r\n            this.reset();\r\n        } else {\r\n            let factor = 1;\r\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\r\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\r\n            }\r\n            this._settings.apply(this._element, this._p, factor);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this._settings.reset(this._element);\r\n    }\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get p() {\r\n        return this._p;\r\n    }\r\n\r\n    get delayLeft() {\r\n        return this._delayLeft;\r\n    }\r\n\r\n    get element() {\r\n        return this._element;\r\n    }\r\n\r\n    get frame() {\r\n        return Math.round(this._p * this._settings.duration * 60);\r\n    }\r\n\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n}\r\n\r\nAnimation.STATES = {\r\n    IDLE: 0,\r\n    PLAYING: 1,\r\n    STOPPING: 2,\r\n    STOPPED: 3,\r\n    FINISHED: 4,\r\n    PAUSED: 5\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport default class AnimationManager {\r\n\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n\r\n        this.stage.on('frameStart', () => this.progress());\r\n\r\n        /**\r\n         * All running animations on attached subjects.\r\n         * @type {Set<Animation>}\r\n         */\r\n        this.active = new Set();\r\n    }\r\n\r\n    progress() {\r\n        if (this.active.size) {\r\n            let dt = this.stage.dt;\r\n\r\n            let filter = false;\r\n            this.active.forEach(function(a) {\r\n                if (a.isActive()) {\r\n                    a.progress(dt);\r\n                } else {\r\n                    filter = true;\r\n                }\r\n            });\r\n\r\n            if (filter) {\r\n                this.active = new Set([...this.active].filter(t => t.isActive()));\r\n            }\r\n        }\r\n    }\r\n\r\n    createAnimation(element, settings) {\r\n        if (Utils.isObjectLiteral(settings)) {\r\n            // Convert plain object to proper settings object.\r\n            settings = this.createSettings(settings);\r\n        }\r\n\r\n        return new Animation(\r\n            this,\r\n            settings,\r\n            element\r\n        );\r\n    }\r\n\r\n    createSettings(settings) {\r\n        const animationSettings = new AnimationSettings();\r\n        Base.patchObject(animationSettings, settings);\r\n        return animationSettings;\r\n    }\r\n\r\n    addActive(transition) {\r\n        this.active.add(transition);\r\n    }\r\n}\r\n\r\nimport Base from \"../tree/Base.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport AnimationSettings from \"./AnimationSettings.mjs\";\r\nimport Animation from \"./Animation.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class RectangleTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__whitepix';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return function(cb) {\r\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\r\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\r\n        }\r\n    }\r\n\r\n    isAutosizeTexture() {\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Application render tree.\r\n */\r\n\r\nimport EventEmitter from \"../EventEmitter.mjs\";\r\nimport Utils from \"./Utils.mjs\";\r\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\r\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\r\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\r\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\r\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\r\nimport Shader from \"./Shader.mjs\";\r\n\r\nexport default class Stage extends EventEmitter {\r\n\r\n    constructor(options = {}) {\r\n        super();\r\n        this._setOptions(options);\r\n\r\n        this._usedMemory = 0;\r\n        this._lastGcFrame = 0;\r\n\r\n        // attempt to track VRAM usage more accurately by accounting for different color channels\r\n        this._usedVramAlpha = 0;\r\n        this._usedVramNonAlpha = 0;\r\n\r\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\r\n        this.platform = new platformType();\r\n\r\n        if (this.platform.init) {\r\n            this.platform.init(this);\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n\r\n        const context = this.getOption('context');\r\n        if (context) {\r\n            if (context.useProgram) {\r\n                this.gl = context;\r\n            } else {\r\n                this.c2d = context;\r\n            }\r\n        } else {\r\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\r\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\r\n            } else {\r\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\r\n            }\r\n        }\r\n\r\n        if (this.gl) {\r\n            // Wrap in WebGLStateManager.\r\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\r\n            // Context switching is necessary when reusing the same context for Three.js.\r\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\r\n            //  when manually passing over a canvas or context in the options.\r\n            WebGLStateManager.enable(this.gl, \"lightning\")\r\n        }\r\n\r\n        this._mode = this.gl ? 0 : 1;\r\n\r\n        // Override width and height.\r\n        if (this.getCanvas()) {\r\n            if (this.getOption('devicePixelRatio') !== 1) {\r\n                const ratio = this.getOption('devicePixelRatio');\r\n                // set correct display sie\r\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\r\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\r\n            }\r\n\r\n            // set display buffer size\r\n            this._options.w = this.getCanvas().width;\r\n            this._options.h = this.getCanvas().height;\r\n        }\r\n\r\n        if (this._mode === 0) {\r\n            if (Utils.isSpark) {\r\n                this._renderer = new SparkRenderer(this);\r\n            } else {\r\n                this._renderer = new WebGLRenderer(this);\r\n            }\r\n        } else {\r\n            this._renderer = new C2dRenderer(this);\r\n        }\r\n\r\n        this.setClearColor(this.getOption('clearColor'));\r\n\r\n        this.frameCounter = 0;\r\n\r\n        this.transitions = new TransitionManager(this);\r\n        this.animations = new AnimationManager(this);\r\n\r\n        this.textureManager = new TextureManager(this);\r\n        this.textureThrottler = new TextureThrottler(this);\r\n\r\n        this.startTime = 0;\r\n        this.currentTime = 0;\r\n        this.dt = 0;\r\n\r\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\r\n        this.rectangleTexture = new RectangleTexture(this);\r\n        this.rectangleTexture.load();\r\n\r\n        // Never clean up because we use it all the time.\r\n        this.rectangleTexture.source.permanent = true;\r\n\r\n        this.ctx = new CoreContext(this);\r\n\r\n        this._updateSourceTextures = new Set();\r\n    }\r\n\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    static isWebglSupported() {\r\n        if (Utils.isNode) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            return !!window.WebGLRenderingContext;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the rendering mode.\r\n     * @returns {number}\r\n     *  0: WebGL\r\n     *  1: Canvas2d\r\n     */\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n\r\n    isWebgl() {\r\n        return this.mode === 0;\r\n    }\r\n\r\n    isC2d() {\r\n        return this.mode === 1;\r\n    }\r\n\r\n    getOption(name) {\r\n        return this._options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this._options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this._options[name] = def;\r\n            } else {\r\n                this._options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('canvas', null);\r\n        opt('context', null);\r\n        opt('w', 1920);\r\n        opt('h', 1080);\r\n        opt('srcBasePath', null);\r\n        opt('memoryPressure', 24e6);\r\n        opt('bufferMemory', 2e6);\r\n        opt('textRenderIssueMargin', 0);\r\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\r\n        opt('clearColor', [0, 0, 0, 0]);\r\n        opt('defaultFontFace', 'sans-serif');\r\n        opt('fixedDt', 0);\r\n        opt('useImageWorker', true);\r\n        opt('autostart', true);\r\n        opt('precision', 1);\r\n        opt('canvas2d', false);\r\n        opt('platform', null);\r\n        opt('readPixelsBeforeDraw', false);\r\n        opt('devicePixelRatio', 1)       \r\n        opt('readPixelsAfterDraw', false);\r\n        opt('readPixelsAfterDrawThreshold', 0);\r\n        opt('debugFrame', false);\r\n        opt('forceTxCanvasSource', false);\r\n        opt('pauseRafLoopOnIdle', false);\r\n        opt('RTL', false);\r\n\r\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\r\n            this._options['precision'] *= o['devicePixelRatio']\r\n            this._options['w'] *= o['devicePixelRatio']\r\n            this._options['h'] *= o['devicePixelRatio']\r\n        }\r\n    }\r\n\r\n    setApplication(app) {\r\n        this.application = app;\r\n    }\r\n\r\n    init() {\r\n\r\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\r\n            console.log('[Lightning] Using image worker!');\r\n        }\r\n\r\n        if (this.application.getOption('debug') && this.c2d) {\r\n            console.log('[Lightning] Using canvas2d renderer');\r\n        }\r\n\r\n        this.application.setAsRoot();\r\n        if (this.getOption('autostart')) {\r\n            this.platform.startLoop();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.platform.stopLoop();\r\n        this.platform.destroy();\r\n        this.ctx.destroy();\r\n        this.textureManager.destroy();\r\n        this._renderer.destroy();\r\n\r\n        // clear last rendered frame\r\n        if (this.gl) {\r\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n        } else if (this.c2d) {\r\n            this.c2d.clearRect(\r\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\r\n            );\r\n        }\r\n\r\n        this.gl = null;\r\n        this.c2d = null;\r\n        this.ctx = null;\r\n        this._options = null;\r\n        this.platform = null;\r\n        this.textureManager = null;\r\n        this._renderer = null;\r\n\r\n        delete this.gl;\r\n        delete this.c2d;\r\n        delete this.ctx;\r\n        delete this._options;\r\n        delete this.platform;\r\n        delete this.textureManager;\r\n        delete this._renderer;\r\n    }\r\n\r\n    stop() {\r\n        this.platform.stopLoop();\r\n    }\r\n\r\n    resume() {\r\n        this.platform.startLoop();\r\n    }\r\n\r\n    get root() {\r\n        return this.application;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\r\n    }\r\n\r\n    getRenderPrecision() {\r\n        return this._options.precision;\r\n    }\r\n\r\n    /**\r\n     * Marks a texture for updating it's source upon the next drawFrame.\r\n     * @param texture\r\n     */\r\n    addUpdateSourceTexture(texture) {\r\n        if (this._updatingFrame) {\r\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\r\n            texture._performUpdateSource();\r\n        } else {\r\n            this._updateSourceTextures.add(texture);\r\n        }\r\n    }\r\n\r\n    removeUpdateSourceTexture(texture) {\r\n        if (this._updateSourceTextures) {\r\n            this._updateSourceTextures.delete(texture);\r\n        }\r\n    }\r\n\r\n    hasUpdateSourceTexture(texture) {\r\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\r\n    }\r\n\r\n\r\n    _performUpdateSource() {\r\n        if (this._updateSourceTextures.size) {\r\n            this._updateSourceTextures.forEach(texture => {\r\n                texture._performUpdateSource();\r\n            });\r\n            this._updateSourceTextures = new Set();\r\n        }\r\n    }\r\n\r\n    _calculateDt() {\r\n        this.startTime = this.currentTime;\r\n        this.currentTime = this.platform.getHrTime();\r\n\r\n        if (this._options.fixedDt) {\r\n            this.dt = this._options.fixedDt;\r\n        } else {\r\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\r\n        }\r\n    }\r\n\r\n    updateFrame() {\r\n        this._calculateDt();\r\n        this.emit('frameStart');\r\n        this._performUpdateSource();\r\n        this.emit('update');\r\n    }\r\n\r\n    idleFrame() {\r\n        this.textureThrottler.processSome();\r\n        this.emit('frameEnd');\r\n        this.frameCounter++;\r\n    }\r\n\r\n    renderFrame() {\r\n        const changes = this.ctx.hasRenderUpdates();\r\n\r\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\r\n        // during the current frame already.\r\n        this.textureThrottler.processSome();\r\n\r\n        if (changes) {\r\n            this._updatingFrame = true;\r\n            this.ctx.update();\r\n            this.ctx.render();\r\n            this._updatingFrame = false;\r\n        }\r\n\r\n        this.platform.nextFrame(changes);\r\n\r\n        this.emit('frameEnd');\r\n\r\n        this.frameCounter++;\r\n    }\r\n\r\n    isUpdatingFrame() {\r\n        return this._updatingFrame;\r\n    }\r\n\r\n    drawFrame() {\r\n        // Maintain original functionality of `drawFrame()` while retaining the\r\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\r\n        // The full functionality of this method is relied directly by our own unit tests and\r\n        // the unit tests of third party users\r\n        this.updateFrame();\r\n        this.renderFrame();\r\n    }\r\n\r\n    forceRenderUpdate() {\r\n        // Enforce re-rendering.\r\n        if (this.root) {\r\n            this.root.core._parent.setHasRenderUpdates(1);\r\n        }\r\n    }\r\n\r\n    setClearColor(clearColor) {\r\n        this.forceRenderUpdate();\r\n        if (clearColor === null) {\r\n            // Do not clear.\r\n            this._clearColor = null;\r\n        } else if (Array.isArray(clearColor)) {\r\n            this._clearColor = clearColor;\r\n        } else {\r\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\r\n        }\r\n    }\r\n\r\n    getClearColor() {\r\n        return this._clearColor;\r\n    }\r\n\r\n    createElement(settings) {\r\n        if (settings) {\r\n            return this.element(settings);\r\n        } else {\r\n            return new Element(this);\r\n        }\r\n    }\r\n\r\n    createShader(settings) {\r\n        return Shader.create(this, settings);\r\n    }\r\n\r\n    element(settings) {\r\n        if (settings.isElement) return settings;\r\n\r\n        let element;\r\n        if (settings.type) {\r\n            element = new settings.type(this);\r\n        } else {\r\n            element = new Element(this);\r\n        }\r\n\r\n        element.patch(settings);\r\n\r\n        return element;\r\n    }\r\n\r\n    c(settings) {\r\n        return this.element(settings);\r\n    }\r\n\r\n    get w() {\r\n        return this._options.w;\r\n    }\r\n\r\n    get h() {\r\n        return this._options.h;\r\n    }\r\n\r\n    get coordsWidth() {\r\n        return this.w / this._options.precision;\r\n    }\r\n\r\n    get coordsHeight() {\r\n        return this.h / this._options.precision;\r\n    }\r\n\r\n    addMemoryUsage(delta) {\r\n        this._usedMemory += delta;\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            if (this._usedMemory > this.getOption('memoryPressure')) {\r\n                this.gc(false);\r\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\r\n                    // Too few released. Aggressive cleanup.\r\n                    this.gc(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get usedMemory() {\r\n        return this._usedMemory;\r\n    }\r\n\r\n    addVramUsage(delta, alpha) {\r\n        if (alpha) {\r\n            this._usedVramAlpha += delta;\r\n        }\r\n        else {\r\n            this._usedVramNonAlpha += delta;\r\n        }\r\n    }\r\n\r\n    get usedVramAlpha() {\r\n        return this._usedVramAlpha;\r\n    }\r\n\r\n    get usedVramNonAlpha() {\r\n        return this._usedVramNonAlpha;\r\n    }\r\n\r\n    get usedVram() {\r\n        return this._usedVramAlpha + this._usedVramNonAlpha;\r\n    }\r\n\r\n    gc(aggressive) {\r\n        if (this._lastGcFrame !== this.frameCounter) {\r\n            this._lastGcFrame = this.frameCounter;\r\n            const memoryUsageBefore = this._usedMemory;\r\n            this.gcTextureMemory(aggressive);\r\n            this.gcRenderTextureMemory(aggressive);\r\n            this.renderer.gc(aggressive);\r\n\r\n            if (this.application.getOption('debug')) {\r\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\r\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\r\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\r\n            }\r\n        }\r\n    }\r\n\r\n    gcTextureMemory(aggressive = false) {\r\n        if (aggressive && this.ctx.root.visible) {\r\n            // Make sure that ALL textures are cleaned;\r\n            this.ctx.root.visible = false;\r\n            this.textureManager.gc();\r\n            this.ctx.root.visible = true;\r\n        } else {\r\n            this.textureManager.gc();\r\n        }\r\n    }\r\n\r\n    gcRenderTextureMemory(aggressive = false) {\r\n        if (aggressive && this.root.visible) {\r\n            // Make sure that ALL render textures are cleaned;\r\n            this.root.visible = false;\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n            this.root.visible = true;\r\n        } else {\r\n            this.ctx.freeUnusedRenderTextures(0);\r\n        }\r\n    }\r\n\r\n    getDrawingCanvas() {\r\n        return this.platform.getDrawingCanvas();\r\n    }\r\n\r\n    update() {\r\n        this.ctx.update()\r\n    }\r\n\r\n    addServiceProvider(serviceprovider) {\r\n        if (Utils.isSpark) {\r\n            this.platform.addServiceProvider(serviceprovider);\r\n        }\r\n    }\r\n\r\n    getChildrenByPosition(x, y) {\r\n        const children = [];\r\n        this.root.core.update();\r\n        this.root.core.collectAtCoord(x, y, children);\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nimport Element from \"./Element.mjs\";\r\nimport StageUtils from \"./StageUtils.mjs\";\r\nimport TextureManager from \"./TextureManager.mjs\";\r\nimport TextureThrottler from \"./TextureThrottler.mjs\";\r\nimport CoreContext from \"./core/CoreContext.mjs\";\r\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\r\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\r\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"./Component.mjs\";\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class Application extends Component {\r\n\r\n    constructor(options = {}, properties) {\r\n        // Save options temporarily to avoid having to pass it through the constructor.\r\n        Application._temp_options = options;\r\n\r\n        // Booting flag is used to postpone updateFocusSettings;\r\n        Application.booting = true;\r\n        const stage = new Stage(options.stage);\r\n        super(stage, properties);\r\n        Application.booting = false;\r\n\r\n        this.__updateFocusCounter = 0;\r\n        this.__keypressTimers = new Map();\r\n        this.__hoveredChild = null;\r\n\r\n        // We must construct while the application is not yet attached.\r\n        // That's why we 'init' the stage later (which actually emits the attach event).\r\n        this.stage.init();\r\n\r\n        // Initially, the focus settings are updated after both the stage and application are constructed.\r\n        this.updateFocusSettings();\r\n\r\n        this.__keymap = this.getOption('keys');\r\n\r\n        if (this.__keymap) {\r\n            this.stage.platform.registerKeydownHandler((e) => {\r\n                this._receiveKeydown(e);\r\n            });\r\n\r\n            this.stage.platform.registerKeyupHandler((e) => {\r\n                this._receiveKeyup(e);\r\n            });\r\n        }\r\n\r\n        if (this.getOption(\"enablePointer\")) {\r\n            this.stage.platform.registerClickHandler((e) => {\r\n                this._receiveClick(e);\r\n            });\r\n\r\n            this.stage.platform.registerHoverHandler((e) => {\r\n                this._receiveHover(e);\r\n            });\r\n\r\n            this.stage.platform.registerScrollWheelHandler((e) => {\r\n                this._recieveScrollWheel(e);\r\n            });\r\n\r\n            this.cursor = 'default';\r\n        }\r\n    }\r\n\r\n    getOption(name) {\r\n        return this.__options[name];\r\n    }\r\n\r\n    _setOptions(o) {\r\n        this.__options = {};\r\n\r\n        let opt = (name, def) => {\r\n            let value = o[name];\r\n\r\n            if (value === undefined) {\r\n                this.__options[name] = def;\r\n            } else {\r\n                this.__options[name] = value;\r\n            }\r\n        }\r\n\r\n        opt('debug', false);\r\n        opt('keys', {\r\n            38: \"Up\",\r\n            40: \"Down\",\r\n            37: \"Left\",\r\n            39: \"Right\",\r\n            13: \"Enter\",\r\n            8: \"Back\",\r\n            27: \"Exit\"\r\n        });\r\n        opt('enablePointer', false);\r\n    }\r\n\r\n    __construct() {\r\n        this.stage.setApplication(this);\r\n\r\n        this._setOptions(Application._temp_options);\r\n        delete Application._temp_options;\r\n\r\n        super.__construct();\r\n    }\r\n\r\n    __init() {\r\n        super.__init();\r\n        this.__updateFocus();\r\n    }\r\n\r\n    updateFocusPath() {\r\n        this.__updateFocus();\r\n    }\r\n\r\n    __updateFocus() {\r\n        const notOverridden = this.__updateFocusRec();\r\n\r\n        if (!Application.booting && notOverridden) {\r\n            this.updateFocusSettings();\r\n        }\r\n    }\r\n\r\n    __updateFocusRec() {\r\n        const updateFocusId = ++this.__updateFocusCounter;\r\n        this.__updateFocusId = updateFocusId;\r\n\r\n        const newFocusPath = this.__getFocusPath();\r\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\r\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\r\n\r\n        if (!prevFocusedComponent) {\r\n            // Focus events.\r\n            this._focusPath = [];\r\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\r\n                this._focusPath.push(newFocusPath[i]);\r\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\r\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                if (focusOverridden) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\r\n            let index;\r\n            for (index = 0; index < m; index++) {\r\n                if (this._focusPath[index] !== newFocusPath[index]) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\r\n\r\n                if (this.getOption('debug')) {\r\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\r\n                }\r\n\r\n                // Unfocus events.\r\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\r\n                    const unfocusedElement = this._focusPath.pop();\r\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus events.\r\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\r\n                    this._focusPath.push(newFocusPath[i]);\r\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\r\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\r\n                    if (focusOverridden) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Focus changed events.\r\n                for (let i = 0; i < index; i++) {\r\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    updateFocusSettings() {\r\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\r\n\r\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\r\n        // focus directly (such as the application background).\r\n        const focusSettings = {};\r\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\r\n                this._focusPath[i]._setFocusSettings(focusSettings);\r\n            }\r\n        }\r\n\r\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\r\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\r\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\r\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\r\n            }\r\n        }\r\n\r\n        this.__prevFocusSettings = focusSettings;\r\n    }\r\n\r\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\r\n        // Override to handle focus-based settings.\r\n    }\r\n\r\n    __getFocusPath() {\r\n        const path = [this];\r\n        let current = this;\r\n        do {\r\n            const nextFocus = current._getFocused();\r\n            if (!nextFocus || (nextFocus === current)) {\r\n                // Found!;\r\n                break;\r\n            }\r\n\r\n\r\n            let ptr = nextFocus.cparent;\r\n            if (ptr === current) {\r\n                path.push(nextFocus);\r\n            } else {\r\n                // Not an immediate child: include full path to descendant.\r\n                const newParts = [nextFocus];\r\n                do {\r\n                    if (!ptr) {\r\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\r\n                    }\r\n                    newParts.push(ptr);\r\n                    ptr = ptr.cparent;\r\n                } while (ptr !== current);\r\n\r\n                // Add them reversed.\r\n                for (let i = 0, n = newParts.length; i < n; i++) {\r\n                    path.push(newParts[n - i - 1]);\r\n                }\r\n            }\r\n\r\n            current = nextFocus;\r\n        } while (true);\r\n\r\n        return path;\r\n    }\r\n\r\n    get focusPath() {\r\n        return this._focusPath;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, top-down from application to focused component.\r\n     */\r\n    focusTopDownEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = 0; i < n; i++) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Injects an event in the state machines, bottom-up from focused component to application.\r\n     */\r\n    focusBottomUpEvent(events, ...args) {\r\n        const path = this.focusPath;\r\n        const n = path.length;\r\n\r\n        // Multiple events.\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            const event = path[i]._getMostSpecificHandledMember(events);\r\n            if (event !== undefined) {\r\n                const returnValue = path[i][event](...args);\r\n                if (returnValue !== false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _receiveKeydown(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n        const path = this.focusPath;\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                const hasTimer = this.__keypressTimers.has(keys[i]);\r\n                // prevent event from getting fired when the timeout is still active\r\n                if (path[path.length - 1].longpress && hasTimer) {\r\n                    return;\r\n                }\r\n\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        const consumer = path[path.length - 1];\r\n\r\n        if (keys && consumer.longpress) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                this._startLongpressTimer(keys[i], consumer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Keyup listener\r\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\r\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\r\n     *\r\n     * @param e\r\n     * @private\r\n     */\r\n    _receiveKeyup(e) {\r\n        const obj = e;\r\n        const key = this.__keymap[e.keyCode];\r\n\r\n        let keys;\r\n        if (key) {\r\n            keys = Array.isArray(key) ? key : [key];\r\n        }\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\r\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\r\n                }\r\n            }\r\n        } else {\r\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\r\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\r\n            }\r\n        }\r\n\r\n        this.updateFocusPath();\r\n\r\n        if (keys) {\r\n            for (let i = 0, n = keys.length; i < n; i++) {\r\n                if (this.__keypressTimers.has(keys[i])) {\r\n                    // keyup has fired before end of timeout so we clear it\r\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\r\n                    // delete so we can register it again\r\n                    this.__keypressTimers.delete(keys[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\r\n     * before the timer goes off.\r\n     *\r\n     * If key is not release (keyup) the longpress handler will be fired.\r\n     * Configuration can be via the Components template:\r\n     *\r\n     * static _template() {\r\n     *     return {\r\n     *         w:100, h:100,\r\n     *         longpress:{up:700, down:500}\r\n     *     }\r\n     * }     *\r\n     * // this will get called when up has been pressed for 700ms\r\n     * _handleUpLong() {\r\n     *\r\n     * }\r\n     *\r\n     * @param key\r\n     * @param element\r\n     * @private\r\n     */\r\n    _startLongpressTimer(key, element) {\r\n        const config = element.longpress;\r\n        const lookup = key.toLowerCase();\r\n\r\n        if (config[lookup]) {\r\n            const timeout = config[lookup];\r\n            if (!Utils.isNumber(timeout)) {\r\n                element._throwError(\"config value for longpress must be a number\");\r\n            } else {\r\n                this.__keypressTimers.set(key, setTimeout(() => {\r\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\r\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\r\n                    }\r\n\r\n                    this.__keypressTimers.delete(key);\r\n                }, timeout || 500 /* prevent 0ms */));\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    _recieveScrollWheel(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\r\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    fireTopDownScrollWheelHandler(event, obj) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children).reverse();\r\n        let n = affected.length;\r\n\r\n        while (n--) {\r\n            const child = affected[n];\r\n            if (child && child[event]) {\r\n                child._captureScroll(obj);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    fireBottomUpScrollWheelHandler(event, obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[event]) {\r\n                child._handleScroll(obj);\r\n                return true;\r\n            }\r\n            child = child.parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _receiveClick(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpClickHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpClickHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n        let child = target;\r\n\r\n        // Search tree bottom up for a handler\r\n        while (child !== null) {\r\n            if (child && child[\"_handleClick\"]) {\r\n                const { px, py } = child.core._worldContext;\r\n                const cx = px * precision;\r\n                const cy = py * precision;\r\n\r\n                const localCoords = {\r\n                    x: clientX - cx,\r\n                    y: clientY - cy\r\n                }\r\n\r\n                const returnValue = child._handleClick(target, localCoords);\r\n                if (returnValue !== false) {\r\n                    break;\r\n                }\r\n            }\r\n            child = child.parent;\r\n        }\r\n    }\r\n\r\n    _receiveHover(e) {\r\n        const obj = e;\r\n        const { clientX, clientY } = obj;\r\n\r\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\r\n            this.stage.application.fireBottomUpHoverHandler(obj);\r\n        }\r\n    }\r\n\r\n    fireBottomUpHoverHandler(obj) {\r\n        const { clientX, clientY } = obj;\r\n        const target = this._getTargetChild(clientX, clientY);\r\n\r\n        // Only fire handlers when pointer target changes\r\n        if (target !== this.__hoveredChild) {\r\n\r\n            let hoveredBranch = new Set();\r\n            let newHoveredBranch = new Set();\r\n\r\n            if (target) {\r\n                newHoveredBranch = new Set(target.getAncestors());\r\n            }\r\n\r\n            if (this.__hoveredChild) {\r\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\r\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\r\n                    const c = Component.getComponent(elem);\r\n                    if (c[\"_handleUnhover\"]) {\r\n                        c._handleUnhover(elem);\r\n                    }\r\n                    if (elem.parent && elem.parent.cursor) {\r\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.__hoveredChild = target;\r\n\r\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\r\n            for (const elem of diffBranch) {\r\n                const c = Component.getComponent(elem);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(elem);\r\n                }\r\n            }\r\n\r\n            // New element hover cursor\r\n            const lastElement = diffBranch[0];\r\n            if (lastElement && lastElement.cursor) {\r\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\r\n            }\r\n\r\n            // Rerun _handleHover for target element in case it's been hovered\r\n            // back from its child\r\n            if (diffBranch.length === 0 && target) {\r\n                const c = Component.getComponent(target);\r\n                if (c[\"_handleHover\"]) {\r\n                    c._handleHover(target);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getTargetChild(clientX, clientY) {\r\n        let children = this.stage.application.children;\r\n        let affected = this._findChildren([], children);\r\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\r\n\r\n        hoverableChildren.sort((a, b) => {\r\n            // Sort by zIndex and then id\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex < b.zIndex) {\r\n                return -1;\r\n            } else {\r\n                return a.id > b.id ? 1 : -1;\r\n            }\r\n        });\r\n\r\n        if (hoverableChildren.length) {\r\n            // Assume target has highest zIndex (id when zIndex equal)\r\n            return hoverableChildren.slice(-1)[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    _findChildren(bucket, children) {\r\n        let n = children.length;\r\n        while (n--) {\r\n            const child = children[n];\r\n            // only add active children\r\n            if (child.__active && child.collision) {\r\n                if (child.collision === true) {\r\n                    bucket.push(child);\r\n                }\r\n                if (child.hasChildren()) {\r\n                    this._findChildren(bucket, child.children);\r\n                }\r\n            }\r\n        }\r\n        return bucket;\r\n    }\r\n\r\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\r\n        let n = affectedChildren.length;\r\n        const candidates = [];\r\n\r\n        // loop through affected children\r\n        // and perform collision detection\r\n        while (n--) {\r\n            const child = affectedChildren[n];\r\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\r\n            const ctx = child.core._worldContext;\r\n\r\n            const cx = ctx.px * precision;\r\n            const cy = ctx.py * precision;\r\n            const cw = child.finalW * ctx.ta * precision;\r\n            const ch = child.finalH * ctx.td * precision;\r\n\r\n            if (cx > this.stage.w || cy > this.stage.h) {\r\n                continue;\r\n            }\r\n\r\n            if (child.parent.core._scissor) {\r\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\r\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\r\n                    continue\r\n            }\r\n\r\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\r\n                candidates.push(child);\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n\r\n    _testCollision(px, py, cx, cy, cw, ch) {\r\n        if (px >= cx &&\r\n            px <= cx + cw &&\r\n            py >= cy &&\r\n            py <= cy + ch) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        if (!this._destroyed) {\r\n            this._destroy();\r\n            this.stage.destroy();\r\n            this._destroyed = true;\r\n        }\r\n    }\r\n\r\n    _destroy() {\r\n        // This forces the _detach, _disabled and _active events to be called.\r\n        this.stage.setApplication(undefined);\r\n        this._updateAttachedFlag();\r\n        this._updateEnabledFlag();\r\n\r\n        if (this.__keypressTimers.size) {\r\n            for (const timer of this.__keypressTimers.values()) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            this.__keypressTimers.clear();\r\n        }\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.stage.getCanvas();\r\n    }\r\n\r\n}\r\n\r\nimport Stage from \"../tree/Stage.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticCanvasTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._factory = undefined;\r\n        this._lookupId = undefined;\r\n    }\r\n\r\n    set content({factory, lookupId = undefined}) {\r\n        this._factory = factory;\r\n        this._lookupId = lookupId;\r\n        this._changed();\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._factory;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._lookupId;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const f = this._factory;\r\n        return (cb) => {\r\n            return f((err, canvas) => {\r\n                if (err) {\r\n                    return cb(err);\r\n                }\r\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\r\n            }, this.stage);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\nimport StageUtils from \"../tree/StageUtils.mjs\";\r\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\r\n\r\nexport default class Tools {\r\n\r\n    static getCanvasTexture(canvasFactory, lookupId) {\r\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\r\n    }\r\n\r\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\r\n            } else {\r\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\r\n            }\r\n        };\r\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\r\n        if (fill === undefined) fill = true;\r\n        if (strokeWidth === undefined) strokeWidth = 0;\r\n\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + strokeWidth + 2;\r\n        canvas.height = h + strokeWidth + 2;\r\n\r\n        ctx.beginPath();\r\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n\r\n        if (fill) {\r\n            if (Utils.isNumber(fillColor)) {\r\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\r\n            } else {\r\n                ctx.fillStyle = \"white\";\r\n            }\r\n            ctx.fill();\r\n        }\r\n\r\n        if (strokeWidth) {\r\n            if (Utils.isNumber(strokeColor)) {\r\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\r\n            } else {\r\n                ctx.strokeStyle = \"white\";\r\n            }\r\n            ctx.lineWidth = strokeWidth;\r\n            ctx.stroke();\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\r\n        if (!Array.isArray(radius)){\r\n            // upper-left, upper-right, bottom-right, bottom-left.\r\n            radius = [radius, radius, radius, radius];\r\n        }\r\n\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\r\n            } else {\r\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\r\n            }\r\n        };\r\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createShadowRect(stage, w, h, radius, blur, margin) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        canvas.width = w + margin * 2;\r\n        canvas.height = h + margin * 2;\r\n\r\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\r\n        ctx.globalAlpha = 0.01;\r\n        ctx.fillRect(0, 0, 0.01, 0.01);\r\n        ctx.globalAlpha = 1.0;\r\n\r\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\r\n        ctx.shadowBlur = blur;\r\n        ctx.shadowOffsetX = (w + 10) + margin;\r\n        ctx.shadowOffsetY = margin;\r\n\r\n        ctx.beginPath();\r\n        const x = -(w + 10);\r\n        const y = 0;\r\n\r\n        ctx.moveTo(x + radius[0], y);\r\n        ctx.lineTo(x + w - radius[1], y);\r\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\r\n        ctx.lineTo(x + w, y + h - radius[2]);\r\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\r\n        ctx.lineTo(x + radius[3], y + h);\r\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\r\n        ctx.lineTo(x, y + radius[0]);\r\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        return canvas;\r\n    }\r\n\r\n    static getSvgTexture(url, w, h) {\r\n        let factory = (cb, stage) => {\r\n            if (Utils.isSpark) {\r\n                stage.platform.createSvg(cb, stage, url, w, h);\r\n            } else {\r\n                this.createSvg(cb, stage, url, w, h);\r\n            }\r\n        };\r\n        let id = 'svg' + [w, h, url].join(\",\");\r\n        return Tools.getCanvasTexture(factory, id);\r\n    }\r\n\r\n    static createSvg(cb, stage, url, w, h) {\r\n        let canvas = stage.platform.getDrawingCanvas();\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.imageSmoothingEnabled = true;\r\n\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            cb(null, canvas);\r\n        }\r\n        img.onerror = (err) => {\r\n            cb(err);\r\n        }\r\n\r\n        // On the PS4 platform setting the `crossOrigin` attribute on images\r\n        // can cause CORS failures.\r\n        if (!Utils.isPS4) {\r\n            img.crossOrigin = \"Anonymous\";\r\n        }\r\n\r\n        img.src = url;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n\r\nexport default class ObjMerger {\r\n\r\n    static isMf(f) {\r\n        return Utils.isFunction(f) && f.__mf;\r\n    }\r\n\r\n    static mf(f) {\r\n        // Set as merge function.\r\n        f.__mf = true;\r\n        return f;\r\n    }\r\n\r\n    static merge(a, b) {\r\n        const aks = Object.keys(a);\r\n        const bks = Object.keys(b);\r\n\r\n        if (!bks.length) {\r\n            return a;\r\n        }\r\n\r\n        // Create index array for all elements.\r\n        const ai = {};\r\n        const bi = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n            ai[key] = -1;\r\n            bi[key] = i;\r\n        }\r\n        for (let i = 0, n = aks.length; i < n; i++) {\r\n            const key = aks[i];\r\n            ai[key] = i;\r\n            if (bi[key] === undefined) {\r\n                bi[key] = -1;\r\n            }\r\n        }\r\n\r\n        const aksl = aks.length;\r\n\r\n        const result = {};\r\n        for (let i = 0, n = bks.length; i < n; i++) {\r\n            const key = bks[i];\r\n\r\n            // Prepend all items in a that are not in b - before the now added b attribute.\r\n            const aIndex = ai[key];\r\n            let curIndex = aIndex;\r\n            while(--curIndex >= 0) {\r\n                const akey = aks[curIndex];\r\n                if (bi[akey] !== -1) {\r\n                    // Already found? Stop processing.\r\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\r\n                    break;\r\n                }\r\n            }\r\n            while(++curIndex < aIndex) {\r\n                const akey = aks[curIndex];\r\n                result[akey] = a[akey];\r\n            }\r\n\r\n            const bv = b[key];\r\n            const av = a[key];\r\n            let r;\r\n            if (this.isMf(bv)) {\r\n                r = bv(av);\r\n            } else {\r\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\r\n                    r = bv;\r\n                } else {\r\n                    r = ObjMerger.merge(av, bv);\r\n                }\r\n            }\r\n\r\n            // When marked as undefined, property is deleted.\r\n            if (r !== undefined) {\r\n                result[key] = r;\r\n            }\r\n        }\r\n\r\n        // Append remaining final items in a.\r\n        let curIndex = aksl;\r\n        while(--curIndex >= 0) {\r\n            const akey = aks[curIndex];\r\n            if (bi[akey] !== -1) {\r\n                break;\r\n            }\r\n        }\r\n        while(++curIndex < aksl) {\r\n            const akey = aks[curIndex];\r\n            result[akey] = a[akey];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectList from \"../tree/ObjectList.mjs\";\r\n\r\nexport default class ObjectListProxy extends ObjectList {\r\n\r\n    constructor(target) {\r\n        super();\r\n        this._target = target;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        this._target.addAt(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        this._target.removeAt(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        this._target._setByArray(order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        this._target.setAt(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        this._target.setAt(item, toIndex);\r\n    }\r\n\r\n    createItem(object) {\r\n        return this._target.createItem(object);\r\n    }\r\n\r\n    isItem(object) {\r\n        return this._target.isItem(object);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Manages the list of children for an element.\r\n */\r\n\r\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\r\n\r\nexport default class ObjectListWrapper extends ObjectListProxy {\r\n\r\n    constructor(target, wrap) {\r\n        super(target);\r\n        this._wrap = wrap;\r\n    }\r\n\r\n    wrap(item) {\r\n        let wrapper = this._wrap(item);\r\n        item._wrapper = wrapper;\r\n        return wrapper;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        item = this.wrap(item);\r\n        super.onAdd(item, index);\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        added.forEach(a => this.wrap(a));\r\n        order = order.map(a => a._wrapper);\r\n        super.onSync(removed, added, order);\r\n    }\r\n\r\n    onSet(item, index) {\r\n        item = this.wrap(item);\r\n        super.onSet(item, index);\r\n    }\r\n\r\n    onMove(item, fromIndex, toIndex) {\r\n        super.onMove(item, fromIndex, toIndex);\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class NoiseTexture extends Texture {\r\n\r\n    _getLookupId() {\r\n        return '__noise';\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const gl = this.stage.gl;\r\n        return function(cb) {\r\n            const noise = new Uint8Array(128 * 128 * 4);\r\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\r\n                const v = Math.floor(Math.random() * 256);\r\n                noise[i] = v;\r\n                noise[i+1] = v;\r\n                noise[i+2] = v;\r\n                noise[i+3] = 255;\r\n            }\r\n            const texParams = {}\r\n\r\n            if (gl) {\r\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\r\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\r\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\r\n            }\r\n\r\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class HtmlTexture extends Texture {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._htmlElement = undefined;\r\n        this._scale = 1;\r\n    }\r\n\r\n    set htmlElement(v) {\r\n        this._htmlElement = v;\r\n        this._changed();\r\n    }\r\n\r\n    get htmlElement() {\r\n        return this._htmlElement;\r\n    }\r\n\r\n    set scale(v) {\r\n        this._scale = v;\r\n        this._changed();\r\n    }\r\n\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set html(v) {\r\n        if (!v) {\r\n            this.htmlElement = undefined;\r\n        } else {\r\n            const d = document.createElement('div');\r\n            d.innerHTML = \"<div>\" + v + \"</div>\";\r\n            this.htmlElement = d.firstElementChild;\r\n        }\r\n    }\r\n\r\n    get html() {\r\n        return this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return this.htmlElement;\r\n    }\r\n\r\n    _getLookupId() {\r\n        return this._scale + \":\" + this._htmlElement.innerHTML;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        const htmlElement = this._htmlElement;\r\n        const scale = this._scale;\r\n        return function(cb) {\r\n            if (!window.html2canvas) {\r\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\r\n            }\r\n\r\n            const area = HtmlTexture.getPreloadArea();\r\n            area.appendChild(htmlElement);\r\n\r\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\r\n                area.removeChild(htmlElement);\r\n                if (canvas.height === 0) {\r\n                    return cb(new Error(\"Canvas height is 0\"));\r\n                }\r\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\r\n            }).catch(e => {\r\n                console.error('[Lightning]', e);\r\n            });\r\n        }\r\n    }\r\n\r\n    static getPreloadArea() {\r\n        if (!this._preloadArea) {\r\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\r\n            this._preloadArea = document.createElement('div');\r\n            if (this._preloadArea.attachShadow) {\r\n                // Use a shadow DOM if possible to prevent styling from interfering.\r\n                this._preloadArea.attachShadow({mode: 'closed'});\r\n            }\r\n            this._preloadArea.style.opacity = 0;\r\n            this._preloadArea.style.pointerEvents = 'none';\r\n            this._preloadArea.style.position = 'fixed';\r\n            this._preloadArea.style.display = 'block';\r\n            this._preloadArea.style.top = '100vh';\r\n            this._preloadArea.style.overflow = 'hidden';\r\n            document.body.appendChild(this._preloadArea);\r\n        }\r\n        return this._preloadArea;\r\n    }\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Texture from \"../tree/Texture.mjs\";\r\n\r\nexport default class StaticTexture extends Texture {\r\n\r\n    constructor(stage, options) {\r\n        super(stage);\r\n\r\n        this._options = options;\r\n    }\r\n\r\n    set options(v) {\r\n        if (this._options !== v) {\r\n            this._options = v;\r\n            this._changed();\r\n        }\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    _getIsValid() {\r\n        return !!this._options;\r\n    }\r\n\r\n    _getSourceLoader() {\r\n        return (cb) => {\r\n            cb(null, this._options);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class ListComponent extends Component {\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._wrapper = super._children.a({});\r\n\r\n        this._reloadVisibleElements = false;\r\n\r\n        this._visibleItems = new Set();\r\n\r\n        this._index = 0;\r\n\r\n        this._started = false;\r\n\r\n        /**\r\n         * The transition definition that is being used when scrolling the items.\r\n         * @type TransitionSettings\r\n         */\r\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\r\n\r\n        /**\r\n         * The scroll area size in pixels per item.\r\n         */\r\n        this._itemSize = 100;\r\n\r\n        this._viewportScrollOffset = 0;\r\n\r\n        this._itemScrollOffset = 0;\r\n\r\n        /**\r\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\r\n         */\r\n        this._roll = false;\r\n\r\n        /**\r\n         * Allows restricting the start scroll position.\r\n         */\r\n        this._rollMin = 0;\r\n\r\n        /**\r\n         * Allows restricting the end scroll position.\r\n         */\r\n        this._rollMax = 0;\r\n\r\n        /**\r\n         * Definition for a custom animation that is applied when an item is (partially) selected.\r\n         * @type AnimationSettings\r\n         */\r\n        this._progressAnimation = null;\r\n\r\n        /**\r\n         * Inverts the scrolling direction.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._invertDirection = false;\r\n\r\n        /**\r\n         * Layout the items horizontally or vertically?\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._horizontal = true;\r\n\r\n        this.itemList = new ListItems(this);\r\n    }\r\n\r\n    _allowChildrenAccess() {\r\n        return false;\r\n    }\r\n\r\n    get items() {\r\n        return this.itemList.get();\r\n    }\r\n\r\n    set items(children) {\r\n        this.itemList.patch(children);\r\n    }\r\n\r\n    start() {\r\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\r\n        this._scrollTransition = this._wrapper.transition(this.property);\r\n        this._scrollTransition.on('progress', p => this.update());\r\n\r\n        this.setIndex(0, true, true);\r\n\r\n        this._started = true;\r\n\r\n        this.update();\r\n    }\r\n\r\n    setIndex(index, immediate = false, closest = false) {\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n\r\n        if (closest) {\r\n            // Scroll to same offset closest to the index.\r\n            let offset = Utils.getModuloIndex(index, nElements);\r\n            let o = Utils.getModuloIndex(this.index, nElements);\r\n            let diff = offset - o;\r\n            if (diff > 0.5 * nElements) {\r\n                diff -= nElements;\r\n            } else if (diff < -0.5 * nElements) {\r\n                diff += nElements;\r\n            }\r\n            this._index += diff;\r\n        } else {\r\n            this._index = index;\r\n        }\r\n\r\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\r\n            this._index = Utils.getModuloIndex(this._index, nElements);\r\n        }\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = direction * this._index * this._itemSize;\r\n\r\n        if (this._roll) {\r\n            let min, max, scrollDelta;\r\n            if (direction == 1) {\r\n                max = (nElements - 1) * this._itemSize;\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max -= scrollDelta;\r\n\r\n                min = this.viewportSize - (this._itemSize + scrollDelta);\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.max(Math.min(value, max), min);\r\n            } else {\r\n                max = (nElements * this._itemSize - this.viewportSize);\r\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\r\n\r\n                max += scrollDelta;\r\n\r\n                let min = scrollDelta;\r\n\r\n                if (this._rollMin) min -= this._rollMin;\r\n                if (this._rollMax) max += this._rollMax;\r\n\r\n                value = Math.min(Math.max(-max, value), -min);\r\n            }\r\n        }\r\n\r\n        this._scrollTransition.start(value);\r\n\r\n        if (immediate) {\r\n            this._scrollTransition.finish();\r\n        }\r\n\r\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\r\n    }\r\n\r\n    getAxisPosition() {\r\n        let target = -this._scrollTransition._targetValue;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n        let value = -direction * this._index * this._itemSize;\r\n\r\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\r\n    }\r\n\r\n    update() {\r\n        if (!this._started) return;\r\n\r\n        let nElements = this.length;\r\n        if (!nElements) return;\r\n\r\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\r\n\r\n        // Map position to index value.\r\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\r\n\r\n        let viewportSize = this.viewportSize;\r\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\r\n        v += scrollDelta;\r\n\r\n        let s, e, ps, pe;\r\n        if (direction == -1) {\r\n            s = Math.floor(-v / this._itemSize);\r\n            ps = 1 - ((-v / this._itemSize) - s);\r\n            e = Math.floor((viewportSize - v) / this._itemSize);\r\n            pe = (((viewportSize - v) / this._itemSize) - e);\r\n        } else {\r\n            s = Math.ceil(v / this._itemSize);\r\n            ps = 1 + (v / this._itemSize) - s;\r\n            e = Math.ceil((v - viewportSize) / this._itemSize);\r\n            pe = e - ((v - viewportSize) / this._itemSize);\r\n        }\r\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\r\n            // Don't show additional items.\r\n            if (e >= nElements) {\r\n                e = nElements - 1;\r\n                pe = 1;\r\n            }\r\n            if (s >= nElements) {\r\n                s = nElements - 1;\r\n                ps = 1;\r\n            }\r\n            if (e <= -1) {\r\n                e = 0;\r\n                pe = 1;\r\n            }\r\n            if (s <= -1) {\r\n                s = 0;\r\n                ps = 1;\r\n            }\r\n        }\r\n\r\n        let offset = -direction * s * this._itemSize;\r\n\r\n        let item;\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n\r\n            let element = this.getElement(realIndex);\r\n            item = element.parent;\r\n            this._visibleItems.delete(item);\r\n            if (this._horizontal) {\r\n                item.x = offset + scrollDelta;\r\n            } else {\r\n                item.y = offset + scrollDelta;\r\n            }\r\n\r\n            let wasVisible = item.visible;\r\n            item.visible = true;\r\n\r\n            if (!wasVisible || this._reloadVisibleElements) {\r\n                // Turned visible.\r\n                this.emit('visible', index, realIndex);\r\n            }\r\n\r\n\r\n\r\n            if (this._progressAnimation) {\r\n                let p = 1;\r\n                if (index == s) {\r\n                    p = ps;\r\n                } else if (index == e) {\r\n                    p = pe;\r\n                }\r\n\r\n                // Use animation to progress.\r\n                this._progressAnimation.apply(element, p);\r\n            }\r\n\r\n            offset += this._itemSize;\r\n        }\r\n\r\n        // Handle item visibility.\r\n        let self = this;\r\n        this._visibleItems.forEach(function(invisibleItem) {\r\n            invisibleItem.visible = false;\r\n            self._visibleItems.delete(invisibleItem);\r\n        });\r\n\r\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\r\n            let realIndex = Utils.getModuloIndex(index, nElements);\r\n            this._visibleItems.add(this.getWrapper(realIndex));\r\n        }\r\n\r\n        this._reloadVisibleElements = false;\r\n    }\r\n\r\n    setPrevious() {\r\n        this.setIndex(this._index - 1);\r\n    }\r\n\r\n    setNext() {\r\n        this.setIndex(this._index + 1);\r\n    }\r\n\r\n    getWrapper(index) {\r\n        return this._wrapper.children[index];\r\n    }\r\n\r\n    getElement(index) {\r\n        let e = this._wrapper.children[index];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    reload() {\r\n        this._reloadVisibleElements = true;\r\n        this.update();\r\n    }\r\n\r\n    get element() {\r\n        let e = this._wrapper.children[this.realIndex];\r\n        return e ? e.children[0] : null;\r\n    }\r\n\r\n    get length() {\r\n        return this._wrapper.children.length;\r\n    }\r\n\r\n    get property() {\r\n        return this._horizontal ? 'x' : 'y';\r\n    }\r\n\r\n    get viewportSize() {\r\n        return this._horizontal ? this.w : this.h;\r\n    }\r\n\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    get realIndex() {\r\n        return Utils.getModuloIndex(this._index, this.length);\r\n    }\r\n\r\n    get itemSize() {\r\n        return this._itemSize;\r\n    }\r\n\r\n    set itemSize(v) {\r\n        this._itemSize = v;\r\n        this.update();\r\n    }\r\n\r\n    get viewportScrollOffset() {\r\n        return this._viewportScrollOffset;\r\n    }\r\n\r\n    set viewportScrollOffset(v) {\r\n        this._viewportScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get itemScrollOffset() {\r\n        return this._itemScrollOffset;\r\n    }\r\n\r\n    set itemScrollOffset(v) {\r\n        this._itemScrollOffset = v;\r\n        this.update();\r\n    }\r\n\r\n    get scrollTransitionSettings() {\r\n        return this._scrollTransitionSettings;\r\n    }\r\n\r\n    set scrollTransitionSettings(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    set scrollTransition(v) {\r\n        this._scrollTransitionSettings.patch(v);\r\n    }\r\n\r\n    get scrollTransition() {\r\n        return this._scrollTransition;\r\n    }\r\n\r\n    get progressAnimation() {\r\n        return this._progressAnimation;\r\n    }\r\n\r\n    set progressAnimation(v) {\r\n        if (Utils.isObjectLiteral(v)) {\r\n            this._progressAnimation = this.stage.animations.createSettings(v);\r\n        } else {\r\n            this._progressAnimation = v;\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    get roll() {\r\n        return this._roll;\r\n    }\r\n\r\n    set roll(v) {\r\n        this._roll = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMin() {\r\n        return this._rollMin;\r\n    }\r\n\r\n    set rollMin(v) {\r\n        this._rollMin = v;\r\n        this.update();\r\n    }\r\n\r\n    get rollMax() {\r\n        return this._rollMax;\r\n    }\r\n\r\n    set rollMax(v) {\r\n        this._rollMax = v;\r\n        this.update();\r\n    }\r\n\r\n    get invertDirection() {\r\n        return this._invertDirection;\r\n    }\r\n\r\n    set invertDirection(v) {\r\n        if (!this._started) {\r\n            this._invertDirection = v;\r\n        }\r\n    }\r\n\r\n    get horizontal() {\r\n        return this._horizontal;\r\n    }\r\n\r\n    set horizontal(v) {\r\n        if (v !== this._horizontal) {\r\n            if (!this._started) {\r\n                this._horizontal = v;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\r\nclass ListItems extends ObjectListWrapper {\r\n    constructor(list) {\r\n        let wrap = (item => {\r\n            let parent = item.stage.createElement();\r\n            parent.add(item);\r\n            parent.visible = false;\r\n            return parent;\r\n        })\r\n\r\n        super(list._wrapper._children, wrap);\r\n        this.list = list;\r\n    }\r\n\r\n    onAdd(item, index) {\r\n        super.onAdd(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    checkStarted(index) {\r\n        this.list._reloadVisibleElements = true;\r\n        if (!this.list._started) {\r\n            this.list.start();\r\n        } else {\r\n            if (this.list.length === 1) {\r\n                this.list.setIndex(0, true, true);\r\n            } else {\r\n                if (this.list._index >= this.list.length) {\r\n                    this.list.setIndex(0);\r\n                }\r\n            }\r\n            this.list.update();\r\n        }\r\n    }\r\n\r\n    onRemove(item, index) {\r\n        super.onRemove(item, index);\r\n        let ri = this.list.realIndex;\r\n        if (ri === index) {\r\n            if (ri === this.list.length) {\r\n                ri--;\r\n            }\r\n            if (ri >= 0) {\r\n                this.list.setIndex(ri);\r\n            }\r\n        } else if (ri > index) {\r\n            this.list.setIndex(ri - 1);\r\n        }\r\n\r\n        this.list._reloadVisibleElements = true;\r\n    }\r\n\r\n    onSet(item, index) {\r\n        super.onSet(item, index);\r\n        this.checkStarted(index);\r\n    }\r\n\r\n    onSync(removed, added, order) {\r\n        super.onSync(removed, added, order);\r\n        this.checkStarted(0);\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nimport Utils from \"../tree/Utils.mjs\";\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class LinearBlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n\r\n        this._direction = new Float32Array([1, 0]);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get x() {\r\n        return this._direction[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._direction[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._direction[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._direction[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n\r\n    useDefault() {\r\n        return (this._kernelRadius === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\r\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\r\n\r\n        const w = operation.getRenderWidth();\r\n        const h = operation.getRenderHeight();\r\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nLinearBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 resolution;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 direction;\r\n    uniform int kernelRadius;\r\n    \r\n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3333333333333333) * direction;\r\n        color += texture2D(image, uv) * 0.29411764705882354;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\r\n        return color; \r\n    }\r\n    \r\n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.3846153846) * direction;\r\n        vec2 off2 = vec2(3.2307692308) * direction;\r\n        color += texture2D(image, uv) * 0.2270270270;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\r\n        return color;\r\n    }\r\n    \r\n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\r\n        vec4 color = vec4(0.0);\r\n        vec2 off1 = vec2(1.411764705882353) * direction;\r\n        vec2 off2 = vec2(3.2941176470588234) * direction;\r\n        vec2 off3 = vec2(5.176470588235294) * direction;\r\n        color += texture2D(image, uv) * 0.1964825501511404;\r\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\r\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\r\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\r\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\r\n        return color;\r\n    }    \r\n\r\n    void main(void){\r\n        if (kernelRadius == 1) {\r\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else if (kernelRadius == 2) {\r\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        } else {\r\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\r\n */\r\nexport default class BoxBlurShader extends DefaultShader {\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const dx = 1.0 / operation.getTextureWidth(0);\r\n        const dy = 1.0 / operation.getTextureHeight(0);\r\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\r\n    }\r\n\r\n}\r\n\r\nBoxBlurShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    uniform vec2 stepTextureCoord;\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\r\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\r\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\r\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nBoxBlurShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoordUl;\r\n    varying vec2 vTextureCoordUr;\r\n    varying vec2 vTextureCoordBl;\r\n    varying vec2 vTextureCoordBr;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class BlurShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._kernelRadius = 1;\r\n    }\r\n\r\n    get kernelRadius() {\r\n        return this._kernelRadius;\r\n    }\r\n\r\n    set kernelRadius(v) {\r\n        this._kernelRadius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\r\nimport Shader from \"../tree/Shader.mjs\";\r\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\r\n\r\nexport default class FastBlurComponent extends Component {\r\n    static _template() {\r\n        return {}\r\n    }\r\n\r\n    get wrap() {\r\n        return this.tag(\"Wrap\");\r\n    }\r\n\r\n    set content(v) {\r\n        return this.wrap.content = v;\r\n    }\r\n\r\n    get content() {\r\n        return this.wrap.content;\r\n    }\r\n\r\n    set padding(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this.wrap._paddingX = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this.wrap._paddingY = v;\r\n        this.wrap._updateBlurSize();\r\n    }\r\n\r\n    set amount(v) {\r\n        return this.wrap.amount = v;\r\n    }\r\n\r\n    get amount() {\r\n        return this.wrap.amount;\r\n    }\r\n\r\n    _onResize() {\r\n        this.wrap.w = this.renderWidth;\r\n        this.wrap.h = this.renderHeight;\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    _build() {\r\n        this.patch({\r\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nclass C2dFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            forceZIndexContext: true,\r\n            rtt: true,\r\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n\r\n    }\r\n\r\n    static getSpline() {\r\n        if (!this._multiSpline) {\r\n            this._multiSpline = new MultiSpline();\r\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\r\n        }\r\n        return this._multiSpline;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        this._wrapper.x = paddingX;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._wrapper.y = paddingY;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this._textwrap.w = w + paddingX * 2;\r\n        this._textwrap.h = h + paddingY * 2;\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\r\n    }\r\n\r\n    static _amountToKernelRadius(v) {\r\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nclass WebGLFastBlurComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            },\r\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap>Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n        this._output = this.sel(\"Result\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _buildLayers() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap>Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap>Content').patch(v, true);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._output.x = -paddingX;\r\n        this._textwrap.x = -paddingX;\r\n        this._output.w = fw;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._output.y = -paddingY;\r\n        this._textwrap.y = -paddingY;\r\n        this._output.h = fh;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v === 0) {\r\n            this._textwrap.renderToTexture = false;\r\n            this._output.shader.otherTextureSource = null;\r\n            this._output.visible = false;\r\n        } else {\r\n            this._textwrap.renderToTexture = true;\r\n            this._output.visible = true;\r\n\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n\r\n            if (v <= 1) {\r\n                this._output.texture = this._textwrap.getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\r\n                this._output.shader.a = v;\r\n            } else if (v <= 2) {\r\n                this._output.texture = this.getLayer(0).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\r\n                this._output.shader.a = v - 1;\r\n            } else if (v <= 3) {\r\n                this._output.texture = this.getLayer(1).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\r\n                this._output.shader.a = v - 2;\r\n            } else if (v <= 4) {\r\n                this._output.texture = this.getLayer(2).getTexture();\r\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\r\n                this._output.shader.a = v - 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._buildLayers();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Shader that combines two textures into one output.\r\n */\r\nclass FastBlurOutputShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._a = 0;\r\n        this._otherTextureSource = null;\r\n    }\r\n\r\n    get a() {\r\n        return this._a;\r\n    }\r\n\r\n    set a(v) {\r\n        this._a = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set otherTextureSource(v) {\r\n        this._otherTextureSource = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\r\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\r\n\r\n        let gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n\r\nFastBlurOutputShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uSampler2;\r\n    uniform float a;\r\n    void main(void){\r\n        if (a == 1.0) {\r\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\r\n        } else {\r\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport default class BloomComponent extends Component {\r\n\r\n    static _template() {\r\n        const onUpdate = function(element, elementCore) {\r\n            if ((elementCore._recalc & (2 + 128))) {\r\n                const w = elementCore.w;\r\n                const h = elementCore.h;\r\n                let cur = elementCore;\r\n                do {\r\n                    cur = cur._children[0];\r\n                    cur._element.w = w;\r\n                    cur._element.h = h;\r\n                } while(cur._children);\r\n            }\r\n        };\r\n\r\n        return {\r\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\r\n                BloomBase: {shader: {type: BloomBaseShader},\r\n                    Content: {}\r\n                }\r\n            },\r\n            Layers: {\r\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\r\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n        this._textwrap = this.sel(\"Textwrap\");\r\n        this._wrapper = this.sel(\"Textwrap.Content\");\r\n        this._layers = this.sel(\"Layers\");\r\n\r\n        this._amount = 0;\r\n        this._paddingX = 0;\r\n        this._paddingY = 0;\r\n    }\r\n\r\n    _build() {\r\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\r\n        const filterShaders = filterShaderSettings.map(s => {\r\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\r\n            return shader;\r\n        });\r\n\r\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\r\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\r\n\r\n        // Notice that 1.5 filters should be applied before 1.0 filters.\r\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\r\n    }\r\n\r\n    _setLayerTexture(element, texture, steps) {\r\n        if (!steps.length) {\r\n            element.texture = texture;\r\n        } else {\r\n            const step = steps.pop();\r\n            const child = element.stage.c({rtt: true, shader: step});\r\n\r\n            // Recurse.\r\n            this._setLayerTexture(child, texture, steps);\r\n\r\n            element.childList.add(child);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Textwrap.Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Textwrap.Content').patch(v);\r\n    }\r\n\r\n    set padding(v) {\r\n        this._paddingX = v;\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingX(v) {\r\n        this._paddingX = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    set paddingY(v) {\r\n        this._paddingY = v;\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    getLayer(i) {\r\n        return this._layers.sel(\"L\" + i);\r\n    }\r\n\r\n    getLayerContents(i) {\r\n        return this.getLayer(i).sel(\"Content\");\r\n    }\r\n\r\n    _onResize() {\r\n        this._updateBlurSize();\r\n    }\r\n\r\n    _updateBlurSize() {\r\n        let w = this.renderWidth;\r\n        let h = this.renderHeight;\r\n\r\n        let paddingX = this._paddingX;\r\n        let paddingY = this._paddingY;\r\n\r\n        let fw = w + paddingX * 2;\r\n        let fh = h + paddingY * 2;\r\n        this._textwrap.w = fw;\r\n        this._wrapper.x = paddingX;\r\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\r\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\r\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\r\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\r\n        this._textwrap.x = -paddingX;\r\n\r\n        this._textwrap.h = fh;\r\n        this._wrapper.y = paddingY;\r\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\r\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\r\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\r\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\r\n        this._textwrap.y = -paddingY;\r\n\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\r\n     * Best results for non-fractional values.\r\n     * @param v;\r\n     */\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this._update();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    _update() {\r\n        let v = Math.min(4, Math.max(0, this._amount));\r\n        if (v > 0) {\r\n            this.getLayer(0).visible = (v > 0);\r\n            this.getLayer(1).visible = (v > 1);\r\n            this.getLayer(2).visible = (v > 2);\r\n            this.getLayer(3).visible = (v > 3);\r\n        }\r\n    }\r\n\r\n    set shader(s) {\r\n        super.shader = s;\r\n        if (!this.renderToTexture) {\r\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\r\n        }\r\n    }\r\n\r\n    _firstActive() {\r\n        this._build();\r\n    }\r\n\r\n}\r\n\r\nclass BloomBaseShader extends DefaultShader {\r\n}\r\n\r\nBloomBaseShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float m = max(max(color.r, color.g), color.b);\r\n        float c = max(0.0, (m - 0.80)) * 5.0;\r\n        color = color * c;\r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class SmoothScaleComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\r\n                Content: {}\r\n            },\r\n            Scale: {visible: false}\r\n        }\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._smoothScale = 1;\r\n        this._iterations = 0;\r\n    }\r\n\r\n    get content() {\r\n        return this.tag('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.tag('Content').patch(v, true);\r\n    }\r\n\r\n    get smoothScale() {\r\n        return this._smoothScale;\r\n    }\r\n\r\n    set smoothScale(v) {\r\n        if (this._smoothScale !== v) {\r\n            let its = 0;\r\n            while(v < 0.5 && its < 12) {\r\n                its++;\r\n                v = v * 2;\r\n            }\r\n\r\n            this.scale = v;\r\n            this._setIterations(its);\r\n\r\n            this._smoothScale = v;\r\n        }\r\n    }\r\n\r\n    _setIterations(its) {\r\n        if (this._iterations !== its) {\r\n            const scalers = this.sel(\"Scale\").childList;\r\n            const content = this.sel(\"ContentWrap\");\r\n            while (scalers.length < its) {\r\n                const first = scalers.length === 0;\r\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\r\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\r\n            }\r\n\r\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\r\n\r\n            const useScalers = (its > 0);\r\n            this.patch({\r\n                ContentWrap: {renderToTexture: useScalers},\r\n                Scale: {visible: useScalers}\r\n            });\r\n\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                scalers.getAt(i).patch({\r\n                    visible: i < its,\r\n                    renderOffscreen: i !== its - 1\r\n                });\r\n            }\r\n            this._iterations = its;\r\n        }\r\n    }\r\n\r\n    static _updateDimensions(contentWrap, force) {\r\n        const content = contentWrap.children[0];\r\n        let w = content.renderWidth;\r\n        let h = content.renderHeight;\r\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\r\n            contentWrap.w = w;\r\n            contentWrap.h = h;\r\n\r\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\r\n            for (let i = 0, n = scalers.length; i < n; i++) {\r\n                w = w * 0.5;\r\n                h = h * 0.5;\r\n                scalers[i].w = w;\r\n                scalers[i].h = h;\r\n            }\r\n        }\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Component from \"../application/Component.mjs\";\r\n\r\nexport default class BorderComponent extends Component {\r\n\r\n    static _template() {\r\n        return {\r\n            Content: {},\r\n            Borders: {\r\n                Top: {rect: true, visible: false, mountY: 1},\r\n                Right: {rect: true, visible: false},\r\n                Bottom: {rect: true, visible: false},\r\n                Left: {rect: true, visible: false, mountX: 1}\r\n            }\r\n        };\r\n    }\r\n\r\n    get _signalProxy() {\r\n        return true;\r\n    }\r\n\r\n    constructor(stage) {\r\n        super(stage);\r\n\r\n        this._borderTop = this.tag(\"Top\");\r\n        this._borderRight = this.tag(\"Right\");\r\n        this._borderBottom = this.tag(\"Bottom\");\r\n        this._borderLeft = this.tag(\"Left\");\r\n\r\n        this.onAfterUpdate = function (element) {\r\n            const content = element.childList.first;\r\n            let w = element.core.w || content.renderWidth;\r\n            let h = element.core.h || content.renderHeight;\r\n            element._borderTop.w = w;\r\n            element._borderBottom.y = h;\r\n            element._borderBottom.w = w;\r\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderLeft.y = -element._borderTop.h;\r\n            element._borderRight.x = w;\r\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\r\n            element._borderRight.y = -element._borderTop.h;\r\n        };\r\n\r\n        this.borderWidth = 1;\r\n    }\r\n\r\n    get content() {\r\n        return this.sel('Content');\r\n    }\r\n\r\n    set content(v) {\r\n        this.sel('Content').patch(v, true);\r\n    }\r\n\r\n    get borderWidth() {\r\n        return this.borderWidthTop;\r\n    }\r\n\r\n    get borderWidthTop() {\r\n        return this._borderTop.h;\r\n    }\r\n\r\n    get borderWidthRight() {\r\n        return this._borderRight.w;\r\n    }\r\n\r\n    get borderWidthBottom() {\r\n        return this._borderBottom.h;\r\n    }\r\n\r\n    get borderWidthLeft() {\r\n        return this._borderLeft.w;\r\n    }\r\n\r\n    set borderWidth(v) {\r\n        this.borderWidthTop = v;\r\n        this.borderWidthRight = v;\r\n        this.borderWidthBottom = v;\r\n        this.borderWidthLeft = v;\r\n    }\r\n\r\n    set borderWidthTop(v) {\r\n        this._borderTop.h = v;\r\n        this._borderTop.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthRight(v) {\r\n        this._borderRight.w = v;\r\n        this._borderRight.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthBottom(v) {\r\n        this._borderBottom.h = v;\r\n        this._borderBottom.visible = (v > 0);\r\n    }\r\n\r\n    set borderWidthLeft(v) {\r\n        this._borderLeft.w = v;\r\n        this._borderLeft.visible = (v > 0);\r\n    }\r\n\r\n    get colorBorder() {\r\n        return this.colorBorderTop;\r\n    }\r\n\r\n    get colorBorderTop() {\r\n        return this._borderTop.color;\r\n    }\r\n\r\n    get colorBorderRight() {\r\n        return this._borderRight.color;\r\n    }\r\n\r\n    get colorBorderBottom() {\r\n        return this._borderBottom.color;\r\n    }\r\n\r\n    get colorBorderLeft() {\r\n        return this._borderLeft.color;\r\n    }\r\n\r\n    set colorBorder(v) {\r\n        this.colorBorderTop = v;\r\n        this.colorBorderRight = v;\r\n        this.colorBorderBottom = v;\r\n        this.colorBorderLeft = v;\r\n    }\r\n\r\n    set colorBorderTop(v) {\r\n        this._borderTop.color = v;\r\n    }\r\n\r\n    set colorBorderRight(v) {\r\n        this._borderRight.color = v;\r\n    }\r\n\r\n    set colorBorderBottom(v) {\r\n        this._borderBottom.color = v;\r\n    }\r\n\r\n    set colorBorderLeft(v) {\r\n        this._borderLeft.color = v;\r\n    }\r\n\r\n    get borderTop() {\r\n        return this._borderTop;\r\n    }\r\n\r\n    set borderTop(settings) {\r\n        this.borderTop.patch(settings);\r\n    }\r\n\r\n    get borderRight() {\r\n        return this._borderRight;\r\n    }\r\n\r\n    set borderRight(settings) {\r\n        this.borderRight.patch(settings);\r\n    }\r\n\r\n    get borderBottom() {\r\n        return this._borderBottom;\r\n    }\r\n\r\n    set borderBottom(settings) {\r\n        this.borderBottom.patch(settings);\r\n    }\r\n\r\n    get borderLeft() {\r\n        return this._borderLeft;\r\n    }\r\n\r\n    set borderLeft(settings) {\r\n        this.borderLeft.patch(settings);\r\n    }\r\n\r\n    set borders(settings) {\r\n        this.borderTop = settings;\r\n        this.borderLeft = settings;\r\n        this.borderBottom = settings;\r\n        this.borderRight = settings;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\r\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\r\n\r\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getC2d() {\r\n        return C2dGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nWebGLGrayscaleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\r\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\r\n    }\r\n`;\r\n\r\nexport class C2dGrayscaleShader extends C2dDefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    static getWebGL() {\r\n        return WebGLGrayscaleShader;\r\n    }\r\n\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    _beforeDrawEl({target}) {\r\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\r\n    }\r\n\r\n    _afterDrawEl({target}) {\r\n        target.ctx.filter = \"none\";\r\n    }\r\n\r\n}\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * This shader can be used to fix a problem that is known as 'gradient banding'.\r\n */\r\nexport default class DitheringShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._noiseTexture = new NoiseTexture(ctx.stage);\r\n\r\n        this._graining = 1/256;\r\n\r\n        this._random = false;\r\n    }\r\n\r\n    set graining(v) {\r\n        this._graining = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set random(v) {\r\n        this._random = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        // Make sure that the noise texture is uploaded to the GPU.\r\n        this._noiseTexture.load();\r\n\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            // Calculate noise texture coordinates so that it spans the full element.\r\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\r\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\r\n\r\n            let ulx = 0;\r\n            let uly = 0;\r\n            if (this._random) {\r\n                ulx = Math.random();\r\n                uly = Math.random();\r\n\r\n                brx += ulx;\r\n                bry += uly;\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = ulx;\r\n                    ulx = brx;\r\n                    brx = t;\r\n                }\r\n\r\n                if (Math.random() < 0.5) {\r\n                    // Flip for more randomness.\r\n                    const t = uly;\r\n                    uly = bry;\r\n                    bry = t;\r\n                }\r\n            }\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = ulx;\r\n            floats[offset + 1] = uly;\r\n\r\n            floats[offset + 2] = brx;\r\n            floats[offset + 3] = uly;\r\n\r\n            floats[offset + 4] = brx;\r\n            floats[offset + 5] = bry;\r\n\r\n            floats[offset + 6] = ulx;\r\n            floats[offset + 7] = bry;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n\r\n        let glTexture = this._noiseTexture.source.nativeTexture;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\r\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        let gl = this.gl;\r\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        let gl = this.gl;\r\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\r\n    }\r\n\r\n    useDefault() {\r\n        return this._graining === 0;\r\n    }\r\n\r\n    afterDraw(operation) {\r\n        if (this._random) {\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nDitheringShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec2 aNoiseTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vNoiseTextureCoord = aNoiseTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nDitheringShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vNoiseTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uNoiseSampler;\r\n    uniform float graining;\r\n    void main(void){\r\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Utils from \"../../../tree/Utils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class CircularPushShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._inputValue = 0;\r\n\r\n        this._maxDerivative = 0.01;\r\n\r\n        this._normalizedValue = 0;\r\n\r\n        // The offset between buckets. A value between 0 and 1.\r\n        this._offset = 0;\r\n\r\n        this._amount = 0.1;\r\n\r\n        this._aspectRatio = 1;\r\n\r\n        this._offsetX = 0;\r\n\r\n        this._offsetY = 0;\r\n\r\n        this.buckets = 100;\r\n    }\r\n\r\n    get aspectRatio() {\r\n        return this._aspectRatio;\r\n    }\r\n\r\n    set aspectRatio(v) {\r\n        this._aspectRatio = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetX() {\r\n        return this._offsetX;\r\n    }\r\n\r\n    set offsetX(v) {\r\n        this._offsetX = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get offsetY() {\r\n        return this._offsetY;\r\n    }\r\n\r\n    set offsetY(v) {\r\n        this._offsetY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    set inputValue(v) {\r\n        this._inputValue = v;\r\n    }\r\n\r\n    get inputValue() {\r\n        return this._inputValue;\r\n    }\r\n\r\n    set maxDerivative(v) {\r\n        this._maxDerivative = v;\r\n    }\r\n\r\n    get maxDerivative() {\r\n        return this._maxDerivative;\r\n    }\r\n\r\n    set buckets(v) {\r\n        if (v > 100) {\r\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\r\n            v = 100;\r\n        }\r\n\r\n        // This should be set before starting.\r\n        this._buckets = v;\r\n\r\n        // Init values array in the correct length.\r\n        this._values = new Uint8Array(this._getValues(v));\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    get buckets() {\r\n        return this._buckets;\r\n    }\r\n\r\n    _getValues(n) {\r\n        const v = [];\r\n        for (let i = 0; i < n; i++) {\r\n            v.push(this._inputValue);\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * Progresses the shader with the specified (fractional) number of buckets.\r\n     * @param {number} o;\r\n     *   A number from 0 to 1 (1 = all buckets).\r\n     */\r\n    progress(o) {\r\n        this._offset += o * this._buckets;\r\n        const full = Math.floor(this._offset);\r\n        this._offset -= full;\r\n        this._shiftBuckets(full);\r\n        this.redraw();\r\n    }\r\n\r\n    _shiftBuckets(n) {\r\n        for (let i = this._buckets - 1; i >= 0; i--) {\r\n            const targetIndex = i - n;\r\n            if (targetIndex < 0) {\r\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\r\n                this._values[i] = 255 * this._normalizedValue;\r\n            } else {\r\n                this._values[i] = this._values[targetIndex];\r\n            }\r\n        }\r\n    }\r\n\r\n    set offset(v) {\r\n        this._offset = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\r\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\r\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\r\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\r\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        const gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        if (!this._valuesTexture) {\r\n            this._valuesTexture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            if (Utils.isNode) {\r\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\r\n            }\r\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        } else {\r\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\r\n        }\r\n\r\n        // Upload new values.\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n\r\n    cleanup() {\r\n        if (this._valuesTexture) {\r\n            this.gl.deleteTexture(this._valuesTexture);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nCircularPushShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    uniform float offsetX;\r\n    uniform float offsetY;\r\n    uniform float aspectRatio;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vPos;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vPos = vTextureCoord * 2.0 - 1.0;\r\n        vPos.y = vPos.y * aspectRatio;\r\n        vPos.y = vPos.y + offsetY;\r\n        vPos.x = vPos.x + offsetX;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nCircularPushShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vPos;\r\n    uniform float amount;\r\n    uniform float offset;\r\n    uniform float values[100];\r\n    uniform float buckets;\r\n    uniform sampler2D uSampler;\r\n    uniform sampler2D uValueSampler;\r\n    void main(void){\r\n        float l = length(vPos);\r\n        float m = (l * buckets * 0.678 - offset) / buckets;\r\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\r\n        vec2 unit = vPos / l;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\r\n    }\r\n`;\r\n\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class InversionShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._amount = 1;\r\n    }\r\n\r\n    set amount(v) {\r\n        this._amount = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    useDefault() {\r\n        return this._amount === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nInversionShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float amount;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \r\n        gl_FragColor = color * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class OutlineShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._width = 5;\r\n        this._col = 0xFFFFFFFF;\r\n        this._color = [1,1,1,1];\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get color() {\r\n        return this._col;\r\n    }\r\n\r\n    set color(v) {\r\n        if (this._col !== v) {\r\n            const col = StageUtils.getRgbaComponentsNormalized(v);\r\n            col[0] = col[0] * col[3];\r\n            col[1] = col[1] * col[3];\r\n            col[2] = col[2] * col[3];\r\n\r\n            this._color = col;\r\n\r\n            this.redraw();\r\n\r\n            this._col = v;\r\n        }\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._width === 0 || this._col[3] === 0);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            const elementCore = operation.getElementCore(i);\r\n\r\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\r\n            const ddw = this._width / elementCore.w;\r\n            const dw = ddw / (1 - 2 * ddw);\r\n            const ddh = this._width / elementCore.h;\r\n            const dh = ddh / (1 - 2 * ddh);\r\n\r\n            // Specify all corner points.\r\n            floats[offset] = -dw;\r\n            floats[offset + 1] = -dh;\r\n\r\n            floats[offset + 2] = 1 + dw;\r\n            floats[offset + 3] = -dh;\r\n\r\n            floats[offset + 4] = 1 + dw;\r\n            floats[offset + 5] = 1 + dh;\r\n\r\n            floats[offset + 6] = -dw;\r\n            floats[offset + 7] = 1 + dh;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n}\r\n\r\nOutlineShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aCorner;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 vCorner;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vCorner = aCorner;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nOutlineShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vCorner;\r\n    uniform vec4 color;\r\n    uniform sampler2D uSampler;\r\n    void main(void){\r\n        vec2 m = min(vCorner, 1.0 - vCorner);\r\n        float value = step(0.0, min(m.x, m.y));\r\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\n/**\r\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\r\n */\r\nexport default class PixelateShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._size = new Float32Array([4, 4]);\r\n    }\r\n\r\n    get x() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set x(v) {\r\n        this._size[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._size[1];\r\n    }\r\n\r\n    set y(v) {\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get size() {\r\n        return this._size[0];\r\n    }\r\n\r\n    set size(v) {\r\n        this._size[0] = v;\r\n        this._size[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return ((this._size[0] === 0) && (this._size[1] === 0));\r\n    }\r\n\r\n    static getWebGLImpl() {\r\n        return WebGLPixelateShaderImpl;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        let gl = this.gl;\r\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\r\n    }\r\n\r\n    getExtraAttribBytesPerVertex() {\r\n        return 8;\r\n    }\r\n\r\n    enableAttribs() {\r\n        super.enableAttribs();\r\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    disableAttribs() {\r\n        super.disableAttribs();\r\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\r\n    }\r\n\r\n    setExtraAttribsInBuffer(operation) {\r\n        let offset = operation.extraAttribsDataByteOffset / 4;\r\n        let floats = operation.quads.floats;\r\n\r\n        let length = operation.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let w = operation.quads.getTextureWidth(operation.index + i);\r\n            let h = operation.quads.getTextureHeight(operation.index + i);\r\n\r\n            floats[offset] = w;\r\n            floats[offset + 1] = h;\r\n            floats[offset + 2] = w;\r\n            floats[offset + 3] = h;\r\n            floats[offset + 4] = w;\r\n            floats[offset + 5] = h;\r\n            floats[offset + 6] = w;\r\n            floats[offset + 7] = h;\r\n\r\n            offset += 8;\r\n        }\r\n    }\r\n\r\n    beforeDraw(operation) {\r\n        let gl = this.gl;\r\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\r\n    }\r\n}\r\n\r\nPixelateShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    attribute vec2 aTextureRes;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        vTextureRes = aTextureRes;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPixelateShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec2 vTextureRes;\r\n\r\n    uniform vec2 size;\r\n    uniform sampler2D uSampler;\r\n    \r\n    vec2 mapCoord( vec2 coord )\r\n    {\r\n        coord *= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 unmapCoord( vec2 coord )\r\n    {\r\n        coord /= vTextureRes.xy;\r\n        return coord;\r\n    }\r\n    \r\n    vec2 pixelate(vec2 coord, vec2 size)\r\n    {\r\n        return floor( coord / size ) * size;\r\n    }\r\n    \r\n    void main(void)\r\n    {\r\n        vec2 coord = mapCoord(vTextureCoord);\r\n        coord = pixelate(coord, size);\r\n        coord = unmapCoord(coord);\r\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class RadialFilterShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._radius = 0;\r\n        this._cutoff = 1;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set cutoff(v) {\r\n        this._cutoff = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get cutoff() {\r\n        return this._cutoff;\r\n    }\r\n    \r\n    useDefault() {\r\n        return this._radius === 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        // We substract half a pixel to get a better cutoff effect.\r\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\r\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\r\n    }\r\n\r\n}\r\n\r\nRadialFilterShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 pos;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n        pos = gl_Position.xy;\r\n    }\r\n`;\r\n\r\nRadialFilterShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec2 pos;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float radius;\r\n    uniform float cutoff;\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RoundedRectangleShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._blend = 0;\r\n        this._radius = [1, 1, 1, 1];\r\n        this._stroke = 0;\r\n        this._fc = 0x00ffffff;\r\n        this._fillColor = this._getNormalizedColor(0xffffffff);\r\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\r\n    }\r\n\r\n    set blend(p) {\r\n        this._blend = Math.min(Math.max(p, 0), 1);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._radius = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._radius = v;\r\n            }\r\n            else {\r\n                this._radius = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._radius = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set topLeft(num) {\r\n        this._radius[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topLeft() {\r\n        return this._radius[0];\r\n    }\r\n\r\n    set topRight(num) {\r\n        this._radius[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get topRight() {\r\n        return this._radius[1];\r\n    }\r\n\r\n    set bottomRight(num) {\r\n        this._radius[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomRight() {\r\n        return this._radius[2];\r\n    }\r\n\r\n    set bottomLeft(num) {\r\n        this._radius[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottomLeft() {\r\n        return this._radius[4];\r\n    }\r\n\r\n    set strokeColor(argb) {\r\n        this._sc = argb;\r\n        this._strokeColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get strokeColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set fillColor(argb) {\r\n        this._fc = argb;\r\n        this._fillColor = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get fillColor() {\r\n        return this._fc;\r\n    }\r\n\r\n    set stroke(num) {\r\n        this._stroke = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\r\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\r\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\r\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nRoundedRectangleShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    void main(void){\r\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nRoundedRectangleShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n\r\n    #define PI 3.14159265359\r\n\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 radius;\r\n    uniform float stroke;\r\n    uniform vec4 strokeColor;\r\n    uniform vec4 fillColor;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float blend;\r\n    \r\n    float boxDist(vec2 p, vec2 size, float radius){\r\n        size -= vec2(radius);\r\n        vec2 d = abs(p) - size;\r\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    float innerBorderMask(float dist, float width){\r\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\r\n        float alpha2 = clamp(dist, 0.0, 1.0);\r\n        return alpha1 - alpha2;\r\n    }\r\n\r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        float r = 0.0;\r\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[0];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\r\n            r = radius[1];\r\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\r\n            r = radius[2];\r\n        } else {\r\n            r = radius[3];\r\n        }\r\n        \r\n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\r\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \r\n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\r\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from './DefaultShader.mjs';\r\n\r\nexport default class FadeOutShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._fade = [0, 0, 0, 0];\r\n    }\r\n\r\n    set top(num) {\r\n        this._fade[0] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get top() {\r\n        return this._fade[0];\r\n    }\r\n\r\n    set right(num) {\r\n        this._fade[1] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get right() {\r\n        return this._fade[1];\r\n    }\r\n\r\n    set bottom(num) {\r\n        this._fade[2] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get bottom() {\r\n        return this._fade[2];\r\n    }\r\n\r\n    set left(num) {\r\n        this._fade[3] = num;\r\n        this.redraw();\r\n    }\r\n\r\n    get left() {\r\n        return this._fade[3];\r\n    }\r\n\r\n    set fade(v) {\r\n        if(Array.isArray(v)) {\r\n            if(v.length === 2) {\r\n                this._fade = [v[0], v[1], v[0], v[1]];\r\n            }\r\n            else if(v.length === 3) {\r\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\r\n            }\r\n            else if (v.length === 4) {\r\n                this._fade = v;\r\n            }\r\n            else {\r\n                this._fade = [v[0], v[0], v[0], v[0]];\r\n            }\r\n        }\r\n        else {\r\n            this._fade = [v, v, v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get fade() {\r\n        return this._fade;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        const fade = this._fade.map((f) => f * renderPrecision);\r\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n}\r\n\r\nFadeOutShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 fade;\r\n    \r\n    void main() {\r\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 point = vTextureCoord.xy * resolution.xy;\r\n        \r\n        vec2 pos1;\r\n        vec2 pos2;\r\n        vec2 d;\r\n        float c;\r\n        float t = 0.0;\r\n             \r\n        if(fade[0] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x, point.y + fade[0]);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[1] > 0.0) {\r\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\r\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[2] > 0.0) {\r\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\r\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\r\n            d = pos1 - pos2;\r\n            c = dot(pos2, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        if(fade[3] > 0.0) {\r\n            pos1 = vec2(point.x, point.y);\r\n            pos2 = vec2(point.x + fade[3], point.y);\r\n            d = pos2 - pos1;\r\n            c = dot(pos1, d) / dot(d, d);\r\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\r\n            color = mix(vec4(0.0), color, t);\r\n        }\r\n        \r\n        gl_FragColor = color;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class VignetteShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._magnitude = 1.3;\r\n        this._intensity = 0.7;\r\n        this._pivot = [0.5, 0.5];\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\r\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\r\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\r\n        this.redraw()\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v)) {\r\n            this._pivot = v;\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivot[0] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivot[1] = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get intensity() {\r\n        return this._intensity;\r\n    }\r\n\r\n    set intensity(v) {\r\n        this._intensity = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get magnitude() {\r\n        return this._magnitude;\r\n\r\n    }\r\n\r\n    set magnitude(v) {\r\n        this._magnitude = v;\r\n        this.redraw();\r\n    }\r\n}\r\n\r\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nVignetteShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float magnitude;\r\n    uniform float intensity;\r\n    uniform vec2 pivot;\r\n\r\n    void main() {\r\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\r\n        uv.x = clamp(uv.x, 0.0, 1.0);\r\n        uv.y = clamp(uv.y, 0.0, 1.0);\r\n   \r\n        uv *=  1.00 - uv.yx;\r\n        float vig = uv.x * uv.y * 25.0 * intensity;\r\n        vig = pow(vig, 0.45 * magnitude);\r\n        vec4 fragColor = vec4(vig) * vColor;\r\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\r\n\r\n    }\r\n`\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from '../../../tree/StageUtils.mjs'\r\n\r\nexport default class SpinnerShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n        this._radius = 100;\r\n        this._width = 50;\r\n        this._period = 1;\r\n        this._angle = 0.5;\r\n        this._smooth = 0.005;\r\n        this._color = 0xffffffff;\r\n        this._backgroundColor = 0xff000000;\r\n        this._time = Date.now();\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set width(v) {\r\n        this._width = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set angle(v) {\r\n        this._angle = v\r\n        this.redraw();\r\n    }\r\n\r\n    set smooth(v) {\r\n        this._smooth = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set color(v) {\r\n        this._color = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set backgroundColor(v) {\r\n        this._backgroundColor = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner\r\n\r\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\r\n\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\r\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\r\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\r\n\r\n        this.redraw()\r\n    }\r\n}\r\n\r\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nSpinnerShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform float iTime;\r\n    uniform float radius;\r\n    uniform float width;\r\n    uniform float period;\r\n    uniform float angle;\r\n    uniform float smooth;\r\n    uniform vec2 resolution;\r\n\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n\r\n    float ratio = resolution.y / resolution.x;\r\n\r\n    vec2 transpose_pos(vec2 pos) {\r\n        if (ratio < 1.) {\r\n            float diff = 0.5 - pos.x;\r\n            pos.x = 0.5 - diff / ratio;\r\n        } else {\r\n            float diff = 0.5 - pos.y;\r\n            pos.y = 0.5 - diff * ratio;\r\n        }\r\n        return pos;\r\n    }\r\n\r\n    float get_angle(vec2 pos) {\r\n        pos = transpose_pos(pos);\r\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\r\n        a = (1.0+a/3.14159)/2.0;\r\n        \r\n        return a;\r\n    }\r\n\r\n    float dist(vec2 pos1, vec2 pos2) {\r\n        pos1 = transpose_pos(pos1);\r\n        return distance(pos1, pos2);\r\n    }\r\n\r\n    void main()\r\n    {\r\n        vec2 fragCoord = vTextureCoord;\r\n        vec4 fragColor = vColor;\r\n        \r\n        vec2 st = vTextureCoord;\r\n        float pct = dist(st, vec2(0.5));\r\n\r\n        float a = get_angle(st);\r\n        float t = iTime / 1000.0 / period;\r\n\r\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\r\n        float outer = max(radius / resolution.x, radius / resolution.y);\r\n\r\n        float x1 = mod(t, 1.0);\r\n        float x2 = mod(t + angle, 1.0);\r\n\r\n        if (x1 < x2) {\r\n            if (a > x1 && a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        } else {\r\n            if (a < x2) {\r\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else if (a > x1) {\r\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\r\n                fragColor = mix(backgroundColor, color, val);\r\n            } else {\r\n                fragColor = backgroundColor;\r\n            }\r\n        }\r\n\r\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\r\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class HoleShader extends DefaultShader {\r\n\r\n    constructor(context) {\r\n        super(context);\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n        this._radius = 0;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v) {\r\n        this._x = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v) {\r\n        this._y = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get w() {\r\n        return this._w;\r\n    }\r\n\r\n    set w(v) {\r\n        this._w = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get h() {\r\n        return this._h;\r\n    }\r\n\r\n    set h(v) {\r\n        this._h = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const owner = operation.shaderOwner;\r\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\r\n\r\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\r\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\r\n    }\r\n}\r\n\r\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n\r\nHoleShader.fragmentShaderSource = `\r\n   #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform float x;\r\n    uniform float y;\r\n    uniform float w;\r\n    uniform float h;\r\n    uniform vec2 resolution;\r\n    uniform float radius;\r\n\r\n    float roundBox(vec2 p, vec2 b, float r) {\r\n        float d = length(max(abs(p)-b+r, 0.1))-r;\r\n        return smoothstep(1.0, 0.0, d);\r\n    }\r\n\r\n    void main(void){\r\n        vec4 color = texture2D(uSampler, vTextureCoord);\r\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n        vec2 size = vec2(w, h) / 2.0;\r\n        float b = roundBox(pos, size, radius);\r\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class RadialGradientShader extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._pivot = [0, 0];\r\n        this._ic = 0xffffffff;\r\n        this._normalizedIC = this._getNormalizedColor(this._ic);\r\n        this._oc = 0x00ffffff;\r\n        this._normalizedOC = this._getNormalizedColor(this._oc);\r\n        this._radius = 0;\r\n    }\r\n\r\n    set radiusX(v) {\r\n        this.radius = v;\r\n    }\r\n\r\n    get radiusX() {\r\n        return this._radius;\r\n    }\r\n\r\n    set radiusY(v) {\r\n        this._radiusY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get radiusY() {\r\n        return this._radiusY;\r\n    }\r\n\r\n    set radius(v) {\r\n        this._radius = v;\r\n        this.redraw();\r\n    }\r\n\r\n    set innerColor(argb) {\r\n        this._ic = argb;\r\n        this._normalizedIC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    get innerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set outerColor(argb) {\r\n        this._oc = argb;\r\n        this._normalizedOC = this._getNormalizedColor(argb);\r\n        this.redraw();\r\n    }\r\n\r\n    set color(argb) {\r\n        this.innerColor = argb;\r\n    }\r\n\r\n    get color() {\r\n        return this.innerColor;\r\n    }\r\n\r\n    get outerColor() {\r\n        return this._ic;\r\n    }\r\n\r\n    set x(f) {\r\n        this._x = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set y(f) {\r\n        this._y = f;\r\n        this.redraw();\r\n    }\r\n\r\n    set pivot(v) {\r\n        if(Array.isArray(v) && v.length === 2) {\r\n            this._pivot = v;\r\n        }\r\n        else if(Array.isArray(v)) {\r\n            this._pivot = [v[0], v[1] || v[0]];\r\n        }\r\n        else {\r\n            this._pivot = [v, v];\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    get pivot() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    set pivotY(f) {\r\n        this._pivot[1] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivot[1];\r\n    }\r\n\r\n    set pivotX(f) {\r\n        this._pivot[0] = f;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivot[0];\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n\r\n        if(this._x) {\r\n            this._pivot[0] = this._x / owner.w;\r\n        }\r\n        if(this._y) {\r\n            this._pivot[1] = this._y / owner.h;\r\n        }\r\n\r\n        if(this._radius === 0) {\r\n            this._radius = owner.w * 0.5;\r\n        }\r\n\r\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\r\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\r\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\r\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\r\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\r\n    }\r\n}\r\n\r\nRadialGradientShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec2 pivot;\r\n    uniform vec4 innerColor;\r\n    uniform vec4 outerColor;\r\n    uniform float radius;\r\n    uniform float radiusY;\r\n    uniform float alpha;\r\n    uniform float fill;\r\n    uniform float aspectRatio;\r\n    \r\n    void main() {\r\n        vec2 point = vTextureCoord.xy * resolution;\r\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\r\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\r\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\r\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class Light3dShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._strength = 0.5;\r\n        this._ambient = 0.5;\r\n        this._fudge = 0.4;\r\n\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n\r\n        this._z = 0;\r\n        this._pivotX = NaN;\r\n        this._pivotY = NaN;\r\n        this._pivotZ = 0;\r\n\r\n        this._lightY = 0;\r\n        this._lightZ = 0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        let vr = operation.shaderOwner;\r\n        let element = vr.element;\r\n\r\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\r\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\r\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n\r\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        let gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\r\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\r\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\r\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set strength(v) {\r\n        this._strength = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get strength() {\r\n        return this._strength;\r\n    }\r\n\r\n    set ambient(v) {\r\n        this._ambient = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ambient() {\r\n        return this._ambient;\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotX() {\r\n        return this._pivotX;\r\n    }\r\n\r\n    set pivotX(v) {\r\n        this._pivotX = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotY() {\r\n        return this._pivotY;\r\n    }\r\n\r\n    set pivotY(v) {\r\n        this._pivotY = v + 1;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightY() {\r\n        return this._lightY;\r\n    }\r\n\r\n    set lightY(v) {\r\n        this._lightY = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get pivotZ() {\r\n        return this._pivotZ;\r\n    }\r\n\r\n    set pivotZ(v) {\r\n        this._pivotZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get lightZ() {\r\n        return this._lightZ;\r\n    }\r\n\r\n    set lightZ(v) {\r\n        this._lightZ = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\r\n    }\r\n\r\n}\r\n\r\nLight3dShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float fudge;\r\n    uniform float strength;\r\n    uniform float ambient;\r\n    uniform float z;\r\n    uniform float lightY;\r\n    uniform float lightZ;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Set depth perspective\r\n        float perspective = 1.0 + fudge * pos.z;\r\n\r\n        pos.z += lightZ * projection.x;\r\n\r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, perspective);\r\n\r\n        // Correct light source position.\r\n        pos.y += lightY * abs(projection.y);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nLight3dShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    varying vec3 pos;\r\n    uniform sampler2D uSampler;\r\n    uniform float ambient;\r\n    uniform float strength;\r\n    void main(void){\r\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\r\n        float d = length(pos);\r\n        float n = 1.0 / max(0.1, d);\r\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\r\n        gl_FragColor = rgba * vColor;\r\n    }\r\n`;\r\n\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class PerspectiveShader extends DefaultShader {\r\n\r\n    constructor(ctx) {\r\n        super(ctx);\r\n\r\n        this._fudge = 0.2;\r\n        this._rx = 0;\r\n        this._ry = 0;\r\n        this._z = 1.0;\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n\r\n        const vr = operation.shaderOwner;\r\n        const element = vr.element;\r\n\r\n        const pivotX = element.pivotX * vr.w;\r\n        const pivotY = element.pivotY * vr.h;\r\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\r\n\r\n        // Counter normal rotation.\r\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\r\n\r\n        const gl = this.gl;\r\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\r\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\r\n        this._setUniform(\"z\", this._z, gl.uniform1f);\r\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\r\n    }\r\n\r\n    set fudge(v) {\r\n        this._fudge = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get fudge() {\r\n        return this._fudge;\r\n    }\r\n\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v) {\r\n        this._rx = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v) {\r\n        this._ry = v;\r\n        this.redraw();\r\n    }\r\n\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v) {\r\n        this._z = v;\r\n        this.redraw();\r\n    }\r\n\r\n    useDefault() {\r\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\r\n    }\r\n\r\n}\r\n\r\nPerspectiveShader.vertexShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    attribute vec2 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aColor;\r\n    uniform vec2 projection;\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n\r\n    uniform float z;\r\n    uniform vec3 pivot;\r\n    uniform vec3 rot;\r\n    varying vec3 pos;\r\n\r\n    void main(void) {\r\n        pos = vec3(aVertexPosition.xy, z);\r\n        \r\n        pos -= pivot;\r\n        \r\n        // Undo XY rotation\r\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \r\n                           -sin(rot.z), cos(rot.z));\r\n        pos.xy = iRotXy * pos.xy;\r\n        \r\n        // Perform 3d rotations\r\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\r\n        gl_Position.y = pos.y;\r\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\r\n        \r\n        pos.x = gl_Position.x;\r\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\r\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\r\n        \r\n        // Redo XY rotation\r\n        iRotXy[0][1] = -iRotXy[0][1];\r\n        iRotXy[1][0] = -iRotXy[1][0];\r\n        pos.xy = iRotXy * pos.xy; \r\n\r\n        // Undo translate to pivot position\r\n        pos.xyz += pivot;\r\n\r\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\r\n        \r\n        // Map coords to gl coordinate space.\r\n        // Set z to 0 because we don't want to perform z-clipping\r\n        gl_Position = vec4(pos.xy, 0.0, z);\r\n\r\n        vTextureCoord = aTextureCoord;\r\n        vColor = aColor;\r\n        \r\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\r\n    }\r\n`;\r\n\r\nPerspectiveShader.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    uniform sampler2D uSampler;\r\n\r\n    uniform vec3 rot;\r\n    uniform float fudge;\r\n\r\n    void main(void) {\r\n        vec2 coords = vTextureCoord;\r\n\r\n        coords.xy -= vec2(0.5);\r\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\r\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\r\n        coords.xy += vec2(0.5);\r\n\r\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\r\n            gl_FragColor = vec4(0.0);\r\n        } else {\r\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\r\n        }\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\n\r\nexport default class MagnifierShader extends DefaultShader {\r\n\tconstructor(context) {\r\n\t  super(context);\r\n\t  this._x = 0;\r\n\t  this._y = 0;\r\n\t  this._w = 0;\r\n\t  this._h = 0;\r\n\t  this._radius = 0;\r\n\t  this._magnification = 0.6;\r\n\t}\r\n  \r\n\tget x() {\r\n\t  return this._x;\r\n\t}\r\n  \r\n\tset x(v) {\r\n\t  this._x = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget y() {\r\n\t  return this._y;\r\n\t}\r\n  \r\n\tset y(v) {\r\n\t  this._y = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget w() {\r\n\t  return this._w;\r\n\t}\r\n  \r\n\tset w(v) {\r\n\t  this._w = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget h() {\r\n\t  return this._h;\r\n\t}\r\n  \r\n\tset h(v) {\r\n\t  this._h = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget magnification() {\r\n\t  return this._magnification;\r\n\t}\r\n  \r\n\tset magnification(v) {\r\n\t  this._magnification = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tget radius() {\r\n\t  return this._radius;\r\n\t}\r\n  \r\n\tset radius(v) {\r\n\t  this._radius = v;\r\n\t  this.redraw();\r\n\t}\r\n  \r\n\tsetupUniforms(operation) {\r\n\t  super.setupUniforms(operation);\r\n  \r\n\t  const owner = operation.shaderOwner;\r\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\r\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\r\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\r\n\t  this._setUniform(\r\n\t\t'radius',\r\n\t\t(this._radius + 0.5) * renderPrecision,\r\n\t\tthis.gl.uniform1f\r\n\t  );\r\n\t  this._setUniform(\r\n\t\t'resolution',\r\n\t\tnew Float32Array([\r\n\t\t  owner._w * renderPrecision,\r\n\t\t  owner._h * renderPrecision\r\n\t\t]),\r\n\t\tthis.gl.uniform2fv\r\n\t  );\r\n\t}\r\n \r\n\tuseDefault() {\r\n\t  return this._w === 0 && this._h === 0;\r\n\t}\r\n  }\r\n  \r\n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\r\n  \r\n  MagnifierShader.fragmentShaderSource = `\r\n\t  #ifdef GL_ES\r\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\r\n\t\tprecision highp float;\r\n\t\t# else\r\n\t\tprecision lowp float;\r\n\t\t# endif\r\n\t  #endif\r\n\r\n\t  varying vec2 vTextureCoord;\r\n\t  varying vec4 vColor;\r\n\t  uniform sampler2D uSampler;\r\n\t  uniform float x;\r\n\t  uniform float y;\r\n\t  uniform float w;\r\n\t  uniform float h;\r\n\t  uniform vec2 resolution;\r\n\t  uniform float radius;\r\n\t  uniform float magnification;\r\n  \r\n\t  float roundBox(vec2 p, vec2 b, float r) {\r\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\r\n\t\t  return smoothstep(1.0, 0.0, d);\r\n\t  }\r\n\r\n\t  float inside(vec2 v) {\r\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\r\n\t\treturn s.x * s.y;   \r\n      }\r\n  \r\n\t  void main(void) {\r\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\r\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\r\n\t\tvec2 size = vec2(w, h) / 2.0;\r\n\t\tfloat b = roundBox(pos, size, radius);\r\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\r\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\r\n\t  }\r\n  `;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport DefaultShader from \"./DefaultShader.mjs\";\r\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\r\n\r\nexport default class SpinnerShader2 extends DefaultShader {\r\n    constructor(context) {\r\n        super(context);\r\n        this._period = 1;\r\n        this._stroke = 0;\r\n        this._showDot = true;\r\n        this._clockwise = true;\r\n        this._bc = 0xff000000;\r\n        this._normalizedBC = this._getNormalizedColor(this._bc);\r\n        this._c = 0xffffffff;\r\n        this._normalizedC = this._getNormalizedColor(this._c);\r\n    }\r\n\r\n    set radius(v) {\r\n        if(v === 0) {\r\n            v = 1;\r\n        }\r\n        this._radius = v;\r\n    }\r\n\r\n    set stroke(value) {\r\n        this._stroke = Math.abs(value);\r\n    }\r\n\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n\r\n    set color(argb) {\r\n        this._c = argb;\r\n        this._normalizedC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get color() {\r\n        return this._c;\r\n    }\r\n\r\n    set backgroundColor(argb) {\r\n        this._bc = argb;\r\n        this._normalizedBC = this._getNormalizedColor(argb);\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._sc;\r\n    }\r\n\r\n    set showDot(bool) {\r\n        this._showDot = bool;\r\n    }\r\n\r\n    get showDot() {\r\n        return this._showDot;\r\n    }\r\n\r\n    set clockwise(bool) {\r\n        this._clockwise = bool;\r\n    }\r\n\r\n    get clockwise() {\r\n        return this._clockwise;\r\n    }\r\n\r\n    set period(v) {\r\n        this._period = v;\r\n    }\r\n\r\n    get period() {\r\n        return this._period;\r\n    }\r\n\r\n    _getNormalizedColor(color) {\r\n        const col = StageUtils.getRgbaComponentsNormalized(color);\r\n        col[0] *= col[3];\r\n        col[1] *= col[3];\r\n        col[2] *= col[3];\r\n        return new Float32Array(col);\r\n    }\r\n\r\n    setupUniforms(operation) {\r\n        super.setupUniforms(operation);\r\n        const owner = operation.shaderOwner;\r\n        const radius = this._radius || (owner._w / 2);\r\n\r\n        if(this._stroke === 0) {\r\n            this._stroke = radius * 0.33;\r\n        }\r\n\r\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\r\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\r\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\r\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\r\n        this._setUniform('radius',  radius, this.gl.uniform1f);\r\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\r\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\r\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\r\n        this._setUniform('period', this._period, this.gl.uniform1f);\r\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\r\n\r\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\r\n            this.redraw();\r\n        }\r\n    }\r\n}\r\n\r\nSpinnerShader2.spinSync = Date.now();\r\n\r\nSpinnerShader2.fragmentShaderSource = `\r\n    #ifdef GL_ES\r\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\r\n    precision highp float;\r\n    # else\r\n    precision lowp float;\r\n    # endif\r\n    #endif\r\n    \r\n    #define PI 3.14159265359\r\n    \r\n    varying vec2 vTextureCoord;\r\n    varying vec4 vColor;\r\n    \r\n    uniform sampler2D uSampler;\r\n    uniform vec2 resolution;\r\n    uniform vec4 color;\r\n    uniform vec4 backgroundColor;\r\n    uniform float direction;\r\n    uniform float radius;\r\n    uniform float time;\r\n    uniform float stroke;\r\n    uniform float showDot;\r\n    uniform float period;\r\n    uniform float alpha;\r\n    \r\n    float circleDist(vec2 p, float radius){\r\n        return length(p) - radius;\r\n    }\r\n    \r\n    float fillMask(float dist){\r\n        return clamp(-dist, 0.0, 1.0);\r\n    }\r\n    \r\n    void main() {\r\n        vec2 halfRes = 0.5 * resolution.xy;\r\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\r\n        \r\n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\r\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\r\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\r\n        \r\n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\r\n        \r\n        float strokeRad = stroke * 0.5;\r\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\r\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\r\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\r\n    }\r\n`;\r\n","/*\r\n * If not stated otherwise in this file or this component's LICENSE file the\r\n * following copyright and licenses apply:\r\n *\r\n * Copyright 2020 Metrological\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Application from \"./application/Application.mjs\";\r\nimport Component from \"./application/Component.mjs\";\r\nimport Base from \"./tree/Base.mjs\";\r\nimport Utils from \"./tree/Utils.mjs\";\r\nimport StageUtils from \"./tree/StageUtils.mjs\";\r\nimport Element from \"./tree/Element.mjs\";\r\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\r\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\r\nimport Texture from \"./tree/Texture.mjs\";\r\n\r\nimport Tools from \"./tools/Tools.mjs\";\r\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\r\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\r\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\r\n\r\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\r\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\r\nimport TextTexture from \"./textures/TextTexture.mjs\";\r\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\r\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\r\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\r\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\r\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\r\n\r\nimport ListComponent from \"./components/ListComponent.mjs\";\r\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\r\nimport BloomComponent from \"./components/BloomComponent.mjs\";\r\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\r\nimport BorderComponent from \"./components/BorderComponent.mjs\";\r\nimport EventEmitter from \"./EventEmitter.mjs\";\r\n\r\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\r\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\r\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\r\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\r\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\r\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\r\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\r\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\r\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\r\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\r\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\r\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\r\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\r\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\r\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\r\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\r\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\r\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\r\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\r\n\r\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\r\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\r\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\r\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\r\n\r\nimport Stage from \"./tree/Stage.mjs\";\r\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\r\n\r\nconst lightning = {\r\n    Application,\r\n    Component,\r\n    Base,\r\n    Utils,\r\n    StageUtils,\r\n    Element,\r\n    Tools,\r\n    Stage,\r\n    ElementCore,\r\n    ElementTexturizer,\r\n    Texture,\r\n    EventEmitter,\r\n    shaders: {\r\n        Grayscale: WebGLGrayscaleShader,\r\n        BoxBlur: BoxBlurShader,\r\n        Dithering: DitheringShader,\r\n        CircularPush: CircularPushShader,\r\n        Inversion: InversionShader,\r\n        LinearBlur: LinearBlurShader,\r\n        Outline: OutlineShader,\r\n        Pixelate: PixelateShader,\r\n        RadialFilter: RadialFilterShader,\r\n        RoundedRectangle: RoundedRectangleShader,\r\n        Spinner2: SpinnerShader2,\r\n        FadeOut: FadeOutShader,\r\n        Hole: HoleShader,\r\n        Vignette: VignetteShader,\r\n        Spinner: SpinnerShader,\r\n        RadialGradient: RadialGradientShader,\r\n        Light3d: Light3dShader,\r\n        Perspective: PerspectiveShader,\r\n        Magnifier: MagnifierShader,\r\n        WebGLShader,\r\n        WebGLDefaultShader,\r\n        C2dShader,\r\n        C2dDefaultShader,\r\n        c2d: {\r\n            Grayscale: C2dGrayscaleShader,\r\n            Blur: C2dBlurShader\r\n        }\r\n    },\r\n    textures: {\r\n        RectangleTexture,\r\n        NoiseTexture,\r\n        TextTexture,\r\n        ImageTexture,\r\n        HtmlTexture,\r\n        StaticTexture,\r\n        StaticCanvasTexture,\r\n        SourceTexture\r\n    },\r\n    components: {\r\n        FastBlurComponent,\r\n        BloomComponent,\r\n        SmoothScaleComponent,\r\n        BorderComponent,\r\n        ListComponent\r\n    },\r\n    tools: {\r\n        ObjMerger,\r\n        ObjectListProxy,\r\n        ObjectListWrapper\r\n    }\r\n};\r\n\r\nif (Utils.isWeb) {\r\n    window.lng = lightning;\r\n}\r\n\r\nexport default lightning;\r\n"],"names":["Utils","Layout","r","recalc","n","add","self","w","i","tag","descriptor","statePath","DefaultShader","TextureTintManager","texture","WebGLStateManager","curIndex","min","C2dBlurShader","WebGLDefaultShader","C2dDefaultShader"],"mappings":"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"}